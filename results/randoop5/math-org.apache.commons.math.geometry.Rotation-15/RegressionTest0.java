import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.Vector3D vector3D1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, vector3D1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.Vector3D vector3D1 = null;
        org.apache.commons.math.geometry.Vector3D vector3D2 = null;
        org.apache.commons.math.geometry.Vector3D vector3D3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(vector3D0, vector3D1, vector3D2, vector3D3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        org.apache.commons.math.geometry.Vector3D vector3D1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D2 = rotation0.applyInverseTo(vector3D1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        java.lang.Class<?> wildcardClass1 = rotation0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = rotation0.getAngles(rotationOrder3);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D11 = rotation0.applyTo(vector3D10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, (double) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        double[] doubleArray3 = new double[] { (byte) -1, 0, (short) 100 };
        double[] doubleArray7 = new double[] { (byte) -1, 0, (short) 100 };
        double[] doubleArray11 = new double[] { (byte) -1, 0, (short) 100 };
        double[] doubleArray15 = new double[] { (byte) -1, 0, (short) 100 };
        double[][] doubleArray16 = new double[][] { doubleArray3, doubleArray7, doubleArray11, doubleArray15 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(doubleArray16, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: a 4x3 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 0.0f, (double) (short) -1, (double) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        java.lang.Class<?> wildcardClass6 = rotation5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray12 = rotation7.getAngles(rotationOrder11);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        org.apache.commons.math.geometry.Rotation rotation2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation3 = rotation0.applyTo(rotation2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100.0f, (double) 100.0f, (double) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = rotation0.getAngles(rotationOrder3);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        java.lang.Class<?> wildcardClass2 = rotation0.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation15.getQ2();
        double double19 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation7.applyTo(rotation15);
        double double21 = rotation20.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (double) (byte) 0, (double) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 1.0f, (double) (-1.0f), (double) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (-1.0f));
        java.lang.Class<?> wildcardClass9 = vector3D4.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 1, (double) 100L, (-0.5d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 100, (double) (short) 1, (double) 1.0f, true);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation6.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray9 = rotation6.getAngles(rotationOrder8);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(vector3D7);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        double double4 = rotation0.getQ0();
        java.lang.Class<?> wildcardClass5 = rotation0.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, 0.0d, (double) 100, 1.0d, true);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation7.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D24, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D31, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        double double37 = rotation34.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation34.getAxis();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation44.applyTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D31, vector3D38, vector3D49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation17.applyInverseTo(rotation51);
        double double53 = rotation51.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray13 = rotation7.getAngles(rotationOrder12);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 0L, (-0.5d), (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 0, 0.0d, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        double[] doubleArray5 = new double[] { (-1), 0, 0.0d, (byte) 0, (-1) };
        double[] doubleArray11 = new double[] { (-1), 0, 0.0d, (byte) 0, (-1) };
        double[] doubleArray17 = new double[] { (-1), 0, 0.0d, (byte) 0, (-1) };
        double[] doubleArray23 = new double[] { (-1), 0, 0.0d, (byte) 0, (-1) };
        double[] doubleArray29 = new double[] { (-1), 0, 0.0d, (byte) 0, (-1) };
        double[] doubleArray35 = new double[] { (-1), 0, 0.0d, (byte) 0, (-1) };
        double[][] doubleArray36 = new double[][] { doubleArray5, doubleArray11, doubleArray17, doubleArray23, doubleArray29, doubleArray35 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(doubleArray36, (double) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: a 6x5 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 0.0, 0.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 0.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 0.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 0.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 0.0, 0.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 0.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 0L, (double) 1L, (double) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9142857142857143d, (double) 10.0f, (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) 1L);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        double double4 = rotation0.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray6 = rotation0.getAngles(rotationOrder5);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation27.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation17.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray46 = rotation44.getAngles(rotationOrder45);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation13.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation4.applyInverseTo(vector3D38);
        java.lang.Class<?> wildcardClass40 = rotation4.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        java.lang.Class<?> wildcardClass14 = rotation13.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        double double6 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 10.0d, (double) 0L, (double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        double double4 = rotation0.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation15.getQ2();
        double double19 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation7.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        double double28 = rotation25.getQ2();
        double double29 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation20.applyTo(rotation30);
        java.lang.Class<?> wildcardClass37 = rotation20.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation3.revert();
        double double5 = rotation3.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = rotation3.getAngles(rotationOrder6);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-1.0d) + "'", double5 == (-1.0d));
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        double double8 = rotation4.getQ3();
        double double9 = rotation4.getQ1();
        double double10 = rotation4.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation6.applyInverseTo(vector3D17);
        double double22 = rotation6.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray24 = rotation6.getAngles(rotationOrder23);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation7.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray21 = rotation19.getAngles(rotationOrder20);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation19);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray11 = rotation5.getAngles(rotationOrder10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation3.getAxis();
        java.lang.Class<?> wildcardClass11 = vector3D10.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 10, 0.5d, (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, (double) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (-1.0f));
        java.lang.Class<?> wildcardClass9 = rotation8.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '#', (-0.5d), (double) (-1), 0.0d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        double[] doubleArray1 = new double[] { 1 };
        double[] doubleArray3 = new double[] { 1 };
        double[] doubleArray5 = new double[] { 1 };
        double[][] doubleArray6 = new double[][] { doubleArray1, doubleArray3, doubleArray5 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray6, (double) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: a 3x1 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation7.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation7.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D21 = null;
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        double double29 = rotation28.getQ0();
        double double30 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        double double34 = rotation31.getAngle();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D40, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D40, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation28.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        double double50 = rotation47.getAngle();
        double[][] doubleArray51 = rotation47.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(doubleArray51, (double) (short) 1);
        double double54 = rotation53.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation53.getAxis();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D20, vector3D21, vector3D46, vector3D55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100, 100.0d, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 0L, (double) 10.0f, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation9.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray12 = rotation9.getAngles(rotationOrder11);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation6.getQ0();
        double double8 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D18, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D18, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation6.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D34, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation29.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation6.applyInverseTo(rotation29);
        double double39 = rotation6.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation4.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation27.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray31 = rotation27.getAngles(rotationOrder30);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        java.lang.Class<?> wildcardClass10 = vector3D9.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray8 = rotation6.getAngles(rotationOrder7);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation9.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation8.applyInverseTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        double double20 = rotation17.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation17.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation9.applyTo(vector3D21);
        double double23 = rotation9.getQ1();
        double double24 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation0.applyInverseTo(rotation9);
        double[][] doubleArray26 = rotation25.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(doubleArray26);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) (-1.0f), 0.0d, (double) 0, true);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.9422652488599566d, 0.995037190209989d, (double) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1), (double) (byte) 1, 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation4.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation21.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D26);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray30 = rotation28.getAngles(rotationOrder29);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation3.getQ0();
        java.lang.Class<?> wildcardClass13 = rotation3.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        double double38 = rotation37.getAngle();
        double double39 = rotation37.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation13.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation4.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation4.applyTo(rotation45);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray49 = rotation4.getAngles(rotationOrder48);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, 0.9142857142857143d, (double) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, (double) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation7.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation25.applyTo(vector3D30);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ2();
        double double38 = rotation36.getQ0();
        double[][] doubleArray39 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation36.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation35.applyInverseTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        double double46 = rotation44.getQ2();
        double double47 = rotation44.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation44.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation36.applyTo(vector3D48);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D30, vector3D49);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        double double60 = rotation57.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation56.applyTo(vector3D61);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        double double65 = rotation63.getQ2();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation63.revert();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        double double69 = rotation67.getQ2();
        double double70 = rotation67.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation67.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation66.applyInverseTo(vector3D71);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ2();
        double double75 = rotation73.getQ0();
        double[][] doubleArray76 = rotation73.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation73.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation73.applyInverseTo(rotation80);
        double double83 = rotation80.getQ3();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation();
        double double85 = rotation84.getQ2();
        double double86 = rotation84.getQ0();
        double[][] doubleArray87 = rotation84.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation();
        double double89 = rotation88.getQ3();
        org.apache.commons.math.geometry.Rotation rotation90 = rotation84.applyInverseTo(rotation88);
        double double91 = rotation90.getQ0();
        org.apache.commons.math.geometry.Rotation rotation92 = rotation80.applyInverseTo(rotation90);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation80.getAxis();
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D49, vector3D61, vector3D71, vector3D93);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation17.applyTo(vector3D49);
        double double96 = rotation17.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-1.0d) + "'", double91 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double6 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.5d) + "'", double6 == (-0.5d));
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, 0.9142857142857143d, Double.NaN);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (double) 0L, (double) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation27.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation17.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation17.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray47 = rotation45.getAngles(rotationOrder46);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (-1.0f), 0.0d, (double) '4', (-0.5d), true);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D6, (double) (short) 100);
        java.lang.Class<?> wildcardClass9 = vector3D6.getClass();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        double double38 = rotation35.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation45.applyTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ2();
        double double54 = rotation52.getQ0();
        double[][] doubleArray55 = rotation52.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation52.applyInverseTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ3();
        double double61 = rotation59.getQ2();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation59.revert();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ2();
        double double65 = rotation63.getQ0();
        double[][] doubleArray66 = rotation63.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation63.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation62.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        double double73 = rotation71.getQ2();
        double double74 = rotation71.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation71.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation63.applyTo(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation52.applyInverseTo(vector3D75);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D51, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D79 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D39, vector3D51, vector3D79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.7071067811865475d), (double) 10.0f, (double) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 100, 0.5d, (-0.5d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation48.applyTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation79.applyTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D66, vector3D73, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D42, vector3D54, vector3D84);
        double double88 = rotation87.getAngle();
        java.lang.Class<?> wildcardClass89 = rotation87.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getQ3();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation4.revert();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        double double10 = rotation8.getQ2();
        double double11 = rotation8.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation8.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation7.applyInverseTo(vector3D12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation19.applyTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D25);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        double double34 = rotation31.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation35.applyInverseTo(rotation42);
        double double45 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ2();
        double double48 = rotation46.getQ0();
        double[][] doubleArray49 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyInverseTo(rotation50);
        double double53 = rotation52.getQ0();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation42.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation31.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation26.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation0.applyInverseTo(rotation26);
        double double58 = rotation0.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1.0d) + "'", double53 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyTo(rotation5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation10.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation19.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation11.applyTo(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation0.applyInverseTo(vector3D23);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(vector3D25, (double) '4');
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = null;
        double[] doubleArray29 = rotation27.getAngles(rotationOrder28);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.5707963267948966, 1.7345175425633081, 1.5707963267948966]");
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) 100);
        java.lang.Class<?> wildcardClass9 = rotation8.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray39 = rotation11.getAngles(rotationOrder38);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        double double14 = rotation11.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation10.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation20.applyInverseTo(vector3D25);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        double double36 = rotation33.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation33.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation32.applyTo(vector3D37);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D38);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D44, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        double double50 = rotation47.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation47.getAxis();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D51, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        double double68 = rotation65.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation65.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation64.applyTo(vector3D69);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D51, vector3D58, vector3D69);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation();
        double double73 = rotation72.getQ3();
        double double74 = rotation72.getQ2();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation72.revert();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ3();
        double double78 = rotation76.getQ2();
        double double79 = rotation76.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation76.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation75.applyInverseTo(vector3D80);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D38, vector3D58, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation5.applyTo(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D84 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D83, vector3D84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9142857142857143d + "'", double6 == 0.9142857142857143d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        java.lang.Class<?> wildcardClass11 = rotation7.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.995037190209989d, (-1.0d), (double) 10L, (double) 10L, true);
        java.lang.Class<?> wildcardClass6 = rotation5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation0.getAxis();
        java.lang.Class<?> wildcardClass6 = rotation0.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 0L, (double) (short) -1, (double) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation48.applyTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation79.applyTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D66, vector3D73, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D42, vector3D54, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D11, 0.6086083682652702d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(vector3D8, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1.0d, (double) '4', (double) '4', (double) 1.0f, true);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, 0.09950371902099892d, (double) (byte) -1, (double) 1L, false);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation36.applyTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation43.revert();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        double double50 = rotation47.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation47.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation46.applyInverseTo(vector3D51);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ2();
        double double55 = rotation53.getQ0();
        double[][] doubleArray56 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation53.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation53.applyInverseTo(rotation60);
        double double63 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ2();
        double double66 = rotation64.getQ0();
        double[][] doubleArray67 = rotation64.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation();
        double double69 = rotation68.getQ3();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation64.applyInverseTo(rotation68);
        double double71 = rotation70.getQ0();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation60.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation60.getAxis();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D41, vector3D51, vector3D73);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D29, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-1.0d) + "'", double71 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(vector3D73);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation13.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(vector3D38, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D38);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation41.revert();
        double double43 = rotation42.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation6.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        double double29 = rotation26.getQ2();
        double double30 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation26.applyTo(rotation31);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation26.getAxis();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D41, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        double double46 = rotation44.getQ2();
        double double47 = rotation44.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation44.getAxis();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D48, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        double double54 = rotation51.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation61.applyTo(vector3D66);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D41, vector3D48, vector3D55, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D36, vector3D48, vector3D69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        java.lang.Class<?> wildcardClass31 = vector3D10.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        double double39 = rotation38.getQ0();
        double double40 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation30.applyTo(rotation38);
        double double42 = rotation30.getQ1();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100.0f, (double) (short) 100, 0.9142857142857143d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ2();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation10.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation25.applyTo(vector3D30);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D31);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        double double40 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ2();
        double double43 = rotation41.getQ0();
        double[][] doubleArray44 = rotation41.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation41.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation41.applyInverseTo(rotation48);
        double double51 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ2();
        double double54 = rotation52.getQ0();
        double[][] doubleArray55 = rotation52.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation52.applyInverseTo(rotation56);
        double double59 = rotation58.getQ0();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation48.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation37.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation32.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ3();
        double double66 = rotation64.getQ2();
        double double67 = rotation64.getAngle();
        double[][] doubleArray68 = rotation64.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(doubleArray68, (double) (short) 1);
        double double71 = rotation70.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation70.getAxis();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation5.applyTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation70.revert();
        java.lang.Class<?> wildcardClass75 = rotation70.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.0d) + "'", double59 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        java.lang.Class<?> wildcardClass31 = vector3D29.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation16.revert();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        double double21 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        double double25 = rotation23.getQ2();
        double double26 = rotation23.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation23.getAxis();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D27, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation22.applyInverseTo(vector3D27);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation41.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        double double52 = rotation50.getQ2();
        double double53 = rotation50.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation50.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation42.applyTo(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation31.applyInverseTo(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation22.applyInverseTo(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation17.applyTo(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation17.getAxis();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        double double62 = rotation60.getQ2();
        double double63 = rotation60.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation60.getAxis();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        double double69 = rotation67.getQ2();
        double double70 = rotation67.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation67.getAxis();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D71, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        double double76 = rotation74.getQ2();
        double double77 = rotation74.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation74.getAxis();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation();
        double double86 = rotation85.getQ3();
        double double87 = rotation85.getQ2();
        double double88 = rotation85.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation85.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation84.applyTo(vector3D89);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D64, vector3D71, vector3D78, vector3D89);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D89);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 0.0f, 0.0d, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation3.getAxis();
        java.lang.Class<?> wildcardClass5 = vector3D4.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(doubleArray3, (double) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(doubleArray3, (-0.7071067811865475d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation0.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ2();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation10.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation25.applyTo(vector3D30);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D31);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        double double36 = rotation33.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation33.getAxis();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D37, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D44, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        double double50 = rotation47.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation47.getAxis();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ3();
        double double60 = rotation58.getQ2();
        double double61 = rotation58.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation58.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation57.applyTo(vector3D62);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D37, vector3D44, vector3D51, vector3D62);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation65.revert();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation68.applyInverseTo(vector3D73);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D9, vector3D31, vector3D51, vector3D73);
        java.lang.Class<?> wildcardClass76 = vector3D51.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        double double18 = rotation15.getAngle();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation15.revert();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D24, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation19.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyInverseTo(rotation35);
        double double38 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ2();
        double double41 = rotation39.getQ0();
        double[][] doubleArray42 = rotation39.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation39.applyInverseTo(rotation43);
        double double46 = rotation45.getQ0();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation35.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ2();
        double double55 = rotation53.getQ0();
        double[][] doubleArray56 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation53.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation52.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ3();
        double double63 = rotation61.getQ2();
        double double64 = rotation61.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation53.applyTo(vector3D65);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        double double69 = rotation67.getQ2();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation67.revert();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        double double73 = rotation71.getQ2();
        double double74 = rotation71.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation71.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation70.applyInverseTo(vector3D75);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D65, vector3D75);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D9, vector3D24, vector3D48, vector3D75);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation78.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1.0d) + "'", double46 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotation79);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation15.getQ2();
        double double19 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation7.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        double double28 = rotation25.getQ2();
        double double29 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation20.applyTo(rotation30);
        double[][] doubleArray37 = rotation20.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(doubleArray37);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        double[][] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(doubleArray0, (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation3.getAngle();
        double double13 = rotation3.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray15 = rotation3.getAngles(rotationOrder14);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double double3 = rotation0.getQ3();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation4.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ2();
        double double13 = rotation10.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation9.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation9.getAxis();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        double double25 = rotation23.getQ2();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation23.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation26.applyInverseTo(rotation27);
        double double35 = rotation26.getAngle();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        double[][] doubleArray40 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(doubleArray40, (double) (short) 1);
        double double43 = rotation42.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation42.getAxis();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation45.revert();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation48.applyInverseTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D53, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation42.applyInverseTo(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation26.applyTo(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation22.applyInverseTo(vector3D58);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D58);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D5, vector3D16);
        java.lang.Class<?> wildcardClass62 = vector3D16.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        double[][] doubleArray9 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(doubleArray9, (double) (short) 1);
        double double12 = rotation11.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation11.getAxis();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D13);
        double double15 = rotation14.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation4.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation21.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D26);
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ2();
        double double48 = rotation46.getQ0();
        double[][] doubleArray49 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation45.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation46.applyTo(vector3D58);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation28.applyTo(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation63 = rotation28.applyTo(rotation62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 0, 2.562089250717698d, 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation27.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation17.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray46 = rotation5.getAngles(rotationOrder45);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyTo(rotation12);
        java.lang.Class<?> wildcardClass14 = rotation5.getClass();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation4.applyTo(vector3D16);
        java.lang.Class<?> wildcardClass18 = rotation4.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) -1, (double) 1L, (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 100, 2.9422652488599566d, 2.9422652488599566d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        java.lang.Class<?> wildcardClass10 = vector3D8.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation3.getAngle();
        double double13 = rotation3.getQ1();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation3.revert();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        double double18 = rotation15.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation15.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(vector3D19, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D19, (double) (-1.0f));
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        double double32 = rotation29.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation29.getAxis();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D33, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation28.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ2();
        double double39 = rotation37.getQ0();
        double[][] doubleArray40 = rotation37.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation37.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        double double46 = rotation44.getQ2();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation44.revert();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ2();
        double double50 = rotation48.getQ0();
        double[][] doubleArray51 = rotation48.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation48.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation47.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        double double58 = rotation56.getQ2();
        double double59 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation56.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation48.applyTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation37.applyInverseTo(vector3D60);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D62, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation65.revert();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ2();
        double double71 = rotation69.getQ0();
        double[][] doubleArray72 = rotation69.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation69.applyInverseTo(rotation73);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation68.applyInverseTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        double double79 = rotation77.getQ2();
        double double80 = rotation77.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation77.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation69.applyTo(vector3D81);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation();
        double double84 = rotation83.getQ3();
        double double85 = rotation83.getQ2();
        org.apache.commons.math.geometry.Rotation rotation86 = rotation83.revert();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation();
        double double88 = rotation87.getQ3();
        double double89 = rotation87.getQ2();
        double double90 = rotation87.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation87.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation86.applyInverseTo(vector3D91);
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D81, vector3D91);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D19, vector3D36, vector3D62, vector3D81);
        org.apache.commons.math.geometry.Rotation rotation95 = rotation3.applyTo(rotation94);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(rotation95);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9949879346007117d, (double) (byte) 0, (double) (short) 0, (double) (byte) 1, false);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) -1, 0.0994987934600711d, (double) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0, 0.7071067811865475d, (-1.0d), true);
        java.lang.Class<?> wildcardClass6 = rotation5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation16.revert();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        double double21 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        double double25 = rotation23.getQ2();
        double double26 = rotation23.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation23.getAxis();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D27, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation22.applyInverseTo(vector3D27);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation41.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        double double52 = rotation50.getQ2();
        double double53 = rotation50.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation50.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation42.applyTo(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation31.applyInverseTo(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation22.applyInverseTo(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation17.applyTo(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D58, 2.562089250717698d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(vector3D8, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = null;
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation38.getAxis();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D36, vector3D37, vector3D42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '#', 0.995037190209989d, 2.9422652488599566d, (double) 1.0f, false);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation6.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation32.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation33.applyTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation22.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation6.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) 1);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D57, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        double double68 = rotation66.getQ2();
        double double69 = rotation66.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation66.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation65.applyTo(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation65.getAxis();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation73.revert();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ3();
        double double80 = rotation78.getQ2();
        double double81 = rotation78.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation78.getAxis();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D82, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation77.applyInverseTo(vector3D82);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D47, vector3D57, vector3D72, vector3D82);
        java.lang.Class<?> wildcardClass87 = rotation86.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        double double5 = rotation0.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = rotation0.getAngles(rotationOrder6);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation5.revert();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.995037190209989d + "'", double6 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray39 = rotation37.getAngles(rotationOrder38);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D30);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        double double39 = rotation36.getQ2();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ2();
        double double42 = rotation40.getQ0();
        double[][] doubleArray43 = rotation40.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation40.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation40.applyInverseTo(rotation47);
        double double50 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ2();
        double double53 = rotation51.getQ0();
        double[][] doubleArray54 = rotation51.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation51.applyInverseTo(rotation55);
        double double58 = rotation57.getQ0();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation47.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation36.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation31.applyTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation5.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.revert();
        double double64 = rotation63.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.995037190209989d + "'", double6 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1.0d) + "'", double58 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 3.141592653589793d + "'", double64 == 3.141592653589793d);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation37.getAxis();
        java.lang.Class<?> wildcardClass39 = vector3D38.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.5d), (double) 100, (double) (byte) 10, (double) 0L, false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '#', (-0.5d), (double) (-1), 0.0d, false);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ1();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) 1, (-0.7071067811865475d), (double) (byte) 1, (double) (byte) 100, false);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation13.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation4.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation4.applyTo(rotation45);
        double[][] doubleArray48 = rotation4.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation3.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray12 = rotation3.getAngles(rotationOrder11);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 0);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ2();
        double double16 = rotation14.getQ0();
        double[][] doubleArray17 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation14.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyInverseTo(rotation21);
        double double24 = rotation21.getQ1();
        double[][] doubleArray25 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation13.applyTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation28 = rotation26.applyTo(rotation27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(rotation26);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.009999000149975004d), (-0.5d), (double) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        double double19 = rotation16.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation16.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation15.applyTo(vector3D20);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ2();
        double double25 = rotation23.getQ0();
        double[][] doubleArray26 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation23.applyInverseTo(rotation27);
        double double30 = rotation27.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyInverseTo(rotation38);
        double double41 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        double double49 = rotation48.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation38.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation27.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation22.applyTo(rotation27);
        org.apache.commons.math.geometry.Vector3D vector3D53 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D54 = rotation52.applyInverseTo(vector3D53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation3.getQ0();
        double double13 = rotation3.getQ3();
        double double14 = rotation3.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1.0d) + "'", double14 == (-1.0d));
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        double double9 = rotation6.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, 3.141592653589793d, 2.9422652488599566d, 1.531570594506642d, false);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 3.141592653589793d, 2.562089250717698d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.995037190209989d, (-1.0d), (double) 10L, (double) 10L, true);
        double double6 = rotation5.getQ3();
        java.lang.Class<?> wildcardClass7 = rotation5.getClass();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.703614788711539d + "'", double6 == 0.703614788711539d);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation36.applyTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation43.revert();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        double double50 = rotation47.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation47.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation46.applyInverseTo(vector3D51);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ2();
        double double55 = rotation53.getQ0();
        double[][] doubleArray56 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation53.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation53.applyInverseTo(rotation60);
        double double63 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ2();
        double double66 = rotation64.getQ0();
        double[][] doubleArray67 = rotation64.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation();
        double double69 = rotation68.getQ3();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation64.applyInverseTo(rotation68);
        double double71 = rotation70.getQ0();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation60.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation60.getAxis();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D41, vector3D51, vector3D73);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D29, (double) (byte) 0);
        double double77 = rotation76.getQ3();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-1.0d) + "'", double71 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.0d) + "'", double77 == (-0.0d));
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation48.applyTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation79.applyTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D66, vector3D73, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D42, vector3D54, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D11, 1.0d);
        java.lang.Class<?> wildcardClass90 = vector3D11.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ2();
        double double20 = rotation18.getQ0();
        double[][] doubleArray21 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation18.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ0();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation28.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation29.applyTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation18.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation5.applyTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) (-1.0f), (double) 0L, 0.9142857142857143d, true);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        double double54 = rotation52.getQ2();
        double double55 = rotation52.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation52.getAxis();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D56, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D56, (double) (-1.0f));
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation51.applyTo(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D45, vector3D61);
        java.lang.Class<?> wildcardClass63 = vector3D45.getClass();
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation9 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation0.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray13 = rotation0.getAngles(rotationOrder12);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation13.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(vector3D38, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D38);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation41.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray44 = rotation41.getAngles(rotationOrder43);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotation42);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.7071067811865475d), 0.019227214231343204d, 0.2857142857142857d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ0();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.995037190209989d + "'", double6 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 'a', (double) 1, (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation17.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation6.applyInverseTo(vector3D11);
        double double23 = rotation6.getQ2();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.995037190209989d + "'", double18 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        double double16 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation5.revert();
        double double18 = rotation5.getQ3();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.009999000149975004d) + "'", double16 == (-0.009999000149975004d));
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.009999000149975004d) + "'", double18 == (-0.009999000149975004d));
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ1();
        double double36 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyTo(rotation33);
        double double38 = rotation33.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', (-0.009999000149975004d), (double) (byte) 10, 0.6086083682652702d, false);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation13.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(vector3D38, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D38);
        double double42 = rotation41.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        double double39 = rotation38.getQ0();
        double double40 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation30.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ1();
        double double45 = rotation42.getAngle();
        double[][] doubleArray46 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(doubleArray46, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(doubleArray46, 0.9142857142857143d);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation38.applyInverseTo(rotation50);
        double double52 = rotation51.getAngle();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation48.applyTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation79.applyTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D66, vector3D73, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D42, vector3D54, vector3D84);
        double double88 = rotation87.getAngle();
        double[][] doubleArray89 = rotation87.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(doubleArray89, (double) 0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray89);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation3.revert();
        java.lang.Class<?> wildcardClass5 = rotation3.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 10.0d, 0.0d, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) 0, (double) (short) 1, 0.5d, (double) (-1L), false);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(vector3D16, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation11.applyInverseTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ2();
        double double22 = rotation20.getQ0();
        double[][] doubleArray23 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation20.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation27.revert();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation30.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        double double42 = rotation39.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation39.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation31.applyTo(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation20.applyInverseTo(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation11.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        double double53 = rotation52.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation11.applyTo(rotation52);
        double double55 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation5.applyInverseTo(rotation11);
        double double57 = rotation11.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1.0d) + "'", double55 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1.0f, (double) (short) 10, (double) 100.0f, (double) (byte) -1, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1.0d), (-0.0d), (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray15 = rotation11.getAngles(rotationOrder14);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        double double39 = rotation38.getQ0();
        double double40 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation30.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation42.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D46, (double) 100.0f);
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        double double58 = rotation56.getQ2();
        double double59 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation56.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation55.applyTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation48.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation30.applyInverseTo(rotation48);
        double double65 = rotation64.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = null;
        double[] doubleArray67 = rotation64.getAngles(rotationOrder66);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.5707963267948966, 0.530964914873383, -1.5707963267948966]");
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ2();
        double double14 = rotation12.getQ0();
        double[][] doubleArray15 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation12.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ2();
        double double25 = rotation23.getQ0();
        double[][] doubleArray26 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation23.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation22.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        double double34 = rotation31.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation31.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation23.applyTo(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation12.applyInverseTo(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D35);
        java.lang.Class<?> wildcardClass39 = vector3D35.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        double[][] doubleArray16 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        double double24 = rotation21.getQ2();
        double double25 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ2();
        double double28 = rotation26.getQ0();
        double[][] doubleArray29 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation21.applyTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation5.applyInverseTo(rotation30);
        java.lang.Class<?> wildcardClass32 = rotation31.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        double[][] doubleArray17 = rotation16.getMatrix();
        double double18 = rotation16.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(doubleArray31, (double) 1.0f);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray31);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        double double8 = rotation7.getQ2();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.7071067811865475d + "'", double8 == 0.7071067811865475d);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (-0.0d), (double) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 0, 0.9142857142857143d, (-0.7071067811865475d), (double) (byte) -1, false);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation6.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray9 = rotation6.getAngles(rotationOrder8);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ2();
        double double12 = rotation10.getQ0();
        double[][] doubleArray13 = rotation10.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation10.applyInverseTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        double double32 = rotation29.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation29.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation21.applyTo(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation10.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation38 = rotation9.applyInverseTo(rotation37);
        double double39 = rotation38.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-0.7625584504796028d) + "'", double39 == (-0.7625584504796028d));
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, 10.0d, (double) (byte) 0, 100.0d, true);
        double double6 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation13.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(vector3D38, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D38);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation41.revert();
        double double43 = rotation41.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100, 0.0d, (-0.5d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        double double18 = rotation13.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        double double39 = rotation38.getQ0();
        double double40 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation30.applyTo(rotation38);
        double double42 = rotation38.getQ1();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double double3 = rotation0.getQ3();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        double double5 = rotation4.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1.0f, (double) 0, (double) (short) 100, (double) 10.0f, true);
        double double6 = rotation5.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.09949879346007118d + "'", double6 == 0.09949879346007118d);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation27.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation17.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation5.applyTo(rotation17);
        java.lang.Class<?> wildcardClass45 = rotation5.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        double double13 = rotation4.getQ0();
        double double14 = rotation4.getQ0();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation4.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1.0d) + "'", double13 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1.0d) + "'", double14 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation15);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation6.getQ0();
        double double8 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D18, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D18, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation6.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D34, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation29.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation6.applyInverseTo(rotation29);
        double double39 = rotation6.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.0d, (double) 0, 0.5d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation7.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation7.getAxis();
        double double21 = rotation7.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray23 = rotation7.getAngles(rotationOrder22);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double double3 = rotation0.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', 2.562089250717698d, (double) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9142857142857143d, 0.29814239699997197d, (double) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation16.applyInverseTo(rotation23);
        double double26 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation37.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation27.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation23.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation15.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation0.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ2();
        double double58 = rotation56.getQ0();
        double[][] doubleArray59 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation56.applyInverseTo(rotation60);
        double double63 = rotation62.getQ0();
        double double64 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        double double68 = rotation65.getAngle();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation65.revert();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        double double72 = rotation70.getQ2();
        double double73 = rotation70.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation70.getAxis();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D74, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation69.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D74, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation62.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation55.applyInverseTo(rotation62);
        double double82 = rotation81.getQ0();
        double double83 = rotation81.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.0d) + "'", double63 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.019227214231343204d, (double) 10, (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(doubleArray3, (double) (byte) 10);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(doubleArray3, (double) 100L);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation6.getQ0();
        double double8 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D18, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D18, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation6.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D34, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation29.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation6.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation39 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation40 = rotation29.applyInverseTo(rotation39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation38);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.0d), (double) (short) 100, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation48.applyTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation79.applyTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D66, vector3D73, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D42, vector3D54, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D84, (-0.0d));
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation3.revert();
        double double5 = rotation4.getQ2();
        double[][] doubleArray6 = rotation4.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) 10L, (double) 1, (double) (short) 0, true);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 1.0f, 0.703614788711539d, (double) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        double double11 = rotation7.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        double double19 = rotation16.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation16.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation15.applyTo(vector3D20);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ2();
        double double25 = rotation23.getQ0();
        double[][] doubleArray26 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation23.applyInverseTo(rotation27);
        double double30 = rotation27.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyInverseTo(rotation38);
        double double41 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        double double49 = rotation48.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation38.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation27.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation22.applyTo(rotation27);
        java.lang.Class<?> wildcardClass53 = rotation22.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7071067811865475d, (double) (-1), (double) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        double double16 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation5.revert();
        double double18 = rotation5.getQ0();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.009999000149975004d) + "'", double16 == (-0.009999000149975004d));
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.009999000149975004d) + "'", double18 == (-0.009999000149975004d));
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation0.getAxis();
        double double11 = rotation0.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation48.applyTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation79.applyTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D66, vector3D73, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D42, vector3D54, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D84, (-0.5d));
        java.lang.Class<?> wildcardClass90 = rotation89.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1), (double) 100L, 0.009949879346007126d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, 0.0d, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        double[][] doubleArray18 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ1();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        double double31 = rotation28.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation28.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation27.applyInverseTo(vector3D32);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation39.applyTo(vector3D44);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D32, vector3D45);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ2();
        double double49 = rotation47.getQ0();
        double[][] doubleArray50 = rotation47.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation47.applyInverseTo(rotation51);
        double double54 = rotation51.getQ2();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ2();
        double double57 = rotation55.getQ0();
        double[][] doubleArray58 = rotation55.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ3();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation55.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation55.applyInverseTo(rotation62);
        double double65 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ2();
        double double68 = rotation66.getQ0();
        double[][] doubleArray69 = rotation66.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation66.applyInverseTo(rotation70);
        double double73 = rotation72.getQ0();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation62.applyInverseTo(rotation72);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation51.applyInverseTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation46.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation19.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ3();
        double double80 = rotation78.getQ2();
        double double81 = rotation78.getAngle();
        double[][] doubleArray82 = rotation78.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(doubleArray82, (double) (short) 1);
        double double85 = rotation84.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation84.getAxis();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation19.applyTo(rotation84);
        org.apache.commons.math.geometry.Rotation rotation88 = rotation13.applyTo(rotation87);
        org.apache.commons.math.geometry.RotationOrder rotationOrder89 = null;
        double[] doubleArray90 = rotation88.getAngles(rotationOrder89);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-1.0d) + "'", double73 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[0.5448639154515437, 1.7880106081090912, 2.59672873813825]");
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation17.applyInverseTo(rotation24);
        double double27 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        double double35 = rotation32.getQ2();
        double double36 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation24.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation13.applyInverseTo(rotation32);
        double double39 = rotation32.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9142857142857143d, 0.9142857142857143d, (-0.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation7.applyInverseTo(rotation17);
        double[][] doubleArray20 = rotation7.getMatrix();
        double double21 = rotation7.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation15.getQ2();
        double double19 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation7.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        double double28 = rotation25.getQ2();
        double double29 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation20.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        double[][] doubleArray41 = rotation37.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(doubleArray41, (double) (short) 1);
        double double44 = rotation43.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation43.getAxis();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation46.revert();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        double double52 = rotation50.getQ2();
        double double53 = rotation50.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation50.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation49.applyInverseTo(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D54, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation43.applyInverseTo(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ2();
        double double61 = rotation59.getQ0();
        double[][] doubleArray62 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation59.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        double double68 = rotation66.getQ2();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation66.revert();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ2();
        double double72 = rotation70.getQ0();
        double[][] doubleArray73 = rotation70.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation70.applyInverseTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation69.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ3();
        double double80 = rotation78.getQ2();
        double double81 = rotation78.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation78.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation70.applyTo(vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation59.applyInverseTo(vector3D82);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D84, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation43.applyInverseTo(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation36.applyInverseTo(vector3D87);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double95 = rotation94.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotation94.getAxis();
        org.apache.commons.math.geometry.Rotation rotation97 = new org.apache.commons.math.geometry.Rotation(vector3D88, vector3D96);
        double double98 = rotation97.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.9142857142857143d + "'", double95 == 0.9142857142857143d);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.15156571116200665d + "'", double98 == 0.15156571116200665d);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(vector3D7, (double) 100L);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(vector3D7);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation48.applyTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation79.applyTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D66, vector3D73, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D42, vector3D54, vector3D84);
        double double88 = rotation87.getAngle();
        double[][] doubleArray89 = rotation87.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder90 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray91 = rotation87.getAngles(rotationOrder90);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray89);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D22);
        double double24 = rotation23.getAngle();
        double double25 = rotation23.getQ0();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation38.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation37.applyTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ2();
        double double46 = rotation44.getQ0();
        double[][] doubleArray47 = rotation44.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation44.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation51.revert();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ2();
        double double57 = rotation55.getQ0();
        double[][] doubleArray58 = rotation55.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ3();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation55.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation54.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        double double65 = rotation63.getQ2();
        double double66 = rotation63.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation63.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation55.applyTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation44.applyInverseTo(vector3D67);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(vector3D43, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation31.applyTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation23.applyTo(vector3D67);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.531570594506642d + "'", double24 == 1.531570594506642d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.7208382876544367d + "'", double25 == 0.7208382876544367d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation3.getQ0();
        double double13 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ2();
        double double16 = rotation14.getQ0();
        double[][] doubleArray17 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation14.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation21.revert();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ2();
        double double27 = rotation25.getQ0();
        double[][] doubleArray28 = rotation25.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation25.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation24.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        double double36 = rotation33.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation33.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation25.applyTo(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation14.applyInverseTo(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation3.applyTo(vector3D39);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 100, 1.5707963267948963d, (double) (byte) 0, (-0.009999000149975004d), true);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray7, 1.0d);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(doubleArray7, 0.9949879346007117d);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray7, (double) 0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray7);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        double double8 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation4.applyTo(rotation9);
        java.lang.Class<?> wildcardClass14 = rotation13.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = null;
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation21);
        double double29 = rotation20.getAngle();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        double[][] doubleArray34 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray34, (double) (short) 1);
        double double37 = rotation36.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        double double46 = rotation43.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation42.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation36.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation20.applyTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation53.revert();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation56.getAxis();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D16, vector3D52, vector3D57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(vector3D57);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation9.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation8.applyInverseTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        double double20 = rotation17.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation17.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation9.applyTo(vector3D21);
        double double23 = rotation9.getQ1();
        double double24 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation0.applyInverseTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double32 = rotation31.getQ0();
        double double33 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ2();
        double double36 = rotation34.getQ0();
        double[][] doubleArray37 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation34.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ0();
        double[][] doubleArray48 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation44.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation45.applyTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation34.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation31.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation25.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ2();
        double double64 = rotation62.getQ0();
        double[][] doubleArray65 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation62.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation62.applyInverseTo(rotation69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation73.getAxis();
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double84 = rotation83.getQ2();
        double double85 = rotation83.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation83.getAxis();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D77, vector3D86);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D72, vector3D77);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D57, vector3D72);
        double double90 = rotation89.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.5d) + "'", double32 == (-0.5d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.995037190209989d + "'", double84 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (-1.0f));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation19.applyTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation29.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation38.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation30.applyTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D43);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        double double54 = rotation51.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation50.applyTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation57.revert();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ3();
        double double63 = rotation61.getQ2();
        double double64 = rotation61.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation60.applyInverseTo(vector3D65);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ2();
        double double69 = rotation67.getQ0();
        double[][] doubleArray70 = rotation67.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation67.applyInverseTo(rotation71);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation67.applyInverseTo(rotation74);
        double double77 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ2();
        double double80 = rotation78.getQ0();
        double[][] doubleArray81 = rotation78.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation();
        double double83 = rotation82.getQ3();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation78.applyInverseTo(rotation82);
        double double85 = rotation84.getQ0();
        org.apache.commons.math.geometry.Rotation rotation86 = rotation74.applyInverseTo(rotation84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation74.getAxis();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D43, vector3D55, vector3D65, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation9.applyTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D89);
        double[][] doubleArray91 = rotation90.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-1.0d) + "'", double85 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.019227214231343204d, (double) (byte) -1, 0.5d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation4.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation21.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D26);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray31 = rotation28.getAngles(rotationOrder30);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation3.getAxis();
        java.lang.Class<?> wildcardClass5 = rotation3.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D35);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        double double46 = rotation43.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation42.applyTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation52.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ2();
        double double61 = rotation59.getQ0();
        double[][] doubleArray62 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation59.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation59.applyInverseTo(rotation66);
        double double69 = rotation66.getQ3();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ2();
        double double72 = rotation70.getQ0();
        double[][] doubleArray73 = rotation70.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation70.applyInverseTo(rotation74);
        double double77 = rotation76.getQ0();
        org.apache.commons.math.geometry.Rotation rotation78 = rotation66.applyInverseTo(rotation76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation66.getAxis();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D35, vector3D47, vector3D57, vector3D79);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D5, vector3D35);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D5, 2.9422652488599566d);
        java.lang.Class<?> wildcardClass86 = vector3D5.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-1.0d) + "'", double77 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation15.getQ2();
        double double19 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation7.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        double double28 = rotation25.getQ2();
        double double29 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation20.applyTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation20.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray39 = rotation20.getAngles(rotationOrder38);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1.0d, (double) (-1.0f), 10.0d, 0.6086083682652702d, false);
        double double6 = rotation5.getQ0();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray7, 1.0d);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(doubleArray7, 0.09949879346007118d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray7);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) (short) 0, (double) 0.0f, (double) (byte) 1, true);
        org.apache.commons.math.geometry.Rotation rotation8 = rotation0.applyInverseTo(rotation7);
        org.apache.commons.math.geometry.Rotation rotation9 = rotation7.revert();
        java.lang.Class<?> wildcardClass10 = rotation7.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation4.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation21.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D26);
        double double29 = rotation28.getQ1();
        double double30 = rotation28.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.7071067811865475d, (-0.0d), (double) (byte) 1, (double) (short) 1, false);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation7 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ2();
        double double13 = rotation10.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D14, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        double double20 = rotation17.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation17.getAxis();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D21, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        double double38 = rotation35.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation35.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation34.applyTo(vector3D39);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D14, vector3D21, vector3D28, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation9.applyTo(vector3D21);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D0, vector3D42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        double double32 = rotation31.getQ1();
        double double33 = rotation31.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (-1.0f));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation19.applyTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation29.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation38.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation30.applyTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D43);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        double double54 = rotation51.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation50.applyTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation57.revert();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ3();
        double double63 = rotation61.getQ2();
        double double64 = rotation61.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation60.applyInverseTo(vector3D65);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ2();
        double double69 = rotation67.getQ0();
        double[][] doubleArray70 = rotation67.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation67.applyInverseTo(rotation71);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation67.applyInverseTo(rotation74);
        double double77 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ2();
        double double80 = rotation78.getQ0();
        double[][] doubleArray81 = rotation78.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation();
        double double83 = rotation82.getQ3();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation78.applyInverseTo(rotation82);
        double double85 = rotation84.getQ0();
        org.apache.commons.math.geometry.Rotation rotation86 = rotation74.applyInverseTo(rotation84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation74.getAxis();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D43, vector3D55, vector3D65, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation9.applyTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D89);
        double double91 = rotation90.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray93 = rotation90.getAngles(rotationOrder92);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-1.0d) + "'", double85 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D9, Double.NaN);
        double double17 = rotation16.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        double[] doubleArray6 = new double[] { 0.028545850260162355d, 3.1215943200414915d, (byte) 0, 0.9949879346007117d, (short) 1, 1.5707963267948963d };
        double[] doubleArray13 = new double[] { 0.028545850260162355d, 3.1215943200414915d, (byte) 0, 0.9949879346007117d, (short) 1, 1.5707963267948963d };
        double[] doubleArray20 = new double[] { 0.028545850260162355d, 3.1215943200414915d, (byte) 0, 0.9949879346007117d, (short) 1, 1.5707963267948963d };
        double[][] doubleArray21 = new double[][] { doubleArray6, doubleArray13, doubleArray20 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(doubleArray21, 0.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: a 3x6 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.028545850260162355, 3.1215943200414915, 0.0, 0.9949879346007117, 1.0, 1.5707963267948963]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.028545850260162355, 3.1215943200414915, 0.0, 0.9949879346007117, 1.0, 1.5707963267948963]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.028545850260162355, 3.1215943200414915, 0.0, 0.9949879346007117, 1.0, 1.5707963267948963]");
        org.junit.Assert.assertNotNull(doubleArray21);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        double double5 = rotation4.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-1.0d) + "'", double5 == (-1.0d));
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray7, 1.0d);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ2();
        double double12 = rotation10.getQ0();
        double double13 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation9.applyInverseTo(rotation10);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 0);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ2();
        double double16 = rotation14.getQ0();
        double[][] doubleArray17 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation14.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyInverseTo(rotation21);
        double double24 = rotation21.getQ1();
        double[][] doubleArray25 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation13.applyTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double33 = rotation32.getQ0();
        double double34 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ2();
        double double48 = rotation46.getQ0();
        double[][] doubleArray49 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation45.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation46.applyTo(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation35.applyInverseTo(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation32.applyInverseTo(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation21.applyInverseTo(vector3D61);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        double double65 = rotation63.getQ2();
        double double66 = rotation63.getAngle();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation63.revert();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation();
        double double69 = rotation68.getQ3();
        double double70 = rotation68.getQ2();
        double double71 = rotation68.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation68.getAxis();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D72, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation67.applyInverseTo(vector3D72);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D72, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D72, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation21.applyTo(rotation79);
        double[][] doubleArray81 = rotation80.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.5d) + "'", double33 == (-0.5d));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.5d + "'", double34 == 0.5d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(doubleArray81);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0994987934600711d, (-0.7625584504796028d), 0.7064762846593019d, 0.0994987934600711d, false);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation3.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray17, (double) (short) 1);
        double double20 = rotation19.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation22.revert();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation25.applyInverseTo(vector3D30);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D30, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation19.applyInverseTo(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation3.applyTo(vector3D30);
        double double36 = rotation3.getQ0();
        double double37 = rotation3.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray39 = rotation3.getAngles(rotationOrder38);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1.0d) + "'", double36 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        double[][] doubleArray31 = rotation30.getMatrix();
        double[][] doubleArray32 = rotation30.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(doubleArray32, (-0.7625584504796028d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray32);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 100, (double) 100, (double) (-1L), (double) 0L, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D7 = rotation5.applyTo(vector3D6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 0, 0.019227214231343204d, 2.562089250717698d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation4.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        double double38 = rotation35.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation35.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation34.applyTo(vector3D39);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ0();
        double[][] doubleArray48 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation44.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation45.applyTo(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D39, vector3D58);
        double[][] doubleArray60 = rotation59.getMatrix();
        double[][] doubleArray61 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(doubleArray61, (double) 0);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation27.applyTo(rotation63);
        double double65 = rotation63.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation21);
        double double29 = rotation20.getAngle();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation16.applyInverseTo(rotation20);
        double double31 = rotation20.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation33 = rotation20.applyTo(rotation32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1.0d) + "'", double31 == (-1.0d));
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(doubleArray3, (double) (byte) 0);
        double double6 = rotation5.getQ0();
        double double7 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        java.lang.Class<?> wildcardClass11 = rotation3.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 'a', (double) 1, (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        java.lang.Class<?> wildcardClass7 = rotation5.getClass();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ0();
        double[][] doubleArray10 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation7.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation7.applyInverseTo(rotation14);
        double double17 = rotation14.getQ1();
        double[][] doubleArray18 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray18, 0.0d);
        double double21 = rotation20.getAngle();
        double double22 = rotation20.getAngle();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation23.revert();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D34, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation29.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation45.revert();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ2();
        double double51 = rotation49.getQ0();
        double[][] doubleArray52 = rotation49.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation49.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation48.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        double double60 = rotation57.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation49.applyTo(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation38.applyInverseTo(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation29.applyInverseTo(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation24.applyTo(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation6.applyTo(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D63, 0.9949879346007117d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation7.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D24, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D31, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        double double37 = rotation34.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation34.getAxis();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation44.applyTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D31, vector3D38, vector3D49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation17.applyInverseTo(rotation51);
        double[][] doubleArray53 = rotation51.getMatrix();
        double double54 = rotation51.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10L, 0.009949879346007126d, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100L, (double) (byte) 100, Double.NaN);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        double double10 = rotation0.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation0.getAxis();
        double double12 = rotation0.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        double[][] doubleArray16 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        double double24 = rotation21.getQ2();
        double double25 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ2();
        double double28 = rotation26.getQ0();
        double[][] doubleArray29 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation21.applyTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation5.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double38 = rotation37.getQ2();
        double double39 = rotation37.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation37.getAxis();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation44.applyInverseTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        double double60 = rotation57.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation56.applyTo(vector3D61);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D49, vector3D62);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ2();
        double double66 = rotation64.getQ0();
        double[][] doubleArray67 = rotation64.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation();
        double double69 = rotation68.getQ3();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation64.applyInverseTo(rotation68);
        double double71 = rotation68.getQ2();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation();
        double double73 = rotation72.getQ2();
        double double74 = rotation72.getQ0();
        double[][] doubleArray75 = rotation72.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ3();
        org.apache.commons.math.geometry.Rotation rotation78 = rotation72.applyInverseTo(rotation76);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation();
        double double80 = rotation79.getQ3();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation72.applyInverseTo(rotation79);
        double double82 = rotation79.getQ3();
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation();
        double double84 = rotation83.getQ2();
        double double85 = rotation83.getQ0();
        double[][] doubleArray86 = rotation83.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation();
        double double88 = rotation87.getQ3();
        org.apache.commons.math.geometry.Rotation rotation89 = rotation83.applyInverseTo(rotation87);
        double double90 = rotation89.getQ0();
        org.apache.commons.math.geometry.Rotation rotation91 = rotation79.applyInverseTo(rotation89);
        org.apache.commons.math.geometry.Rotation rotation92 = rotation68.applyInverseTo(rotation91);
        org.apache.commons.math.geometry.Rotation rotation93 = rotation63.applyTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation94 = rotation37.applyInverseTo(rotation93);
        org.apache.commons.math.geometry.Rotation rotation95 = rotation30.applyInverseTo(rotation93);
        double double96 = rotation30.getQ3();
        double[][] doubleArray97 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation99 = new org.apache.commons.math.geometry.Rotation(doubleArray97, 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.995037190209989d + "'", double38 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-1.0d) + "'", double90 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation91);
        org.junit.Assert.assertNotNull(rotation92);
        org.junit.Assert.assertNotNull(rotation93);
        org.junit.Assert.assertNotNull(rotation94);
        org.junit.Assert.assertNotNull(rotation95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        double double4 = rotation0.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D6 = rotation0.applyInverseTo(vector3D5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        double[][] doubleArray38 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(doubleArray38, 10.0d);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(doubleArray38, (double) 100.0f);
        java.lang.Class<?> wildcardClass43 = doubleArray38.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation15.getQ2();
        double double19 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation7.applyTo(rotation15);
        org.apache.commons.math.geometry.Vector3D vector3D21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D22 = rotation7.applyTo(vector3D21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        double double7 = rotation6.getAngle();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.5707963267948963d + "'", double7 == 1.5707963267948963d);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 100, (double) 100, (double) (-1L), (double) 0L, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray8 = rotation5.getAngles(rotationOrder7);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        double double18 = rotation13.getAngle();
        double double19 = rotation13.getQ1();
        double double20 = rotation13.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation27.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation17.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation45.revert();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation48.applyInverseTo(vector3D53);
        double double55 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation48.applyTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation64.getAxis();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation56.applyTo(rotation64);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation56.revert();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation5.applyTo(rotation56);
        java.lang.Class<?> wildcardClass69 = rotation5.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) ' ', 0.7064762846593019d, (double) 100.0f, true);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7071067811865475d, (double) 100L, 0.09950371902099892d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 0.0f, Double.NaN, 0.7071067811865475d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation6.getQ0();
        double double8 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D18, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D18, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation6.applyInverseTo(vector3D18);
        java.lang.Class<?> wildcardClass25 = vector3D24.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', (double) 0.0f, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ2();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation10.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ2();
        double double16 = rotation14.getQ0();
        double[][] doubleArray17 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation14.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation13.applyInverseTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation14.applyTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation31.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation9.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation9.revert();
        double double41 = rotation9.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1.0d) + "'", double41 == (-1.0d));
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 100, 0.6086083682652702d, Double.NaN);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation7.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D24, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D31, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        double double37 = rotation34.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation34.getAxis();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation44.applyTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D31, vector3D38, vector3D49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation17.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = null;
        double[] doubleArray54 = rotation51.getAngles(rotationOrder53);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[NaN, NaN, NaN]");
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation7.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotation11);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation21);
        double double29 = rotation20.getAngle();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        double[][] doubleArray34 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray34, (double) (short) 1);
        double double37 = rotation36.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        double double46 = rotation43.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation42.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation36.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation20.applyTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation16.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D52);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ2();
        double double57 = rotation55.getQ0();
        double[][] doubleArray58 = rotation55.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ3();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation55.applyInverseTo(rotation59);
        double double62 = rotation61.getQ0();
        double double63 = rotation61.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation54.applyInverseTo(rotation61);
        double double65 = rotation54.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-1.0d) + "'", double62 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) (short) 0, (double) 0.0f, (double) (byte) 1, true);
        org.apache.commons.math.geometry.Rotation rotation8 = rotation0.applyInverseTo(rotation7);
        org.apache.commons.math.geometry.Rotation rotation9 = rotation7.revert();
        double double10 = rotation9.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.019227214231343204d + "'", double10 == 0.019227214231343204d);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1), (double) 100, 0.29814239699997197d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation21);
        double double29 = rotation20.getAngle();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        double[][] doubleArray34 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray34, (double) (short) 1);
        double double37 = rotation36.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        double double46 = rotation43.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation42.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation36.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation20.applyTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation16.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D52);
        double[][] doubleArray55 = rotation54.getMatrix();
        double double56 = rotation54.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        double double10 = rotation8.getQ2();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyInverseTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation21.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        double double37 = rotation34.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation34.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation33.applyTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D39);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(vector3D45, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.getAxis();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D52, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        double double68 = rotation66.getQ2();
        double double69 = rotation66.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation66.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation65.applyTo(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D45, vector3D52, vector3D59, vector3D70);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation73.revert();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        double double79 = rotation77.getQ2();
        double double80 = rotation77.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation77.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation76.applyInverseTo(vector3D81);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D39, vector3D59, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation4.applyInverseTo(vector3D17);
        java.lang.Class<?> wildcardClass85 = vector3D84.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation4.applyInverseTo(rotation27);
        double double29 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double36 = rotation35.getQ1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ2();
        double double39 = rotation37.getQ0();
        double[][] doubleArray40 = rotation37.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation37.applyInverseTo(rotation41);
        double double44 = rotation41.getQ2();
        double double45 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ2();
        double double48 = rotation46.getQ0();
        double[][] doubleArray49 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation41.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation35.applyTo(rotation41);
        double double52 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation27.applyTo(rotation41);
        double double54 = rotation41.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.9142857142857143d + "'", double36 == 0.9142857142857143d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        double double18 = rotation15.getAngle();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation15.revert();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D24, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation19.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyInverseTo(rotation35);
        double double38 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ2();
        double double41 = rotation39.getQ0();
        double[][] doubleArray42 = rotation39.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation39.applyInverseTo(rotation43);
        double double46 = rotation45.getQ0();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation35.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ2();
        double double55 = rotation53.getQ0();
        double[][] doubleArray56 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation53.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation52.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ3();
        double double63 = rotation61.getQ2();
        double double64 = rotation61.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation53.applyTo(vector3D65);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        double double69 = rotation67.getQ2();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation67.revert();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        double double73 = rotation71.getQ2();
        double double74 = rotation71.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation71.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation70.applyInverseTo(vector3D75);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D65, vector3D75);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D9, vector3D24, vector3D48, vector3D75);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation();
        double double86 = rotation85.getQ3();
        double double87 = rotation85.getQ2();
        double double88 = rotation85.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation85.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation84.applyTo(vector3D89);
        org.apache.commons.math.geometry.Rotation rotation91 = rotation78.applyTo(rotation84);
        double double92 = rotation91.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation91.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1.0d) + "'", double46 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(rotation91);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation0.getAxis();
        double double6 = rotation0.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation4.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation21.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D26);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation30.applyInverseTo(rotation37);
        double double40 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation28.applyInverseTo(rotation37);
        double double42 = rotation28.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double11 = rotation10.getQ2();
        double double12 = rotation10.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation10.getAxis();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D13);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation14.revert();
        double[][] doubleArray16 = rotation14.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.995037190209989d + "'", double11 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(doubleArray16);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        double[][] doubleArray9 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(doubleArray9, (double) (short) 1);
        double double12 = rotation11.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation11.getAxis();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D13);
        java.lang.Class<?> wildcardClass15 = vector3D4.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, 10.0d, (double) (byte) 0, 100.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        double double24 = rotation23.getQ0();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation13.applyInverseTo(rotation23);
        double[][] doubleArray26 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        double[][] doubleArray31 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(doubleArray31, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(doubleArray31, (double) 100);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(doubleArray31, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation13.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation5.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ2();
        double double42 = rotation40.getQ0();
        double[][] doubleArray43 = rotation40.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation40.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation40.applyInverseTo(rotation47);
        double double50 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ2();
        double double53 = rotation51.getQ0();
        double[][] doubleArray54 = rotation51.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation51.applyInverseTo(rotation55);
        double double58 = rotation57.getQ0();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation47.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        double double62 = rotation60.getQ2();
        double double63 = rotation60.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation60.getAxis();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        double double69 = rotation67.getQ2();
        double double70 = rotation67.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation67.getAxis();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D71, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        double double76 = rotation74.getQ2();
        double double77 = rotation74.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation74.getAxis();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation();
        double double86 = rotation85.getQ3();
        double double87 = rotation85.getQ2();
        double double88 = rotation85.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation85.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation84.applyTo(vector3D89);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D64, vector3D71, vector3D78, vector3D89);
        org.apache.commons.math.geometry.Rotation rotation92 = rotation57.applyInverseTo(rotation91);
        double[][] doubleArray93 = rotation92.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation94 = rotation37.applyInverseTo(rotation92);
        double double95 = rotation37.getQ3();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1.0d) + "'", double58 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(rotation92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(rotation94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation10.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation19.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation11.applyTo(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation0.applyInverseTo(vector3D23);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(vector3D25, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation27.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D28);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100L, (double) 100, (double) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation3.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray20 = rotation3.getAngles(rotationOrder19);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotation18);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.5d, (double) 0L, (double) ' ', (double) (-1L), false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100.0f, 0.2857142857142857d, (double) (short) 100, (double) (short) 10, true);
        double double6 = rotation5.getQ0();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.7053441835437086d + "'", double6 == 0.7053441835437086d);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation6.getQ0();
        double double8 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D18, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D18, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation6.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation34.applyInverseTo(rotation35);
        double double43 = rotation34.getAngle();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        double double46 = rotation44.getQ2();
        double double47 = rotation44.getAngle();
        double[][] doubleArray48 = rotation44.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(doubleArray48, (double) (short) 1);
        double double51 = rotation50.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation50.getAxis();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation53.revert();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        double double60 = rotation57.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation56.applyInverseTo(vector3D61);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D61, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation50.applyInverseTo(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation34.applyTo(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation30.applyInverseTo(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation6.applyInverseTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(vector3D67, vector3D69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(vector3D16, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D23, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation36.applyTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D23, vector3D30, vector3D41);
        double double44 = rotation43.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ1();
        double double48 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation43.applyTo(rotation45);
        double double50 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation11.applyTo(rotation43);
        double double52 = rotation11.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9142857142857143d, 0.703614788711539d, 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getQ3();
        double double4 = rotation0.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (-0.5d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray21 = rotation19.getAngles(rotationOrder20);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '#', (-0.0d), 0.009949879346007126d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.15156571116200665d, Double.NaN, 0.9999250084364456d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyTo(rotation12);
        double double14 = rotation5.getQ1();
        double double15 = rotation5.getQ0();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.7071067811865475d + "'", double15 == 0.7071067811865475d);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        double[][] doubleArray9 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(doubleArray9, (double) (short) 1);
        double double12 = rotation11.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation11.getAxis();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D13);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation14.revert();
        org.apache.commons.math.geometry.Vector3D vector3D16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D17 = rotation15.applyInverseTo(vector3D16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation15);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.7071067811865475d), (double) 0L, 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.995037190209989d, (-1.0d), (double) 10L, (double) 10L, true);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ0();
        double[][] doubleArray10 = rotation7.getMatrix();
        double double11 = rotation7.getQ0();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        double double30 = rotation21.getAngle();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        double double34 = rotation31.getAngle();
        double[][] doubleArray35 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(doubleArray35, (double) (short) 1);
        double double38 = rotation37.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation37.getAxis();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation40.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        double double46 = rotation44.getQ2();
        double double47 = rotation44.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation44.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation43.applyInverseTo(vector3D48);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D48, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation37.applyInverseTo(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation21.applyTo(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation17.applyInverseTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation7.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        double double58 = rotation56.getQ2();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation56.revert();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ2();
        double double62 = rotation60.getQ0();
        double[][] doubleArray63 = rotation60.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ3();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation60.applyInverseTo(rotation64);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation59.applyInverseTo(rotation60);
        double double68 = rotation59.getAngle();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        double[][] doubleArray73 = rotation69.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(doubleArray73, (double) (short) 1);
        double double76 = rotation75.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation75.getAxis();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ3();
        double double80 = rotation78.getQ2();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation78.revert();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation();
        double double83 = rotation82.getQ3();
        double double84 = rotation82.getQ2();
        double double85 = rotation82.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation82.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation81.applyInverseTo(vector3D86);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D86, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation75.applyInverseTo(vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation59.applyTo(vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation17.applyInverseTo(vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation5.applyInverseTo(vector3D92);
        java.lang.Class<?> wildcardClass94 = vector3D92.getClass();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.703614788711539d + "'", double6 == 0.703614788711539d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        double double9 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ2();
        double double13 = rotation10.getAngle();
        double[][] doubleArray14 = rotation10.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(doubleArray14, (double) (short) 1);
        double double17 = rotation16.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation16.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        double double25 = rotation23.getQ2();
        double double26 = rotation23.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation23.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation22.applyInverseTo(vector3D27);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D27, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation16.applyInverseTo(vector3D27);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ2();
        double double45 = rotation43.getQ0();
        double[][] doubleArray46 = rotation43.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation43.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation42.applyInverseTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        double double54 = rotation51.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation43.applyTo(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation32.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D57, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation16.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D57, (double) 1);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        double double65 = rotation63.getQ2();
        double double66 = rotation63.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation63.getAxis();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D67, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ3();
        double double78 = rotation76.getQ2();
        double double79 = rotation76.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation76.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation75.applyTo(vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation75.getAxis();
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation();
        double double84 = rotation83.getQ3();
        double double85 = rotation83.getQ2();
        double double86 = rotation83.getAngle();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation83.revert();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation();
        double double89 = rotation88.getQ3();
        double double90 = rotation88.getQ2();
        double double91 = rotation88.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation88.getAxis();
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D92, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation87.applyInverseTo(vector3D92);
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(vector3D57, vector3D67, vector3D82, vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D97 = rotation4.applyTo(vector3D92);
        org.apache.commons.math.geometry.Rotation rotation99 = new org.apache.commons.math.geometry.Rotation(vector3D97, (double) 0.0f);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D97);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 10, (double) 0L, 0.9949756218412634d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) -1, 0.6086083682652702d, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7064762846593019d, 0.7064762846593019d, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ0();
        double[][] doubleArray10 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation7.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation7.applyInverseTo(rotation14);
        double double17 = rotation14.getQ1();
        double[][] doubleArray18 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray18, 0.0d);
        double double21 = rotation20.getAngle();
        double double22 = rotation20.getAngle();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation23.revert();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D34, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation29.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation45.revert();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ2();
        double double51 = rotation49.getQ0();
        double[][] doubleArray52 = rotation49.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation49.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation48.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        double double60 = rotation57.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation49.applyTo(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation38.applyInverseTo(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation29.applyInverseTo(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation24.applyTo(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation6.applyTo(vector3D63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray68 = rotation6.getAngles(rotationOrder67);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation15.getQ2();
        double double19 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation7.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(vector3D25, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        double double31 = rotation28.getAngle();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation27.applyTo(rotation28);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation28.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation7.applyTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        double double37 = rotation35.getQ2();
        double double38 = rotation35.getAngle();
        double[][] doubleArray39 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ2();
        double double42 = rotation40.getQ1();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation35.applyInverseTo(rotation40);
        double double45 = rotation35.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation35.revert();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation7.applyInverseTo(rotation47);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) 0.0f, (double) (byte) 10, (double) (byte) 1, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getAngle();
        double double8 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.29814239699997197d + "'", double6 == 0.29814239699997197d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.6086083682652702d + "'", double7 == 0.6086083682652702d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(doubleArray4, 2.9422652488599566d);
        double double11 = rotation10.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation3 = new org.apache.commons.math.geometry.Rotation();
        double double4 = rotation3.getQ3();
        double double5 = rotation3.getQ2();
        double double6 = rotation3.getAngle();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation3.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation13.applyTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D37);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation44.applyTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation51.revert();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation54.applyInverseTo(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ2();
        double double63 = rotation61.getQ0();
        double[][] doubleArray64 = rotation61.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation61.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation();
        double double69 = rotation68.getQ3();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation61.applyInverseTo(rotation68);
        double double71 = rotation68.getQ3();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation();
        double double73 = rotation72.getQ2();
        double double74 = rotation72.getQ0();
        double[][] doubleArray75 = rotation72.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ3();
        org.apache.commons.math.geometry.Rotation rotation78 = rotation72.applyInverseTo(rotation76);
        double double79 = rotation78.getQ0();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation68.applyInverseTo(rotation78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation68.getAxis();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D37, vector3D49, vector3D59, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation3.applyTo(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation0.applyTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D49, (double) 1);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-1.0d) + "'", double79 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        double[][] doubleArray38 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(doubleArray38, 10.0d);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 'a', (double) 1, (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation46.revert();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.getAxis();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double59 = rotation58.getQ2();
        double double60 = rotation58.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation58.getAxis();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D52, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation47.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation40.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation40.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray67 = rotation40.getAngles(rotationOrder66);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.995037190209989d + "'", double59 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1.5707963267948963d, (double) 100L, 0.7053441835437086d, 0.7064762846593019d, true);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        double double14 = rotation3.getQ1();
        double double15 = rotation3.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.9422652488599566d, 1.0d, 0.0994987934600711d, 0.5d, false);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        double[] doubleArray1 = new double[] { 1.0d };
        double[] doubleArray3 = new double[] { 1.0d };
        double[][] doubleArray4 = new double[][] { doubleArray1, doubleArray3 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (-0.7071067811865475d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: a 2x1 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.028545850260162355d, Double.NaN, (-0.5d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 0);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ2();
        double double16 = rotation14.getQ0();
        double[][] doubleArray17 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation14.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyInverseTo(rotation21);
        double double24 = rotation21.getQ1();
        double[][] doubleArray25 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation13.applyTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double33 = rotation32.getQ0();
        double double34 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ2();
        double double48 = rotation46.getQ0();
        double[][] doubleArray49 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation45.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation46.applyTo(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation35.applyInverseTo(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation32.applyInverseTo(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation21.applyInverseTo(vector3D61);
        java.lang.Class<?> wildcardClass63 = vector3D61.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.5d) + "'", double33 == (-0.5d));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.5d + "'", double34 == 0.5d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        double[][] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(doubleArray0, 0.9142857142857143d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        double[][] doubleArray13 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray13, (double) (short) 1);
        double double16 = rotation15.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation15.getAxis();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation21.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D26, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation15.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation41.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        double double52 = rotation50.getQ2();
        double double53 = rotation50.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation50.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation42.applyTo(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation31.applyInverseTo(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D56, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation15.applyInverseTo(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation5.applyInverseTo(vector3D56);
        java.lang.Class<?> wildcardClass61 = rotation5.getClass();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.995037190209989d + "'", double6 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getQ3();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation4.revert();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        double double10 = rotation8.getQ2();
        double double11 = rotation8.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation8.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation7.applyInverseTo(vector3D12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation19.applyTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D25);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        double double34 = rotation31.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation35.applyInverseTo(rotation42);
        double double45 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ2();
        double double48 = rotation46.getQ0();
        double[][] doubleArray49 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyInverseTo(rotation50);
        double double53 = rotation52.getQ0();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation42.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation31.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation26.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation0.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = null;
        double[] doubleArray59 = rotation26.getAngles(rotationOrder58);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1.0d) + "'", double53 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[3.0419240010986313, 2.941267761394779, 3.0419240010986313]");
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.Rotation rotation1 = new org.apache.commons.math.geometry.Rotation();
        double double2 = rotation1.getQ2();
        double double3 = rotation1.getQ0();
        double[][] doubleArray4 = rotation1.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation1.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation1.applyInverseTo(rotation8);
        double double11 = rotation8.getQ1();
        double[][] doubleArray12 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(doubleArray12, 0.0d);
        double double15 = rotation14.getAngle();
        double double16 = rotation14.getAngle();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation14.revert();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        double double30 = rotation21.getAngle();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation32.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation32.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        double double46 = rotation43.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double54 = rotation53.getQ2();
        double double55 = rotation53.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation53.getAxis();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D47, vector3D56);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D42, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation17.applyInverseTo(vector3D42);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D0, vector3D59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.995037190209989d + "'", double54 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D59);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.0943951023931953d, (double) (byte) 100, 0.7071067811865475d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        double[][] doubleArray38 = rotation7.getMatrix();
        double double39 = rotation7.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation7.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D24, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D31, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        double double37 = rotation34.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation34.getAxis();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation44.applyTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D31, vector3D38, vector3D49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation17.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation54 = rotation17.applyTo(rotation53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation52);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation6.getQ0();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        double double10 = rotation8.getQ2();
        double double11 = rotation8.getAngle();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation31.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation32.applyTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation21.applyInverseTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation12.applyInverseTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation6.applyTo(rotation12);
        double[][] doubleArray49 = rotation48.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(doubleArray49);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 10L, 0.09949879346007118d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation4.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation21.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ0();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation29.applyInverseTo(rotation36);
        double double39 = rotation36.getQ1();
        double[][] doubleArray40 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(doubleArray40, 0.0d);
        double double43 = rotation42.getAngle();
        double double44 = rotation42.getAngle();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation46.revert();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ2();
        double double52 = rotation50.getQ0();
        double[][] doubleArray53 = rotation50.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation50.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation49.applyInverseTo(rotation50);
        double double58 = rotation49.getAngle();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation45.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ2();
        double double62 = rotation60.getQ0();
        double[][] doubleArray63 = rotation60.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ3();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation60.applyInverseTo(rotation64);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation60.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation60.getAxis();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        double double73 = rotation71.getQ2();
        double double74 = rotation71.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation71.getAxis();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double82 = rotation81.getQ2();
        double double83 = rotation81.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation81.getAxis();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D75, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D70, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation45.applyInverseTo(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D70);
        double double89 = rotation88.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.995037190209989d + "'", double82 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) 0.0f, (double) (byte) 10, (double) (byte) 1, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[3.110352820159525, 0.605491903246008, 3.110352820159525]");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.5d, 0.7071067811865475d, (double) 1.0f, (double) 10, false);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation42.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation41.applyInverseTo(vector3D46);
        double double48 = rotation41.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation41.getAxis();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation7.applyInverseTo(rotation41);
        double double51 = rotation7.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) 0, (double) (short) 1, 0.7071067811865475d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        double double10 = rotation8.getQ2();
        double double11 = rotation8.getAngle();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation31.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation32.applyTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation21.applyInverseTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation12.applyInverseTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        double double54 = rotation53.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation12.applyTo(rotation53);
        double double56 = rotation55.getQ2();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation5.applyTo(rotation55);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[3.1345217036255226, 0.019998833442044513, 3.1345217036255226]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.7071067811865475d) + "'", double56 == (-0.7071067811865475d));
        org.junit.Assert.assertNotNull(rotation57);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation14.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D23, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation18.applyInverseTo(vector3D23);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation37.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation27.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D52, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation13.applyInverseTo(vector3D26);
        java.lang.Class<?> wildcardClass57 = vector3D56.getClass();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D22);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation34.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        double double46 = rotation43.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation35.applyTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation24.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D49, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D49);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D22, 0.6086083682652702d);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D22, (double) 0L);
        org.apache.commons.math.geometry.Vector3D vector3D57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation4.revert();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation7.applyInverseTo(rotation8);
        double double16 = rotation7.getAngle();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        double double20 = rotation17.getAngle();
        double[][] doubleArray21 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(doubleArray21, (double) (short) 1);
        double double24 = rotation23.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation23.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation29.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D34, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation23.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation7.applyTo(vector3D34);
        double double40 = rotation7.getQ0();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation0.applyInverseTo(rotation7);
        double double42 = rotation41.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-1.0d) + "'", double40 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation3.getQ0();
        double double13 = rotation3.getAngle();
        double double14 = rotation3.getAngle();
        double double15 = rotation3.getQ0();
        double double16 = rotation3.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation48.applyTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation79.applyTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D66, vector3D73, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D42, vector3D54, vector3D84);
        double double88 = rotation87.getAngle();
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double95 = rotation94.getQ1();
        org.apache.commons.math.geometry.Rotation rotation96 = rotation87.applyTo(rotation94);
        double double97 = rotation87.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-0.5d) + "'", double95 == (-0.5d));
        org.junit.Assert.assertNotNull(rotation96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation5.revert();
        double double9 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.995037190209989d + "'", double6 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        double double19 = rotation16.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation16.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation15.applyTo(vector3D20);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ2();
        double double25 = rotation23.getQ0();
        double[][] doubleArray26 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation23.applyInverseTo(rotation27);
        double double30 = rotation27.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyInverseTo(rotation38);
        double double41 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        double double49 = rotation48.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation38.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation27.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation22.applyTo(rotation27);
        double double53 = rotation27.getQ3();
        double double54 = rotation27.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ2();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation10.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ2();
        double double16 = rotation14.getQ0();
        double[][] doubleArray17 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation14.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation13.applyInverseTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation14.applyTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation31.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation9.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation9.revert();
        java.lang.Class<?> wildcardClass41 = rotation9.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.562089250717698d, (double) (byte) 100, 0.26237485370392877d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100.0f, 0.09950371902099892d, 2.562089250717698d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.009999000149975004d), (double) 'a', 0.7071067811865475d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ0();
        double[][] doubleArray8 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation5.applyInverseTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyInverseTo(rotation12);
        double double15 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        double double23 = rotation20.getQ2();
        double double24 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation12.applyTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ2();
        double double28 = rotation26.getQ0();
        double[][] doubleArray29 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation26.applyInverseTo(rotation30);
        double double33 = rotation30.getQ2();
        double double34 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation30.applyTo(rotation35);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation25.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        double double45 = rotation42.getAngle();
        double[][] doubleArray46 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(doubleArray46, (double) (short) 1);
        double double49 = rotation48.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation48.getAxis();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation51.revert();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation54.applyInverseTo(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D59, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation48.applyInverseTo(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ2();
        double double66 = rotation64.getQ0();
        double[][] doubleArray67 = rotation64.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation();
        double double69 = rotation68.getQ3();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation64.applyInverseTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        double double73 = rotation71.getQ2();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation71.revert();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation();
        double double76 = rotation75.getQ2();
        double double77 = rotation75.getQ0();
        double[][] doubleArray78 = rotation75.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation();
        double double80 = rotation79.getQ3();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation75.applyInverseTo(rotation79);
        org.apache.commons.math.geometry.Rotation rotation82 = rotation74.applyInverseTo(rotation75);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation();
        double double84 = rotation83.getQ3();
        double double85 = rotation83.getQ2();
        double double86 = rotation83.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation83.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation75.applyTo(vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation64.applyInverseTo(vector3D87);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D89, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation48.applyInverseTo(vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation41.applyInverseTo(vector3D92);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D93);
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(vector3D93, (double) (byte) 1);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.2857142857142857d, 0.26237485370392877d, 0.9949879346007117d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.09949879346007118d, 0.2857142857142857d, (double) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation48.applyTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation79.applyTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D66, vector3D73, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D42, vector3D54, vector3D84);
        double double88 = rotation87.getAngle();
        double[][] doubleArray89 = rotation87.getMatrix();
        double double90 = rotation87.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation5.getAxis();
        java.lang.Class<?> wildcardClass9 = vector3D8.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[3.141592653589793, 1.5707963267948968, 3.141592653589793]");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double double3 = rotation0.getQ3();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        double[][] doubleArray5 = rotation0.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertNotNull(doubleArray5);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ2();
        double double12 = rotation10.getQ0();
        double[][] doubleArray13 = rotation10.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation10.applyInverseTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        double double32 = rotation29.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation29.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation21.applyTo(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation10.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation38 = rotation9.applyInverseTo(rotation37);
        double[][] doubleArray39 = rotation9.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        double double10 = rotation8.getQ2();
        double double11 = rotation8.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation8.getAxis();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D12, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        double double18 = rotation15.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation15.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(vector3D19, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        double double36 = rotation33.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation33.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation32.applyTo(vector3D37);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D19, vector3D26, vector3D37);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation40.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        double double46 = rotation44.getQ2();
        double double47 = rotation44.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation44.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation43.applyInverseTo(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation43.getAxis();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        double double60 = rotation57.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation56.applyTo(vector3D61);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        double double65 = rotation63.getQ2();
        double double66 = rotation63.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation63.getAxis();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D67, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        double double72 = rotation70.getQ2();
        double double73 = rotation70.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation70.getAxis();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D74, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        double double79 = rotation77.getQ2();
        double double80 = rotation77.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation77.getAxis();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation();
        double double89 = rotation88.getQ3();
        double double90 = rotation88.getQ2();
        double double91 = rotation88.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation88.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation87.applyTo(vector3D92);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D67, vector3D74, vector3D81, vector3D92);
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(vector3D19, vector3D50, vector3D62, vector3D92);
        org.apache.commons.math.geometry.Rotation rotation97 = new org.apache.commons.math.geometry.Rotation(vector3D92, (-0.5d));
        org.apache.commons.math.geometry.Rotation rotation98 = new org.apache.commons.math.geometry.Rotation(vector3D7, vector3D92);
        double double99 = rotation98.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 0.0d + "'", double99 == 0.0d);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) 0);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ2();
        double double16 = rotation14.getQ0();
        double[][] doubleArray17 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation14.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyInverseTo(rotation21);
        double double24 = rotation21.getQ1();
        double[][] doubleArray25 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation13.applyTo(rotation21);
        double double27 = rotation21.getQ2();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        double double35 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ2();
        double double38 = rotation36.getQ0();
        double[][] doubleArray39 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation36.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation36.applyInverseTo(rotation43);
        double double46 = rotation43.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ2();
        double double49 = rotation47.getQ0();
        double[][] doubleArray50 = rotation47.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation47.applyInverseTo(rotation51);
        double double54 = rotation53.getQ0();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation43.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation32.applyInverseTo(rotation55);
        double double57 = rotation55.getQ0();
        double double58 = rotation55.getQ2();
        double double59 = rotation55.getQ1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        double double62 = rotation60.getQ2();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation60.revert();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ3();
        double double66 = rotation64.getQ2();
        double double67 = rotation64.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation64.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation63.applyInverseTo(vector3D68);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ3();
        double double78 = rotation76.getQ2();
        double double79 = rotation76.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation76.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation75.applyTo(vector3D80);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D68, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation55.applyInverseTo(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation21.applyTo(vector3D83);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-1.0d) + "'", double54 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        double double14 = rotation3.getQ1();
        java.lang.Class<?> wildcardClass15 = rotation3.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.995037190209989d + "'", double6 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.562089250717698d, (double) 100L, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(doubleArray3, (double) 10);
        double double6 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray8 = rotation5.getAngles(rotationOrder7);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) (short) 1, 0.7064762846593019d, (-0.5d), false);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation11.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotation12);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ0();
        double[][] doubleArray10 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation7.applyInverseTo(rotation11);
        double double14 = rotation11.getQ2();
        double double15 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation11);
        double[][] doubleArray22 = rotation5.getMatrix();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9142857142857143d + "'", double6 == 0.9142857142857143d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(doubleArray22);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        double[][] doubleArray7 = rotation6.getMatrix();
        double double8 = rotation6.getQ3();
        double double9 = rotation6.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.5309649148733836d + "'", double9 == 0.5309649148733836d);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7208382876544367d, 0.0d, (double) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D35);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        double double46 = rotation43.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation42.applyTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation52.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ2();
        double double61 = rotation59.getQ0();
        double[][] doubleArray62 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation59.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation59.applyInverseTo(rotation66);
        double double69 = rotation66.getQ3();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ2();
        double double72 = rotation70.getQ0();
        double[][] doubleArray73 = rotation70.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation70.applyInverseTo(rotation74);
        double double77 = rotation76.getQ0();
        org.apache.commons.math.geometry.Rotation rotation78 = rotation66.applyInverseTo(rotation76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation66.getAxis();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D35, vector3D47, vector3D57, vector3D79);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D5, vector3D35);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation();
        double double85 = rotation84.getQ3();
        double double86 = rotation84.getQ2();
        double double87 = rotation84.getAngle();
        double[][] doubleArray88 = rotation84.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(doubleArray88, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(doubleArray88, (double) 100);
        org.apache.commons.math.geometry.Rotation rotation93 = rotation83.applyInverseTo(rotation92);
        double double94 = rotation83.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-1.0d) + "'", double77 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(rotation93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 100, 1.0d, 0.995037190209989d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double6 = rotation5.getQ0();
        double double7 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation15.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation18.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation19.applyTo(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation8.applyInverseTo(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation5.applyInverseTo(vector3D31);
        double double35 = rotation5.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.5d) + "'", double6 == (-0.5d));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.5d + "'", double35 == 0.5d);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation6.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation32.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation33.applyTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation22.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation6.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation6.getAxis();
        double double52 = rotation6.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        double[][] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(doubleArray0, 0.26237485370392877d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation9.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation8.applyInverseTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        double double20 = rotation17.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation17.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation9.applyTo(vector3D21);
        double double23 = rotation9.getQ1();
        double double24 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation0.applyInverseTo(rotation9);
        java.lang.Class<?> wildcardClass26 = rotation9.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7138722624641411d, (double) (short) 100, 0.15156571116200665d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation9.getAxis();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(vector3D13, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        double double19 = rotation16.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation16.getAxis();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D20, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        double double25 = rotation23.getQ2();
        double double26 = rotation23.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation23.getAxis();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        double double37 = rotation34.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation34.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation33.applyTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(vector3D13, vector3D20, vector3D27, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation8.applyTo(vector3D20);
        java.lang.Class<?> wildcardClass42 = vector3D20.getClass();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = null;
        double[] doubleArray9 = rotation6.getAngles(rotationOrder8);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.7071067811865475d) + "'", double7 == (-0.7071067811865475d));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.5707963267948966, 1.5707963267948968, -1.5707963267948966]");
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.15156571116200665d, (double) 1.0f, (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        double[][] doubleArray18 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ1();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        double double31 = rotation28.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation28.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation27.applyInverseTo(vector3D32);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation39.applyTo(vector3D44);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D32, vector3D45);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ2();
        double double49 = rotation47.getQ0();
        double[][] doubleArray50 = rotation47.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation47.applyInverseTo(rotation51);
        double double54 = rotation51.getQ2();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ2();
        double double57 = rotation55.getQ0();
        double[][] doubleArray58 = rotation55.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ3();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation55.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation55.applyInverseTo(rotation62);
        double double65 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ2();
        double double68 = rotation66.getQ0();
        double[][] doubleArray69 = rotation66.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation66.applyInverseTo(rotation70);
        double double73 = rotation72.getQ0();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation62.applyInverseTo(rotation72);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation51.applyInverseTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation46.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation19.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ3();
        double double80 = rotation78.getQ2();
        double double81 = rotation78.getAngle();
        double[][] doubleArray82 = rotation78.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(doubleArray82, (double) (short) 1);
        double double85 = rotation84.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation84.getAxis();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation19.applyTo(rotation84);
        org.apache.commons.math.geometry.Rotation rotation88 = rotation13.applyTo(rotation87);
        java.lang.Class<?> wildcardClass89 = rotation88.getClass();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-1.0d) + "'", double73 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.995037190209989d, 10.0d, 0.09949879346007118d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation13.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation4.applyInverseTo(vector3D38);
        double[][] doubleArray40 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(doubleArray40, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(doubleArray40, 0.5309649148733836d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(doubleArray40);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation10.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation19.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation11.applyTo(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation0.applyInverseTo(vector3D23);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        double double34 = rotation31.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation31.getAxis();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D35, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation30.applyInverseTo(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D35, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D35);
        double double44 = rotation43.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        double double18 = rotation15.getAngle();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation15.revert();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D24, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation19.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyInverseTo(rotation35);
        double double38 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ2();
        double double41 = rotation39.getQ0();
        double[][] doubleArray42 = rotation39.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation39.applyInverseTo(rotation43);
        double double46 = rotation45.getQ0();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation35.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ2();
        double double55 = rotation53.getQ0();
        double[][] doubleArray56 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation53.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation52.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ3();
        double double63 = rotation61.getQ2();
        double double64 = rotation61.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation53.applyTo(vector3D65);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        double double69 = rotation67.getQ2();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation67.revert();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        double double73 = rotation71.getQ2();
        double double74 = rotation71.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation71.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation70.applyInverseTo(vector3D75);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D65, vector3D75);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D9, vector3D24, vector3D48, vector3D75);
        org.apache.commons.math.geometry.Rotation rotation79 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation80 = rotation78.applyTo(rotation79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1.0d) + "'", double46 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double6 = rotation5.getQ0();
        double double7 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.5d) + "'", double6 == (-0.5d));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.5d) + "'", double7 == (-0.5d));
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation7.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D24, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D31, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        double double37 = rotation34.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation34.getAxis();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation44.applyTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D31, vector3D38, vector3D49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation17.applyInverseTo(rotation51);
        double[][] doubleArray53 = rotation51.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(doubleArray53, (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(doubleArray53);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.6086083682652702d, (double) 'a', (double) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        double[][] doubleArray18 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ1();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        double double31 = rotation28.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation28.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation27.applyInverseTo(vector3D32);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation39.applyTo(vector3D44);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D32, vector3D45);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ2();
        double double49 = rotation47.getQ0();
        double[][] doubleArray50 = rotation47.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation47.applyInverseTo(rotation51);
        double double54 = rotation51.getQ2();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ2();
        double double57 = rotation55.getQ0();
        double[][] doubleArray58 = rotation55.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ3();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation55.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation55.applyInverseTo(rotation62);
        double double65 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ2();
        double double68 = rotation66.getQ0();
        double[][] doubleArray69 = rotation66.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation66.applyInverseTo(rotation70);
        double double73 = rotation72.getQ0();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation62.applyInverseTo(rotation72);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation51.applyInverseTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation46.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation19.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ3();
        double double80 = rotation78.getQ2();
        double double81 = rotation78.getAngle();
        double[][] doubleArray82 = rotation78.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(doubleArray82, (double) (short) 1);
        double double85 = rotation84.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation84.getAxis();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation19.applyTo(rotation84);
        org.apache.commons.math.geometry.Rotation rotation88 = rotation13.applyTo(rotation87);
        java.lang.Class<?> wildcardClass89 = rotation87.getClass();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-1.0d) + "'", double73 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.6086083682652702d, 0.7064762846593019d, 0.7053441835437086d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        double[][] doubleArray31 = rotation30.getMatrix();
        double[][] doubleArray32 = rotation30.getMatrix();
        java.lang.Class<?> wildcardClass33 = doubleArray32.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getAngle();
        double double11 = rotation7.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation13.applyTo(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation6.applyInverseTo(vector3D26);
        double double28 = rotation6.getQ1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0, 0.7071067811865475d, (-1.0d), true);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation35.applyInverseTo(rotation42);
        double double45 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ2();
        double double48 = rotation46.getQ0();
        double[][] doubleArray49 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation();
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyInverseTo(rotation50);
        double double53 = rotation50.getQ2();
        double double54 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation42.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ2();
        double double58 = rotation56.getQ0();
        double[][] doubleArray59 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation56.applyInverseTo(rotation60);
        double double63 = rotation60.getQ2();
        double double64 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ2();
        double double67 = rotation65.getQ0();
        double[][] doubleArray68 = rotation65.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation60.applyTo(rotation65);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation65.getAxis();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation55.applyTo(rotation65);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation55.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation34.applyInverseTo(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation6.applyTo(vector3D72);
        double double75 = rotation6.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation7.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D24, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D31, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        double double37 = rotation34.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation34.getAxis();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation44.applyTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D31, vector3D38, vector3D49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation17.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double59 = rotation58.getQ2();
        double double60 = rotation58.getQ1();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation58.revert();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation62.revert();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ3();
        double double69 = rotation67.getQ2();
        double double70 = rotation67.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation67.getAxis();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D71, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation66.applyInverseTo(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation61.applyInverseTo(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation52.applyInverseTo(vector3D71);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D71, (double) 0.0f);
        double[][] doubleArray79 = rotation78.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.995037190209989d + "'", double59 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation6.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation32.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation33.applyTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation22.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation6.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ2();
        double double53 = rotation51.getQ0();
        double[][] doubleArray54 = rotation51.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation51.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ3();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation51.applyInverseTo(rotation58);
        double double61 = rotation58.getQ1();
        double[][] doubleArray62 = rotation58.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(doubleArray62, 0.0d);
        double double65 = rotation64.getAngle();
        double double66 = rotation64.getAngle();
        double double67 = rotation64.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation64.getAxis();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D50, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation69.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 'a', (double) 1, (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        double double7 = rotation6.getQ3();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(vector3D8, (double) 1.0f);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        double double14 = rotation11.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation11.getAxis();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        double double25 = rotation23.getQ2();
        double double26 = rotation23.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation23.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation22.applyTo(vector3D27);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation32.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation33.applyTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(vector3D27, vector3D46);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation53.applyTo(vector3D58);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        double double62 = rotation60.getQ2();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation60.revert();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation();
        double double65 = rotation64.getQ3();
        double double66 = rotation64.getQ2();
        double double67 = rotation64.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation64.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation63.applyInverseTo(vector3D68);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ2();
        double double72 = rotation70.getQ0();
        double[][] doubleArray73 = rotation70.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation70.applyInverseTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation70.applyInverseTo(rotation77);
        double double80 = rotation77.getQ3();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation();
        double double82 = rotation81.getQ2();
        double double83 = rotation81.getQ0();
        double[][] doubleArray84 = rotation81.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation();
        double double86 = rotation85.getQ3();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation81.applyInverseTo(rotation85);
        double double88 = rotation87.getQ0();
        org.apache.commons.math.geometry.Rotation rotation89 = rotation77.applyInverseTo(rotation87);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation77.getAxis();
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D46, vector3D58, vector3D68, vector3D90);
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D46, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D46);
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(vector3D16, 2.9422652488599566d);
        org.apache.commons.math.geometry.Vector3D vector3D97 = rotation10.applyInverseTo(vector3D16);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.995037190209989d + "'", double6 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-1.0d) + "'", double88 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D97);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) (-1.0f), (double) 0L, 0.9142857142857143d, true);
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.028545850260162355d + "'", double6 == 0.028545850260162355d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.031222023722052576d) + "'", double7 == (-0.031222023722052576d));
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ2();
        double double15 = rotation13.getQ0();
        double[][] doubleArray16 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getQ0();
        double[][] doubleArray27 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation23.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation13.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation4.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation4.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.getAxis();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D52, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation73.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D77);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D52, vector3D59, vector3D66, vector3D77);
        double double80 = rotation79.getQ3();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation47.applyInverseTo(rotation79);
        double[][] doubleArray82 = rotation79.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(doubleArray82, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray7, (double) (byte) 100);
        double double10 = rotation9.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        double double4 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ2();
        double double17 = rotation15.getQ0();
        double[][] doubleArray18 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation14.applyInverseTo(rotation15);
        double double23 = rotation14.getAngle();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        double[][] doubleArray28 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(doubleArray28, (double) (short) 1);
        double double31 = rotation30.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation36.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D41, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation30.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation14.applyTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation10.applyInverseTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation0.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ2();
        double double55 = rotation53.getQ0();
        double[][] doubleArray56 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation53.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation52.applyInverseTo(rotation53);
        double double61 = rotation52.getAngle();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        double[][] doubleArray66 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(doubleArray66, (double) (short) 1);
        double double69 = rotation68.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation68.getAxis();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        double double73 = rotation71.getQ2();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation71.revert();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation();
        double double76 = rotation75.getQ3();
        double double77 = rotation75.getQ2();
        double double78 = rotation75.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation75.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation74.applyInverseTo(vector3D79);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D79, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation68.applyInverseTo(vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation52.applyTo(vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation10.applyInverseTo(vector3D79);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D85, (-0.009999000149975004d));
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D85, 0.7138722624641411d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        double double14 = rotation3.getQ1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation15.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation18.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation19.applyTo(vector3D31);
        double double33 = rotation19.getQ1();
        double double34 = rotation19.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation3.applyTo(rotation19);
        double double36 = rotation19.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        double[][] doubleArray38 = rotation7.getMatrix();
        double[][] doubleArray39 = rotation7.getMatrix();
        double double40 = rotation7.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation4.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) ' ');
        java.lang.Class<?> wildcardClass20 = vector3D16.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.995037190209989d, (-1.0d), (double) 10L, (double) 10L, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        double double7 = rotation5.getQ3();
        java.lang.Class<?> wildcardClass8 = rotation5.getClass();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.703614788711539d + "'", double7 == 0.703614788711539d);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0, 0.7071067811865475d, (-1.0d), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        double double24 = rotation21.getQ2();
        double double25 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation13.applyTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        double double34 = rotation31.getQ2();
        double double35 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ2();
        double double38 = rotation36.getQ0();
        double[][] doubleArray39 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyTo(rotation36);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation26.applyTo(rotation36);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation5.applyInverseTo(vector3D43);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation45.revert();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ2();
        double double51 = rotation49.getQ0();
        double[][] doubleArray52 = rotation49.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation49.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation48.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        double double60 = rotation57.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation49.applyTo(vector3D61);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D61, 2.562089250717698d);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D61);
        double[][] doubleArray66 = rotation65.getMatrix();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(doubleArray66);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        double double14 = rotation11.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(vector3D15, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        double double21 = rotation18.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation18.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D22, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D22, vector3D29, vector3D40);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D40, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D40, 1.0d);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation3.applyTo(rotation46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = null;
        double[] doubleArray49 = rotation46.getAngles(rotationOrder48);
        double double50 = rotation46.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.5707963267948966, 1.0, 1.5707963267948966]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.0d), 0.7064762846593019d, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        double double8 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation9.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation9.applyInverseTo(rotation16);
        double double19 = rotation16.getQ1();
        double[][] doubleArray20 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(doubleArray20, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(doubleArray20, (double) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(doubleArray20, 1.0d);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(doubleArray20, (double) (byte) 0);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation4.applyInverseTo(rotation28);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(rotation29);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation7.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ2();
        double double28 = rotation26.getQ0();
        double[][] doubleArray29 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation26.applyInverseTo(rotation30);
        double double33 = rotation30.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation25.applyTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation41.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D35, vector3D42);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D42, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation51.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation52.revert();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation53.revert();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation79.applyTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D66, vector3D73, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation54.applyTo(vector3D66);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D42, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation88.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation7.applyTo(vector3D89);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        double double19 = rotation16.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation16.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation15.applyTo(vector3D20);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ2();
        double double25 = rotation23.getQ0();
        double[][] doubleArray26 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation23.applyInverseTo(rotation27);
        double double30 = rotation27.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double[][] doubleArray34 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyInverseTo(rotation38);
        double double41 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        double double49 = rotation48.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation38.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation27.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation22.applyTo(rotation27);
        double double53 = rotation22.getAngle();
        double double54 = rotation22.getQ0();
        double double55 = rotation22.getQ2();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2.9422652488599566d + "'", double53 == 2.9422652488599566d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0994987934600711d + "'", double54 == 0.0994987934600711d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.9949879346007123d + "'", double55 == 0.9949879346007123d);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation7.applyInverseTo(rotation17);
        double double20 = rotation17.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1.0d) + "'", double20 == (-1.0d));
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation4.revert();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation7.applyInverseTo(rotation8);
        double double16 = rotation7.getAngle();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        double double20 = rotation17.getAngle();
        double[][] doubleArray21 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(doubleArray21, (double) (short) 1);
        double double24 = rotation23.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation23.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation29.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D34, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation23.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation7.applyTo(vector3D34);
        double double40 = rotation7.getQ0();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation0.applyInverseTo(rotation7);
        org.apache.commons.math.geometry.Rotation rotation42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation43 = rotation41.applyTo(rotation42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-1.0d) + "'", double40 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation41);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) 0, (double) (short) 1, 0.5d, (double) (-1L), false);
        double double6 = rotation5.getQ1();
        double[][] doubleArray7 = rotation5.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray7, (double) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation4.applyInverseTo(rotation27);
        double double29 = rotation27.getQ0();
        double double30 = rotation27.getQ2();
        double double31 = rotation27.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray33 = rotation27.getAngles(rotationOrder32);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = null;
        double[] doubleArray15 = rotation13.getAngles(rotationOrder14);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation7.applyInverseTo(rotation13);
        double double17 = rotation13.getQ0();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.5707963267948966, 2.942255348607469, 1.5707963267948966]");
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) 100, 0.09949879346007118d, 100.0d, 0.7071067811865475d, false);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) (short) 1);
        double double14 = rotation13.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ3();
        double double18 = rotation16.getQ2();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation16.revert();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation19.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(vector3D24, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation13.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ0();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation36.revert();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ2();
        double double42 = rotation40.getQ0();
        double[][] doubleArray43 = rotation40.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation40.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation39.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation40.applyTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation29.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D54, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation13.applyInverseTo(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D54, (double) 1);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        double double62 = rotation60.getQ2();
        double double63 = rotation60.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation60.getAxis();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation73.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation72.getAxis();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation80.revert();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation();
        double double86 = rotation85.getQ3();
        double double87 = rotation85.getQ2();
        double double88 = rotation85.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation85.getAxis();
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D89, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation84.applyInverseTo(vector3D89);
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D54, vector3D64, vector3D79, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation5.applyTo(vector3D64);
        org.apache.commons.math.geometry.Rotation rotation95 = rotation5.revert();
        java.lang.Class<?> wildcardClass96 = rotation95.getClass();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(rotation95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ1();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ0();
        double[][] doubleArray10 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation7.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation7.applyInverseTo(rotation14);
        double double17 = rotation14.getQ1();
        double[][] doubleArray18 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray18, 0.0d);
        double double21 = rotation20.getAngle();
        double double22 = rotation20.getAngle();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation23.revert();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D34, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation29.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation45.revert();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ2();
        double double51 = rotation49.getQ0();
        double[][] doubleArray52 = rotation49.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation49.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation48.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        double double60 = rotation57.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation49.applyTo(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation38.applyInverseTo(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation29.applyInverseTo(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation24.applyTo(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation6.applyTo(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, (double) 100.0f);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation3.applyInverseTo(rotation17);
        double double19 = rotation18.getQ2();
        double double20 = rotation18.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.7071067811865475d) + "'", double20 == (-0.7071067811865475d));
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        double double8 = rotation4.getQ3();
        double double9 = rotation4.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) 1L, 0.0d, (double) 100.0f, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ0();
        double[][] doubleArray10 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation7.applyInverseTo(rotation11);
        double double14 = rotation11.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ2();
        double double17 = rotation15.getQ0();
        double[][] doubleArray18 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation15.applyInverseTo(rotation22);
        double double25 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ2();
        double double28 = rotation26.getQ0();
        double[][] doubleArray29 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation26.applyInverseTo(rotation30);
        double double33 = rotation32.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation22.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyInverseTo(rotation34);
        double double36 = rotation34.getQ0();
        double double37 = rotation34.getAngle();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation5.applyTo(rotation38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray41 = rotation5.getAngles(rotationOrder40);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1.0d) + "'", double33 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, 0.009949879346007126d, (double) 10, 1.0d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ2();
        double double20 = rotation18.getQ0();
        double[][] doubleArray21 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation18.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ0();
        double[][] doubleArray32 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation28.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation29.applyTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation18.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation5.applyTo(vector3D41);
        double double46 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ2();
        double double49 = rotation47.getQ0();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation55.revert();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation55.revert();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation47.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation5.applyTo(rotation47);
        double double60 = rotation5.getQ3();
        java.lang.Class<?> wildcardClass61 = rotation5.getClass();
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.5707963267948963d + "'", double46 == 1.5707963267948963d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9949879346007123d, (double) (short) 0, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 'a', (double) 1, (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation6.getAxis();
        double double8 = rotation6.getQ1();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 97.0d + "'", double8 == 97.0d);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) 0, (double) (short) 1, 0.5d, (double) (-1L), false);
        double double6 = rotation5.getQ1();
        double[][] doubleArray7 = rotation5.getMatrix();
        double double8 = rotation5.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ2();
        double double20 = rotation18.getQ1();
        double double21 = rotation18.getAngle();
        double[][] doubleArray22 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(doubleArray22, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation13.applyInverseTo(rotation24);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(rotation25);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation3.getAxis();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation21);
        double double29 = rotation20.getAngle();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        double[][] doubleArray34 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray34, (double) (short) 1);
        double double37 = rotation36.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        double double41 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        double double46 = rotation43.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation42.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation36.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation20.applyTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation16.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D52);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ2();
        double double57 = rotation55.getQ0();
        double[][] doubleArray58 = rotation55.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ3();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation55.applyInverseTo(rotation59);
        double double62 = rotation61.getQ0();
        double double63 = rotation61.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation54.applyInverseTo(rotation61);
        double double65 = rotation64.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-1.0d) + "'", double62 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D30);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        double double39 = rotation36.getQ2();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ2();
        double double42 = rotation40.getQ0();
        double[][] doubleArray43 = rotation40.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation40.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation40.applyInverseTo(rotation47);
        double double50 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ2();
        double double53 = rotation51.getQ0();
        double[][] doubleArray54 = rotation51.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation51.applyInverseTo(rotation55);
        double double58 = rotation57.getQ0();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation47.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation36.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation31.applyTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation5.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = null;
        double[] doubleArray64 = rotation5.getAngles(rotationOrder63);
        java.lang.Class<?> wildcardClass65 = doubleArray64.getClass();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.995037190209989d + "'", double6 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1.0d) + "'", double58 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.5707963267948966, 2.942255348607469, 1.5707963267948966]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation4.applyInverseTo(rotation27);
        double double29 = rotation27.getQ0();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation27.revert();
        double double32 = rotation31.getAngle();
        double[][] doubleArray33 = rotation31.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double double35 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation32.revert();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation36.applyInverseTo(vector3D44);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D45);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ2();
        double double49 = rotation47.getQ0();
        double double50 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation47.revert();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation();
        double double59 = rotation58.getQ2();
        double double60 = rotation58.getQ0();
        double[][] doubleArray61 = rotation58.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation58.applyInverseTo(rotation62);
        double double65 = rotation62.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation57.applyTo(vector3D66);
        double double68 = rotation57.getQ3();
        double double69 = rotation57.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation51.applyInverseTo(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D71);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.009999000149975004d) + "'", double68 == (-0.009999000149975004d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 3.1215943200414915d + "'", double69 == 3.1215943200414915d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double double3 = rotation0.getQ3();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation15.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation15.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation10.applyTo(vector3D19);
        double double21 = rotation10.getQ3();
        double double22 = rotation10.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation4.applyInverseTo(vector3D23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray26 = rotation4.getAngles(rotationOrder25);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.009999000149975004d) + "'", double21 == (-0.009999000149975004d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 3.1215943200414915d + "'", double22 == 3.1215943200414915d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0994987934600711d, (-0.7625584504796028d), 0.9999250084364456d, (double) 10, true);
        java.lang.Class<?> wildcardClass6 = rotation5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.562089250717698d, (double) 10.0f, 3.141592653589793d, (double) 100.0f, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(doubleArray4, (double) (short) 1);
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation6.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation9);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation16.applyInverseTo(rotation23);
        double double26 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation37.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation27.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation23.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation15.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation0.applyTo(rotation27);
        double double56 = rotation55.getQ0();
        double double57 = rotation55.getQ1();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((double) 0L, (double) 100, (double) (byte) 1, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation55.applyTo(rotation63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = null;
        double[] doubleArray66 = rotation64.getAngles(rotationOrder65);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.009999666686665238, 3.1215943200414924, 3.131592986903128]");
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        double double10 = rotation9.getQ0();
        double double11 = rotation9.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation15.getQ2();
        double double19 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation7.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        double double28 = rotation25.getQ2();
        double double29 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation20.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D41, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D41, (double) (-1.0f));
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation36.applyTo(vector3D41);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D46);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation4.applyInverseTo(rotation27);
        double double29 = rotation27.getQ0();
        double double30 = rotation27.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ2();
        double double33 = rotation31.getQ0();
        double double34 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        double double49 = rotation46.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation41.applyTo(vector3D50);
        double double52 = rotation41.getQ3();
        double double53 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation35.applyInverseTo(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation27.applyTo(vector3D54);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.009999000149975004d) + "'", double52 == (-0.009999000149975004d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 3.1215943200414915d + "'", double53 == 3.1215943200414915d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100, 0.009949879346007126d, 0.9999250084364456d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ2();
        double double12 = rotation10.getQ0();
        double[][] doubleArray13 = rotation10.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation10.applyInverseTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        double double32 = rotation29.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation29.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation21.applyTo(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation10.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation38 = rotation9.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation38.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ1();
        double double36 = rotation33.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation31.applyTo(rotation33);
        java.lang.Class<?> wildcardClass38 = rotation33.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) (byte) 10, (double) (short) -1, (-0.5d), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ1();
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation5.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D28, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation23.applyInverseTo(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation5.applyInverseTo(vector3D31);
        double[][] doubleArray33 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(doubleArray33, 0.9949879346007117d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(doubleArray33);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) 1, 0.5d, 0.7053441835437086d, 0.0d, false);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        double[][] doubleArray16 = rotation5.getMatrix();
        double double17 = rotation5.getAngle();
        double double18 = rotation5.getQ0();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 3.1215943200414915d + "'", double17 == 3.1215943200414915d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.009999000149975004d) + "'", double18 == (-0.009999000149975004d));
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (-1.0f));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ2();
        double double12 = rotation9.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation19.applyTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation29.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation38.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation30.applyTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D43);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation();
        double double52 = rotation51.getQ3();
        double double53 = rotation51.getQ2();
        double double54 = rotation51.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation50.applyTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation57.revert();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ3();
        double double63 = rotation61.getQ2();
        double double64 = rotation61.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation60.applyInverseTo(vector3D65);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation();
        double double68 = rotation67.getQ2();
        double double69 = rotation67.getQ0();
        double[][] doubleArray70 = rotation67.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation67.applyInverseTo(rotation71);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation67.applyInverseTo(rotation74);
        double double77 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ2();
        double double80 = rotation78.getQ0();
        double[][] doubleArray81 = rotation78.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation();
        double double83 = rotation82.getQ3();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation78.applyInverseTo(rotation82);
        double double85 = rotation84.getQ0();
        org.apache.commons.math.geometry.Rotation rotation86 = rotation74.applyInverseTo(rotation84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation74.getAxis();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D43, vector3D55, vector3D65, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation9.applyTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D89);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D89, (double) (-1.0f));
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D89, (double) ' ');
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-1.0d) + "'", double85 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) (short) 0, (double) (short) 1, 0.5d, (double) (-1L), false);
        double double37 = rotation36.getQ1();
        double[][] doubleArray38 = rotation36.getMatrix();
        double double39 = rotation36.getQ0();
        double double40 = rotation36.getQ2();
        double double41 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D42);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.5d + "'", double40 == 0.5d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 3.141592653589793d + "'", double41 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D42);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation4.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation21.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D26);
        double double29 = rotation28.getQ1();
        double double30 = rotation28.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.5d, (double) 0L, (double) ' ', (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation29.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation38.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation30.applyTo(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation19.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation6.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation52.revert();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation53.revert();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation54.revert();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        double double58 = rotation56.getQ2();
        double double59 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation56.getAxis();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D60, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        double double65 = rotation63.getQ2();
        double double66 = rotation63.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation63.getAxis();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D67, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        double double72 = rotation70.getQ2();
        double double73 = rotation70.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation70.getAxis();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation();
        double double82 = rotation81.getQ3();
        double double83 = rotation81.getQ2();
        double double84 = rotation81.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation81.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation80.applyTo(vector3D85);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D60, vector3D67, vector3D74, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation55.applyTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation6.applyInverseTo(vector3D67);
        double double90 = rotation6.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray92 = rotation6.getAngles(rotationOrder91);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 32.0d + "'", double90 == 32.0d);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation9.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation8.applyInverseTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        double double20 = rotation17.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation17.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation9.applyTo(vector3D21);
        double double23 = rotation9.getQ1();
        double double24 = rotation9.getQ2();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation0.applyInverseTo(rotation9);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double32 = rotation31.getQ0();
        double double33 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ2();
        double double36 = rotation34.getQ0();
        double[][] doubleArray37 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation34.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ2();
        double double47 = rotation45.getQ0();
        double[][] doubleArray48 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation44.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation45.applyTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation34.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation31.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation25.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ2();
        double double64 = rotation62.getQ0();
        double[][] doubleArray65 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation62.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation62.applyInverseTo(rotation69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation73.getAxis();
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double84 = rotation83.getQ2();
        double double85 = rotation83.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation83.getAxis();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D77, vector3D86);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D72, vector3D77);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D57, vector3D72);
        double double90 = rotation89.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.5d) + "'", double32 == (-0.5d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.995037190209989d + "'", double84 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation4.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D16, 2.562089250717698d);
        org.apache.commons.math.geometry.Rotation rotation20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation21 = rotation19.applyTo(rotation20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.995037190209989d, (double) (byte) 0, (double) '4', 0.009949879346007126d, true);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        double double16 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(0.5d, (double) 0L, (double) ' ', (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation23.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        double double34 = rotation31.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation31.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation30.applyTo(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ2();
        double double39 = rotation37.getQ0();
        double[][] doubleArray40 = rotation37.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation37.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        double double46 = rotation44.getQ2();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation44.revert();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ2();
        double double50 = rotation48.getQ0();
        double[][] doubleArray51 = rotation48.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation48.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation47.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        double double58 = rotation56.getQ2();
        double double59 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation56.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation48.applyTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation37.applyInverseTo(vector3D60);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D36, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation24.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation17.applyTo(vector3D36);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.009999000149975004d) + "'", double16 == (-0.009999000149975004d));
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        double double4 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ2();
        double double17 = rotation15.getQ0();
        double[][] doubleArray18 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation14.applyInverseTo(rotation15);
        double double23 = rotation14.getAngle();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        double[][] doubleArray28 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(doubleArray28, (double) (short) 1);
        double double31 = rotation30.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        double double39 = rotation37.getQ2();
        double double40 = rotation37.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation36.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D41, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation30.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation14.applyTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation10.applyInverseTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation0.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ2();
        double double55 = rotation53.getQ0();
        double[][] doubleArray56 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation53.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation52.applyInverseTo(rotation53);
        double double61 = rotation52.getAngle();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        double[][] doubleArray66 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(doubleArray66, (double) (short) 1);
        double double69 = rotation68.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation68.getAxis();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ3();
        double double73 = rotation71.getQ2();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation71.revert();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation();
        double double76 = rotation75.getQ3();
        double double77 = rotation75.getQ2();
        double double78 = rotation75.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation75.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation74.applyInverseTo(vector3D79);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D79, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation68.applyInverseTo(vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation52.applyTo(vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation10.applyInverseTo(vector3D79);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D85, (double) (byte) 100);
        java.lang.Class<?> wildcardClass88 = vector3D85.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) (byte) 10, (double) 0, (double) '4', (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation16.applyInverseTo(rotation23);
        double double26 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        double double29 = rotation27.getQ0();
        double[][] doubleArray30 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ2();
        double double40 = rotation38.getQ0();
        double[][] doubleArray41 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation37.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation27.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation23.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation15.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation0.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ2();
        double double58 = rotation56.getQ0();
        double[][] doubleArray59 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ3();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation56.applyInverseTo(rotation60);
        double double63 = rotation62.getQ0();
        double double64 = rotation62.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        double double68 = rotation65.getAngle();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation65.revert();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ3();
        double double72 = rotation70.getQ2();
        double double73 = rotation70.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation70.getAxis();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D74, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation69.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D74, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation62.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation55.applyInverseTo(rotation62);
        java.lang.Class<?> wildcardClass82 = rotation81.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.0d) + "'", double63 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ2();
        double double16 = rotation14.getQ0();
        double double17 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation14.revert();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation18.getAxis();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation18.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation3.applyTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ2();
        double double31 = rotation29.getQ1();
        double double32 = rotation29.getAngle();
        double[][] doubleArray33 = rotation29.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation29.getAxis();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        double double37 = rotation35.getQ0();
        double[][] doubleArray38 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation();
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation35.applyInverseTo(rotation42);
        double double45 = rotation42.getQ1();
        double[][] doubleArray46 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(doubleArray46, (double) 0);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ2();
        double double51 = rotation49.getQ0();
        double[][] doubleArray52 = rotation49.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation49.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation49.applyInverseTo(rotation56);
        double double59 = rotation56.getQ1();
        double[][] doubleArray60 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation48.applyTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, (double) (short) -1, (double) (-1.0f), (double) 1, true);
        double double68 = rotation67.getQ0();
        double double69 = rotation67.getQ3();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ2();
        double double72 = rotation70.getQ0();
        double[][] doubleArray73 = rotation70.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation70.applyInverseTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        double double79 = rotation77.getQ2();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation77.revert();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation();
        double double82 = rotation81.getQ2();
        double double83 = rotation81.getQ0();
        double[][] doubleArray84 = rotation81.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation();
        double double86 = rotation85.getQ3();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation81.applyInverseTo(rotation85);
        org.apache.commons.math.geometry.Rotation rotation88 = rotation80.applyInverseTo(rotation81);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation();
        double double90 = rotation89.getQ3();
        double double91 = rotation89.getQ2();
        double double92 = rotation89.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation89.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation81.applyTo(vector3D93);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation70.applyInverseTo(vector3D93);
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotation67.applyInverseTo(vector3D93);
        org.apache.commons.math.geometry.Vector3D vector3D97 = rotation56.applyInverseTo(vector3D96);
        org.apache.commons.math.geometry.Rotation rotation98 = new org.apache.commons.math.geometry.Rotation(vector3D34, vector3D96);
        org.apache.commons.math.geometry.Rotation rotation99 = new org.apache.commons.math.geometry.Rotation(vector3D28, vector3D34);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.5d) + "'", double68 == (-0.5d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.5d + "'", double69 == 0.5d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D97);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation7.applyInverseTo(rotation11);
        double[][] doubleArray38 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(doubleArray38, 10.0d);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(doubleArray38, (double) 100.0f);
        double double43 = rotation42.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        double double14 = rotation13.getAngle();
        double double15 = rotation13.getAngle();
        double double16 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation17.applyInverseTo(rotation24);
        double double27 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        double double35 = rotation32.getQ2();
        double double36 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation24.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation13.applyInverseTo(rotation32);
        double double39 = rotation38.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 0.0f, 0.0d, 3.141592653589793d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(100.0d, (double) (byte) -1, (double) (short) 0, (double) (byte) 100, true);
        double double6 = rotation5.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.7070891041799029d + "'", double6 == 0.7070891041799029d);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        double[][] doubleArray4 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation5);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ2();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation10.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        double double29 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation25.applyTo(vector3D30);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D31);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ2();
        double double35 = rotation33.getQ0();
        double[][] doubleArray36 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyInverseTo(rotation37);
        double double40 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ2();
        double double43 = rotation41.getQ0();
        double[][] doubleArray44 = rotation41.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation41.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation41.applyInverseTo(rotation48);
        double double51 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ2();
        double double54 = rotation52.getQ0();
        double[][] doubleArray55 = rotation52.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation52.applyInverseTo(rotation56);
        double double59 = rotation58.getQ0();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation48.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation37.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation32.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.applyTo(rotation32);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation32.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.0d) + "'", double59 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(vector3D64);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ0();
        double[][] doubleArray11 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation8.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double double18 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation4.applyInverseTo(rotation27);
        double double29 = rotation27.getQ0();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation27.revert();
        double double32 = rotation31.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray34 = rotation31.getAngles(rotationOrder33);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation3.revert();
        double double5 = rotation4.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray7, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = null;
        double[] doubleArray11 = rotation9.getAngles(rotationOrder10);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.5707963267948966, 0.530964914873383, -1.5707963267948966]");
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.29814239699997197d, (double) (short) 0, (double) 10, false);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(vector3D10, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        double double34 = rotation31.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation31.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation30.applyTo(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D17, vector3D24, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation5.applyInverseTo(vector3D10);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', (double) 0.0f, (double) (byte) 10, (double) (byte) 1, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = null;
        double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
        double double8 = rotation5.getQ0();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[3.110352820159525, 0.605491903246008, 3.110352820159525]");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.9540556703999103d + "'", double8 == 0.9540556703999103d);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        double double4 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) 100.0f);
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation0.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) 0L, (double) 100L, (double) 10L, true);
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ1();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        double double25 = rotation23.getQ2();
        double double26 = rotation23.getAngle();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation23.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ3();
        double double30 = rotation28.getQ2();
        double double31 = rotation28.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation28.getAxis();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D32, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation27.applyInverseTo(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation22.applyInverseTo(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation0.applyTo(vector3D36);
        java.lang.Class<?> wildcardClass38 = vector3D36.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.995037190209989d + "'", double20 == 0.995037190209989d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'a', 3.1215943200414915d, Double.NaN);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100.0f, 0.2857142857142857d, (double) (short) 100, (double) (short) 10, true);
        java.lang.Class<?> wildcardClass6 = rotation5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        double double10 = rotation8.getQ2();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation8.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyInverseTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getQ2();
        double double25 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation21.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        double double36 = rotation34.getQ2();
        double double37 = rotation34.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation34.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation33.applyTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D39);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        double double44 = rotation41.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation41.getAxis();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(vector3D45, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ3();
        double double50 = rotation48.getQ2();
        double double51 = rotation48.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.getAxis();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D52, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        double double68 = rotation66.getQ2();
        double double69 = rotation66.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation66.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation65.applyTo(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D45, vector3D52, vector3D59, vector3D70);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation();
        double double74 = rotation73.getQ3();
        double double75 = rotation73.getQ2();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation73.revert();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        double double78 = rotation77.getQ3();
        double double79 = rotation77.getQ2();
        double double80 = rotation77.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation77.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation76.applyInverseTo(vector3D81);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D39, vector3D59, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation4.applyInverseTo(vector3D17);
        double double85 = rotation4.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation4.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'a', (double) (-1L), (-0.7625584504796028d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ1();
        double[][] doubleArray11 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) (short) 1);
        double[][] doubleArray16 = rotation15.getMatrix();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray16);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.9422652488599566d, (double) 1, 2.9422652488599566d, 0.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(vector3D10, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        double double22 = rotation20.getQ2();
        double double23 = rotation20.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation();
        double double32 = rotation31.getQ3();
        double double33 = rotation31.getQ2();
        double double34 = rotation31.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation31.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation30.applyTo(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D17, vector3D24, vector3D35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation5.applyInverseTo(rotation37);
        double double39 = rotation37.getQ0();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation4 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation();
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D9, Double.NaN);
        double[][] doubleArray17 = rotation16.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray17, 0.9649660284921133d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray17);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation6.applyTo(rotation7);
        double double12 = rotation6.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.26237485370392877d + "'", double12 == 0.26237485370392877d);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation();
        double double19 = rotation18.getQ3();
        double double20 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        double double24 = rotation22.getQ0();
        double[][] doubleArray25 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ3();
        double double32 = rotation30.getQ2();
        double double33 = rotation30.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation30.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D35);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation();
        double double44 = rotation43.getQ3();
        double double45 = rotation43.getQ2();
        double double46 = rotation43.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation42.applyTo(vector3D47);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ3();
        double double55 = rotation53.getQ2();
        double double56 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation53.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation52.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation();
        double double60 = rotation59.getQ2();
        double double61 = rotation59.getQ0();
        double[][] doubleArray62 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation();
        double double64 = rotation63.getQ3();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation59.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation();
        double double67 = rotation66.getQ3();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation59.applyInverseTo(rotation66);
        double double69 = rotation66.getQ3();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation();
        double double71 = rotation70.getQ2();
        double double72 = rotation70.getQ0();
        double[][] doubleArray73 = rotation70.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation();
        double double75 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation70.applyInverseTo(rotation74);
        double double77 = rotation76.getQ0();
        org.apache.commons.math.geometry.Rotation rotation78 = rotation66.applyInverseTo(rotation76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation66.getAxis();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D35, vector3D47, vector3D57, vector3D79);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D5, vector3D35);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation();
        double double85 = rotation84.getQ3();
        double double86 = rotation84.getQ2();
        double double87 = rotation84.getAngle();
        double[][] doubleArray88 = rotation84.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(doubleArray88, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(doubleArray88, (double) 100);
        org.apache.commons.math.geometry.Rotation rotation93 = rotation83.applyInverseTo(rotation92);
        org.apache.commons.math.geometry.RotationOrder rotationOrder94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray95 = rotation92.getAngles(rotationOrder94);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-1.0d) + "'", double77 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(rotation93);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7070891041799029d, 0.29814239699997197d, 0.29814239699997197d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        double double3 = rotation0.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotation0.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        double double10 = rotation7.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation();
        double double15 = rotation14.getQ3();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        double double27 = rotation25.getQ2();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D11, vector3D18, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        double double34 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        double double52 = rotation49.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation49.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation48.applyTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation();
        double double56 = rotation55.getQ3();
        double double57 = rotation55.getQ2();
        double double58 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation();
        double double63 = rotation62.getQ3();
        double double64 = rotation62.getQ2();
        double double65 = rotation62.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D66, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation();
        double double70 = rotation69.getQ3();
        double double71 = rotation69.getQ2();
        double double72 = rotation69.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation();
        double double81 = rotation80.getQ3();
        double double82 = rotation80.getQ2();
        double double83 = rotation80.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation79.applyTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D66, vector3D73, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D42, vector3D54, vector3D84);
        double double88 = rotation87.getAngle();
        double[][] doubleArray89 = rotation87.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation();
        double double91 = rotation90.getQ3();
        double double92 = rotation90.getQ2();
        double double93 = rotation90.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation90.getAxis();
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(vector3D94, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation98 = new org.apache.commons.math.geometry.Rotation(vector3D94, (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D99 = rotation87.applyInverseTo(vector3D94);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D99);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.5d, (double) 0L, (double) ' ', (double) (-1L), false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        double double15 = rotation13.getQ2();
        double double16 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation();
        double double27 = rotation26.getQ3();
        double double28 = rotation26.getQ2();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation();
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation29.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation();
        double double39 = rotation38.getQ3();
        double double40 = rotation38.getQ2();
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation38.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation30.applyTo(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation19.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation6.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation6.getAxis();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(32.0d, (double) (byte) -1, 1.531570594506642d, (double) 100.0f, true);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation0.applyInverseTo(rotation7);
        double double10 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        double double18 = rotation15.getQ2();
        double double19 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation7.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ2();
        double double23 = rotation21.getQ0();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation();
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyInverseTo(rotation25);
        double double28 = rotation25.getQ2();
        double double29 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation();
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double[][] doubleArray33 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation20.applyTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation20.getAxis();
        double[][] doubleArray38 = rotation20.getMatrix();
        double double39 = rotation20.getQ1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D44, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        double double50 = rotation47.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation47.getAxis();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D51, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        double double68 = rotation65.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation65.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation64.applyTo(vector3D69);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D51, vector3D58, vector3D69);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation();
        double double73 = rotation72.getQ2();
        double double74 = rotation72.getQ0();
        double double75 = rotation72.getQ3();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation72.revert();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation76.getAxis();
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation83.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation76.applyInverseTo(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation20.applyInverseTo(vector3D85);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D87);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation9.applyInverseTo(rotation13);
        double double16 = rotation13.getQ2();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation17.applyInverseTo(rotation24);
        double double27 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        double double35 = rotation34.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation13.applyInverseTo(rotation36);
        double double38 = rotation36.getQ0();
        double double39 = rotation36.getQ2();
        double double40 = rotation36.getQ1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation44.applyInverseTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        double double60 = rotation57.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation56.applyTo(vector3D61);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D49, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation36.applyInverseTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation7.applyTo(rotation36);
        double double66 = rotation7.getQ2();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, (double) 0, (double) (short) 1, 0.7071067811865475d, true);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = null;
        double[] doubleArray8 = rotation5.getAngles(rotationOrder7);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9999250084364456d + "'", double6 == 0.9999250084364456d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[3.1345217036255226, 0.019998833442044513, 3.1345217036255226]");
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D22);
        double double24 = rotation23.getAngle();
        double double25 = rotation23.getQ0();
        double double26 = rotation23.getQ2();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.531570594506642d + "'", double24 == 1.531570594506642d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.7208382876544367d + "'", double25 == 0.7208382876544367d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.6931032706702748d + "'", double26 == 0.6931032706702748d);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.9142857142857143d, (double) 1L, (double) 0.0f, (double) '4', true);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation11.revert();
        double double23 = rotation22.getQ0();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation27.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyTo(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ3();
        double double44 = rotation42.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        double double48 = rotation46.getQ2();
        double double49 = rotation46.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation45.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D50);
        double double53 = rotation52.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation22.applyTo(rotation52);
        double double55 = rotation22.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1.0d) + "'", double55 == (-1.0d));
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.995037190209989d, 0.0d, (double) '4', (double) 1.0f, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyInverseTo(rotation13);
        double double16 = rotation13.getQ1();
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray17, 0.0d);
        double double20 = rotation19.getAngle();
        double double21 = rotation19.getAngle();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation22.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation();
        double double30 = rotation29.getQ3();
        double double31 = rotation29.getQ2();
        double double32 = rotation29.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation29.getAxis();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D33, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation28.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation();
        double double38 = rotation37.getQ2();
        double double39 = rotation37.getQ0();
        double[][] doubleArray40 = rotation37.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation37.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation();
        double double45 = rotation44.getQ3();
        double double46 = rotation44.getQ2();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation44.revert();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation();
        double double49 = rotation48.getQ2();
        double double50 = rotation48.getQ0();
        double[][] doubleArray51 = rotation48.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation();
        double double53 = rotation52.getQ3();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation48.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation47.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        double double57 = rotation56.getQ3();
        double double58 = rotation56.getQ2();
        double double59 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation56.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation48.applyTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation37.applyInverseTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation28.applyInverseTo(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation23.applyTo(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation23.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation5.applyInverseTo(vector3D65);
        java.lang.Class<?> wildcardClass67 = rotation5.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 10.0d, 0.5309649148733836d, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), (double) 0, (double) (byte) 100, (double) (-1.0f), true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ0();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation();
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyInverseTo(rotation10);
        double double13 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        double double16 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation17.getAxis();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.009999000149975004d) + "'", double16 == (-0.009999000149975004d));
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(vector3D18);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ2();
        double double13 = rotation11.getQ0();
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation11.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation10.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ3();
        double double21 = rotation19.getQ2();
        double double22 = rotation19.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation19.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation11.applyTo(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation0.applyInverseTo(vector3D23);
        double double26 = rotation0.getQ1();
        double double27 = rotation0.getQ0();
        double double28 = rotation0.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation();
        double double7 = rotation6.getQ3();
        double double8 = rotation6.getQ2();
        double double9 = rotation6.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation();
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation();
        double double17 = rotation16.getQ2();
        double double18 = rotation16.getQ0();
        double[][] doubleArray19 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        double double26 = rotation24.getQ2();
        double double27 = rotation24.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyTo(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D29);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ0();
        double[][] doubleArray35 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation();
        double double37 = rotation36.getQ3();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation32.applyInverseTo(rotation36);
        double double39 = rotation38.getQ0();
        double double40 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation30.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation();
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getQ0();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation();
        double double47 = rotation46.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation();
        double double50 = rotation49.getQ3();
        double double51 = rotation49.getQ2();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation();
        double double54 = rotation53.getQ2();
        double double55 = rotation53.getQ0();
        double[][] doubleArray56 = rotation53.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation53.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation52.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation();
        double double62 = rotation61.getQ3();
        double double63 = rotation61.getQ2();
        double double64 = rotation61.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation53.applyTo(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation42.applyInverseTo(vector3D65);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D67, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation41.applyInverseTo(vector3D67);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation();
        double double72 = rotation71.getQ2();
        double double73 = rotation71.getQ0();
        double[][] doubleArray74 = rotation71.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation();
        double double76 = rotation75.getQ3();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation71.applyInverseTo(rotation75);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation();
        double double79 = rotation78.getQ3();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation71.applyInverseTo(rotation78);
        double double81 = rotation78.getQ3();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation();
        double double83 = rotation82.getQ2();
        double double84 = rotation82.getQ0();
        double[][] doubleArray85 = rotation82.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation();
        double double87 = rotation86.getQ3();
        org.apache.commons.math.geometry.Rotation rotation88 = rotation82.applyInverseTo(rotation86);
        double double89 = rotation88.getQ0();
        org.apache.commons.math.geometry.Rotation rotation90 = rotation78.applyInverseTo(rotation88);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation78.getAxis();
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D70, vector3D91);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-1.0d) + "'", double89 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(vector3D91);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, 100.0d, 0.981108438603097d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.6667006794044591d, 0.6086083682652702d, (double) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ0();
        double[][] doubleArray3 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation0.applyInverseTo(rotation4);
        double double7 = rotation4.getQ1();
        double double8 = rotation4.getQ3();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 1, (double) (-1.0f), (double) 0, (double) (short) 0, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ0();
        double[][] doubleArray12 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation9.applyInverseTo(rotation13);
        double double16 = rotation13.getQ2();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ2();
        double double19 = rotation17.getQ0();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation();
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation17.applyInverseTo(rotation24);
        double double27 = rotation24.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation();
        double double29 = rotation28.getQ2();
        double double30 = rotation28.getQ0();
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation();
        double double33 = rotation32.getQ3();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation32);
        double double35 = rotation34.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation13.applyInverseTo(rotation36);
        double double38 = rotation36.getQ0();
        double double39 = rotation36.getQ2();
        double double40 = rotation36.getQ1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation();
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation();
        double double46 = rotation45.getQ3();
        double double47 = rotation45.getQ2();
        double double48 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation44.applyInverseTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation();
        double double58 = rotation57.getQ3();
        double double59 = rotation57.getQ2();
        double double60 = rotation57.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation56.applyTo(vector3D61);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D49, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation36.applyInverseTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation7.applyTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((double) 10.0f, (double) 0L, (double) 10L, (double) (byte) 0, true);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation71.revert();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation71.applyTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation7.applyTo(rotation71);
        double[][] doubleArray81 = rotation7.getMatrix();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(doubleArray81);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation3.getQ0();
        double double13 = rotation3.getAngle();
        double[][] doubleArray14 = rotation3.getMatrix();
        double double15 = rotation3.getQ0();
        double double16 = rotation3.getAngle();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        double double10 = rotation3.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation3.applyTo(rotation11);
        double double14 = rotation3.getQ1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation();
        double double16 = rotation15.getQ3();
        double double17 = rotation15.getQ2();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation15.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation();
        double double20 = rotation19.getQ2();
        double double21 = rotation19.getQ0();
        double[][] doubleArray22 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation();
        double double24 = rotation23.getQ3();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation18.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ3();
        double double29 = rotation27.getQ2();
        double double30 = rotation27.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation19.applyTo(vector3D31);
        double double33 = rotation19.getQ1();
        double double34 = rotation19.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation3.applyTo(rotation19);
        double double36 = rotation35.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation35.getAxis();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 10L, (double) ' ', (double) 10, (double) (-1L), true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation();
        double double8 = rotation7.getQ3();
        double double9 = rotation7.getQ2();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation();
        double double12 = rotation11.getQ3();
        double double13 = rotation11.getQ2();
        double double14 = rotation11.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation10.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation();
        double double18 = rotation17.getQ3();
        double double19 = rotation17.getQ2();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation();
        double double22 = rotation21.getQ3();
        double double23 = rotation21.getQ2();
        double double24 = rotation21.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation20.applyInverseTo(vector3D25);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ3();
        double double35 = rotation33.getQ2();
        double double36 = rotation33.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation33.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation32.applyTo(vector3D37);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D38);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation();
        double double41 = rotation40.getQ3();
        double double42 = rotation40.getQ2();
        double double43 = rotation40.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation40.getAxis();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D44, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation();
        double double48 = rotation47.getQ3();
        double double49 = rotation47.getQ2();
        double double50 = rotation47.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation47.getAxis();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D51, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation();
        double double55 = rotation54.getQ3();
        double double56 = rotation54.getQ2();
        double double57 = rotation54.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation54.getAxis();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(10.0d, (double) 0, (double) 100.0f, 1.0d, true);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation();
        double double66 = rotation65.getQ3();
        double double67 = rotation65.getQ2();
        double double68 = rotation65.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation65.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation64.applyTo(vector3D69);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D51, vector3D58, vector3D69);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation();
        double double73 = rotation72.getQ3();
        double double74 = rotation72.getQ2();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation72.revert();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation();
        double double77 = rotation76.getQ3();
        double double78 = rotation76.getQ2();
        double double79 = rotation76.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation76.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation75.applyInverseTo(vector3D80);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D38, vector3D58, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation5.applyTo(vector3D16);
        double double84 = rotation5.getQ0();
        double double85 = rotation5.getQ0();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9142857142857143d + "'", double6 == 0.9142857142857143d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.2857142857142857d + "'", double84 == 0.2857142857142857d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.2857142857142857d + "'", double85 == 0.2857142857142857d);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ2();
        double double7 = rotation4.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation3.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation3.getAxis();
        double double11 = rotation3.getQ1();
        double double12 = rotation3.getQ1();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ3();
        double double2 = rotation0.getQ2();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation();
        double double5 = rotation4.getQ2();
        double double6 = rotation4.getQ0();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation4.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation3.applyInverseTo(rotation4);
        double double12 = rotation3.getQ0();
        double double13 = rotation3.getAngle();
        double double14 = rotation3.getAngle();
        double double15 = rotation3.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((-0.5d), (double) 100, (double) (byte) 10, (double) 0L, false);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation21.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation3.applyInverseTo(rotation21);
        double double24 = rotation3.getQ0();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation3.revert();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertNotNull(rotation25);
    }
}

