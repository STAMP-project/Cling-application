import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks2 = org.joda.time.Weeks.weeksBetween(readablePartial0, readablePartial1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            int int4 = weeks0.getValue((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        java.lang.Class<?> wildcardClass2 = weeks0.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            int int4 = weeks0.getValue((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        // The following exception was thrown during execution in test generation
        try {
            int int5 = weeks3.getValue((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        java.lang.Class<?> wildcardClass10 = weeks6.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        java.lang.Class<?> wildcardClass2 = durationFieldType1.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Days days2 = weeks0.toStandardDays();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks2 = org.joda.time.Weeks.weeksBetween(readableInstant0, readableInstant1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadableInstant objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Minutes minutes2 = weeks1.toStandardMinutes();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(minutes2);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Seconds seconds1 = weeks0.toStandardSeconds();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType3 = weeks0.getFieldType(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        java.lang.Class<?> wildcardClass15 = weeks10.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"\"");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"hi!\"");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        int int4 = weeks1.get(durationFieldType3);
        // The following exception was thrown during execution in test generation
        try {
            int int6 = weeks1.getValue((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        java.lang.Class<?> wildcardClass2 = weeks1.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        int int4 = weeks1.get(durationFieldType3);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType6 = weeks1.getFieldType(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.PeriodType periodType9 = weeks8.getPeriodType();
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod10 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int11 = weeks8.compareTo(baseSingleFieldPeriod10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(periodType9);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        int int11 = weeks1.size();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = weeks1.getValue((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.MutablePeriod mutablePeriod17 = weeks16.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks12.plus(weeks16);
        boolean boolean19 = weeks5.isLessThan(weeks12);
        java.lang.Class<?> wildcardClass20 = weeks5.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Period period6 = weeks2.toPeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks2.getFieldType();
        java.lang.Class<?> wildcardClass8 = durationFieldType7.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks18.negated();
        org.joda.time.Weeks weeks22 = weeks1.plus(weeks21);
        int int23 = weeks1.getWeeks();
        java.lang.String str24 = weeks1.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-1W" + "'", str24, "P-1W");
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.PeriodType periodType10 = weeks6.getPeriodType();
        org.joda.time.Duration duration11 = weeks6.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration11);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = weeks2.get(durationFieldType3);
        int int5 = weeks2.size();
        java.lang.Class<?> wildcardClass6 = weeks2.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks6 = weeks0.multipliedBy((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = weeks0.getValue((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks6);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        // The following exception was thrown during execution in test generation
        try {
            int int6 = weeks0.getValue((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = weeks10.getFieldType((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks22 = weeks20.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks20);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod16 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int17 = weeks6.compareTo(baseSingleFieldPeriod16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        boolean boolean12 = weeks10.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = weeks10.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = weeks10.isSupported(durationFieldType15);
        org.joda.time.Weeks weeks17 = weeks9.minus(weeks10);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = weeks10.getValue(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = weeks1.getValue((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType18 = weeks0.getFieldType((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType22 = weeks19.getFieldType((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) 0);
        java.lang.Class<?> wildcardClass7 = weeks6.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.TWO;
        org.joda.time.Seconds seconds25 = weeks24.toStandardSeconds();
        // The following exception was thrown during execution in test generation
        try {
            int int26 = weeks2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds25);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class org.joda.time.Weeks cannot be compared to class org.joda.time.Seconds");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(seconds25);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        boolean boolean3 = weeks0.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks5 = weeks0.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = weeks6.getFieldType();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        boolean boolean10 = weeks8.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        boolean boolean16 = weeks8.isLessThan(weeks14);
        org.joda.time.Weeks weeks17 = weeks14.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.MutablePeriod mutablePeriod20 = weeks19.toMutablePeriod();
        org.joda.time.Weeks weeks21 = weeks17.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks6.plus(weeks21);
        org.joda.time.Weeks weeks23 = weeks5.minus(weeks6);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        java.lang.Class<?> wildcardClass5 = weeks3.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        java.lang.Class<?> wildcardClass4 = weeks0.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.PeriodType periodType3 = weeks2.getPeriodType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(periodType3);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        java.lang.Class<?> wildcardClass3 = weeks1.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        int int13 = weeks10.getWeeks();
        org.joda.time.DurationFieldType durationFieldType14 = weeks10.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType16 = weeks10.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertNotNull(durationFieldType14);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P-3W");
        org.joda.time.DurationFieldType durationFieldType2 = weeks1.getFieldType();
        org.joda.time.Seconds seconds3 = weeks1.toStandardSeconds();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds3);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        java.lang.Class<?> wildcardClass5 = weeks2.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Period period6 = weeks2.toPeriod();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        boolean boolean9 = weeks2.isGreaterThan(weeks7);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType11 = weeks7.getFieldType(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = weeks6.getValue((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Minutes minutes2 = weeks0.toStandardMinutes();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType4 = weeks0.getFieldType((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(minutes2);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.PeriodType periodType7 = weeks5.getPeriodType();
        boolean boolean8 = weeks1.isGreaterThan(weeks5);
        int int9 = weeks1.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType17 = weeks16.getPeriodType();
        org.joda.time.Weeks weeks19 = weeks16.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        boolean boolean29 = weeks21.isLessThan(weeks27);
        org.joda.time.Weeks weeks30 = weeks20.plus(weeks21);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.ONE;
        int int37 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks36);
        boolean boolean38 = weeks20.isGreaterThan(weeks36);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType40 = weeks39.getFieldType();
        int int41 = weeks36.get(durationFieldType40);
        boolean boolean42 = weeks16.isSupported(durationFieldType40);
        org.joda.time.MutablePeriod mutablePeriod43 = weeks16.toMutablePeriod();
        boolean boolean44 = weeks6.isLessThan(weeks16);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        boolean boolean12 = weeks10.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = weeks10.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = weeks10.isSupported(durationFieldType15);
        org.joda.time.Weeks weeks17 = weeks9.minus(weeks10);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = weeks10.getValue((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Period period3 = weeks1.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType5 = weeks1.getFieldType((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.PeriodType periodType4 = weeks3.getPeriodType();
        java.lang.Class<?> wildcardClass5 = periodType4.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        java.lang.String str2 = weeks1.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "P100W" + "'", str2, "P100W");
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = weeks0.getValue(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        java.lang.Class<?> wildcardClass21 = weeks20.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) '#');
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = weeks0.get(durationFieldType3);
        java.lang.String str5 = weeks0.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P3W" + "'", str5, "P3W");
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.MutablePeriod mutablePeriod27 = weeks22.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType29 = weeks22.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.PeriodType periodType7 = weeks5.getPeriodType();
        boolean boolean8 = weeks1.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks10 = weeks5.minus((int) (byte) 0);
        java.lang.Class<?> wildcardClass11 = weeks10.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = weeks3.dividedBy(1);
        org.joda.time.Weeks weeks11 = weeks3.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = weeks1.minus((int) (byte) 100);
        org.joda.time.Duration duration14 = weeks1.toStandardDuration();
        java.lang.Class<?> wildcardClass15 = duration14.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        int int13 = weeks10.getWeeks();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.PeriodType periodType10 = weeks9.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType12 = weeks9.getFieldType(0);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = weeks9.getValue((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(weeks13);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks21 = weeks19.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.parseWeeks("P-4W");
        boolean boolean24 = weeks21.equals((java.lang.Object) "P-4W");
        org.joda.time.MutablePeriod mutablePeriod25 = weeks21.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(mutablePeriod25);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        java.lang.String str6 = weeks4.toString();
        org.joda.time.MutablePeriod mutablePeriod7 = weeks4.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-4W" + "'", str6, "P-4W");
        org.junit.Assert.assertNotNull(mutablePeriod7);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.MutablePeriod mutablePeriod5 = weeks1.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = weeks6.getValue((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.PeriodType periodType2 = weeks1.getPeriodType();
        java.lang.Class<?> wildcardClass3 = periodType2.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        java.lang.String str21 = weeks0.toString();
        org.joda.time.Period period22 = weeks0.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P3W" + "'", str21, "P3W");
        org.junit.Assert.assertNotNull(period22);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType3 = weeks2.getPeriodType();
        org.joda.time.Weeks weeks5 = weeks2.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks7 = weeks2.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = weeks2.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = weeks2.getFieldType();
        org.joda.time.PeriodType periodType10 = weeks2.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType11 = weeks2.getFieldType();
        org.joda.time.Weeks weeks12 = weeks2.negated();
        org.joda.time.Weeks weeks14 = weeks2.multipliedBy(300);
        boolean boolean15 = weeks0.equals((java.lang.Object) weeks2);
        org.joda.time.Weeks weeks17 = weeks0.plus((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType19 = weeks17.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks17);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks42 = null;
        org.joda.time.Weeks weeks43 = weeks35.minus(weeks42);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = weeks43.getValue((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P1W");
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType24 = weeks2.getFieldType();
        org.joda.time.Weeks weeks26 = weeks2.multipliedBy((int) (short) 1);
        java.lang.Class<?> wildcardClass27 = weeks26.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType8 = weeks7.getFieldType();
        org.joda.time.DurationFieldType durationFieldType10 = weeks7.getFieldType(0);
        int int11 = weeks0.get(durationFieldType10);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks18 = weeks16.dividedBy((int) '4');
        int int19 = weeks16.size();
        org.joda.time.Weeks weeks20 = weeks16.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) '4');
        int int26 = weeks23.size();
        org.joda.time.Weeks weeks27 = weeks23.negated();
        boolean boolean28 = weeks20.isGreaterThan(weeks23);
        org.joda.time.DurationFieldType durationFieldType29 = weeks20.getFieldType();
        int int30 = weeks13.get(durationFieldType29);
        boolean boolean31 = weeks0.isLessThan(weeks13);
        int int32 = weeks13.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int31 = weeks3.getValue((int) (short) 0);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        org.joda.time.Weeks weeks36 = weeks34.dividedBy((int) '4');
        int int37 = weeks34.size();
        org.joda.time.Weeks weeks38 = weeks34.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks43 = weeks41.dividedBy((int) '4');
        int int44 = weeks41.size();
        org.joda.time.Weeks weeks45 = weeks41.negated();
        boolean boolean46 = weeks38.isGreaterThan(weeks41);
        org.joda.time.MutablePeriod mutablePeriod47 = weeks41.toMutablePeriod();
        boolean boolean48 = weeks3.isGreaterThan(weeks41);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = weeks41.getValue(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-3) + "'", int31 == (-3));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.PeriodType periodType9 = weeks8.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType11 = weeks8.getFieldType(300);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 300");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(periodType9);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        int int4 = weeks1.get(durationFieldType3);
        org.joda.time.Weeks weeks6 = weeks1.minus((int) 'a');
        java.lang.Class<?> wildcardClass7 = weeks6.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        int int5 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks2);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks7 = weeks0.plus(1030);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 1030");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = weeks2.get(durationFieldType3);
        org.joda.time.PeriodType periodType5 = weeks2.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = weeks16.minus(weeks17);
        java.lang.String str20 = weeks19.toString();
        boolean boolean21 = weeks14.equals((java.lang.Object) str20);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P-4W" + "'", str20, "P-4W");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        int int19 = weeks17.getWeeks();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = weeks22.get(durationFieldType23);
        int int25 = weeks22.size();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        boolean boolean30 = weeks22.isSupported(durationFieldType29);
        int int31 = weeks17.get(durationFieldType29);
        int int32 = weeks17.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.DurationFieldType durationFieldType6 = weeks5.getFieldType();
        org.joda.time.DurationFieldType durationFieldType8 = weeks5.getFieldType(0);
        org.joda.time.Weeks weeks9 = weeks2.plus(weeks5);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = weeks9.getValue(300);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 300");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(weeks9);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks16 = weeks11.minus((int) (byte) -1);
        org.joda.time.Weeks weeks18 = weeks11.dividedBy(100);
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod19 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int20 = weeks18.compareTo(baseSingleFieldPeriod19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks16 = weeks11.minus((int) (byte) -1);
        org.joda.time.Weeks weeks18 = weeks11.dividedBy(100);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = weeks11.getValue((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks0.toMutablePeriod();
        org.joda.time.Hours hours3 = weeks0.toStandardHours();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType5 = weeks0.getFieldType(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        boolean boolean3 = weeks0.equals((java.lang.Object) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod4 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = weeks0.get(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks10 = weeks0.negated();
        org.joda.time.Weeks weeks12 = weeks0.multipliedBy(300);
        int int13 = weeks0.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks10 = weeks6.dividedBy(3);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = weeks10.getFieldType((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        org.joda.time.PeriodType periodType6 = weeks4.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType8 = weeks4.getFieldType(1030);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1030");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = weeks3.dividedBy(1);
        org.joda.time.Weeks weeks11 = weeks3.minus((int) 'a');
        int int13 = weeks11.getValue(0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-100) + "'", int13 == (-100));
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = weeks18.negated();
        java.lang.Class<?> wildcardClass20 = weeks19.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        int int19 = weeks17.getWeeks();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks31.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks20.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.dividedBy((int) (short) 100);
        boolean boolean39 = weeks17.isGreaterThan(weeks38);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType41 = weeks17.getFieldType((-3));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = weeks1.multipliedBy(0);
        org.joda.time.PeriodType periodType5 = weeks4.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = weeks4.getValue((-13));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -13");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        java.lang.Class<?> wildcardClass5 = weeks4.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks10 = weeks5.multipliedBy((int) (byte) 10);
        int int11 = weeks10.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Period period8 = weeks3.toPeriod();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(weeks9);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType20 = weeks19.getFieldType();
        int int21 = weeks16.get(durationFieldType20);
        org.joda.time.Weeks weeks23 = weeks16.minus((int) (byte) -1);
        org.joda.time.Weeks weeks25 = weeks23.minus((int) '#');
        org.joda.time.Period period26 = weeks25.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(period26);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MIN_VALUE;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks2 = weeks0.multipliedBy((-100));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483648 * -100");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        // The following exception was thrown during execution in test generation
        try {
            int int3 = weeks1.getValue(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        int int28 = weeks6.size();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType30 = weeks29.getPeriodType();
        org.joda.time.Weeks weeks32 = weeks29.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks34 = weeks29.dividedBy((int) 'a');
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks35.plus(weeks36);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        int int52 = weeks49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        boolean boolean53 = weeks35.isGreaterThan(weeks51);
        int int54 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.DurationFieldType durationFieldType55 = weeks34.getFieldType();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks57 = weeks34.plus(weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks60.dividedBy((int) '4');
        int int63 = weeks60.size();
        org.joda.time.Period period64 = weeks60.toPeriod();
        org.joda.time.DurationFieldType durationFieldType65 = weeks60.getFieldType();
        org.joda.time.Weeks weeks66 = weeks56.plus(weeks60);
        org.joda.time.Weeks weeks67 = weeks6.plus(weeks66);
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod68 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int69 = weeks67.compareTo(baseSingleFieldPeriod68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks27 = weeks25.dividedBy((int) '4');
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks30.dividedBy((int) '4');
        int int33 = weeks30.size();
        org.joda.time.Weeks weeks34 = weeks27.plus(weeks30);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.DurationFieldType durationFieldType40 = weeks39.getFieldType();
        org.joda.time.DurationFieldType durationFieldType42 = weeks39.getFieldType(0);
        boolean boolean43 = weeks36.isSupported(durationFieldType42);
        boolean boolean44 = weeks30.isSupported(durationFieldType42);
        org.joda.time.PeriodType periodType45 = weeks30.getPeriodType();
        boolean boolean46 = weeks22.equals((java.lang.Object) weeks30);
        org.joda.time.Weeks weeks48 = weeks22.dividedBy(4);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = weeks22.getValue(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks48);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = weeks3.plus((int) (short) 0);
        java.lang.Class<?> wildcardClass10 = weeks9.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        int int14 = weeks2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.Duration duration15 = weeks11.toStandardDuration();
        org.joda.time.Weeks weeks17 = weeks11.minus(1030);
        java.lang.Class<?> wildcardClass18 = weeks17.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.standardWeeksIn(readablePeriod0);
        org.joda.time.Seconds seconds2 = weeks1.toStandardSeconds();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(seconds2);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        boolean boolean3 = weeks0.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks5 = weeks0.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = weeks6.getFieldType();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        boolean boolean10 = weeks8.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        boolean boolean16 = weeks8.isLessThan(weeks14);
        org.joda.time.Weeks weeks17 = weeks14.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.MutablePeriod mutablePeriod20 = weeks19.toMutablePeriod();
        org.joda.time.Weeks weeks21 = weeks17.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks6.plus(weeks21);
        org.joda.time.Weeks weeks23 = weeks5.minus(weeks6);
        org.joda.time.Weeks weeks25 = weeks5.minus((-3));
        int int27 = weeks5.getValue((int) (short) 0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 300 + "'", int27 == 300);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.PeriodType periodType7 = weeks5.getPeriodType();
        boolean boolean8 = weeks1.isGreaterThan(weeks5);
        int int10 = weeks5.getValue(0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Period period15 = weeks10.toPeriod();
        org.joda.time.Weeks weeks17 = weeks10.minus(10);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.DurationFieldType durationFieldType23 = weeks20.getFieldType(0);
        org.joda.time.Weeks weeks24 = weeks10.plus(weeks20);
        java.lang.String str25 = weeks10.toString();
        java.lang.Class<?> wildcardClass26 = weeks10.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Seconds seconds2 = weeks1.toStandardSeconds();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(seconds2);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        boolean boolean3 = weeks0.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks5 = weeks0.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        java.lang.String str10 = weeks9.toString();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.weeks((-1));
        int int13 = weeks12.size();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks18 = weeks16.dividedBy((int) '4');
        int int19 = weeks16.size();
        org.joda.time.Period period20 = weeks16.toPeriod();
        org.joda.time.DurationFieldType durationFieldType21 = weeks16.getFieldType();
        org.joda.time.Weeks weeks22 = weeks12.minus(weeks16);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        boolean boolean25 = weeks23.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        java.lang.String str30 = weeks29.toString();
        boolean boolean31 = weeks23.isLessThan(weeks29);
        org.joda.time.Weeks weeks32 = weeks29.negated();
        org.joda.time.Weeks weeks33 = weeks12.plus(weeks32);
        boolean boolean34 = weeks9.isLessThan(weeks33);
        org.joda.time.MutablePeriod mutablePeriod35 = weeks9.toMutablePeriod();
        int int37 = weeks9.getValue((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType38 = weeks9.getFieldType();
        boolean boolean39 = weeks0.isSupported(durationFieldType38);
        int int40 = weeks0.getWeeks();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType42 = weeks0.getFieldType((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "P-3W" + "'", str10, "P-3W");
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "P-3W" + "'", str30, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-3) + "'", int37 == (-3));
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3 + "'", int40 == 3);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = weeks17.getValue(1030);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1030");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.PeriodType periodType7 = weeks5.getPeriodType();
        boolean boolean8 = weeks1.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks10 = weeks5.minus((int) (byte) 0);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = weeks17.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = weeks21.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = weeks21.isSupported(durationFieldType26);
        org.joda.time.Weeks weeks28 = weeks20.minus(weeks21);
        boolean boolean29 = weeks10.isLessThan(weeks28);
        java.lang.Class<?> wildcardClass30 = weeks10.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.MutablePeriod mutablePeriod3 = weeks1.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.Duration duration23 = weeks19.toStandardDuration();
        java.lang.Class<?> wildcardClass24 = weeks19.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType2 = weeks0.getFieldType((-3));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(100);
        org.joda.time.Minutes minutes2 = weeks1.toStandardMinutes();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(minutes2);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.PeriodType periodType7 = weeks5.getPeriodType();
        boolean boolean8 = weeks1.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        boolean boolean12 = weeks9.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks14 = weeks9.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeks((-1));
        int int22 = weeks21.size();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks27 = weeks25.dividedBy((int) '4');
        int int28 = weeks25.size();
        org.joda.time.Period period29 = weeks25.toPeriod();
        org.joda.time.DurationFieldType durationFieldType30 = weeks25.getFieldType();
        org.joda.time.Weeks weeks31 = weeks21.minus(weeks25);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        boolean boolean40 = weeks32.isLessThan(weeks38);
        org.joda.time.Weeks weeks41 = weeks38.negated();
        org.joda.time.Weeks weeks42 = weeks21.plus(weeks41);
        boolean boolean43 = weeks18.isLessThan(weeks42);
        org.joda.time.MutablePeriod mutablePeriod44 = weeks18.toMutablePeriod();
        int int46 = weeks18.getValue((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType47 = weeks18.getFieldType();
        boolean boolean48 = weeks9.isSupported(durationFieldType47);
        int int49 = weeks5.get(durationFieldType47);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-3) + "'", int46 == (-3));
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3 + "'", int49 == 3);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType26 = weeks5.getFieldType();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks28 = weeks5.plus(weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks31.dividedBy((int) '4');
        int int34 = weeks31.size();
        org.joda.time.Period period35 = weeks31.toPeriod();
        org.joda.time.DurationFieldType durationFieldType36 = weeks31.getFieldType();
        org.joda.time.Weeks weeks37 = weeks27.plus(weeks31);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType(0);
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = weeks10.minus(weeks11);
        org.joda.time.DurationFieldType durationFieldType14 = weeks11.getFieldType();
        boolean boolean15 = weeks1.isLessThan(weeks11);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((-1));
        int int18 = weeks17.size();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Period period25 = weeks21.toPeriod();
        org.joda.time.DurationFieldType durationFieldType26 = weeks21.getFieldType();
        org.joda.time.Weeks weeks27 = weeks17.minus(weeks21);
        org.joda.time.Weeks weeks29 = weeks17.minus((int) (byte) 100);
        org.joda.time.Duration duration30 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks31 = weeks1.minus(weeks17);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType33 = weeks32.getPeriodType();
        org.joda.time.Weeks weeks35 = weeks32.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        boolean boolean39 = weeks37.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        boolean boolean45 = weeks37.isLessThan(weeks43);
        org.joda.time.Weeks weeks46 = weeks36.plus(weeks37);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        java.lang.String str51 = weeks50.toString();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.ONE;
        int int53 = weeks50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks52);
        boolean boolean54 = weeks36.isGreaterThan(weeks52);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType56 = weeks55.getFieldType();
        int int57 = weeks52.get(durationFieldType56);
        boolean boolean58 = weeks32.isSupported(durationFieldType56);
        org.joda.time.Weeks weeks60 = weeks32.dividedBy((-1));
        boolean boolean61 = weeks1.isGreaterThan(weeks32);
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.weeksIn(readableInterval62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        boolean boolean66 = weeks64.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        java.lang.String str71 = weeks70.toString();
        boolean boolean72 = weeks64.isLessThan(weeks70);
        org.joda.time.Weeks weeks73 = weeks63.minus(weeks70);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks77 = weeks76.negated();
        org.joda.time.MutablePeriod mutablePeriod78 = weeks77.toMutablePeriod();
        org.joda.time.Weeks weeks80 = weeks77.multipliedBy(0);
        org.joda.time.Weeks weeks81 = weeks75.minus(weeks80);
        int int82 = weeks73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks81);
        org.joda.time.Weeks weeks83 = weeks32.plus(weeks81);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "P-3W" + "'", str71, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(mutablePeriod78);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(weeks83);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.Weeks weeks24 = weeks22.minus(1030);
        java.lang.Class<?> wildcardClass25 = weeks22.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = weeks1.getValue(900);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 900");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) ' ');
        int int10 = weeks9.getWeeks();
        org.joda.time.DurationFieldType durationFieldType11 = weeks9.getFieldType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks1.plus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType14 = weeks1.getFieldType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks2 = weeks0.minus((-1));
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        boolean boolean5 = weeks3.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        java.lang.String str10 = weeks9.toString();
        org.joda.time.Weeks weeks11 = weeks3.plus(weeks9);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.ONE;
        int int18 = weeks15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks17.plus((int) (short) -1);
        int int21 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks3.plus((int) (short) 100);
        org.joda.time.Weeks weeks25 = weeks23.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType27 = weeks26.getFieldType();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = weeks34.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.MutablePeriod mutablePeriod40 = weeks39.toMutablePeriod();
        org.joda.time.Weeks weeks41 = weeks37.plus(weeks39);
        org.joda.time.Weeks weeks42 = weeks26.plus(weeks41);
        org.joda.time.Weeks weeks44 = weeks41.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks45 = weeks44.negated();
        boolean boolean46 = weeks25.isGreaterThan(weeks44);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType48 = weeks47.getFieldType();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        boolean boolean51 = weeks49.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        java.lang.String str56 = weeks55.toString();
        boolean boolean57 = weeks49.isLessThan(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks60 = weeks59.negated();
        org.joda.time.MutablePeriod mutablePeriod61 = weeks60.toMutablePeriod();
        org.joda.time.Weeks weeks62 = weeks58.plus(weeks60);
        org.joda.time.Weeks weeks63 = weeks47.plus(weeks62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        boolean boolean67 = weeks65.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        boolean boolean73 = weeks65.isLessThan(weeks71);
        org.joda.time.Weeks weeks74 = weeks64.plus(weeks65);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType76 = weeks75.getFieldType();
        boolean boolean77 = weeks74.isSupported(durationFieldType76);
        int int78 = weeks62.get(durationFieldType76);
        boolean boolean79 = weeks25.isSupported(durationFieldType76);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks80 = weeks0.minus(weeks25);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -1030");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "P-3W" + "'", str10, "P-3W");
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-3W" + "'", str56, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks4.getWeeks();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((-1));
        int int8 = weeks7.size();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Period period15 = weeks11.toPeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks11.getFieldType();
        org.joda.time.Weeks weeks17 = weeks7.minus(weeks11);
        org.joda.time.Weeks weeks19 = weeks17.minus((-3));
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = weeks30.toMutablePeriod();
        org.joda.time.Weeks weeks32 = weeks26.plus(weeks30);
        org.joda.time.Weeks weeks33 = weeks19.plus(weeks26);
        org.joda.time.Weeks weeks34 = weeks4.minus(weeks33);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeks((int) 'a');
        org.joda.time.Weeks weeks37 = weeks4.minus(weeks36);
        org.joda.time.DurationFieldType durationFieldType39 = weeks36.getFieldType((int) (byte) 0);
        org.joda.time.Weeks weeks40 = weeks36.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(weeks40);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Weeks weeks8 = weeks4.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks15 = weeks11.negated();
        boolean boolean16 = weeks8.isGreaterThan(weeks11);
        org.joda.time.DurationFieldType durationFieldType17 = weeks8.getFieldType();
        int int18 = weeks1.get(durationFieldType17);
        org.joda.time.Weeks weeks20 = weeks1.plus((int) (byte) 100);
        org.joda.time.PeriodType periodType21 = weeks20.getPeriodType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(periodType21);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = weeks0.multipliedBy(3);
        org.joda.time.Weeks weeks24 = weeks0.dividedBy((int) (byte) -1);
        org.joda.time.Duration duration25 = weeks24.toStandardDuration();
        org.joda.time.Period period26 = weeks24.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period26);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType20 = weeks19.getFieldType();
        int int21 = weeks16.get(durationFieldType20);
        org.joda.time.Weeks weeks23 = weeks16.minus((int) (byte) -1);
        org.joda.time.Weeks weeks25 = weeks23.minus((int) '#');
        java.lang.String str26 = weeks23.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks28 = weeks23.dividedBy((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P2W" + "'", str26, "P2W");
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.DurationFieldType durationFieldType5 = weeks2.getFieldType(0);
        org.joda.time.Period period6 = weeks2.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks10 = weeks6.minus((int) (byte) 100);
        org.joda.time.Weeks weeks12 = weeks10.multipliedBy((int) ' ');
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks4.getWeeks();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((-1));
        int int8 = weeks7.size();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Period period15 = weeks11.toPeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks11.getFieldType();
        org.joda.time.Weeks weeks17 = weeks7.minus(weeks11);
        org.joda.time.Weeks weeks19 = weeks17.minus((-3));
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = weeks30.toMutablePeriod();
        org.joda.time.Weeks weeks32 = weeks26.plus(weeks30);
        org.joda.time.Weeks weeks33 = weeks19.plus(weeks26);
        org.joda.time.Weeks weeks34 = weeks4.minus(weeks33);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeks((int) 'a');
        org.joda.time.Weeks weeks37 = weeks4.minus(weeks36);
        org.joda.time.DurationFieldType durationFieldType39 = weeks36.getFieldType((int) (byte) 0);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType41 = weeks40.getPeriodType();
        org.joda.time.Weeks weeks43 = weeks40.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks45 = weeks40.dividedBy((int) 'a');
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        boolean boolean49 = weeks47.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        java.lang.String str54 = weeks53.toString();
        boolean boolean55 = weeks47.isLessThan(weeks53);
        org.joda.time.Weeks weeks56 = weeks46.plus(weeks47);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks58 = weeks57.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        java.lang.String str61 = weeks60.toString();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.ONE;
        int int63 = weeks60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks62);
        boolean boolean64 = weeks46.isGreaterThan(weeks62);
        int int65 = weeks45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks46);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        boolean boolean68 = weeks66.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        java.lang.String str73 = weeks72.toString();
        boolean boolean74 = weeks66.isLessThan(weeks72);
        org.joda.time.Weeks weeks75 = weeks72.negated();
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks77 = weeks76.negated();
        org.joda.time.MutablePeriod mutablePeriod78 = weeks77.toMutablePeriod();
        org.joda.time.Weeks weeks79 = weeks75.plus(weeks77);
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        org.joda.time.Weeks weeks81 = weeks45.minus(weeks75);
        org.joda.time.Weeks weeks82 = null;
        org.joda.time.Weeks weeks83 = weeks75.minus(weeks82);
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks83);
        org.joda.time.PeriodType periodType85 = weeks84.getPeriodType();
        int int86 = weeks36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks84);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "P-3W" + "'", str54, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "P-3W" + "'", str61, "P-3W");
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "P-3W" + "'", str73, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(mutablePeriod78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-100));
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType26 = weeks5.getFieldType();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks28 = weeks5.plus(weeks27);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = weeks28.getValue((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = weeks1.plus(0);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) '4');
        int int10 = weeks7.size();
        org.joda.time.Period period11 = weeks7.toPeriod();
        org.joda.time.DurationFieldType durationFieldType12 = weeks7.getFieldType();
        boolean boolean13 = weeks4.isSupported(durationFieldType12);
        org.joda.time.Weeks weeks15 = weeks4.multipliedBy((-55));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(weeks15);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType26 = weeks5.getFieldType();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks28 = weeks5.plus(weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks31.dividedBy((int) '4');
        int int34 = weeks31.size();
        org.joda.time.Period period35 = weeks31.toPeriod();
        org.joda.time.DurationFieldType durationFieldType36 = weeks31.getFieldType();
        org.joda.time.Weeks weeks37 = weeks27.plus(weeks31);
        org.joda.time.Duration duration38 = weeks37.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(duration38);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        java.lang.Class<?> wildcardClass8 = weeks7.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks10 = weeks5.multipliedBy((int) (byte) 10);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((-1));
        int int18 = weeks17.size();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Period period25 = weeks21.toPeriod();
        org.joda.time.DurationFieldType durationFieldType26 = weeks21.getFieldType();
        org.joda.time.Weeks weeks27 = weeks17.minus(weeks21);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = weeks34.negated();
        org.joda.time.Weeks weeks38 = weeks17.plus(weeks37);
        boolean boolean39 = weeks14.isLessThan(weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks44 = weeks42.dividedBy((int) '4');
        int int45 = weeks42.size();
        org.joda.time.Period period46 = weeks42.toPeriod();
        org.joda.time.DurationFieldType durationFieldType47 = weeks42.getFieldType();
        boolean boolean48 = weeks14.isSupported(durationFieldType47);
        int int49 = weeks10.get(durationFieldType47);
        java.lang.Class<?> wildcardClass50 = durationFieldType47.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType28 = weeks27.getPeriodType();
        org.joda.time.Weeks weeks30 = weeks27.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks32 = weeks27.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod33 = weeks27.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType34 = weeks27.getFieldType();
        org.joda.time.PeriodType periodType35 = weeks27.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType36 = weeks27.getFieldType();
        org.joda.time.Weeks weeks37 = weeks26.minus(weeks27);
        org.joda.time.Weeks weeks39 = weeks27.minus((int) '4');
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeks((-1));
        int int47 = weeks46.size();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks52 = weeks50.dividedBy((int) '4');
        int int53 = weeks50.size();
        org.joda.time.Period period54 = weeks50.toPeriod();
        org.joda.time.DurationFieldType durationFieldType55 = weeks50.getFieldType();
        org.joda.time.Weeks weeks56 = weeks46.minus(weeks50);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks63.negated();
        org.joda.time.Weeks weeks67 = weeks46.plus(weeks66);
        boolean boolean68 = weeks43.isLessThan(weeks67);
        boolean boolean69 = weeks39.isLessThan(weeks43);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            int int22 = weeks20.getValue((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks20);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = weeks1.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Weeks weeks8 = weeks4.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks15 = weeks11.negated();
        boolean boolean16 = weeks8.isGreaterThan(weeks11);
        org.joda.time.DurationFieldType durationFieldType17 = weeks8.getFieldType();
        int int18 = weeks1.get(durationFieldType17);
        org.joda.time.PeriodType periodType19 = weeks1.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType21 = weeks1.getFieldType(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(periodType19);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P-1W");
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        java.lang.String str6 = weeks5.toString();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((-1));
        int int9 = weeks8.size();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks14 = weeks12.dividedBy((int) '4');
        int int15 = weeks12.size();
        org.joda.time.Period period16 = weeks12.toPeriod();
        org.joda.time.DurationFieldType durationFieldType17 = weeks12.getFieldType();
        org.joda.time.Weeks weeks18 = weeks8.minus(weeks12);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        boolean boolean27 = weeks19.isLessThan(weeks25);
        org.joda.time.Weeks weeks28 = weeks25.negated();
        org.joda.time.Weeks weeks29 = weeks8.plus(weeks28);
        boolean boolean30 = weeks5.isLessThan(weeks29);
        boolean boolean31 = weeks1.equals((java.lang.Object) boolean30);
        org.joda.time.Weeks weeks33 = weeks1.plus(4);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks33);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks42 = null;
        org.joda.time.Weeks weeks43 = weeks35.minus(weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = weeks46.minus(weeks47);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType51 = weeks50.getPeriodType();
        org.joda.time.Weeks weeks53 = weeks50.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks55 = weeks50.dividedBy((int) 'a');
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks56.plus(weeks57);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        java.lang.String str71 = weeks70.toString();
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.ONE;
        int int73 = weeks70.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks72);
        boolean boolean74 = weeks56.isGreaterThan(weeks72);
        int int75 = weeks55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks56);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.THREE;
        boolean boolean78 = weeks76.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks80 = weeks79.negated();
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks80);
        org.joda.time.Weeks weeks82 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks80);
        java.lang.String str83 = weeks82.toString();
        boolean boolean84 = weeks76.isLessThan(weeks82);
        org.joda.time.Weeks weeks85 = weeks82.negated();
        org.joda.time.Weeks weeks86 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks87 = weeks86.negated();
        org.joda.time.MutablePeriod mutablePeriod88 = weeks87.toMutablePeriod();
        org.joda.time.Weeks weeks89 = weeks85.plus(weeks87);
        org.joda.time.Weeks weeks90 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks85);
        org.joda.time.Weeks weeks91 = weeks55.minus(weeks85);
        boolean boolean92 = weeks47.isLessThan(weeks55);
        org.joda.time.Weeks weeks94 = weeks55.minus(100);
        boolean boolean95 = weeks44.isLessThan(weeks94);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "P-3W" + "'", str71, "P-3W");
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "P-3W" + "'", str83, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(mutablePeriod88);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertNotNull(weeks91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(weeks94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = weeks3.dividedBy(1);
        org.joda.time.Weeks weeks11 = weeks3.minus((int) 'a');
        java.lang.Class<?> wildcardClass12 = weeks11.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType9 = weeks8.getPeriodType();
        org.joda.time.Weeks weeks11 = weeks8.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks13 = weeks8.dividedBy((int) 'a');
        boolean boolean14 = weeks0.isGreaterThan(weeks8);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType16 = weeks8.getFieldType(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = weeks11.minus((-3));
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        boolean boolean16 = weeks14.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        boolean boolean22 = weeks14.isLessThan(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.MutablePeriod mutablePeriod25 = weeks24.toMutablePeriod();
        org.joda.time.Weeks weeks26 = weeks20.plus(weeks24);
        org.joda.time.Weeks weeks27 = weeks13.plus(weeks20);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        boolean boolean33 = weeks20.equals((java.lang.Object) str32);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks12 = weeks10.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        java.lang.String str17 = weeks16.toString();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.ONE;
        int int19 = weeks16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks18);
        java.lang.String str20 = weeks16.toString();
        org.joda.time.Weeks weeks22 = weeks16.plus((int) (short) 0);
        org.joda.time.Duration duration23 = weeks22.toStandardDuration();
        boolean boolean24 = weeks10.equals((java.lang.Object) duration23);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "P-3W" + "'", str17, "P-3W");
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P-3W" + "'", str20, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        int int28 = weeks6.size();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType30 = weeks29.getPeriodType();
        org.joda.time.Weeks weeks32 = weeks29.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks34 = weeks29.dividedBy((int) 'a');
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks35.plus(weeks36);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        int int52 = weeks49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        boolean boolean53 = weeks35.isGreaterThan(weeks51);
        int int54 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.DurationFieldType durationFieldType55 = weeks34.getFieldType();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks57 = weeks34.plus(weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks60.dividedBy((int) '4');
        int int63 = weeks60.size();
        org.joda.time.Period period64 = weeks60.toPeriod();
        org.joda.time.DurationFieldType durationFieldType65 = weeks60.getFieldType();
        org.joda.time.Weeks weeks66 = weeks56.plus(weeks60);
        org.joda.time.Weeks weeks67 = weeks6.plus(weeks66);
        org.joda.time.Weeks weeks69 = weeks66.minus(0);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        org.joda.time.Weeks weeks76 = weeks74.dividedBy((int) '4');
        int int77 = weeks74.size();
        org.joda.time.Weeks weeks78 = weeks74.negated();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks80 = weeks79.negated();
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks80);
        org.joda.time.Weeks weeks83 = weeks81.dividedBy((int) '4');
        int int84 = weeks81.size();
        org.joda.time.Weeks weeks85 = weeks81.negated();
        boolean boolean86 = weeks78.isGreaterThan(weeks81);
        org.joda.time.DurationFieldType durationFieldType87 = weeks78.getFieldType();
        int int88 = weeks71.get(durationFieldType87);
        org.joda.time.Weeks weeks90 = weeks71.plus((int) (byte) 100);
        org.joda.time.Weeks weeks92 = weeks90.multipliedBy(1);
        int int93 = weeks69.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks90);
        org.joda.time.Weeks weeks94 = weeks69.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(weeks94);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) '4');
        int int10 = weeks7.size();
        org.joda.time.Weeks weeks11 = weeks4.plus(weeks7);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.DurationFieldType durationFieldType17 = weeks16.getFieldType();
        org.joda.time.DurationFieldType durationFieldType19 = weeks16.getFieldType(0);
        boolean boolean20 = weeks13.isSupported(durationFieldType19);
        boolean boolean21 = weeks7.isSupported(durationFieldType19);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(weeks22);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Period period6 = weeks2.toPeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks2.getFieldType();
        java.lang.String str8 = weeks2.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = weeks2.getValue((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.weeksIn(readableInterval23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        boolean boolean33 = weeks25.isLessThan(weeks31);
        org.joda.time.Weeks weeks34 = weeks24.minus(weeks31);
        org.joda.time.Weeks weeks36 = weeks34.plus((int) 'a');
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = weeks38.minus(weeks39);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType43 = weeks42.getPeriodType();
        int int44 = weeks41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks36.plus(weeks42);
        org.joda.time.DurationFieldType durationFieldType46 = weeks36.getFieldType();
        boolean boolean47 = weeks19.isSupported(durationFieldType46);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = weeks19.getValue(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        boolean boolean3 = weeks0.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks5 = weeks0.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        java.lang.String str10 = weeks9.toString();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.weeks((-1));
        int int13 = weeks12.size();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks18 = weeks16.dividedBy((int) '4');
        int int19 = weeks16.size();
        org.joda.time.Period period20 = weeks16.toPeriod();
        org.joda.time.DurationFieldType durationFieldType21 = weeks16.getFieldType();
        org.joda.time.Weeks weeks22 = weeks12.minus(weeks16);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        boolean boolean25 = weeks23.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        java.lang.String str30 = weeks29.toString();
        boolean boolean31 = weeks23.isLessThan(weeks29);
        org.joda.time.Weeks weeks32 = weeks29.negated();
        org.joda.time.Weeks weeks33 = weeks12.plus(weeks32);
        boolean boolean34 = weeks9.isLessThan(weeks33);
        org.joda.time.MutablePeriod mutablePeriod35 = weeks9.toMutablePeriod();
        int int37 = weeks9.getValue((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType38 = weeks9.getFieldType();
        boolean boolean39 = weeks0.isSupported(durationFieldType38);
        java.lang.Class<?> wildcardClass40 = durationFieldType38.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "P-3W" + "'", str10, "P-3W");
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "P-3W" + "'", str30, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-3) + "'", int37 == (-3));
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType18 = weeks17.getPeriodType();
        org.joda.time.Weeks weeks20 = weeks17.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.plus(weeks22);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        java.lang.String str36 = weeks35.toString();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.ONE;
        int int38 = weeks35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks37);
        boolean boolean39 = weeks21.isGreaterThan(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType41 = weeks40.getFieldType();
        int int42 = weeks37.get(durationFieldType41);
        boolean boolean43 = weeks17.isSupported(durationFieldType41);
        int int44 = weeks0.get(durationFieldType41);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "P-3W" + "'", str36, "P-3W");
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = weeks19.plus(weeks20);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        java.lang.String str34 = weeks33.toString();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        int int36 = weeks33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        boolean boolean37 = weeks19.isGreaterThan(weeks35);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Period period39 = weeks19.toPeriod();
        boolean boolean40 = weeks15.isLessThan(weeks19);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        boolean boolean50 = weeks42.isLessThan(weeks48);
        org.joda.time.Weeks weeks51 = weeks41.plus(weeks42);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        java.lang.String str56 = weeks55.toString();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.ONE;
        int int58 = weeks55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks57);
        boolean boolean59 = weeks41.isGreaterThan(weeks57);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Period period61 = weeks41.toPeriod();
        org.joda.time.Weeks weeks62 = weeks19.minus(weeks41);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.THREE;
        boolean boolean65 = weeks63.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks67 = weeks66.negated();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        java.lang.String str70 = weeks69.toString();
        boolean boolean71 = weeks63.isLessThan(weeks69);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.MutablePeriod mutablePeriod74 = weeks73.toMutablePeriod();
        org.joda.time.Weeks weeks75 = weeks69.plus(weeks73);
        org.joda.time.Weeks weeks77 = weeks73.multipliedBy(10);
        org.joda.time.Period period78 = weeks73.toPeriod();
        org.joda.time.Weeks weeks80 = weeks73.minus(10);
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks82 = weeks81.negated();
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks82);
        org.joda.time.DurationFieldType durationFieldType84 = weeks83.getFieldType();
        org.joda.time.DurationFieldType durationFieldType86 = weeks83.getFieldType(0);
        org.joda.time.Weeks weeks87 = weeks73.plus(weeks83);
        java.lang.String str88 = weeks73.toString();
        boolean boolean89 = weeks19.isLessThan(weeks73);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "P-3W" + "'", str34, "P-3W");
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-3W" + "'", str56, "P-3W");
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "P-3W" + "'", str70, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(mutablePeriod74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "P-3W" + "'", str88, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Weeks weeks8 = weeks4.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks15 = weeks11.negated();
        boolean boolean16 = weeks8.isGreaterThan(weeks11);
        org.joda.time.DurationFieldType durationFieldType17 = weeks8.getFieldType();
        int int18 = weeks1.get(durationFieldType17);
        org.joda.time.Weeks weeks20 = weeks1.plus((int) (byte) 100);
        int int21 = weeks1.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.minus(weeks28);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks38 = weeks35.multipliedBy(0);
        org.joda.time.Weeks weeks39 = weeks33.minus(weeks38);
        int int40 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks41 = weeks39.negated();
        org.joda.time.MutablePeriod mutablePeriod42 = weeks41.toMutablePeriod();
        org.joda.time.Weeks weeks43 = weeks0.plus(weeks41);
        int int44 = weeks43.size();
        org.joda.time.PeriodType periodType45 = weeks43.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(periodType45);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks12 = weeks10.multipliedBy((int) (byte) 100);
        int int13 = weeks10.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.MutablePeriod mutablePeriod27 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.TWO;
        boolean boolean29 = weeks22.isGreaterThan(weeks28);
        org.joda.time.Weeks weeks30 = weeks28.negated();
        int int31 = weeks28.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks16 = weeks11.dividedBy((int) ' ');
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks16);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType(0);
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = weeks10.minus(weeks11);
        org.joda.time.DurationFieldType durationFieldType14 = weeks11.getFieldType();
        boolean boolean15 = weeks1.isLessThan(weeks11);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((-1));
        int int18 = weeks17.size();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Period period25 = weeks21.toPeriod();
        org.joda.time.DurationFieldType durationFieldType26 = weeks21.getFieldType();
        org.joda.time.Weeks weeks27 = weeks17.minus(weeks21);
        org.joda.time.Weeks weeks29 = weeks17.minus((int) (byte) 100);
        org.joda.time.Duration duration30 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks31 = weeks1.minus(weeks17);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks33.negated();
        boolean boolean36 = weeks17.isGreaterThan(weeks33);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        java.lang.String str3 = weeks1.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "P-1W" + "'", str3, "P-1W");
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.MutablePeriod mutablePeriod33 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks34 = weeks28.plus(weeks32);
        boolean boolean35 = weeks20.isLessThan(weeks32);
        java.lang.Class<?> wildcardClass36 = weeks32.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = weeks13.minus(weeks14);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.PeriodType periodType19 = weeks17.getPeriodType();
        boolean boolean20 = weeks13.isGreaterThan(weeks17);
        org.joda.time.Weeks weeks22 = weeks17.minus((int) (byte) 0);
        org.joda.time.Weeks weeks23 = weeks10.plus(weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType25 = weeks24.getPeriodType();
        org.joda.time.Weeks weeks27 = weeks24.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks29 = weeks24.dividedBy((int) 'a');
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks30.plus(weeks31);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        java.lang.String str45 = weeks44.toString();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.ONE;
        int int47 = weeks44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks46);
        boolean boolean48 = weeks30.isGreaterThan(weeks46);
        int int49 = weeks29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks30);
        org.joda.time.DurationFieldType durationFieldType50 = weeks29.getFieldType();
        org.joda.time.Weeks weeks51 = weeks10.plus(weeks29);
        org.joda.time.Period period52 = weeks51.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P-3W" + "'", str45, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(period52);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks16 = weeks11.minus((int) (byte) -1);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks17.plus(weeks18);
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = weeks30.minus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.PeriodType periodType36 = weeks34.getPeriodType();
        boolean boolean37 = weeks30.isGreaterThan(weeks34);
        org.joda.time.Weeks weeks39 = weeks34.minus((int) (byte) 0);
        org.joda.time.Weeks weeks40 = weeks27.plus(weeks39);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType42 = weeks41.getPeriodType();
        org.joda.time.Weeks weeks44 = weeks41.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks46 = weeks41.dividedBy((int) 'a');
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        boolean boolean50 = weeks48.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        boolean boolean56 = weeks48.isLessThan(weeks54);
        org.joda.time.Weeks weeks57 = weeks47.plus(weeks48);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.ONE;
        int int64 = weeks61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks63);
        boolean boolean65 = weeks47.isGreaterThan(weeks63);
        int int66 = weeks46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        org.joda.time.DurationFieldType durationFieldType67 = weeks46.getFieldType();
        org.joda.time.Weeks weeks68 = weeks27.plus(weeks46);
        org.joda.time.Weeks weeks69 = weeks11.plus(weeks46);
        org.joda.time.MutablePeriod mutablePeriod70 = weeks69.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(10);
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.PeriodType periodType7 = weeks5.getPeriodType();
        boolean boolean8 = weeks1.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks10 = weeks5.minus((int) (byte) 0);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = weeks17.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = weeks21.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = weeks21.isSupported(durationFieldType26);
        org.joda.time.Weeks weeks28 = weeks20.minus(weeks21);
        boolean boolean29 = weeks10.isLessThan(weeks28);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType31 = weeks10.getFieldType((-3));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.Weeks weeks24 = weeks22.minus(1030);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = weeks25.plus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.ONE;
        int int40 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks39.plus((int) (short) -1);
        int int43 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks25.plus((int) (short) 100);
        org.joda.time.Weeks weeks47 = weeks25.multipliedBy(3);
        int int48 = weeks47.getWeeks();
        int int49 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        int int50 = weeks24.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 9 + "'", int48 == 9);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-927) + "'", int50 == (-927));
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeks((-1));
        int int21 = weeks20.size();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks24.dividedBy((int) '4');
        int int27 = weeks24.size();
        org.joda.time.Period period28 = weeks24.toPeriod();
        org.joda.time.DurationFieldType durationFieldType29 = weeks24.getFieldType();
        org.joda.time.Weeks weeks30 = weeks20.minus(weeks24);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks37.negated();
        org.joda.time.Weeks weeks41 = weeks20.plus(weeks40);
        boolean boolean42 = weeks17.isLessThan(weeks41);
        org.joda.time.MutablePeriod mutablePeriod43 = weeks17.toMutablePeriod();
        int int44 = weeks17.getWeeks();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType46 = weeks45.getPeriodType();
        org.joda.time.Weeks weeks48 = weeks45.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks50 = weeks45.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod51 = weeks45.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType52 = weeks45.getFieldType();
        org.joda.time.PeriodType periodType53 = weeks45.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType54 = weeks45.getFieldType();
        int int55 = weeks17.get(durationFieldType54);
        boolean boolean56 = weeks11.equals((java.lang.Object) weeks17);
        org.joda.time.Period period57 = weeks17.toPeriod();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period57);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-3) + "'", int44 == (-3));
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(weeks58);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        java.lang.Class<?> wildcardClass3 = periodType2.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType24 = weeks23.getPeriodType();
        org.joda.time.Weeks weeks26 = weeks23.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks28 = weeks23.dividedBy((int) 'a');
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks29.plus(weeks30);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        boolean boolean47 = weeks29.isGreaterThan(weeks45);
        int int48 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        boolean boolean51 = weeks49.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        java.lang.String str56 = weeks55.toString();
        boolean boolean57 = weeks49.isLessThan(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks60 = weeks59.negated();
        org.joda.time.MutablePeriod mutablePeriod61 = weeks60.toMutablePeriod();
        org.joda.time.Weeks weeks62 = weeks58.plus(weeks60);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks58);
        org.joda.time.Weeks weeks64 = weeks28.minus(weeks58);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        boolean boolean67 = weeks65.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        org.joda.time.Weeks weeks73 = weeks65.plus(weeks71);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks75 = weeks74.negated();
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        java.lang.String str78 = weeks77.toString();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.ONE;
        int int80 = weeks77.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks79);
        org.joda.time.Weeks weeks82 = weeks79.plus((int) (short) -1);
        int int83 = weeks65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks82);
        org.joda.time.Weeks weeks85 = weeks65.plus((int) (short) 100);
        org.joda.time.Weeks weeks87 = weeks65.multipliedBy(3);
        org.joda.time.Weeks weeks88 = weeks28.minus(weeks87);
        org.joda.time.DurationFieldType durationFieldType89 = weeks28.getFieldType();
        int int90 = weeks19.get(durationFieldType89);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-3W" + "'", str56, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "P-3W" + "'", str78, "P-3W");
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 3 + "'", int90 == 3);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.Period period29 = weeks27.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(period29);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.PeriodType periodType10 = weeks9.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType12 = weeks9.getFieldType(0);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks15.size();
        org.joda.time.Period period19 = weeks15.toPeriod();
        org.joda.time.Weeks weeks21 = weeks15.plus(9);
        boolean boolean22 = weeks9.equals((java.lang.Object) 9);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        int int28 = weeks6.size();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType30 = weeks29.getPeriodType();
        org.joda.time.Weeks weeks32 = weeks29.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks34 = weeks29.dividedBy((int) 'a');
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks35.plus(weeks36);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        int int52 = weeks49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        boolean boolean53 = weeks35.isGreaterThan(weeks51);
        int int54 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.DurationFieldType durationFieldType55 = weeks34.getFieldType();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks57 = weeks34.plus(weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks60.dividedBy((int) '4');
        int int63 = weeks60.size();
        org.joda.time.Period period64 = weeks60.toPeriod();
        org.joda.time.DurationFieldType durationFieldType65 = weeks60.getFieldType();
        org.joda.time.Weeks weeks66 = weeks56.plus(weeks60);
        org.joda.time.Weeks weeks67 = weeks6.plus(weeks66);
        org.joda.time.Weeks weeks69 = weeks66.minus(0);
        java.lang.Class<?> wildcardClass70 = weeks66.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        java.lang.Class<?> wildcardClass2 = weeks0.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType(0);
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = weeks10.minus(weeks11);
        org.joda.time.DurationFieldType durationFieldType14 = weeks11.getFieldType();
        boolean boolean15 = weeks1.isLessThan(weeks11);
        org.joda.time.Weeks weeks17 = weeks11.dividedBy(3);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = weeks17.getValue((-55));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -55");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks17);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks18.negated();
        org.joda.time.Weeks weeks22 = weeks1.plus(weeks21);
        int int23 = weeks21.size();
        int int24 = weeks21.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = weeks4.negated();
        org.joda.time.DurationFieldType durationFieldType7 = weeks6.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = weeks6.getValue((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.DurationFieldType durationFieldType16 = weeks15.getFieldType();
        org.joda.time.DurationFieldType durationFieldType18 = weeks15.getFieldType(0);
        boolean boolean19 = weeks12.isSupported(durationFieldType18);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = weeks21.minus(weeks22);
        org.joda.time.DurationFieldType durationFieldType25 = weeks22.getFieldType();
        boolean boolean26 = weeks12.isLessThan(weeks22);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeks((-1));
        int int29 = weeks28.size();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        org.joda.time.Weeks weeks34 = weeks32.dividedBy((int) '4');
        int int35 = weeks32.size();
        org.joda.time.Period period36 = weeks32.toPeriod();
        org.joda.time.DurationFieldType durationFieldType37 = weeks32.getFieldType();
        org.joda.time.Weeks weeks38 = weeks28.minus(weeks32);
        org.joda.time.Weeks weeks40 = weeks28.minus((int) (byte) 100);
        org.joda.time.Duration duration41 = weeks28.toStandardDuration();
        org.joda.time.Weeks weeks42 = weeks12.minus(weeks28);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType45 = weeks44.getFieldType();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        boolean boolean48 = weeks46.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        boolean boolean54 = weeks46.isLessThan(weeks52);
        org.joda.time.Weeks weeks55 = weeks52.negated();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.MutablePeriod mutablePeriod58 = weeks57.toMutablePeriod();
        org.joda.time.Weeks weeks59 = weeks55.plus(weeks57);
        org.joda.time.Weeks weeks60 = weeks44.plus(weeks59);
        org.joda.time.Weeks weeks62 = weeks59.plus((int) (short) 10);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        boolean boolean66 = weeks64.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        java.lang.String str71 = weeks70.toString();
        boolean boolean72 = weeks64.isLessThan(weeks70);
        org.joda.time.Weeks weeks73 = weeks63.plus(weeks64);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks75 = weeks74.negated();
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        java.lang.String str78 = weeks77.toString();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.ONE;
        int int80 = weeks77.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks79);
        boolean boolean81 = weeks63.isGreaterThan(weeks79);
        org.joda.time.Weeks weeks82 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Period period83 = weeks63.toPeriod();
        boolean boolean84 = weeks59.isLessThan(weeks63);
        boolean boolean85 = weeks43.equals((java.lang.Object) weeks59);
        boolean boolean86 = weeks0.isLessThan(weeks59);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "P-3W" + "'", str71, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "P-3W" + "'", str78, "P-3W");
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType23 = weeks20.getFieldType(0);
        org.joda.time.Weeks weeks24 = weeks20.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int26 = weeks20.getValue(103);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 103");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks24);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks10 = weeks6.dividedBy(3);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.weeks((int) (short) -1);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = weeks13.getFieldType();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        boolean boolean17 = weeks15.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        boolean boolean23 = weeks15.isLessThan(weeks21);
        org.joda.time.Weeks weeks24 = weeks21.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks26.toMutablePeriod();
        org.joda.time.Weeks weeks28 = weeks24.plus(weeks26);
        org.joda.time.Weeks weeks29 = weeks13.plus(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks32 = weeks31.negated();
        int int33 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.MutablePeriod mutablePeriod34 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks6.plus(weeks32);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = weeks6.getValue(1030);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1030");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = weeks4.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = weeks4.getValue((-927));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -927");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (byte) 100);
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks26.dividedBy((int) '4');
        int int29 = weeks26.size();
        org.joda.time.Weeks weeks30 = weeks26.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks35 = weeks33.dividedBy((int) '4');
        int int36 = weeks33.size();
        org.joda.time.Weeks weeks37 = weeks33.negated();
        boolean boolean38 = weeks30.isGreaterThan(weeks33);
        org.joda.time.DurationFieldType durationFieldType39 = weeks30.getFieldType();
        org.joda.time.Weeks weeks41 = weeks30.multipliedBy((int) (short) 1);
        int int42 = weeks23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks41);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        boolean boolean3 = weeks0.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks5 = weeks0.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = weeks6.getFieldType();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        boolean boolean10 = weeks8.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        boolean boolean16 = weeks8.isLessThan(weeks14);
        org.joda.time.Weeks weeks17 = weeks14.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.MutablePeriod mutablePeriod20 = weeks19.toMutablePeriod();
        org.joda.time.Weeks weeks21 = weeks17.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks6.plus(weeks21);
        org.joda.time.Weeks weeks23 = weeks5.minus(weeks6);
        org.joda.time.Weeks weeks25 = weeks5.dividedBy((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType26 = weeks25.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(durationFieldType26);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        int int24 = weeks21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        java.lang.String str25 = weeks21.toString();
        org.joda.time.Weeks weeks27 = weeks21.dividedBy(1);
        org.joda.time.Weeks weeks29 = weeks21.minus((int) 'a');
        int int30 = weeks17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks21);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = weeks33.get(durationFieldType34);
        int int36 = weeks33.size();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.DurationFieldType durationFieldType40 = weeks39.getFieldType();
        boolean boolean41 = weeks33.isSupported(durationFieldType40);
        int int42 = weeks17.get(durationFieldType40);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) '#');
        org.joda.time.Weeks weeks22 = weeks0.multipliedBy((-2));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.minus(weeks28);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks38 = weeks35.multipliedBy(0);
        org.joda.time.Weeks weeks39 = weeks33.minus(weeks38);
        int int40 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks41 = weeks39.negated();
        org.joda.time.MutablePeriod mutablePeriod42 = weeks41.toMutablePeriod();
        org.joda.time.Weeks weeks43 = weeks0.plus(weeks41);
        int int44 = weeks43.size();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType46 = weeks45.getPeriodType();
        java.lang.String str47 = weeks45.toString();
        org.joda.time.DurationFieldType durationFieldType48 = weeks45.getFieldType();
        int int49 = weeks43.get(durationFieldType48);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P3W" + "'", str47, "P3W");
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = weeks3.plus((int) (short) 0);
        java.lang.Object obj10 = null;
        boolean boolean11 = weeks3.equals(obj10);
        java.lang.String str12 = weeks3.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(300);
        org.joda.time.Seconds seconds2 = weeks1.toStandardSeconds();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(seconds2);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks6 = weeks0.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod7 = weeks0.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        int int12 = weeks11.size();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks15.size();
        org.joda.time.Period period19 = weeks15.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = weeks15.getFieldType();
        org.joda.time.Weeks weeks21 = weeks11.minus(weeks15);
        org.joda.time.Weeks weeks23 = weeks11.minus((int) (byte) 100);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        org.joda.time.DurationFieldType durationFieldType31 = weeks28.getFieldType(0);
        boolean boolean32 = weeks25.isSupported(durationFieldType31);
        boolean boolean33 = weeks11.equals((java.lang.Object) weeks25);
        boolean boolean34 = weeks0.isLessThan(weeks25);
        org.joda.time.Weeks weeks36 = weeks25.multipliedBy(3);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType38 = weeks25.getFieldType((-927));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -927");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(weeks36);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks6 = weeks0.multipliedBy((int) (short) -1);
        org.joda.time.PeriodType periodType7 = weeks6.getPeriodType();
        java.lang.Class<?> wildcardClass8 = weeks6.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks18.negated();
        org.joda.time.Weeks weeks22 = weeks1.plus(weeks21);
        int int23 = weeks1.size();
        java.lang.Class<?> wildcardClass24 = weeks1.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        org.joda.time.Weeks weeks27 = weeks19.plus(weeks25);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.ONE;
        int int34 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        org.joda.time.Weeks weeks36 = weeks33.plus((int) (short) -1);
        int int37 = weeks19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks36);
        org.joda.time.Weeks weeks39 = weeks19.plus((int) (short) 100);
        org.joda.time.Weeks weeks41 = weeks19.multipliedBy(3);
        org.joda.time.Weeks weeks42 = weeks18.minus(weeks19);
        org.joda.time.DurationFieldType durationFieldType43 = weeks18.getFieldType();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        java.lang.String str48 = weeks47.toString();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.ONE;
        int int50 = weeks47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks49);
        org.joda.time.Weeks weeks52 = weeks49.plus((int) (short) -1);
        org.joda.time.Weeks weeks54 = weeks49.multipliedBy((int) (byte) 10);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.weeks((-1));
        int int62 = weeks61.size();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks64 = weeks63.negated();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks64);
        org.joda.time.Weeks weeks67 = weeks65.dividedBy((int) '4');
        int int68 = weeks65.size();
        org.joda.time.Period period69 = weeks65.toPeriod();
        org.joda.time.DurationFieldType durationFieldType70 = weeks65.getFieldType();
        org.joda.time.Weeks weeks71 = weeks61.minus(weeks65);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        boolean boolean74 = weeks72.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks76 = weeks75.negated();
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks76);
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks76);
        java.lang.String str79 = weeks78.toString();
        boolean boolean80 = weeks72.isLessThan(weeks78);
        org.joda.time.Weeks weeks81 = weeks78.negated();
        org.joda.time.Weeks weeks82 = weeks61.plus(weeks81);
        boolean boolean83 = weeks58.isLessThan(weeks82);
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks85 = weeks84.negated();
        org.joda.time.Weeks weeks86 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks85);
        org.joda.time.Weeks weeks88 = weeks86.dividedBy((int) '4');
        int int89 = weeks86.size();
        org.joda.time.Period period90 = weeks86.toPeriod();
        org.joda.time.DurationFieldType durationFieldType91 = weeks86.getFieldType();
        boolean boolean92 = weeks58.isSupported(durationFieldType91);
        int int93 = weeks54.get(durationFieldType91);
        org.joda.time.Weeks weeks95 = weeks54.multipliedBy(3);
        boolean boolean96 = weeks18.isLessThan(weeks54);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "P-3W" + "'", str48, "P-3W");
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "P-3W" + "'", str79, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 10 + "'", int93 == 10);
        org.junit.Assert.assertNotNull(weeks95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.PeriodType periodType10 = weeks6.getPeriodType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = weeks11.plus(weeks17);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        int int26 = weeks23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks25.plus((int) (short) -1);
        int int29 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.Weeks weeks31 = weeks28.plus((int) (byte) 1);
        boolean boolean33 = weeks31.equals((java.lang.Object) 1.0d);
        org.joda.time.Weeks weeks35 = weeks31.plus((int) (byte) 100);
        org.joda.time.Weeks weeks36 = weeks6.plus(weeks31);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        boolean boolean39 = weeks37.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = weeks37.plus(weeks43);
        org.joda.time.Weeks weeks46 = weeks45.negated();
        boolean boolean47 = weeks31.isLessThan(weeks45);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks27 = weeks5.minus(300);
        org.joda.time.MutablePeriod mutablePeriod28 = weeks27.toMutablePeriod();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType30 = weeks29.getPeriodType();
        org.joda.time.Weeks weeks32 = weeks29.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks34 = weeks29.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod35 = weeks29.toMutablePeriod();
        boolean boolean36 = weeks27.equals((java.lang.Object) weeks29);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        java.lang.Class<?> wildcardClass21 = weeks16.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int30 = weeks3.getWeeks();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = weeks32.minus(weeks33);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.PeriodType periodType38 = weeks36.getPeriodType();
        boolean boolean39 = weeks32.isGreaterThan(weeks36);
        org.joda.time.Weeks weeks41 = weeks36.minus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType42 = weeks41.getFieldType();
        boolean boolean43 = weeks3.isSupported(durationFieldType42);
        org.joda.time.Weeks weeks44 = weeks3.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(weeks44);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType6 = weeks5.getPeriodType();
        org.joda.time.Weeks weeks8 = weeks5.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks10 = weeks5.dividedBy((int) 'a');
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks11.plus(weeks12);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.ONE;
        int int28 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks27);
        boolean boolean29 = weeks11.isGreaterThan(weeks27);
        int int30 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks37.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.MutablePeriod mutablePeriod43 = weeks42.toMutablePeriod();
        org.joda.time.Weeks weeks44 = weeks40.plus(weeks42);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks46 = weeks10.minus(weeks40);
        boolean boolean47 = weeks2.isLessThan(weeks10);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeksIn(readableInterval3);
        int int5 = weeks1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks4);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType((-13));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -13");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType();
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        java.lang.Class<?> wildcardClass9 = durationFieldType7.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Duration duration42 = weeks41.toStandardDuration();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        boolean boolean45 = weeks43.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        boolean boolean51 = weeks43.isLessThan(weeks49);
        org.joda.time.Weeks weeks52 = weeks49.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.MutablePeriod mutablePeriod55 = weeks54.toMutablePeriod();
        org.joda.time.Weeks weeks56 = weeks52.plus(weeks54);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType58 = weeks57.getFieldType();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        boolean boolean61 = weeks59.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        java.lang.String str66 = weeks65.toString();
        boolean boolean67 = weeks59.isLessThan(weeks65);
        org.joda.time.Weeks weeks68 = weeks65.negated();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.MutablePeriod mutablePeriod71 = weeks70.toMutablePeriod();
        org.joda.time.Weeks weeks72 = weeks68.plus(weeks70);
        org.joda.time.Weeks weeks73 = weeks57.plus(weeks72);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.THREE;
        boolean boolean77 = weeks75.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks79 = weeks78.negated();
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks79);
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks79);
        java.lang.String str82 = weeks81.toString();
        boolean boolean83 = weeks75.isLessThan(weeks81);
        org.joda.time.Weeks weeks84 = weeks74.plus(weeks75);
        org.joda.time.Weeks weeks85 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType86 = weeks85.getFieldType();
        boolean boolean87 = weeks84.isSupported(durationFieldType86);
        int int88 = weeks72.get(durationFieldType86);
        int int89 = weeks54.get(durationFieldType86);
        boolean boolean90 = weeks41.isSupported(durationFieldType86);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P-3W" + "'", str66, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "P-3W" + "'", str82, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-3) + "'", int89 == (-3));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean24 = weeks19.equals((java.lang.Object) 1L);
        int int25 = weeks1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        org.joda.time.Weeks weeks34 = weeks26.plus(weeks32);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        int int41 = weeks38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks40);
        org.joda.time.Weeks weeks43 = weeks40.plus((int) (short) -1);
        int int44 = weeks26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks43);
        int int45 = weeks43.getWeeks();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType47 = weeks46.getFieldType();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        boolean boolean50 = weeks48.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        boolean boolean56 = weeks48.isLessThan(weeks54);
        org.joda.time.Weeks weeks57 = weeks54.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.MutablePeriod mutablePeriod60 = weeks59.toMutablePeriod();
        org.joda.time.Weeks weeks61 = weeks57.plus(weeks59);
        org.joda.time.Weeks weeks62 = weeks46.plus(weeks61);
        org.joda.time.Weeks weeks64 = weeks61.dividedBy((int) (short) 100);
        boolean boolean65 = weeks43.isGreaterThan(weeks64);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks67 = weeks66.negated();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        java.lang.String str70 = weeks69.toString();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.ONE;
        int int72 = weeks69.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks71);
        org.joda.time.Weeks weeks74 = weeks71.plus((int) (short) -1);
        org.joda.time.Weeks weeks76 = weeks71.multipliedBy((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType78 = weeks76.getFieldType((int) (byte) 0);
        boolean boolean79 = weeks64.isSupported(durationFieldType78);
        int int80 = weeks1.get(durationFieldType78);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "P-3W" + "'", str70, "P-3W");
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-3) + "'", int80 == (-3));
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = weeks11.minus(weeks12);
        boolean boolean15 = weeks0.equals((java.lang.Object) weeks14);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = weeks14.getValue((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = weeks0.getValue(900);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 900");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(9);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        java.lang.String str3 = weeks1.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "P9W" + "'", str3, "P9W");
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks19.dividedBy((int) '4');
        int int22 = weeks19.size();
        org.joda.time.Weeks weeks23 = weeks19.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks26.dividedBy((int) '4');
        int int29 = weeks26.size();
        org.joda.time.Weeks weeks30 = weeks26.negated();
        boolean boolean31 = weeks23.isGreaterThan(weeks26);
        org.joda.time.DurationFieldType durationFieldType32 = weeks23.getFieldType();
        int int33 = weeks16.get(durationFieldType32);
        int int34 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks35.plus(weeks36);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        int int52 = weeks49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        boolean boolean53 = weeks35.isGreaterThan(weeks51);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        boolean boolean55 = weeks51.isGreaterThan(weeks54);
        org.joda.time.Weeks weeks57 = weeks54.plus((int) (byte) 100);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks60.dividedBy((int) '4');
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks64 = weeks63.negated();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks64);
        org.joda.time.Weeks weeks67 = weeks65.dividedBy((int) '4');
        int int68 = weeks65.size();
        org.joda.time.Weeks weeks69 = weeks62.plus(weeks65);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        org.joda.time.DurationFieldType durationFieldType75 = weeks74.getFieldType();
        org.joda.time.DurationFieldType durationFieldType77 = weeks74.getFieldType(0);
        boolean boolean78 = weeks71.isSupported(durationFieldType77);
        boolean boolean79 = weeks65.isSupported(durationFieldType77);
        org.joda.time.PeriodType periodType80 = weeks65.getPeriodType();
        boolean boolean81 = weeks57.equals((java.lang.Object) weeks65);
        org.joda.time.Weeks weeks83 = weeks57.dividedBy(4);
        boolean boolean84 = weeks16.isLessThan(weeks83);
        int int85 = weeks83.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 25 + "'", int85 == 25);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        java.lang.Class<?> wildcardClass2 = weeks1.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = weeks3.plus((int) (short) 0);
        java.lang.Object obj10 = null;
        boolean boolean11 = weeks3.equals(obj10);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = weeks3.getValue((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Duration duration1 = weeks0.toStandardDuration();
        org.joda.time.Weeks weeks3 = weeks0.plus((int) (short) -1);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(weeks3);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((-1));
        int int20 = weeks19.size();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) '4');
        int int26 = weeks23.size();
        org.joda.time.Period period27 = weeks23.toPeriod();
        org.joda.time.DurationFieldType durationFieldType28 = weeks23.getFieldType();
        org.joda.time.Weeks weeks29 = weeks19.minus(weeks23);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks36.negated();
        org.joda.time.Weeks weeks40 = weeks19.plus(weeks39);
        org.joda.time.Weeks weeks41 = weeks17.plus(weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.TWO;
        int int43 = weeks42.size();
        org.joda.time.Weeks weeks45 = weeks42.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks46 = weeks40.plus(weeks42);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        boolean boolean50 = weeks48.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        boolean boolean56 = weeks48.isLessThan(weeks54);
        org.joda.time.Weeks weeks57 = weeks47.plus(weeks48);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.ONE;
        int int64 = weeks61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks63);
        boolean boolean65 = weeks47.isGreaterThan(weeks63);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        boolean boolean67 = weeks63.isGreaterThan(weeks66);
        org.joda.time.Weeks weeks69 = weeks66.plus((int) (byte) 100);
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = weeks42.plus(weeks69);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType73 = weeks71.getFieldType((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        int int15 = weeks14.size();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        boolean boolean18 = weeks16.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        boolean boolean24 = weeks16.isLessThan(weeks22);
        org.joda.time.Weeks weeks25 = weeks22.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = weeks26.get(durationFieldType29);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        boolean boolean32 = weeks26.isSupported(durationFieldType31);
        org.joda.time.Weeks weeks33 = weeks25.minus(weeks26);
        org.joda.time.Weeks weeks35 = weeks25.dividedBy(10);
        boolean boolean36 = weeks14.isLessThan(weeks25);
        int int37 = weeks25.size();
        org.joda.time.Period period38 = weeks25.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(period38);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-2));
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType24 = weeks2.getFieldType();
        org.joda.time.Weeks weeks26 = weeks2.multipliedBy((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int28 = weeks2.getValue(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks26);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P4W");
        org.joda.time.Period period2 = weeks1.toPeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(period2);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType4 = weeks1.getFieldType(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = weeks2.get(durationFieldType3);
        org.joda.time.Weeks weeks6 = weeks2.plus((-1));
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        org.joda.time.Weeks weeks15 = weeks7.plus(weeks13);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        java.lang.String str20 = weeks19.toString();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.ONE;
        int int22 = weeks19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks21);
        org.joda.time.Weeks weeks24 = weeks21.plus((int) (short) -1);
        int int25 = weeks7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Period period26 = weeks7.toPeriod();
        int int27 = weeks6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks7);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType29 = weeks28.getPeriodType();
        org.joda.time.Weeks weeks31 = weeks28.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks33 = weeks28.dividedBy((int) 'a');
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        boolean boolean37 = weeks35.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        java.lang.String str42 = weeks41.toString();
        boolean boolean43 = weeks35.isLessThan(weeks41);
        org.joda.time.Weeks weeks44 = weeks34.plus(weeks35);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.ONE;
        int int51 = weeks48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks50);
        boolean boolean52 = weeks34.isGreaterThan(weeks50);
        int int53 = weeks33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks34);
        java.lang.String str54 = weeks34.toString();
        org.joda.time.Period period55 = weeks34.toPeriod();
        boolean boolean56 = weeks6.equals((java.lang.Object) weeks34);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P-3W" + "'", str20, "P-3W");
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P-3W" + "'", str42, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "P1W" + "'", str54, "P1W");
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.MutablePeriod mutablePeriod4 = weeks0.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks12.getWeeks();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        int int16 = weeks15.size();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks19.dividedBy((int) '4');
        int int22 = weeks19.size();
        org.joda.time.Period period23 = weeks19.toPeriod();
        org.joda.time.DurationFieldType durationFieldType24 = weeks19.getFieldType();
        org.joda.time.Weeks weeks25 = weeks15.minus(weeks19);
        org.joda.time.Weeks weeks27 = weeks25.minus((-3));
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.MutablePeriod mutablePeriod39 = weeks38.toMutablePeriod();
        org.joda.time.Weeks weeks40 = weeks34.plus(weeks38);
        org.joda.time.Weeks weeks41 = weeks27.plus(weeks34);
        org.joda.time.Weeks weeks42 = weeks12.minus(weeks41);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.weeks((int) 'a');
        org.joda.time.Weeks weeks45 = weeks12.minus(weeks44);
        org.joda.time.DurationFieldType durationFieldType47 = weeks44.getFieldType((int) (byte) 0);
        boolean boolean48 = weeks3.isSupported(durationFieldType47);
        org.joda.time.Weeks weeks50 = weeks3.multipliedBy(900);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(weeks50);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        java.lang.String str2 = weeks0.toString();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.Weeks weeks5 = weeks3.plus((-3));
        // The following exception was thrown during execution in test generation
        try {
            int int7 = weeks3.getValue((-3));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "P3W" + "'", str2, "P3W");
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        int int4 = weeks3.size();
        java.lang.String str5 = weeks3.toString();
        java.lang.String str6 = weeks3.toString();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks8.minus((int) '4');
        org.joda.time.Weeks weeks12 = weeks3.minus(weeks8);
        java.lang.Class<?> wildcardClass13 = weeks12.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-3W" + "'", str5, "P-3W");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (byte) 100);
        org.joda.time.Period period23 = weeks19.toPeriod();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period23);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(weeks24);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = weeks4.negated();
        org.joda.time.DurationFieldType durationFieldType7 = weeks6.getFieldType();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks15 = weeks11.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks18.dividedBy((int) '4');
        int int21 = weeks18.size();
        org.joda.time.Weeks weeks22 = weeks18.negated();
        boolean boolean23 = weeks15.isGreaterThan(weeks18);
        org.joda.time.DurationFieldType durationFieldType24 = weeks15.getFieldType();
        org.joda.time.Weeks weeks26 = weeks15.minus(0);
        boolean boolean27 = weeks8.isGreaterThan(weeks15);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks10 = weeks0.dividedBy(100);
        java.lang.Class<?> wildcardClass11 = weeks0.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.Duration duration23 = weeks19.toStandardDuration();
        org.joda.time.Weeks weeks25 = weeks19.multipliedBy((-100));
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(weeks25);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks6.dividedBy((int) '4');
        int int9 = weeks8.getWeeks();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        int int12 = weeks11.size();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks15.size();
        org.joda.time.Period period19 = weeks15.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = weeks15.getFieldType();
        org.joda.time.Weeks weeks21 = weeks11.minus(weeks15);
        org.joda.time.Weeks weeks23 = weeks21.minus((-3));
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.MutablePeriod mutablePeriod35 = weeks34.toMutablePeriod();
        org.joda.time.Weeks weeks36 = weeks30.plus(weeks34);
        org.joda.time.Weeks weeks37 = weeks23.plus(weeks30);
        org.joda.time.Weeks weeks38 = weeks8.minus(weeks37);
        org.joda.time.Weeks weeks39 = weeks3.plus(weeks8);
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks42 = weeks39.minus(9);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType10 = weeks9.getPeriodType();
        org.joda.time.Weeks weeks12 = weeks9.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks14 = weeks9.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod15 = weeks9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks9.getFieldType();
        org.joda.time.PeriodType periodType17 = weeks9.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType18 = weeks9.getFieldType();
        boolean boolean19 = weeks8.isSupported(durationFieldType18);
        org.joda.time.Period period20 = weeks8.toPeriod();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Weeks weeks23 = weeks21.minus(2);
        java.lang.Class<?> wildcardClass24 = weeks21.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Period period15 = weeks10.toPeriod();
        org.joda.time.Weeks weeks17 = weeks10.minus(10);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.DurationFieldType durationFieldType23 = weeks20.getFieldType(0);
        org.joda.time.Weeks weeks24 = weeks10.plus(weeks20);
        java.lang.String str25 = weeks10.toString();
        org.joda.time.Weeks weeks27 = weeks10.multipliedBy(1030);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.Period period27 = weeks6.toPeriod();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks30.minus((int) 'a');
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        int int38 = weeks33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.DurationFieldType durationFieldType39 = weeks33.getFieldType();
        boolean boolean40 = weeks30.isSupported(durationFieldType39);
        boolean boolean41 = weeks6.isSupported(durationFieldType39);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType43 = weeks6.getFieldType((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        int int14 = weeks13.size();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks19 = weeks17.dividedBy((int) '4');
        int int20 = weeks17.size();
        org.joda.time.Period period21 = weeks17.toPeriod();
        org.joda.time.DurationFieldType durationFieldType22 = weeks17.getFieldType();
        org.joda.time.Weeks weeks23 = weeks13.minus(weeks17);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks30.negated();
        org.joda.time.Weeks weeks34 = weeks13.plus(weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = weeks10.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.multipliedBy((-2));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType26 = weeks5.getFieldType();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks28 = weeks5.plus(weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks29.plus(weeks30);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        boolean boolean47 = weeks29.isGreaterThan(weeks45);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = weeks48.getFieldType();
        int int50 = weeks45.get(durationFieldType49);
        org.joda.time.Weeks weeks52 = weeks45.minus((int) (byte) -1);
        org.joda.time.Weeks weeks54 = weeks52.minus((int) '#');
        org.joda.time.Weeks weeks55 = weeks5.minus(weeks52);
        org.joda.time.Period period56 = weeks52.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(period56);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(1);
        org.joda.time.Hours hours2 = weeks1.toStandardHours();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(hours2);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.DurationFieldType durationFieldType22 = weeks21.getFieldType();
        org.joda.time.DurationFieldType durationFieldType24 = weeks21.getFieldType(0);
        int int25 = weeks15.get(durationFieldType24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks30 = weeks28.dividedBy((int) '4');
        org.joda.time.Weeks weeks32 = weeks28.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        boolean boolean35 = weeks33.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        java.lang.String str40 = weeks39.toString();
        boolean boolean41 = weeks33.isLessThan(weeks39);
        org.joda.time.Weeks weeks42 = weeks39.negated();
        org.joda.time.Weeks weeks43 = weeks32.plus(weeks42);
        int int44 = weeks15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType46 = weeks32.getFieldType(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "P-3W" + "'", str40, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType6 = weeks5.getPeriodType();
        org.joda.time.Weeks weeks8 = weeks5.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks10 = weeks5.dividedBy((int) 'a');
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks11.plus(weeks12);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.ONE;
        int int28 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks27);
        boolean boolean29 = weeks11.isGreaterThan(weeks27);
        int int30 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks37.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.MutablePeriod mutablePeriod43 = weeks42.toMutablePeriod();
        org.joda.time.Weeks weeks44 = weeks40.plus(weeks42);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks46 = weeks10.minus(weeks40);
        boolean boolean47 = weeks2.isLessThan(weeks10);
        org.joda.time.PeriodType periodType48 = weeks10.getPeriodType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(periodType48);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P0W");
        java.lang.Class<?> wildcardClass2 = weeks1.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks10 = weeks5.multipliedBy((int) (byte) 10);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) (byte) 1);
        org.joda.time.Period period13 = weeks10.toPeriod();
        org.joda.time.PeriodType periodType14 = weeks10.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(periodType14);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        int int4 = weeks3.size();
        java.lang.String str5 = weeks3.toString();
        java.lang.String str6 = weeks3.toString();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks8.minus((int) '4');
        org.joda.time.Weeks weeks12 = weeks3.minus(weeks8);
        org.joda.time.Weeks weeks14 = weeks3.minus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType15 = weeks3.getFieldType();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = weeks16.getFieldType();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks24.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.MutablePeriod mutablePeriod30 = weeks29.toMutablePeriod();
        org.joda.time.Weeks weeks31 = weeks27.plus(weeks29);
        org.joda.time.Weeks weeks32 = weeks16.plus(weeks31);
        org.joda.time.Weeks weeks34 = weeks31.plus((int) (short) 10);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks35.plus(weeks36);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        int int52 = weeks49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        boolean boolean53 = weeks35.isGreaterThan(weeks51);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Period period55 = weeks35.toPeriod();
        boolean boolean56 = weeks31.isLessThan(weeks35);
        boolean boolean57 = weeks3.isGreaterThan(weeks31);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-3W" + "'", str5, "P-3W");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks4.getWeeks();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((-1));
        int int8 = weeks7.size();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Period period15 = weeks11.toPeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks11.getFieldType();
        org.joda.time.Weeks weeks17 = weeks7.minus(weeks11);
        org.joda.time.Weeks weeks19 = weeks17.minus((-3));
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = weeks30.toMutablePeriod();
        org.joda.time.Weeks weeks32 = weeks26.plus(weeks30);
        org.joda.time.Weeks weeks33 = weeks19.plus(weeks26);
        org.joda.time.Weeks weeks34 = weeks4.minus(weeks33);
        org.joda.time.PeriodType periodType35 = weeks34.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(periodType35);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        int int15 = weeks14.size();
        java.lang.Class<?> wildcardClass16 = weeks14.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Weeks weeks8 = weeks4.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks15 = weeks11.negated();
        boolean boolean16 = weeks8.isGreaterThan(weeks11);
        org.joda.time.DurationFieldType durationFieldType17 = weeks8.getFieldType();
        int int18 = weeks1.get(durationFieldType17);
        org.joda.time.Duration duration19 = weeks1.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType21 = weeks1.getFieldType((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(duration19);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        org.joda.time.Weeks weeks50 = weeks42.plus(weeks48);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.ONE;
        int int57 = weeks54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks56);
        org.joda.time.Weeks weeks59 = weeks56.plus((int) (short) -1);
        int int60 = weeks42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks42.plus((int) (short) 100);
        org.joda.time.Weeks weeks64 = weeks42.multipliedBy(3);
        org.joda.time.Weeks weeks65 = weeks5.minus(weeks64);
        org.joda.time.DurationFieldType durationFieldType66 = weeks5.getFieldType();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        org.joda.time.DurationFieldType durationFieldType72 = weeks71.getFieldType();
        org.joda.time.DurationFieldType durationFieldType74 = weeks71.getFieldType(0);
        boolean boolean75 = weeks68.isSupported(durationFieldType74);
        int int76 = weeks5.get(durationFieldType74);
        java.lang.Class<?> wildcardClass77 = durationFieldType74.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = weeks11.isSupported(durationFieldType15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        boolean boolean20 = weeks11.isGreaterThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType21 = weeks19.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(durationFieldType21);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Duration duration2 = weeks0.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType3 = weeks0.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(durationFieldType3);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.DurationFieldType durationFieldType22 = weeks21.getFieldType();
        org.joda.time.DurationFieldType durationFieldType24 = weeks21.getFieldType(0);
        int int25 = weeks15.get(durationFieldType24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks30 = weeks28.dividedBy((int) '4');
        org.joda.time.Weeks weeks32 = weeks28.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        boolean boolean35 = weeks33.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        java.lang.String str40 = weeks39.toString();
        boolean boolean41 = weeks33.isLessThan(weeks39);
        org.joda.time.Weeks weeks42 = weeks39.negated();
        org.joda.time.Weeks weeks43 = weeks32.plus(weeks42);
        int int44 = weeks15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Duration duration46 = weeks45.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "P-3W" + "'", str40, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(duration46);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType23 = weeks20.getFieldType(0);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        int int30 = weeks27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks29.plus((int) (short) -1);
        boolean boolean33 = weeks20.equals((java.lang.Object) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.PeriodType periodType36 = weeks34.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType37 = null;
        boolean boolean38 = weeks34.isSupported(durationFieldType37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.DurationFieldType durationFieldType42 = weeks41.getFieldType();
        org.joda.time.DurationFieldType durationFieldType44 = weeks41.getFieldType(0);
        int int45 = weeks34.get(durationFieldType44);
        boolean boolean46 = weeks32.equals((java.lang.Object) weeks34);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = weeks34.getValue((-3));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3 + "'", int45 == 3);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType24 = weeks2.getFieldType();
        org.joda.time.Weeks weeks25 = null;
        org.joda.time.Weeks weeks26 = weeks2.plus(weeks25);
        org.joda.time.Duration duration27 = weeks2.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(duration27);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        int int12 = weeks11.size();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks15.size();
        org.joda.time.Period period19 = weeks15.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = weeks15.getFieldType();
        org.joda.time.Weeks weeks21 = weeks11.minus(weeks15);
        org.joda.time.Weeks weeks23 = weeks11.minus((int) (byte) 100);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        org.joda.time.DurationFieldType durationFieldType31 = weeks28.getFieldType(0);
        boolean boolean32 = weeks25.isSupported(durationFieldType31);
        boolean boolean33 = weeks11.equals((java.lang.Object) weeks25);
        boolean boolean34 = weeks0.isLessThan(weeks25);
        org.joda.time.Weeks weeks36 = weeks25.multipliedBy(3);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        boolean boolean39 = weeks37.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        boolean boolean45 = weeks37.isLessThan(weeks43);
        org.joda.time.Weeks weeks46 = weeks36.plus(weeks43);
        int int47 = weeks36.size();
        org.joda.time.PeriodType periodType48 = weeks36.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(periodType48);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(103);
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        int int4 = weeks3.size();
        java.lang.String str5 = weeks3.toString();
        java.lang.String str6 = weeks3.toString();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks8.minus((int) '4');
        org.joda.time.Weeks weeks12 = weeks3.minus(weeks8);
        org.joda.time.Weeks weeks14 = weeks3.minus((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType16 = weeks3.getFieldType((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-3W" + "'", str5, "P-3W");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks6 = weeks0.multipliedBy((int) (short) -1);
        int int7 = weeks6.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.weeks((-1));
        int int44 = weeks43.size();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks49 = weeks47.dividedBy((int) '4');
        int int50 = weeks47.size();
        org.joda.time.Period period51 = weeks47.toPeriod();
        org.joda.time.DurationFieldType durationFieldType52 = weeks47.getFieldType();
        org.joda.time.Weeks weeks53 = weeks43.minus(weeks47);
        org.joda.time.Weeks weeks55 = weeks43.minus((int) (byte) 100);
        org.joda.time.Duration duration56 = weeks43.toStandardDuration();
        org.joda.time.Weeks weeks57 = weeks5.minus(weeks43);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        boolean boolean61 = weeks59.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        java.lang.String str66 = weeks65.toString();
        boolean boolean67 = weeks59.isLessThan(weeks65);
        org.joda.time.Weeks weeks68 = weeks58.plus(weeks59);
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.Weeks weeks74 = weeks71.minus(weeks72);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks76 = weeks75.negated();
        org.joda.time.PeriodType periodType77 = weeks75.getPeriodType();
        boolean boolean78 = weeks71.isGreaterThan(weeks75);
        org.joda.time.Weeks weeks80 = weeks75.minus((int) (byte) 0);
        org.joda.time.Weeks weeks81 = weeks68.plus(weeks80);
        org.joda.time.Weeks weeks82 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks83 = weeks82.negated();
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks83);
        org.joda.time.Weeks weeks85 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks83);
        java.lang.String str86 = weeks85.toString();
        org.joda.time.Weeks weeks87 = org.joda.time.Weeks.ONE;
        int int88 = weeks85.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks87);
        org.joda.time.Weeks weeks90 = weeks87.plus((int) (short) -1);
        org.joda.time.Weeks weeks91 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks92 = weeks91.negated();
        org.joda.time.Weeks weeks93 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks92);
        org.joda.time.Weeks weeks94 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks92);
        java.lang.String str95 = weeks94.toString();
        org.joda.time.Weeks weeks96 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks94);
        org.joda.time.Weeks weeks97 = weeks87.minus(weeks94);
        org.joda.time.Weeks weeks98 = weeks80.minus(weeks97);
        org.joda.time.Weeks weeks99 = weeks5.plus(weeks98);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P-3W" + "'", str66, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "P-3W" + "'", str86, "P-3W");
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertNotNull(weeks91);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertNotNull(weeks93);
        org.junit.Assert.assertNotNull(weeks94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "P-3W" + "'", str95, "P-3W");
        org.junit.Assert.assertNotNull(weeks96);
        org.junit.Assert.assertNotNull(weeks97);
        org.junit.Assert.assertNotNull(weeks98);
        org.junit.Assert.assertNotNull(weeks99);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        int int11 = weeks1.size();
        org.joda.time.DurationFieldType durationFieldType12 = weeks1.getFieldType();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = weeks16.minus(weeks17);
        boolean boolean20 = weeks13.isLessThan(weeks16);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType22 = weeks21.getPeriodType();
        org.joda.time.Weeks weeks24 = weeks21.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks26 = weeks21.dividedBy((int) 'a');
        boolean boolean27 = weeks13.isGreaterThan(weeks21);
        org.joda.time.Weeks weeks28 = weeks1.minus(weeks13);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType30 = weeks13.getFieldType((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = weeks4.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType10 = weeks9.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        boolean boolean19 = weeks11.isLessThan(weeks17);
        org.joda.time.Weeks weeks20 = weeks17.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.MutablePeriod mutablePeriod23 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks24 = weeks20.plus(weeks22);
        org.joda.time.Weeks weeks25 = weeks9.plus(weeks24);
        org.joda.time.Weeks weeks27 = weeks24.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks28 = weeks27.negated();
        int int29 = weeks8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.Weeks weeks30 = weeks4.plus(weeks8);
        org.joda.time.DurationFieldType durationFieldType31 = weeks4.getFieldType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(durationFieldType31);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType6 = weeks5.getPeriodType();
        org.joda.time.Weeks weeks8 = weeks5.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks10 = weeks5.dividedBy((int) 'a');
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks11.plus(weeks12);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.ONE;
        int int28 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks27);
        boolean boolean29 = weeks11.isGreaterThan(weeks27);
        int int30 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks37.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.MutablePeriod mutablePeriod43 = weeks42.toMutablePeriod();
        org.joda.time.Weeks weeks44 = weeks40.plus(weeks42);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks46 = weeks10.minus(weeks40);
        boolean boolean47 = weeks2.isLessThan(weeks10);
        java.lang.Class<?> wildcardClass48 = weeks2.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P-4W");
        org.joda.time.Weeks weeks3 = weeks1.dividedBy((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType5 = weeks1.getFieldType((-927));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -927");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) 0);
        org.joda.time.Duration duration7 = weeks6.toStandardDuration();
        org.joda.time.Weeks weeks8 = weeks6.negated();
        org.joda.time.Weeks weeks9 = weeks6.negated();
        java.lang.String str10 = weeks9.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "P0W" + "'", str10, "P0W");
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.PeriodType periodType10 = weeks6.getPeriodType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = weeks11.plus(weeks17);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        int int26 = weeks23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks25.plus((int) (short) -1);
        int int29 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.Weeks weeks31 = weeks28.plus((int) (byte) 1);
        boolean boolean33 = weeks31.equals((java.lang.Object) 1.0d);
        org.joda.time.Weeks weeks35 = weeks31.plus((int) (byte) 100);
        org.joda.time.Weeks weeks36 = weeks6.plus(weeks31);
        java.lang.String str37 = weeks36.toString();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        boolean boolean41 = weeks39.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        boolean boolean47 = weeks39.isLessThan(weeks45);
        org.joda.time.Weeks weeks48 = weeks38.plus(weeks39);
        org.joda.time.Weeks weeks50 = weeks38.dividedBy((int) (short) -1);
        int int51 = weeks50.getWeeks();
        boolean boolean52 = weeks36.equals((java.lang.Object) int51);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-2W" + "'", str37, "P-2W");
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.DurationFieldType durationFieldType23 = weeks22.getFieldType();
        org.joda.time.DurationFieldType durationFieldType25 = weeks22.getFieldType(0);
        int int26 = weeks17.get(durationFieldType25);
        int int27 = weeks15.get(durationFieldType25);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        int int14 = weeks2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.Duration duration15 = weeks11.toStandardDuration();
        org.joda.time.Weeks weeks17 = weeks11.minus(1030);
        org.joda.time.Duration duration18 = weeks17.toStandardDuration();
        org.joda.time.Period period19 = weeks17.toPeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType3 = weeks2.getPeriodType();
        org.joda.time.Weeks weeks5 = weeks2.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks7 = weeks2.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = weeks2.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = weeks2.getFieldType();
        org.joda.time.PeriodType periodType10 = weeks2.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType11 = weeks2.getFieldType();
        org.joda.time.Weeks weeks12 = weeks2.negated();
        org.joda.time.Weeks weeks14 = weeks2.multipliedBy(300);
        boolean boolean15 = weeks0.equals((java.lang.Object) weeks2);
        org.joda.time.Weeks weeks17 = weeks0.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType18 = weeks0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType19 = weeks0.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(durationFieldType19);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks13.negated();
        org.joda.time.Weeks weeks17 = weeks6.plus(weeks16);
        org.joda.time.DurationFieldType durationFieldType18 = weeks6.getFieldType();
        org.joda.time.Duration duration19 = weeks6.toStandardDuration();
        java.lang.Class<?> wildcardClass20 = duration19.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.weeks((-1));
        int int44 = weeks43.size();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks49 = weeks47.dividedBy((int) '4');
        int int50 = weeks47.size();
        org.joda.time.Period period51 = weeks47.toPeriod();
        org.joda.time.DurationFieldType durationFieldType52 = weeks47.getFieldType();
        org.joda.time.Weeks weeks53 = weeks43.minus(weeks47);
        org.joda.time.Weeks weeks55 = weeks43.minus((int) (byte) 100);
        org.joda.time.Duration duration56 = weeks43.toStandardDuration();
        org.joda.time.Weeks weeks57 = weeks5.minus(weeks43);
        org.joda.time.Weeks weeks59 = weeks57.dividedBy((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            int int61 = weeks59.getValue(900);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 900");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.minus(weeks28);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks38 = weeks35.multipliedBy(0);
        org.joda.time.Weeks weeks39 = weeks33.minus(weeks38);
        int int40 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks41 = weeks39.negated();
        org.joda.time.MutablePeriod mutablePeriod42 = weeks41.toMutablePeriod();
        org.joda.time.Weeks weeks43 = weeks0.plus(weeks41);
        org.joda.time.Weeks weeks45 = weeks43.plus((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType47 = weeks43.getFieldType(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks3 = weeks1.negated();
        org.joda.time.Weeks weeks5 = weeks3.minus((-100));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks10 = weeks5.multipliedBy((int) (byte) 10);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((-1));
        int int18 = weeks17.size();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Period period25 = weeks21.toPeriod();
        org.joda.time.DurationFieldType durationFieldType26 = weeks21.getFieldType();
        org.joda.time.Weeks weeks27 = weeks17.minus(weeks21);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = weeks34.negated();
        org.joda.time.Weeks weeks38 = weeks17.plus(weeks37);
        boolean boolean39 = weeks14.isLessThan(weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks44 = weeks42.dividedBy((int) '4');
        int int45 = weeks42.size();
        org.joda.time.Period period46 = weeks42.toPeriod();
        org.joda.time.DurationFieldType durationFieldType47 = weeks42.getFieldType();
        boolean boolean48 = weeks14.isSupported(durationFieldType47);
        int int49 = weeks10.get(durationFieldType47);
        org.joda.time.Weeks weeks51 = weeks10.multipliedBy(3);
        org.joda.time.PeriodType periodType52 = weeks51.getPeriodType();
        int int53 = weeks51.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks17.plus(weeks18);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        boolean boolean30 = weeks27.isSupported(durationFieldType29);
        int int31 = weeks15.get(durationFieldType29);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType33 = weeks15.getFieldType((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = weeks11.isSupported(durationFieldType15);
        org.joda.time.Weeks weeks18 = weeks11.multipliedBy((-1027));
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks23.plus(weeks24);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.ONE;
        int int40 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        boolean boolean41 = weeks23.isGreaterThan(weeks39);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = weeks42.getFieldType();
        int int44 = weeks39.get(durationFieldType43);
        boolean boolean45 = weeks19.isSupported(durationFieldType43);
        org.joda.time.Weeks weeks47 = weeks19.dividedBy((-1));
        org.joda.time.Weeks weeks49 = weeks19.dividedBy(3);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType51 = weeks50.getPeriodType();
        org.joda.time.Weeks weeks53 = weeks50.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks55 = weeks50.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod56 = weeks50.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType57 = weeks50.getFieldType();
        org.joda.time.PeriodType periodType58 = weeks50.getPeriodType();
        boolean boolean59 = weeks49.isGreaterThan(weeks50);
        boolean boolean60 = weeks11.isLessThan(weeks49);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        org.joda.time.Weeks weeks50 = weeks42.plus(weeks48);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.ONE;
        int int57 = weeks54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks56);
        org.joda.time.Weeks weeks59 = weeks56.plus((int) (short) -1);
        int int60 = weeks42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks42.plus((int) (short) 100);
        org.joda.time.Weeks weeks64 = weeks42.multipliedBy(3);
        org.joda.time.Weeks weeks65 = weeks5.minus(weeks64);
        org.joda.time.DurationFieldType durationFieldType66 = weeks5.getFieldType();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        org.joda.time.DurationFieldType durationFieldType72 = weeks71.getFieldType();
        org.joda.time.DurationFieldType durationFieldType74 = weeks71.getFieldType(0);
        boolean boolean75 = weeks68.isSupported(durationFieldType74);
        int int76 = weeks5.get(durationFieldType74);
        org.joda.time.Weeks weeks78 = weeks5.multipliedBy(0);
        org.joda.time.Duration duration79 = weeks78.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(duration79);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.MutablePeriod mutablePeriod19 = weeks18.toMutablePeriod();
        org.joda.time.Weeks weeks21 = weeks18.multipliedBy(0);
        org.joda.time.Weeks weeks22 = weeks16.minus(weeks21);
        org.joda.time.Duration duration23 = weeks22.toStandardDuration();
        org.joda.time.Weeks weeks25 = weeks22.minus((int) (byte) 10);
        int int26 = weeks9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int31 = weeks3.getValue((int) (short) 0);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        org.joda.time.Weeks weeks36 = weeks34.dividedBy((int) '4');
        int int37 = weeks34.size();
        org.joda.time.Weeks weeks38 = weeks34.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks43 = weeks41.dividedBy((int) '4');
        int int44 = weeks41.size();
        org.joda.time.Weeks weeks45 = weeks41.negated();
        boolean boolean46 = weeks38.isGreaterThan(weeks41);
        org.joda.time.MutablePeriod mutablePeriod47 = weeks41.toMutablePeriod();
        boolean boolean48 = weeks3.isGreaterThan(weeks41);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        boolean boolean51 = weeks49.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        java.lang.String str56 = weeks55.toString();
        boolean boolean57 = weeks49.isLessThan(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks60 = weeks59.negated();
        org.joda.time.MutablePeriod mutablePeriod61 = weeks60.toMutablePeriod();
        org.joda.time.Weeks weeks62 = weeks58.plus(weeks60);
        boolean boolean63 = weeks3.equals((java.lang.Object) weeks62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-3) + "'", int31 == (-3));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-3W" + "'", str56, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        boolean boolean15 = weeks13.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        java.lang.String str20 = weeks19.toString();
        boolean boolean21 = weeks13.isLessThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        boolean boolean25 = weeks23.equals((java.lang.Object) 10.0f);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = weeks23.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = weeks23.isSupported(durationFieldType28);
        org.joda.time.Weeks weeks30 = weeks22.minus(weeks23);
        boolean boolean31 = weeks6.isLessThan(weeks23);
        org.joda.time.Duration duration32 = weeks6.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "P-3W" + "'", str20, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(duration32);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        int int14 = weeks2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.Duration duration15 = weeks11.toStandardDuration();
        org.joda.time.Weeks weeks17 = weeks11.minus(1030);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        boolean boolean27 = weeks19.isLessThan(weeks25);
        org.joda.time.Weeks weeks28 = weeks18.plus(weeks19);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        int int35 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks34);
        boolean boolean36 = weeks18.isGreaterThan(weeks34);
        org.joda.time.Weeks weeks38 = weeks18.plus((int) '#');
        org.joda.time.Weeks weeks39 = weeks17.minus(weeks18);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        boolean boolean41 = weeks17.isSupported(durationFieldType40);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks43 = weeks17.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType24 = weeks13.getFieldType((-3));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks15 = weeks5.minus(weeks12);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) '#');
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType22 = weeks21.getPeriodType();
        org.joda.time.Weeks weeks24 = weeks21.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks26 = weeks21.dividedBy((int) 'a');
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = weeks27.plus(weeks28);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        java.lang.String str42 = weeks41.toString();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.ONE;
        int int44 = weeks41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks43);
        boolean boolean45 = weeks27.isGreaterThan(weeks43);
        int int46 = weeks26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks27);
        java.lang.String str47 = weeks27.toString();
        org.joda.time.MutablePeriod mutablePeriod48 = weeks27.toMutablePeriod();
        org.joda.time.PeriodType periodType49 = weeks27.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType50 = weeks27.getFieldType();
        boolean boolean51 = weeks0.isSupported(durationFieldType50);
        org.joda.time.PeriodType periodType52 = weeks0.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P-3W" + "'", str42, "P-3W");
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P1W" + "'", str47, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(periodType52);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType6 = weeks5.getPeriodType();
        org.joda.time.Weeks weeks8 = weeks5.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks10 = weeks5.dividedBy((int) 'a');
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks11.plus(weeks12);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.ONE;
        int int28 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks27);
        boolean boolean29 = weeks11.isGreaterThan(weeks27);
        int int30 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks11);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks37.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.MutablePeriod mutablePeriod43 = weeks42.toMutablePeriod();
        org.joda.time.Weeks weeks44 = weeks40.plus(weeks42);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks46 = weeks10.minus(weeks40);
        boolean boolean47 = weeks2.isLessThan(weeks10);
        org.joda.time.Weeks weeks49 = weeks10.minus(100);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = weeks49.getValue((-103));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -103");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks49);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks16 = weeks11.minus((int) (byte) -1);
        int int17 = weeks16.size();
        int int18 = weeks16.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        int int5 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks2);
        org.joda.time.Weeks weeks7 = weeks0.minus((int) ' ');
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType9 = weeks8.getPeriodType();
        org.joda.time.Weeks weeks11 = weeks8.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks13 = weeks8.dividedBy((int) 'a');
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        boolean boolean17 = weeks15.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        boolean boolean23 = weeks15.isLessThan(weeks21);
        org.joda.time.Weeks weeks24 = weeks14.plus(weeks15);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        int int31 = weeks28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks30);
        boolean boolean32 = weeks14.isGreaterThan(weeks30);
        int int33 = weeks13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        boolean boolean36 = weeks34.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        boolean boolean42 = weeks34.isLessThan(weeks40);
        org.joda.time.Weeks weeks43 = weeks40.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.MutablePeriod mutablePeriod46 = weeks45.toMutablePeriod();
        org.joda.time.Weeks weeks47 = weeks43.plus(weeks45);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks49 = weeks13.minus(weeks43);
        org.joda.time.Duration duration50 = weeks49.toStandardDuration();
        org.joda.time.Period period51 = weeks49.toPeriod();
        org.joda.time.Weeks weeks52 = weeks7.minus(weeks49);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours53 = weeks52.toStandardHours();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483618 * 168");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(weeks52);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks4.plus(weeks5);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        boolean boolean22 = weeks4.isGreaterThan(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = weeks23.getFieldType();
        int int25 = weeks20.get(durationFieldType24);
        boolean boolean26 = weeks0.isSupported(durationFieldType24);
        org.joda.time.Weeks weeks28 = weeks0.dividedBy((-1));
        org.joda.time.PeriodType periodType29 = weeks0.getPeriodType();
        org.joda.time.Period period30 = weeks0.toPeriod();
        org.joda.time.Duration duration31 = weeks0.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration31);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        int int21 = weeks16.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        int int28 = weeks6.size();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType30 = weeks29.getPeriodType();
        org.joda.time.Weeks weeks32 = weeks29.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks34 = weeks29.dividedBy((int) 'a');
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks35.plus(weeks36);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        int int52 = weeks49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        boolean boolean53 = weeks35.isGreaterThan(weeks51);
        int int54 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.DurationFieldType durationFieldType55 = weeks34.getFieldType();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks57 = weeks34.plus(weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks60.dividedBy((int) '4');
        int int63 = weeks60.size();
        org.joda.time.Period period64 = weeks60.toPeriod();
        org.joda.time.DurationFieldType durationFieldType65 = weeks60.getFieldType();
        org.joda.time.Weeks weeks66 = weeks56.plus(weeks60);
        org.joda.time.Weeks weeks67 = weeks6.plus(weeks66);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.DurationFieldType durationFieldType71 = null;
        int int72 = weeks70.get(durationFieldType71);
        int int73 = weeks70.size();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks75 = weeks74.negated();
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        org.joda.time.DurationFieldType durationFieldType77 = weeks76.getFieldType();
        boolean boolean78 = weeks70.isSupported(durationFieldType77);
        boolean boolean79 = weeks67.isGreaterThan(weeks70);
        org.joda.time.Weeks weeks81 = weeks70.minus(3200);
        org.joda.time.DurationFieldType durationFieldType82 = weeks81.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(durationFieldType82);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        org.joda.time.Weeks weeks9 = weeks1.plus(weeks7);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.minus((int) (byte) 10);
        int int13 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType15 = weeks0.getFieldType((-100));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        org.joda.time.PeriodType periodType28 = weeks6.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType29 = weeks6.getFieldType();
        org.joda.time.DurationFieldType durationFieldType31 = weeks6.getFieldType(0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(durationFieldType31);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        int int28 = weeks6.size();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType30 = weeks29.getPeriodType();
        org.joda.time.Weeks weeks32 = weeks29.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks34 = weeks29.dividedBy((int) 'a');
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks35.plus(weeks36);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        int int52 = weeks49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        boolean boolean53 = weeks35.isGreaterThan(weeks51);
        int int54 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.DurationFieldType durationFieldType55 = weeks34.getFieldType();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks57 = weeks34.plus(weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks60.dividedBy((int) '4');
        int int63 = weeks60.size();
        org.joda.time.Period period64 = weeks60.toPeriod();
        org.joda.time.DurationFieldType durationFieldType65 = weeks60.getFieldType();
        org.joda.time.Weeks weeks66 = weeks56.plus(weeks60);
        org.joda.time.Weeks weeks67 = weeks6.plus(weeks66);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.DurationFieldType durationFieldType71 = null;
        int int72 = weeks70.get(durationFieldType71);
        int int73 = weeks70.size();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks75 = weeks74.negated();
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks75);
        org.joda.time.DurationFieldType durationFieldType77 = weeks76.getFieldType();
        boolean boolean78 = weeks70.isSupported(durationFieldType77);
        boolean boolean79 = weeks67.isGreaterThan(weeks70);
        org.joda.time.Weeks weeks81 = weeks70.minus(3200);
        org.joda.time.Weeks weeks82 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks83 = weeks82.negated();
        org.joda.time.Weeks weeks85 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks86 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks87 = weeks86.negated();
        org.joda.time.Weeks weeks88 = weeks85.minus(weeks86);
        boolean boolean89 = weeks82.isLessThan(weeks85);
        int int90 = weeks85.size();
        org.joda.time.MutablePeriod mutablePeriod91 = weeks85.toMutablePeriod();
        boolean boolean92 = weeks81.equals((java.lang.Object) mutablePeriod91);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Period period19 = weeks0.toPeriod();
        org.joda.time.Period period20 = weeks0.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks17);
        org.joda.time.DurationFieldType durationFieldType19 = weeks18.getFieldType();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks31.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks20.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.dividedBy((int) (short) 100);
        boolean boolean39 = weeks18.isGreaterThan(weeks35);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.Weeks weeks46 = weeks43.minus(weeks44);
        org.joda.time.DurationFieldType durationFieldType47 = weeks44.getFieldType();
        boolean boolean48 = weeks41.isSupported(durationFieldType47);
        int int49 = weeks18.get(durationFieldType47);
        boolean boolean50 = weeks6.isSupported(durationFieldType47);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-3) + "'", int49 == (-3));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.MutablePeriod mutablePeriod4 = weeks3.toMutablePeriod();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(0);
        org.joda.time.Weeks weeks7 = weeks1.minus(weeks6);
        org.joda.time.Weeks weeks8 = weeks1.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = weeks1.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = weeks6.plus(weeks27);
        org.joda.time.Weeks weeks30 = weeks28.dividedBy((int) (short) 10);
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType(0);
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = weeks10.minus(weeks11);
        org.joda.time.DurationFieldType durationFieldType14 = weeks11.getFieldType();
        boolean boolean15 = weeks1.isLessThan(weeks11);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((-1));
        int int18 = weeks17.size();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Period period25 = weeks21.toPeriod();
        org.joda.time.DurationFieldType durationFieldType26 = weeks21.getFieldType();
        org.joda.time.Weeks weeks27 = weeks17.minus(weeks21);
        org.joda.time.Weeks weeks29 = weeks17.minus((int) (byte) 100);
        org.joda.time.Duration duration30 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks31 = weeks1.minus(weeks17);
        org.joda.time.MutablePeriod mutablePeriod32 = weeks17.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType22 = weeks19.getFieldType(103);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 103");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.DurationFieldType durationFieldType23 = weeks13.getFieldType();
        org.joda.time.Weeks weeks25 = weeks13.minus(10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType27 = weeks13.getFieldType((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks25);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Period period8 = weeks3.toPeriod();
        java.lang.Class<?> wildcardClass9 = weeks3.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        java.lang.String str9 = weeks0.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P3W" + "'", str9, "P3W");
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks1.multipliedBy((int) ' ');
        org.joda.time.Period period5 = weeks4.toPeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.weeksIn(readableInterval23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        boolean boolean33 = weeks25.isLessThan(weeks31);
        org.joda.time.Weeks weeks34 = weeks24.minus(weeks31);
        org.joda.time.Weeks weeks36 = weeks34.plus((int) 'a');
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = weeks38.minus(weeks39);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType43 = weeks42.getPeriodType();
        int int44 = weeks41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks36.plus(weeks42);
        org.joda.time.DurationFieldType durationFieldType46 = weeks36.getFieldType();
        boolean boolean47 = weeks22.isSupported(durationFieldType46);
        java.lang.Class<?> wildcardClass48 = weeks22.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks4.getWeeks();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((-1));
        int int8 = weeks7.size();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Period period15 = weeks11.toPeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks11.getFieldType();
        org.joda.time.Weeks weeks17 = weeks7.minus(weeks11);
        org.joda.time.Weeks weeks19 = weeks17.minus((-3));
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = weeks30.toMutablePeriod();
        org.joda.time.Weeks weeks32 = weeks26.plus(weeks30);
        org.joda.time.Weeks weeks33 = weeks19.plus(weeks26);
        org.joda.time.Weeks weeks34 = weeks4.minus(weeks33);
        org.joda.time.Weeks weeks35 = null;
        org.joda.time.Weeks weeks36 = weeks33.plus(weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        int int43 = weeks40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        java.lang.String str44 = weeks40.toString();
        org.joda.time.Weeks weeks46 = weeks40.dividedBy(1);
        org.joda.time.Weeks weeks48 = weeks40.minus((int) 'a');
        org.joda.time.Weeks weeks50 = weeks48.minus((int) (short) 1);
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = weeks36.minus(weeks50);
        java.lang.String str53 = weeks50.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-101W" + "'", str53, "P-101W");
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks12.getWeeks();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        int int16 = weeks15.size();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks19.dividedBy((int) '4');
        int int22 = weeks19.size();
        org.joda.time.Period period23 = weeks19.toPeriod();
        org.joda.time.DurationFieldType durationFieldType24 = weeks19.getFieldType();
        org.joda.time.Weeks weeks25 = weeks15.minus(weeks19);
        org.joda.time.Weeks weeks27 = weeks25.minus((-3));
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.MutablePeriod mutablePeriod39 = weeks38.toMutablePeriod();
        org.joda.time.Weeks weeks40 = weeks34.plus(weeks38);
        org.joda.time.Weeks weeks41 = weeks27.plus(weeks34);
        org.joda.time.Weeks weeks42 = weeks12.minus(weeks41);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.weeks((int) 'a');
        org.joda.time.Weeks weeks45 = weeks12.minus(weeks44);
        org.joda.time.DurationFieldType durationFieldType47 = weeks44.getFieldType((int) (byte) 0);
        boolean boolean48 = weeks3.isSupported(durationFieldType47);
        org.joda.time.Weeks weeks50 = weeks3.plus((-13));
        org.joda.time.Weeks weeks52 = weeks50.multipliedBy((-3));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType24 = weeks2.getFieldType();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = weeks25.plus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.ONE;
        int int40 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks39.plus((int) (short) -1);
        int int43 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks25.plus((int) (short) 100);
        org.joda.time.Weeks weeks47 = weeks45.multipliedBy((int) (short) 10);
        boolean boolean48 = weeks2.isGreaterThan(weeks45);
        org.joda.time.Weeks weeks50 = weeks45.minus((int) ' ');
        org.joda.time.MutablePeriod mutablePeriod51 = weeks50.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks12 = weeks0.dividedBy((int) (short) -1);
        int int13 = weeks0.size();
        int int14 = weeks0.size();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.DurationFieldType durationFieldType20 = weeks19.getFieldType();
        org.joda.time.DurationFieldType durationFieldType22 = weeks19.getFieldType(0);
        boolean boolean23 = weeks16.isSupported(durationFieldType22);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = weeks25.minus(weeks26);
        org.joda.time.DurationFieldType durationFieldType29 = weeks26.getFieldType();
        boolean boolean30 = weeks16.isLessThan(weeks26);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.weeks((-1));
        int int33 = weeks32.size();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks38 = weeks36.dividedBy((int) '4');
        int int39 = weeks36.size();
        org.joda.time.Period period40 = weeks36.toPeriod();
        org.joda.time.DurationFieldType durationFieldType41 = weeks36.getFieldType();
        org.joda.time.Weeks weeks42 = weeks32.minus(weeks36);
        org.joda.time.Weeks weeks44 = weeks32.minus((int) (byte) 100);
        org.joda.time.Duration duration45 = weeks32.toStandardDuration();
        org.joda.time.Weeks weeks46 = weeks16.minus(weeks32);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        boolean boolean48 = weeks0.isGreaterThan(weeks16);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType50 = weeks16.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks10 = weeks5.multipliedBy((int) (byte) 10);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = weeks10.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.MutablePeriod mutablePeriod27 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        int int35 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks34);
        org.joda.time.Weeks weeks37 = weeks34.plus((int) (short) -1);
        org.joda.time.Weeks weeks39 = weeks34.multipliedBy((int) (byte) 10);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeks((-1));
        int int47 = weeks46.size();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks52 = weeks50.dividedBy((int) '4');
        int int53 = weeks50.size();
        org.joda.time.Period period54 = weeks50.toPeriod();
        org.joda.time.DurationFieldType durationFieldType55 = weeks50.getFieldType();
        org.joda.time.Weeks weeks56 = weeks46.minus(weeks50);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks63.negated();
        org.joda.time.Weeks weeks67 = weeks46.plus(weeks66);
        boolean boolean68 = weeks43.isLessThan(weeks67);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        org.joda.time.Weeks weeks73 = weeks71.dividedBy((int) '4');
        int int74 = weeks71.size();
        org.joda.time.Period period75 = weeks71.toPeriod();
        org.joda.time.DurationFieldType durationFieldType76 = weeks71.getFieldType();
        boolean boolean77 = weeks43.isSupported(durationFieldType76);
        int int78 = weeks39.get(durationFieldType76);
        org.joda.time.Weeks weeks79 = weeks22.plus(weeks39);
        org.joda.time.Duration duration80 = weeks79.toStandardDuration();
        org.joda.time.Period period81 = weeks79.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(period81);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        int int12 = weeks11.size();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks15.size();
        org.joda.time.Period period19 = weeks15.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = weeks15.getFieldType();
        org.joda.time.Weeks weeks21 = weeks11.minus(weeks15);
        org.joda.time.Weeks weeks23 = weeks11.minus((int) (byte) 100);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        org.joda.time.DurationFieldType durationFieldType31 = weeks28.getFieldType(0);
        boolean boolean32 = weeks25.isSupported(durationFieldType31);
        boolean boolean33 = weeks11.equals((java.lang.Object) weeks25);
        boolean boolean34 = weeks0.isLessThan(weeks25);
        org.joda.time.Weeks weeks36 = weeks25.multipliedBy(3);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        boolean boolean39 = weeks37.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        boolean boolean45 = weeks37.isLessThan(weeks43);
        org.joda.time.Weeks weeks46 = weeks36.plus(weeks43);
        org.joda.time.Period period47 = weeks43.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(period47);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) 0);
        int int7 = weeks2.size();
        int int8 = weeks2.getWeeks();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        org.joda.time.Weeks weeks17 = weeks9.plus(weeks15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        int int24 = weeks21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks23.plus((int) (short) -1);
        int int27 = weeks9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        org.joda.time.Weeks weeks29 = weeks9.plus((int) (short) 100);
        org.joda.time.Weeks weeks31 = weeks29.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType33 = weeks32.getFieldType();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        boolean boolean36 = weeks34.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        boolean boolean42 = weeks34.isLessThan(weeks40);
        org.joda.time.Weeks weeks43 = weeks40.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.MutablePeriod mutablePeriod46 = weeks45.toMutablePeriod();
        org.joda.time.Weeks weeks47 = weeks43.plus(weeks45);
        org.joda.time.Weeks weeks48 = weeks32.plus(weeks47);
        org.joda.time.Weeks weeks50 = weeks47.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks51 = weeks50.negated();
        boolean boolean52 = weeks31.isGreaterThan(weeks50);
        int int53 = weeks31.getWeeks();
        org.joda.time.Weeks weeks54 = weeks2.minus(weeks31);
        int int55 = weeks54.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-3) + "'", int8 == (-3));
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1030 + "'", int53 == 1030);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P-101W");
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Duration duration3 = weeks1.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(duration3);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        java.lang.String str2 = weeks0.toString();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.Weeks weeks5 = weeks3.plus((-3));
        java.lang.String str6 = weeks5.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "P3W" + "'", str2, "P3W");
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P0W" + "'", str6, "P0W");
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = weeks11.minus(weeks12);
        boolean boolean15 = weeks0.equals((java.lang.Object) weeks14);
        org.joda.time.DurationFieldType durationFieldType16 = weeks14.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(durationFieldType16);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((-1));
        int int20 = weeks19.size();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) '4');
        int int26 = weeks23.size();
        org.joda.time.Period period27 = weeks23.toPeriod();
        org.joda.time.DurationFieldType durationFieldType28 = weeks23.getFieldType();
        org.joda.time.Weeks weeks29 = weeks19.minus(weeks23);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks36.negated();
        org.joda.time.Weeks weeks40 = weeks19.plus(weeks39);
        org.joda.time.Weeks weeks41 = weeks17.plus(weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.TWO;
        int int43 = weeks42.size();
        org.joda.time.Weeks weeks45 = weeks42.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks46 = weeks40.plus(weeks42);
        java.lang.String str47 = weeks40.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P2W" + "'", str47, "P2W");
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Duration duration42 = weeks41.toStandardDuration();
        org.joda.time.Weeks weeks44 = weeks41.multipliedBy((int) (short) 0);
        java.lang.Class<?> wildcardClass45 = weeks44.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeksIn(readableInterval6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.ONE;
        int int14 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks13);
        org.joda.time.Weeks weeks16 = weeks13.plus((int) (short) -1);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType18 = weeks17.getPeriodType();
        org.joda.time.Weeks weeks20 = weeks17.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks22 = weeks17.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod23 = weeks17.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType24 = weeks17.getFieldType();
        org.joda.time.PeriodType periodType25 = weeks17.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType26 = weeks17.getFieldType();
        boolean boolean27 = weeks16.isSupported(durationFieldType26);
        org.joda.time.Period period28 = weeks16.toPeriod();
        boolean boolean29 = weeks7.isGreaterThan(weeks16);
        int int30 = weeks16.size();
        org.joda.time.Weeks weeks31 = weeks16.negated();
        int int32 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType34 = weeks5.getFieldType(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.Weeks weeks24 = weeks22.minus(1030);
        org.joda.time.MutablePeriod mutablePeriod25 = weeks24.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        int int10 = weeks0.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.DurationFieldType durationFieldType24 = weeks23.getFieldType();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = weeks25.getFieldType();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        boolean boolean29 = weeks27.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        java.lang.String str34 = weeks33.toString();
        boolean boolean35 = weeks27.isLessThan(weeks33);
        org.joda.time.Weeks weeks36 = weeks33.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.MutablePeriod mutablePeriod39 = weeks38.toMutablePeriod();
        org.joda.time.Weeks weeks40 = weeks36.plus(weeks38);
        org.joda.time.Weeks weeks41 = weeks25.plus(weeks40);
        org.joda.time.Weeks weeks43 = weeks40.dividedBy((int) (short) 100);
        boolean boolean44 = weeks23.isGreaterThan(weeks40);
        org.joda.time.DurationFieldType durationFieldType45 = weeks23.getFieldType();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        boolean boolean48 = weeks46.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        org.joda.time.Weeks weeks54 = weeks46.plus(weeks52);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.ONE;
        int int61 = weeks58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks60);
        org.joda.time.Weeks weeks63 = weeks60.plus((int) (short) -1);
        int int64 = weeks46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks63);
        org.joda.time.Weeks weeks66 = weeks46.plus((int) (short) 100);
        org.joda.time.Weeks weeks68 = weeks66.multipliedBy((int) (short) 10);
        boolean boolean69 = weeks23.isGreaterThan(weeks66);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType71 = weeks70.getFieldType();
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        boolean boolean74 = weeks72.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks76 = weeks75.negated();
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks76);
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks76);
        java.lang.String str79 = weeks78.toString();
        boolean boolean80 = weeks72.isLessThan(weeks78);
        org.joda.time.Weeks weeks81 = weeks78.negated();
        org.joda.time.Weeks weeks82 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks83 = weeks82.negated();
        org.joda.time.MutablePeriod mutablePeriod84 = weeks83.toMutablePeriod();
        org.joda.time.Weeks weeks85 = weeks81.plus(weeks83);
        org.joda.time.Weeks weeks86 = weeks70.plus(weeks85);
        org.joda.time.Weeks weeks88 = weeks85.plus((int) (short) 10);
        org.joda.time.Weeks weeks89 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks90 = weeks89.negated();
        org.joda.time.Weeks weeks91 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks90);
        org.joda.time.DurationFieldType durationFieldType92 = weeks91.getFieldType();
        org.joda.time.DurationFieldType durationFieldType94 = weeks91.getFieldType(0);
        int int95 = weeks85.get(durationFieldType94);
        boolean boolean96 = weeks23.isSupported(durationFieldType94);
        int int97 = weeks19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        org.joda.time.Weeks weeks99 = weeks23.minus(0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "P-3W" + "'", str34, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "P-3W" + "'", str79, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(mutablePeriod84);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertNotNull(weeks91);
        org.junit.Assert.assertNotNull(durationFieldType92);
        org.junit.Assert.assertNotNull(durationFieldType94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 1 + "'", int97 == 1);
        org.junit.Assert.assertNotNull(weeks99);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks13.negated();
        org.joda.time.Weeks weeks17 = weeks6.plus(weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks24);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.ONE;
        int int33 = weeks30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.Weeks weeks35 = weeks32.plus((int) (short) -1);
        int int36 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.Weeks weeks38 = weeks18.plus((int) (short) 100);
        org.joda.time.Weeks weeks40 = weeks38.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType42 = weeks41.getFieldType();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        boolean boolean45 = weeks43.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        boolean boolean51 = weeks43.isLessThan(weeks49);
        org.joda.time.Weeks weeks52 = weeks49.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.MutablePeriod mutablePeriod55 = weeks54.toMutablePeriod();
        org.joda.time.Weeks weeks56 = weeks52.plus(weeks54);
        org.joda.time.Weeks weeks57 = weeks41.plus(weeks56);
        org.joda.time.Weeks weeks59 = weeks56.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks60 = weeks59.negated();
        boolean boolean61 = weeks40.isGreaterThan(weeks59);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType63 = weeks62.getFieldType();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        boolean boolean66 = weeks64.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        java.lang.String str71 = weeks70.toString();
        boolean boolean72 = weeks64.isLessThan(weeks70);
        org.joda.time.Weeks weeks73 = weeks70.negated();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks75 = weeks74.negated();
        org.joda.time.MutablePeriod mutablePeriod76 = weeks75.toMutablePeriod();
        org.joda.time.Weeks weeks77 = weeks73.plus(weeks75);
        org.joda.time.Weeks weeks78 = weeks62.plus(weeks77);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.THREE;
        boolean boolean82 = weeks80.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks84 = weeks83.negated();
        org.joda.time.Weeks weeks85 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks84);
        org.joda.time.Weeks weeks86 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks84);
        java.lang.String str87 = weeks86.toString();
        boolean boolean88 = weeks80.isLessThan(weeks86);
        org.joda.time.Weeks weeks89 = weeks79.plus(weeks80);
        org.joda.time.Weeks weeks90 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType91 = weeks90.getFieldType();
        boolean boolean92 = weeks89.isSupported(durationFieldType91);
        int int93 = weeks77.get(durationFieldType91);
        boolean boolean94 = weeks40.isSupported(durationFieldType91);
        org.joda.time.Weeks weeks95 = weeks16.minus(weeks40);
        int int96 = weeks95.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "P-3W" + "'", str71, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(mutablePeriod76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "P-3W" + "'", str87, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(weeks95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType23 = weeks20.getFieldType(0);
        org.joda.time.Duration duration24 = weeks20.toStandardDuration();
        int int25 = weeks20.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P-1W");
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Period period3 = weeks1.toPeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        java.lang.String str21 = weeks0.toString();
        int int22 = weeks0.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P3W" + "'", str21, "P3W");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = weeks19.plus(weeks20);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        java.lang.String str34 = weeks33.toString();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        int int36 = weeks33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        boolean boolean37 = weeks19.isGreaterThan(weeks35);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Period period39 = weeks19.toPeriod();
        boolean boolean40 = weeks15.isLessThan(weeks19);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        boolean boolean50 = weeks42.isLessThan(weeks48);
        org.joda.time.Weeks weeks51 = weeks41.plus(weeks42);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        java.lang.String str56 = weeks55.toString();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.ONE;
        int int58 = weeks55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks57);
        boolean boolean59 = weeks41.isGreaterThan(weeks57);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Period period61 = weeks41.toPeriod();
        org.joda.time.Weeks weeks62 = weeks19.minus(weeks41);
        org.joda.time.Period period63 = weeks62.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "P-3W" + "'", str34, "P-3W");
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "P-3W" + "'", str56, "P-3W");
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(period63);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = weeks11.minus((-3));
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        boolean boolean16 = weeks14.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        boolean boolean22 = weeks14.isLessThan(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.MutablePeriod mutablePeriod25 = weeks24.toMutablePeriod();
        org.joda.time.Weeks weeks26 = weeks20.plus(weeks24);
        org.joda.time.Weeks weeks27 = weeks13.plus(weeks20);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.minus(weeks28);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks38 = weeks35.multipliedBy(0);
        org.joda.time.Weeks weeks39 = weeks33.minus(weeks38);
        int int40 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks41 = weeks39.negated();
        org.joda.time.MutablePeriod mutablePeriod42 = weeks41.toMutablePeriod();
        org.joda.time.Weeks weeks43 = weeks0.plus(weeks41);
        int int44 = weeks43.size();
        org.joda.time.Weeks weeks46 = weeks43.multipliedBy((-3));
        int int47 = weeks43.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks17.plus((int) (byte) 1);
        boolean boolean22 = weeks20.equals((java.lang.Object) 1.0d);
        org.joda.time.Weeks weeks24 = weeks20.plus((int) (byte) 100);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks29 = weeks27.dividedBy((int) '4');
        org.joda.time.Weeks weeks31 = weeks27.multipliedBy((int) (short) 0);
        org.joda.time.Duration duration32 = weeks31.toStandardDuration();
        org.joda.time.Weeks weeks33 = weeks31.negated();
        boolean boolean34 = weeks24.isLessThan(weeks33);
        int int35 = weeks24.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        boolean boolean16 = weeks14.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        boolean boolean22 = weeks14.isLessThan(weeks20);
        org.joda.time.Weeks weeks23 = weeks13.plus(weeks14);
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = weeks26.minus(weeks27);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.PeriodType periodType32 = weeks30.getPeriodType();
        boolean boolean33 = weeks26.isGreaterThan(weeks30);
        org.joda.time.Weeks weeks35 = weeks30.minus((int) (byte) 0);
        org.joda.time.Weeks weeks36 = weeks23.plus(weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        int int43 = weeks40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks42.plus((int) (short) -1);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks52 = weeks42.minus(weeks49);
        org.joda.time.Weeks weeks53 = weeks35.minus(weeks52);
        boolean boolean54 = weeks12.isLessThan(weeks35);
        org.joda.time.PeriodType periodType55 = weeks35.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(periodType55);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int30 = weeks3.getWeeks();
        org.joda.time.Weeks weeks32 = weeks3.multipliedBy((int) (short) 1);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.weeksIn(readableInterval33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        boolean boolean37 = weeks35.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        java.lang.String str42 = weeks41.toString();
        boolean boolean43 = weeks35.isLessThan(weeks41);
        org.joda.time.Weeks weeks44 = weeks34.minus(weeks41);
        org.joda.time.Weeks weeks46 = weeks44.plus((int) 'a');
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = weeks48.minus(weeks49);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType53 = weeks52.getPeriodType();
        int int54 = weeks51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks52);
        org.joda.time.Weeks weeks55 = weeks46.plus(weeks52);
        org.joda.time.DurationFieldType durationFieldType56 = weeks46.getFieldType();
        boolean boolean57 = weeks32.isSupported(durationFieldType56);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P-3W" + "'", str42, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = weeks3.dividedBy(1);
        org.joda.time.Weeks weeks11 = weeks3.minus((int) 'a');
        org.joda.time.Weeks weeks13 = weeks11.minus((int) (short) 1);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        boolean boolean16 = weeks14.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = weeks14.plus(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.ONE;
        int int29 = weeks26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.Weeks weeks31 = weeks28.plus((int) (short) -1);
        int int32 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks31);
        org.joda.time.Weeks weeks34 = weeks14.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod35 = weeks34.toMutablePeriod();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.MutablePeriod mutablePeriod47 = weeks46.toMutablePeriod();
        org.joda.time.Weeks weeks48 = weeks42.plus(weeks46);
        boolean boolean49 = weeks34.isLessThan(weeks46);
        int int50 = weeks34.size();
        org.joda.time.Weeks weeks51 = weeks11.plus(weeks34);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(weeks51);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.DurationFieldType durationFieldType6 = weeks5.getFieldType();
        org.joda.time.DurationFieldType durationFieldType8 = weeks5.getFieldType(0);
        org.joda.time.Weeks weeks9 = weeks2.plus(weeks5);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        boolean boolean12 = weeks10.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        java.lang.String str17 = weeks16.toString();
        org.joda.time.Weeks weeks18 = weeks10.plus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks27 = weeks24.plus((int) (short) -1);
        int int28 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks27);
        int int29 = weeks27.getWeeks();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType31 = weeks30.getFieldType();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        boolean boolean40 = weeks32.isLessThan(weeks38);
        org.joda.time.Weeks weeks41 = weeks38.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.MutablePeriod mutablePeriod44 = weeks43.toMutablePeriod();
        org.joda.time.Weeks weeks45 = weeks41.plus(weeks43);
        org.joda.time.Weeks weeks46 = weeks30.plus(weeks45);
        org.joda.time.Weeks weeks48 = weeks45.dividedBy((int) (short) 100);
        boolean boolean49 = weeks27.isGreaterThan(weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType51 = weeks50.getFieldType();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        boolean boolean54 = weeks52.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        boolean boolean60 = weeks52.isLessThan(weeks58);
        org.joda.time.Weeks weeks61 = weeks58.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.MutablePeriod mutablePeriod64 = weeks63.toMutablePeriod();
        org.joda.time.Weeks weeks65 = weeks61.plus(weeks63);
        org.joda.time.Weeks weeks66 = weeks50.plus(weeks65);
        org.joda.time.Weeks weeks68 = weeks65.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        boolean boolean71 = weeks69.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        java.lang.String str76 = weeks75.toString();
        org.joda.time.Weeks weeks77 = weeks69.plus(weeks75);
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks79 = weeks78.negated();
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks79);
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks79);
        java.lang.String str82 = weeks81.toString();
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.ONE;
        int int84 = weeks81.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks83);
        org.joda.time.Weeks weeks86 = weeks83.plus((int) (short) -1);
        int int87 = weeks69.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks86);
        org.joda.time.Weeks weeks89 = weeks69.plus((int) (short) 100);
        org.joda.time.Weeks weeks91 = weeks69.multipliedBy(3);
        org.joda.time.Weeks weeks92 = weeks68.minus(weeks69);
        boolean boolean93 = weeks48.isGreaterThan(weeks69);
        boolean boolean94 = weeks9.isLessThan(weeks69);
        java.lang.String str95 = weeks9.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "P-3W" + "'", str17, "P-3W");
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "P-3W" + "'", str76, "P-3W");
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "P-3W" + "'", str82, "P-3W");
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(weeks91);
        org.junit.Assert.assertNotNull(weeks92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "P-3W" + "'", str95, "P-3W");
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.DurationFieldType durationFieldType6 = weeks5.getFieldType();
        org.joda.time.DurationFieldType durationFieldType8 = weeks5.getFieldType(0);
        org.joda.time.Weeks weeks9 = weeks2.plus(weeks5);
        java.lang.String str10 = weeks5.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "P-3W" + "'", str10, "P-3W");
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = weeks4.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = weeks6.getValue(300);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 300");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Period period19 = weeks0.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks21 = weeks0.multipliedBy((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 3 * -2147483648");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Duration duration42 = weeks41.toStandardDuration();
        org.joda.time.Weeks weeks44 = weeks41.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks46 = weeks44.multipliedBy(1);
        int int47 = weeks44.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        int int24 = weeks2.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((-4));
        org.joda.time.DurationFieldType durationFieldType17 = weeks16.getFieldType();
        boolean boolean18 = weeks14.equals((java.lang.Object) durationFieldType17);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        org.joda.time.Weeks weeks27 = weeks19.plus(weeks25);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.ONE;
        int int34 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks33);
        org.joda.time.Weeks weeks36 = weeks33.plus((int) (short) -1);
        int int37 = weeks19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks36);
        org.joda.time.Weeks weeks39 = weeks19.plus((int) (short) 100);
        org.joda.time.Weeks weeks41 = weeks39.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = weeks42.getFieldType();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        boolean boolean46 = weeks44.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        java.lang.String str51 = weeks50.toString();
        boolean boolean52 = weeks44.isLessThan(weeks50);
        org.joda.time.Weeks weeks53 = weeks50.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks55 = weeks54.negated();
        org.joda.time.MutablePeriod mutablePeriod56 = weeks55.toMutablePeriod();
        org.joda.time.Weeks weeks57 = weeks53.plus(weeks55);
        org.joda.time.Weeks weeks58 = weeks42.plus(weeks57);
        org.joda.time.Weeks weeks60 = weeks57.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks61 = weeks60.negated();
        boolean boolean62 = weeks41.isGreaterThan(weeks60);
        boolean boolean63 = weeks14.equals((java.lang.Object) weeks60);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.MutablePeriod mutablePeriod27 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        int int35 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks34);
        org.joda.time.Weeks weeks37 = weeks34.plus((int) (short) -1);
        org.joda.time.Weeks weeks39 = weeks34.multipliedBy((int) (byte) 10);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeks((-1));
        int int47 = weeks46.size();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks52 = weeks50.dividedBy((int) '4');
        int int53 = weeks50.size();
        org.joda.time.Period period54 = weeks50.toPeriod();
        org.joda.time.DurationFieldType durationFieldType55 = weeks50.getFieldType();
        org.joda.time.Weeks weeks56 = weeks46.minus(weeks50);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks63.negated();
        org.joda.time.Weeks weeks67 = weeks46.plus(weeks66);
        boolean boolean68 = weeks43.isLessThan(weeks67);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        org.joda.time.Weeks weeks73 = weeks71.dividedBy((int) '4');
        int int74 = weeks71.size();
        org.joda.time.Period period75 = weeks71.toPeriod();
        org.joda.time.DurationFieldType durationFieldType76 = weeks71.getFieldType();
        boolean boolean77 = weeks43.isSupported(durationFieldType76);
        int int78 = weeks39.get(durationFieldType76);
        org.joda.time.Weeks weeks79 = weeks22.plus(weeks39);
        org.joda.time.Duration duration80 = weeks79.toStandardDuration();
        org.joda.time.PeriodType periodType81 = weeks79.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(periodType81);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks19.dividedBy((int) '4');
        int int22 = weeks19.size();
        org.joda.time.Weeks weeks23 = weeks19.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks26.dividedBy((int) '4');
        int int29 = weeks26.size();
        org.joda.time.Weeks weeks30 = weeks26.negated();
        boolean boolean31 = weeks23.isGreaterThan(weeks26);
        org.joda.time.DurationFieldType durationFieldType32 = weeks23.getFieldType();
        int int33 = weeks16.get(durationFieldType32);
        int int34 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        org.joda.time.Weeks weeks36 = weeks16.minus(9);
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod37 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int38 = weeks36.compareTo(baseSingleFieldPeriod37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(weeks36);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        java.lang.String str6 = weeks2.toString();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = weeks10.minus(weeks11);
        org.joda.time.DurationFieldType durationFieldType14 = weeks11.getFieldType();
        boolean boolean15 = weeks8.isSupported(durationFieldType14);
        int int16 = weeks2.get(durationFieldType14);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = weeks1.multipliedBy(0);
        int int5 = weeks4.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int30 = weeks3.getWeeks();
        org.joda.time.Duration duration31 = weeks3.toStandardDuration();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType33 = weeks32.getFieldType();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        boolean boolean36 = weeks34.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        boolean boolean42 = weeks34.isLessThan(weeks40);
        org.joda.time.Weeks weeks43 = weeks40.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.MutablePeriod mutablePeriod46 = weeks45.toMutablePeriod();
        org.joda.time.Weeks weeks47 = weeks43.plus(weeks45);
        org.joda.time.Weeks weeks48 = weeks32.plus(weeks47);
        org.joda.time.Weeks weeks50 = weeks47.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.ONE;
        int int57 = weeks54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks56);
        org.joda.time.Weeks weeks58 = weeks50.plus(weeks54);
        boolean boolean59 = weeks3.isGreaterThan(weeks50);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int30 = weeks3.getWeeks();
        org.joda.time.Duration duration31 = weeks3.toStandardDuration();
        org.joda.time.PeriodType periodType32 = weeks3.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(periodType32);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Period period15 = weeks10.toPeriod();
        org.joda.time.Weeks weeks17 = weeks10.minus(10);
        org.joda.time.Duration duration18 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean21 = weeks19.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        org.joda.time.Weeks weeks27 = weeks19.plus(weeks25);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks30 = weeks28.minus((int) (byte) 10);
        org.joda.time.Weeks weeks31 = weeks17.minus(weeks30);
        java.lang.Class<?> wildcardClass32 = weeks17.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Seconds seconds2 = weeks1.toStandardSeconds();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(seconds2);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Period period3 = weeks1.toPeriod();
        java.lang.Class<?> wildcardClass4 = weeks1.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.MutablePeriod mutablePeriod27 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        int int35 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks34);
        org.joda.time.Weeks weeks37 = weeks34.plus((int) (short) -1);
        org.joda.time.Weeks weeks39 = weeks34.multipliedBy((int) (byte) 10);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeks((-1));
        int int47 = weeks46.size();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks52 = weeks50.dividedBy((int) '4');
        int int53 = weeks50.size();
        org.joda.time.Period period54 = weeks50.toPeriod();
        org.joda.time.DurationFieldType durationFieldType55 = weeks50.getFieldType();
        org.joda.time.Weeks weeks56 = weeks46.minus(weeks50);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks63.negated();
        org.joda.time.Weeks weeks67 = weeks46.plus(weeks66);
        boolean boolean68 = weeks43.isLessThan(weeks67);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        org.joda.time.Weeks weeks73 = weeks71.dividedBy((int) '4');
        int int74 = weeks71.size();
        org.joda.time.Period period75 = weeks71.toPeriod();
        org.joda.time.DurationFieldType durationFieldType76 = weeks71.getFieldType();
        boolean boolean77 = weeks43.isSupported(durationFieldType76);
        int int78 = weeks39.get(durationFieldType76);
        org.joda.time.Weeks weeks79 = weeks22.plus(weeks39);
        org.joda.time.Duration duration80 = weeks79.toStandardDuration();
        org.joda.time.Weeks weeks81 = weeks79.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(weeks81);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks19.dividedBy((int) '4');
        int int22 = weeks19.size();
        org.joda.time.Weeks weeks23 = weeks19.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks26.dividedBy((int) '4');
        int int29 = weeks26.size();
        org.joda.time.Weeks weeks30 = weeks26.negated();
        boolean boolean31 = weeks23.isGreaterThan(weeks26);
        org.joda.time.DurationFieldType durationFieldType32 = weeks23.getFieldType();
        int int33 = weeks16.get(durationFieldType32);
        int int34 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType36 = weeks16.getFieldType((-927));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -927");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        int int4 = weeks3.size();
        java.lang.String str5 = weeks3.toString();
        java.lang.String str6 = weeks3.toString();
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = weeks3.minus((-3));
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.DurationFieldType durationFieldType15 = weeks14.getFieldType();
        org.joda.time.DurationFieldType durationFieldType17 = weeks14.getFieldType(0);
        boolean boolean18 = weeks11.isSupported(durationFieldType17);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = weeks20.minus(weeks21);
        org.joda.time.DurationFieldType durationFieldType24 = weeks21.getFieldType();
        boolean boolean25 = weeks11.isLessThan(weeks21);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.DurationFieldType durationFieldType31 = weeks30.getFieldType();
        org.joda.time.DurationFieldType durationFieldType33 = weeks30.getFieldType(0);
        boolean boolean34 = weeks27.isSupported(durationFieldType33);
        boolean boolean35 = weeks11.isSupported(durationFieldType33);
        int int36 = weeks9.get(durationFieldType33);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-3W" + "'", str5, "P-3W");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        int int7 = weeks5.size();
        org.joda.time.Weeks weeks9 = weeks5.minus((int) (byte) -1);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks9);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks42 = null;
        org.joda.time.Weeks weeks43 = weeks35.minus(weeks42);
        org.joda.time.Period period44 = weeks43.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(period44);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        java.lang.String str6 = weeks2.toString();
        org.joda.time.Weeks weeks8 = weeks2.dividedBy((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.DurationFieldType durationFieldType10 = weeks9.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(durationFieldType10);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeks((-1));
        int int21 = weeks20.size();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks24.dividedBy((int) '4');
        int int27 = weeks24.size();
        org.joda.time.Period period28 = weeks24.toPeriod();
        org.joda.time.DurationFieldType durationFieldType29 = weeks24.getFieldType();
        org.joda.time.Weeks weeks30 = weeks20.minus(weeks24);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = weeks37.negated();
        org.joda.time.Weeks weeks41 = weeks20.plus(weeks40);
        boolean boolean42 = weeks17.isLessThan(weeks41);
        org.joda.time.MutablePeriod mutablePeriod43 = weeks17.toMutablePeriod();
        int int44 = weeks17.getWeeks();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType46 = weeks45.getPeriodType();
        org.joda.time.Weeks weeks48 = weeks45.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks50 = weeks45.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod51 = weeks45.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType52 = weeks45.getFieldType();
        org.joda.time.PeriodType periodType53 = weeks45.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType54 = weeks45.getFieldType();
        int int55 = weeks17.get(durationFieldType54);
        boolean boolean56 = weeks11.equals((java.lang.Object) weeks17);
        org.joda.time.Weeks weeks58 = weeks17.multipliedBy(100);
        java.lang.String str59 = weeks17.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-3) + "'", int44 == (-3));
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        int int1 = weeks0.size();
        org.joda.time.Seconds seconds2 = weeks0.toStandardSeconds();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(seconds2);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.MutablePeriod mutablePeriod27 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.TWO;
        boolean boolean29 = weeks22.isGreaterThan(weeks28);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.weeks((-1));
        int int32 = weeks31.size();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks37 = weeks35.dividedBy((int) '4');
        int int38 = weeks35.size();
        org.joda.time.Period period39 = weeks35.toPeriod();
        org.joda.time.DurationFieldType durationFieldType40 = weeks35.getFieldType();
        org.joda.time.Weeks weeks41 = weeks31.minus(weeks35);
        org.joda.time.Weeks weeks43 = weeks31.minus((int) (byte) 100);
        org.joda.time.Duration duration44 = weeks31.toStandardDuration();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks49 = weeks47.minus((int) 'a');
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        int int55 = weeks50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks52);
        org.joda.time.DurationFieldType durationFieldType56 = weeks50.getFieldType();
        boolean boolean57 = weeks47.isSupported(durationFieldType56);
        boolean boolean58 = weeks31.isSupported(durationFieldType56);
        boolean boolean59 = weeks28.isSupported(durationFieldType56);
        org.joda.time.Weeks weeks61 = weeks28.plus((int) (byte) 1);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(weeks61);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration18 = weeks17.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(duration18);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MIN_VALUE;
        int int1 = weeks0.getWeeks();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = weeks5.minus(weeks6);
        org.joda.time.DurationFieldType durationFieldType9 = weeks6.getFieldType();
        boolean boolean10 = weeks3.isSupported(durationFieldType9);
        org.joda.time.Weeks weeks12 = weeks3.multipliedBy((int) (short) 100);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        int int17 = weeks16.size();
        java.lang.String str18 = weeks16.toString();
        java.lang.String str19 = weeks16.toString();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks24 = weeks21.minus((int) '4');
        org.joda.time.Weeks weeks25 = weeks16.minus(weeks21);
        org.joda.time.Weeks weeks27 = weeks16.minus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType28 = weeks16.getFieldType();
        int int29 = weeks12.get(durationFieldType28);
        int int30 = weeks0.get(durationFieldType28);
        int int31 = weeks0.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3200 + "'", int29 == 3200);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-2147483648) + "'", int30 == (-2147483648));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Period period10 = weeks0.toPeriod();
        java.lang.String str11 = weeks0.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P2W" + "'", str11, "P2W");
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(9);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeksIn(readableInterval3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks4.minus(weeks11);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.MutablePeriod mutablePeriod19 = weeks18.toMutablePeriod();
        org.joda.time.Weeks weeks21 = weeks18.multipliedBy(0);
        org.joda.time.Weeks weeks22 = weeks16.minus(weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks23.plus(weeks24);
        int int34 = weeks24.size();
        org.joda.time.DurationFieldType durationFieldType35 = weeks24.getFieldType();
        org.joda.time.Weeks weeks36 = weeks16.plus(weeks24);
        boolean boolean37 = weeks11.isGreaterThan(weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        boolean boolean41 = weeks39.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        boolean boolean47 = weeks39.isLessThan(weeks45);
        org.joda.time.Weeks weeks48 = weeks38.plus(weeks39);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.ONE;
        int int55 = weeks52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks54);
        boolean boolean56 = weeks38.isGreaterThan(weeks54);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType58 = weeks57.getFieldType();
        int int59 = weeks54.get(durationFieldType58);
        org.joda.time.Weeks weeks60 = weeks36.minus(weeks54);
        org.joda.time.Weeks weeks61 = weeks1.minus(weeks54);
        org.joda.time.Weeks weeks63 = weeks1.plus(0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks63);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks10 = weeks6.dividedBy(3);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.weeks((int) (short) -1);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = weeks13.getFieldType();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        boolean boolean17 = weeks15.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        boolean boolean23 = weeks15.isLessThan(weeks21);
        org.joda.time.Weeks weeks24 = weeks21.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks26.toMutablePeriod();
        org.joda.time.Weeks weeks28 = weeks24.plus(weeks26);
        org.joda.time.Weeks weeks29 = weeks13.plus(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks32 = weeks31.negated();
        int int33 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.MutablePeriod mutablePeriod34 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks6.plus(weeks32);
        int int36 = weeks35.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks6 = weeks2.minus((int) 'a');
        org.joda.time.DurationFieldType durationFieldType7 = weeks2.getFieldType();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.PeriodType periodType7 = weeks5.getPeriodType();
        boolean boolean8 = weeks1.isGreaterThan(weeks5);
        java.lang.Class<?> wildcardClass9 = weeks1.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Weeks weeks11 = weeks0.dividedBy((int) ' ');
        org.joda.time.Duration duration12 = weeks0.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks18.negated();
        org.joda.time.Weeks weeks22 = weeks1.plus(weeks21);
        org.joda.time.Weeks weeks24 = weeks22.dividedBy((-3));
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType26 = weeks25.getPeriodType();
        org.joda.time.Weeks weeks28 = weeks25.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks30 = weeks25.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod31 = weeks25.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType32 = weeks25.getFieldType();
        org.joda.time.PeriodType periodType33 = weeks25.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType34 = weeks25.getFieldType();
        org.joda.time.Weeks weeks35 = weeks25.negated();
        boolean boolean36 = weeks22.isLessThan(weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks41 = weeks39.dividedBy((int) '4');
        int int42 = weeks39.size();
        org.joda.time.Weeks weeks44 = weeks39.multipliedBy((int) (short) -1);
        int int45 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = weeks20.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = weeks23.getFieldType();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        boolean boolean33 = weeks25.isLessThan(weeks31);
        org.joda.time.Weeks weeks34 = weeks31.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.MutablePeriod mutablePeriod37 = weeks36.toMutablePeriod();
        org.joda.time.Weeks weeks38 = weeks34.plus(weeks36);
        org.joda.time.Weeks weeks39 = weeks23.plus(weeks38);
        org.joda.time.Weeks weeks41 = weeks38.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks42 = weeks41.negated();
        boolean boolean43 = weeks22.isGreaterThan(weeks41);
        int int44 = weeks22.getWeeks();
        org.joda.time.Weeks weeks46 = weeks22.minus((-13));
        org.joda.time.Weeks weeks48 = weeks46.plus((-927));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1030 + "'", int44 == 1030);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        java.lang.String str9 = weeks8.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P0W" + "'", str9, "P0W");
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int30 = weeks3.getWeeks();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType32 = weeks31.getPeriodType();
        org.joda.time.Weeks weeks34 = weeks31.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks36 = weeks31.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod37 = weeks31.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType38 = weeks31.getFieldType();
        org.joda.time.PeriodType periodType39 = weeks31.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType40 = weeks31.getFieldType();
        int int41 = weeks3.get(durationFieldType40);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.weeksIn(readableInterval42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        boolean boolean46 = weeks44.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        java.lang.String str51 = weeks50.toString();
        boolean boolean52 = weeks44.isLessThan(weeks50);
        org.joda.time.Weeks weeks53 = weeks43.minus(weeks50);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.MutablePeriod mutablePeriod58 = weeks57.toMutablePeriod();
        org.joda.time.Weeks weeks60 = weeks57.multipliedBy(0);
        org.joda.time.Weeks weeks61 = weeks55.minus(weeks60);
        int int62 = weeks53.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks61);
        org.joda.time.Weeks weeks63 = weeks61.negated();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.parseWeeks("P-4W");
        boolean boolean66 = weeks63.equals((java.lang.Object) "P-4W");
        int int67 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks63);
        int int68 = weeks63.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-3) + "'", int41 == (-3));
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        int int5 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks2);
        org.joda.time.Weeks weeks7 = weeks2.minus((-55));
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = weeks8.getFieldType();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        boolean boolean12 = weeks10.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        java.lang.String str17 = weeks16.toString();
        boolean boolean18 = weeks10.isLessThan(weeks16);
        org.joda.time.Weeks weeks19 = weeks16.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.MutablePeriod mutablePeriod22 = weeks21.toMutablePeriod();
        org.joda.time.Weeks weeks23 = weeks19.plus(weeks21);
        org.joda.time.Weeks weeks24 = weeks8.plus(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.ONE;
        int int33 = weeks30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.Weeks weeks34 = weeks26.plus(weeks30);
        org.joda.time.MutablePeriod mutablePeriod35 = weeks30.toMutablePeriod();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks37 = weeks7.minus(weeks36);
        org.joda.time.Period period38 = weeks36.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod39 = weeks36.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "P-3W" + "'", str17, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = weeks19.plus(weeks20);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks31);
        java.lang.String str34 = weeks33.toString();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        int int36 = weeks33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        boolean boolean37 = weeks19.isGreaterThan(weeks35);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Period period39 = weeks19.toPeriod();
        boolean boolean40 = weeks15.isLessThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType41 = weeks19.getFieldType();
        org.joda.time.PeriodType periodType42 = weeks19.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "P-3W" + "'", str34, "P-3W");
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(periodType42);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((-55));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.DurationFieldType durationFieldType27 = weeks6.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            int int29 = weeks6.getValue(300);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 300");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(durationFieldType27);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.Duration duration15 = weeks11.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = weeks11.getValue(900);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 900");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(duration15);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks20 = weeks6.multipliedBy((-100));
        // The following exception was thrown during execution in test generation
        try {
            int int22 = weeks20.getValue((-10));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks20);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        java.lang.String str6 = weeks5.toString();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.ONE;
        int int8 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks7);
        org.joda.time.Weeks weeks10 = weeks7.plus((int) (short) -1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType12 = weeks11.getPeriodType();
        org.joda.time.Weeks weeks14 = weeks11.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks16 = weeks11.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod17 = weeks11.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType18 = weeks11.getFieldType();
        org.joda.time.PeriodType periodType19 = weeks11.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType20 = weeks11.getFieldType();
        boolean boolean21 = weeks10.isSupported(durationFieldType20);
        org.joda.time.Period period22 = weeks10.toPeriod();
        boolean boolean23 = weeks1.isGreaterThan(weeks10);
        int int24 = weeks10.size();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType26 = weeks25.getPeriodType();
        org.joda.time.Weeks weeks28 = weeks25.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks30 = weeks25.dividedBy((int) 'a');
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        boolean boolean40 = weeks32.isLessThan(weeks38);
        org.joda.time.Weeks weeks41 = weeks31.plus(weeks32);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        int int48 = weeks45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        boolean boolean49 = weeks31.isGreaterThan(weeks47);
        int int50 = weeks30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks31);
        org.joda.time.DurationFieldType durationFieldType51 = weeks30.getFieldType();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks53 = weeks30.plus(weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        boolean boolean57 = weeks55.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        boolean boolean63 = weeks55.isLessThan(weeks61);
        org.joda.time.Weeks weeks64 = weeks54.plus(weeks55);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks66 = weeks65.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        java.lang.String str69 = weeks68.toString();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.ONE;
        int int71 = weeks68.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks70);
        boolean boolean72 = weeks54.isGreaterThan(weeks70);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType74 = weeks73.getFieldType();
        int int75 = weeks70.get(durationFieldType74);
        org.joda.time.Weeks weeks77 = weeks70.minus((int) (byte) -1);
        org.joda.time.Weeks weeks79 = weeks77.minus((int) '#');
        org.joda.time.Weeks weeks80 = weeks30.minus(weeks77);
        org.joda.time.Weeks weeks81 = weeks10.minus(weeks30);
        org.joda.time.Weeks weeks83 = weeks30.minus(0);
        int int84 = weeks30.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "P-3W" + "'", str69, "P-3W");
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks17.plus((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        int int22 = weeks20.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks16.isGreaterThan(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks27 = weeks25.dividedBy((int) '4');
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks30.dividedBy((int) '4');
        int int33 = weeks30.size();
        org.joda.time.Weeks weeks34 = weeks27.plus(weeks30);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.DurationFieldType durationFieldType40 = weeks39.getFieldType();
        org.joda.time.DurationFieldType durationFieldType42 = weeks39.getFieldType(0);
        boolean boolean43 = weeks36.isSupported(durationFieldType42);
        boolean boolean44 = weeks30.isSupported(durationFieldType42);
        org.joda.time.PeriodType periodType45 = weeks30.getPeriodType();
        boolean boolean46 = weeks22.equals((java.lang.Object) weeks30);
        org.joda.time.Weeks weeks48 = weeks22.dividedBy(4);
        org.joda.time.Weeks weeks50 = weeks48.plus((int) (short) 10);
        org.joda.time.Weeks weeks52 = weeks48.dividedBy(3);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = weeks1.plus(0);
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Period period6 = weeks5.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        org.joda.time.Weeks weeks15 = weeks11.multipliedBy((int) (short) 0);
        int int16 = weeks11.size();
        boolean boolean17 = weeks8.equals((java.lang.Object) int16);
        org.joda.time.PeriodType periodType18 = weeks8.getPeriodType();
        int int19 = weeks8.getWeeks();
        org.joda.time.MutablePeriod mutablePeriod20 = weeks8.toMutablePeriod();
        org.joda.time.Weeks weeks21 = weeks8.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(weeks21);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        int int14 = weeks13.size();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks19 = weeks17.dividedBy((int) '4');
        int int20 = weeks17.size();
        org.joda.time.Period period21 = weeks17.toPeriod();
        org.joda.time.DurationFieldType durationFieldType22 = weeks17.getFieldType();
        org.joda.time.Weeks weeks23 = weeks13.minus(weeks17);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks30.negated();
        org.joda.time.Weeks weeks34 = weeks13.plus(weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = weeks10.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.multipliedBy((-103));
        // The following exception was thrown during execution in test generation
        try {
            int int40 = weeks35.getValue((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483648");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        int int14 = weeks13.size();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks19 = weeks17.dividedBy((int) '4');
        int int20 = weeks17.size();
        org.joda.time.Period period21 = weeks17.toPeriod();
        org.joda.time.DurationFieldType durationFieldType22 = weeks17.getFieldType();
        org.joda.time.Weeks weeks23 = weeks13.minus(weeks17);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks30.negated();
        org.joda.time.Weeks weeks34 = weeks13.plus(weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = weeks10.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks36.multipliedBy((int) (byte) 0);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.Period period27 = weeks6.toPeriod();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks30.minus((int) 'a');
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        int int38 = weeks33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.DurationFieldType durationFieldType39 = weeks33.getFieldType();
        boolean boolean40 = weeks30.isSupported(durationFieldType39);
        boolean boolean41 = weeks6.isSupported(durationFieldType39);
        org.joda.time.Weeks weeks42 = null;
        org.joda.time.Weeks weeks43 = weeks6.minus(weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        java.lang.String str48 = weeks47.toString();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.ONE;
        int int50 = weeks47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks49);
        java.lang.String str51 = weeks47.toString();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.weeks((-1));
        int int54 = weeks53.size();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks59 = weeks57.dividedBy((int) '4');
        int int60 = weeks57.size();
        org.joda.time.Period period61 = weeks57.toPeriod();
        org.joda.time.DurationFieldType durationFieldType62 = weeks57.getFieldType();
        org.joda.time.Weeks weeks63 = weeks53.minus(weeks57);
        org.joda.time.Weeks weeks65 = weeks53.minus((int) (byte) 100);
        org.joda.time.Duration duration66 = weeks53.toStandardDuration();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks68);
        org.joda.time.Weeks weeks71 = weeks69.minus((int) 'a');
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks74 = weeks73.negated();
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks74);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks74);
        int int77 = weeks72.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks74);
        org.joda.time.DurationFieldType durationFieldType78 = weeks72.getFieldType();
        boolean boolean79 = weeks69.isSupported(durationFieldType78);
        boolean boolean80 = weeks53.isSupported(durationFieldType78);
        int int81 = weeks47.get(durationFieldType78);
        int int82 = weeks43.get(durationFieldType78);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "P-3W" + "'", str48, "P-3W");
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-3) + "'", int81 == (-3));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        java.lang.String str6 = weeks2.toString();
        org.joda.time.Weeks weeks8 = weeks2.dividedBy((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        boolean boolean17 = weeks9.isLessThan(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.Weeks weeks22 = weeks18.plus(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.DurationFieldType durationFieldType24 = weeks18.getFieldType();
        boolean boolean25 = weeks2.isSupported(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType8 = weeks7.getFieldType();
        org.joda.time.DurationFieldType durationFieldType10 = weeks7.getFieldType(0);
        int int11 = weeks0.get(durationFieldType10);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks18 = weeks16.dividedBy((int) '4');
        int int19 = weeks16.size();
        org.joda.time.Weeks weeks20 = weeks16.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks23.dividedBy((int) '4');
        int int26 = weeks23.size();
        org.joda.time.Weeks weeks27 = weeks23.negated();
        boolean boolean28 = weeks20.isGreaterThan(weeks23);
        org.joda.time.DurationFieldType durationFieldType29 = weeks20.getFieldType();
        int int30 = weeks13.get(durationFieldType29);
        boolean boolean31 = weeks0.isLessThan(weeks13);
        org.joda.time.DurationFieldType durationFieldType32 = weeks0.getFieldType();
        org.joda.time.Weeks weeks34 = weeks0.minus(0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(weeks34);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean24 = weeks19.equals((java.lang.Object) 1L);
        int int25 = weeks1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks27 = weeks19.dividedBy((int) (byte) 1);
        org.joda.time.Duration duration28 = weeks19.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(duration28);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.minus((int) 'a');
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        int int10 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks7);
        org.joda.time.DurationFieldType durationFieldType11 = weeks5.getFieldType();
        boolean boolean12 = weeks2.isSupported(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod13 = weeks2.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(mutablePeriod13);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.DurationFieldType durationFieldType26 = weeks5.getFieldType();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks28 = weeks5.plus(weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.THREE;
        boolean boolean32 = weeks30.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        boolean boolean38 = weeks30.isLessThan(weeks36);
        org.joda.time.Weeks weeks39 = weeks29.plus(weeks30);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.ONE;
        int int46 = weeks43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks45);
        boolean boolean47 = weeks29.isGreaterThan(weeks45);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = weeks48.getFieldType();
        int int50 = weeks45.get(durationFieldType49);
        org.joda.time.Weeks weeks52 = weeks45.minus((int) (byte) -1);
        org.joda.time.Weeks weeks54 = weeks52.minus((int) '#');
        org.joda.time.Weeks weeks55 = weeks5.minus(weeks52);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks55);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        int int19 = weeks17.getWeeks();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks31.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks20.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.dividedBy((int) (short) 100);
        boolean boolean39 = weeks17.isGreaterThan(weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType41 = weeks40.getFieldType();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        boolean boolean44 = weeks42.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        java.lang.String str49 = weeks48.toString();
        boolean boolean50 = weeks42.isLessThan(weeks48);
        org.joda.time.Weeks weeks51 = weeks48.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.MutablePeriod mutablePeriod54 = weeks53.toMutablePeriod();
        org.joda.time.Weeks weeks55 = weeks51.plus(weeks53);
        org.joda.time.Weeks weeks56 = weeks40.plus(weeks55);
        org.joda.time.Weeks weeks58 = weeks55.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        boolean boolean61 = weeks59.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        java.lang.String str66 = weeks65.toString();
        org.joda.time.Weeks weeks67 = weeks59.plus(weeks65);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        int int74 = weeks71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks73);
        org.joda.time.Weeks weeks76 = weeks73.plus((int) (short) -1);
        int int77 = weeks59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks76);
        org.joda.time.Weeks weeks79 = weeks59.plus((int) (short) 100);
        org.joda.time.Weeks weeks81 = weeks59.multipliedBy(3);
        org.joda.time.Weeks weeks82 = weeks58.minus(weeks59);
        boolean boolean83 = weeks38.isGreaterThan(weeks59);
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks86 = weeks84.dividedBy((-2));
        org.joda.time.Weeks weeks88 = org.joda.time.Weeks.parseWeeks("P-3W");
        org.joda.time.DurationFieldType durationFieldType89 = weeks88.getFieldType();
        org.joda.time.Weeks weeks91 = weeks88.plus((int) (byte) 1);
        boolean boolean92 = weeks86.isLessThan(weeks91);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P-3W" + "'", str49, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P-3W" + "'", str66, "P-3W");
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertNotNull(weeks91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Period period11 = weeks0.toPeriod();
        java.lang.String str12 = weeks0.toString();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        java.lang.String str17 = weeks16.toString();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.ONE;
        int int19 = weeks16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks18.plus((int) (short) -1);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        java.lang.String str26 = weeks25.toString();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks18.minus(weeks25);
        org.joda.time.Weeks weeks30 = weeks18.dividedBy((int) (short) 1);
        org.joda.time.Weeks weeks31 = weeks0.minus(weeks30);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P1W" + "'", str12, "P1W");
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "P-3W" + "'", str17, "P-3W");
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-3W" + "'", str26, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        int int7 = weeks4.size();
        org.joda.time.Weeks weeks8 = weeks4.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks15 = weeks11.negated();
        boolean boolean16 = weeks8.isGreaterThan(weeks11);
        org.joda.time.DurationFieldType durationFieldType17 = weeks8.getFieldType();
        int int18 = weeks1.get(durationFieldType17);
        org.joda.time.Weeks weeks20 = weeks1.plus((int) (byte) 100);
        org.joda.time.Weeks weeks22 = weeks20.multipliedBy(1);
        org.joda.time.PeriodType periodType23 = weeks20.getPeriodType();
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeksIn(readableInterval24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks25.minus(weeks32);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.MutablePeriod mutablePeriod40 = weeks39.toMutablePeriod();
        org.joda.time.Weeks weeks42 = weeks39.multipliedBy(0);
        org.joda.time.Weeks weeks43 = weeks37.minus(weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        boolean boolean47 = weeks45.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        java.lang.String str52 = weeks51.toString();
        boolean boolean53 = weeks45.isLessThan(weeks51);
        org.joda.time.Weeks weeks54 = weeks44.plus(weeks45);
        int int55 = weeks45.size();
        org.joda.time.DurationFieldType durationFieldType56 = weeks45.getFieldType();
        org.joda.time.Weeks weeks57 = weeks37.plus(weeks45);
        boolean boolean58 = weeks32.isGreaterThan(weeks57);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.weeks((-1));
        int int61 = weeks60.size();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks63);
        org.joda.time.Weeks weeks66 = weeks64.dividedBy((int) '4');
        int int67 = weeks64.size();
        org.joda.time.Period period68 = weeks64.toPeriod();
        org.joda.time.DurationFieldType durationFieldType69 = weeks64.getFieldType();
        org.joda.time.Weeks weeks70 = weeks60.minus(weeks64);
        boolean boolean71 = weeks57.isGreaterThan(weeks70);
        boolean boolean72 = weeks20.equals((java.lang.Object) weeks57);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "P-3W" + "'", str52, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(900);
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks12 = weeks1.multipliedBy(100);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Period period19 = weeks0.toPeriod();
        int int20 = weeks0.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = weeks11.getFieldType();
        boolean boolean13 = weeks10.isSupported(durationFieldType12);
        int int14 = weeks10.getWeeks();
        org.joda.time.Weeks weeks16 = weeks10.multipliedBy((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType18 = weeks10.getFieldType((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(weeks16);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType12 = weeks11.getPeriodType();
        org.joda.time.Weeks weeks14 = weeks11.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks16 = weeks11.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod17 = weeks11.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType18 = weeks11.getFieldType();
        int int19 = weeks10.get(durationFieldType18);
        int int20 = weeks6.get(durationFieldType18);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = weeks22.minus(weeks23);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType27 = weeks26.getPeriodType();
        int int28 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        org.joda.time.Duration duration29 = weeks25.toStandardDuration();
        boolean boolean30 = weeks6.isLessThan(weeks25);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.ONE;
        int int37 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks36);
        org.joda.time.Weeks weeks39 = weeks36.plus((int) (short) -1);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType41 = weeks40.getPeriodType();
        org.joda.time.Weeks weeks43 = weeks40.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks45 = weeks40.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod46 = weeks40.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType47 = weeks40.getFieldType();
        org.joda.time.PeriodType periodType48 = weeks40.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType49 = weeks40.getFieldType();
        boolean boolean50 = weeks39.isSupported(durationFieldType49);
        org.joda.time.Period period51 = weeks39.toPeriod();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period51);
        org.joda.time.Weeks weeks54 = weeks52.minus(2);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        org.joda.time.Weeks weeks57 = weeks55.dividedBy(1030);
        boolean boolean58 = weeks25.isGreaterThan(weeks57);
        org.joda.time.Weeks weeks60 = weeks57.dividedBy((int) (byte) 100);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-3) + "'", int20 == (-3));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(weeks60);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.minus(weeks28);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks38 = weeks35.multipliedBy(0);
        org.joda.time.Weeks weeks39 = weeks33.minus(weeks38);
        int int40 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks41 = weeks39.negated();
        org.joda.time.MutablePeriod mutablePeriod42 = weeks41.toMutablePeriod();
        org.joda.time.Weeks weeks43 = weeks0.plus(weeks41);
        org.joda.time.PeriodType periodType44 = weeks0.getPeriodType();
        org.joda.time.Period period45 = weeks0.toPeriod();
        java.lang.Class<?> wildcardClass46 = weeks0.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks42 = null;
        org.joda.time.Weeks weeks43 = weeks35.minus(weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks46 = weeks44.plus(900);
        java.lang.String str47 = weeks46.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P903W" + "'", str47, "P903W");
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks24 = weeks19.dividedBy((int) 'a');
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks25.plus(weeks26);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        java.lang.String str40 = weeks39.toString();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.ONE;
        int int42 = weeks39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks41);
        boolean boolean43 = weeks25.isGreaterThan(weeks41);
        int int44 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.DurationFieldType durationFieldType45 = weeks24.getFieldType();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks47 = weeks24.plus(weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks52 = weeks50.dividedBy((int) '4');
        int int53 = weeks50.size();
        org.joda.time.Period period54 = weeks50.toPeriod();
        org.joda.time.DurationFieldType durationFieldType55 = weeks50.getFieldType();
        org.joda.time.Weeks weeks56 = weeks46.plus(weeks50);
        boolean boolean57 = weeks18.isGreaterThan(weeks56);
        org.joda.time.Weeks weeks59 = weeks18.minus((int) (byte) -1);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "P-3W" + "'", str40, "P-3W");
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(weeks59);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = weeks13.minus(weeks14);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.PeriodType periodType19 = weeks17.getPeriodType();
        boolean boolean20 = weeks13.isGreaterThan(weeks17);
        org.joda.time.Weeks weeks22 = weeks17.minus((int) (byte) 0);
        org.joda.time.Weeks weeks23 = weeks10.plus(weeks22);
        org.joda.time.Weeks weeks25 = weeks22.minus((-100));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.MutablePeriod mutablePeriod11 = weeks10.toMutablePeriod();
        org.joda.time.Weeks weeks12 = weeks6.plus(weeks10);
        org.joda.time.Weeks weeks14 = weeks10.multipliedBy(10);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks19.dividedBy((int) '4');
        int int22 = weeks19.size();
        org.joda.time.Weeks weeks23 = weeks19.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks26.dividedBy((int) '4');
        int int29 = weeks26.size();
        org.joda.time.Weeks weeks30 = weeks26.negated();
        boolean boolean31 = weeks23.isGreaterThan(weeks26);
        org.joda.time.DurationFieldType durationFieldType32 = weeks23.getFieldType();
        int int33 = weeks16.get(durationFieldType32);
        int int34 = weeks10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType36 = weeks10.getFieldType(3200);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3200");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        org.joda.time.Weeks weeks29 = weeks6.plus(0);
        org.joda.time.PeriodType periodType30 = weeks29.getPeriodType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(periodType30);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks18.negated();
        org.joda.time.Weeks weeks22 = weeks1.plus(weeks21);
        int int23 = weeks21.size();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks30.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks37 = weeks33.plus(weeks35);
        int int38 = weeks35.size();
        org.joda.time.Weeks weeks40 = weeks35.minus((int) (byte) -1);
        org.joda.time.Weeks weeks42 = weeks35.dividedBy(100);
        int int43 = weeks21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.DurationFieldType durationFieldType45 = weeks21.getFieldType((int) (byte) 0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(durationFieldType45);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = weeks4.negated();
        org.joda.time.DurationFieldType durationFieldType7 = weeks6.getFieldType();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.parseWeeks("P3W");
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = weeks11.plus(weeks17);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        int int26 = weeks23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks25.plus((int) (short) -1);
        int int29 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.Weeks weeks31 = weeks11.plus((int) (short) 100);
        org.joda.time.Weeks weeks33 = weeks31.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType35 = weeks34.getFieldType();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks42.negated();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.MutablePeriod mutablePeriod48 = weeks47.toMutablePeriod();
        org.joda.time.Weeks weeks49 = weeks45.plus(weeks47);
        org.joda.time.Weeks weeks50 = weeks34.plus(weeks49);
        org.joda.time.Weeks weeks52 = weeks49.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks53 = weeks52.negated();
        boolean boolean54 = weeks33.isGreaterThan(weeks52);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType56 = weeks55.getFieldType();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks63.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks67.negated();
        org.joda.time.MutablePeriod mutablePeriod69 = weeks68.toMutablePeriod();
        org.joda.time.Weeks weeks70 = weeks66.plus(weeks68);
        org.joda.time.Weeks weeks71 = weeks55.plus(weeks70);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.THREE;
        boolean boolean75 = weeks73.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks77 = weeks76.negated();
        org.joda.time.Weeks weeks78 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks77);
        java.lang.String str80 = weeks79.toString();
        boolean boolean81 = weeks73.isLessThan(weeks79);
        org.joda.time.Weeks weeks82 = weeks72.plus(weeks73);
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType84 = weeks83.getFieldType();
        boolean boolean85 = weeks82.isSupported(durationFieldType84);
        int int86 = weeks70.get(durationFieldType84);
        boolean boolean87 = weeks33.isSupported(durationFieldType84);
        int int88 = weeks10.get(durationFieldType84);
        boolean boolean89 = weeks8.isSupported(durationFieldType84);
        org.joda.time.DurationFieldType durationFieldType91 = weeks8.getFieldType(0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "P-3W" + "'", str80, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 3 + "'", int88 == 3);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(durationFieldType91);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        org.joda.time.Weeks weeks8 = weeks5.plus((int) (short) -1);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType10 = weeks9.getPeriodType();
        org.joda.time.Weeks weeks12 = weeks9.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks14 = weeks9.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod15 = weeks9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks9.getFieldType();
        org.joda.time.PeriodType periodType17 = weeks9.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType18 = weeks9.getFieldType();
        boolean boolean19 = weeks8.isSupported(durationFieldType18);
        org.joda.time.Weeks weeks21 = weeks8.multipliedBy((-2147483648));
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Period period25 = weeks23.toPeriod();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType27 = weeks26.getPeriodType();
        org.joda.time.Weeks weeks29 = weeks26.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks31 = weeks26.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod32 = weeks26.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType33 = weeks26.getFieldType();
        org.joda.time.PeriodType periodType34 = weeks26.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType35 = weeks26.getFieldType();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.weeks((-1));
        int int38 = weeks37.size();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks43 = weeks41.dividedBy((int) '4');
        int int44 = weeks41.size();
        org.joda.time.Period period45 = weeks41.toPeriod();
        org.joda.time.DurationFieldType durationFieldType46 = weeks41.getFieldType();
        org.joda.time.Weeks weeks47 = weeks37.minus(weeks41);
        org.joda.time.Weeks weeks49 = weeks37.minus((int) (byte) 100);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks53 = weeks52.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.DurationFieldType durationFieldType55 = weeks54.getFieldType();
        org.joda.time.DurationFieldType durationFieldType57 = weeks54.getFieldType(0);
        boolean boolean58 = weeks51.isSupported(durationFieldType57);
        boolean boolean59 = weeks37.equals((java.lang.Object) weeks51);
        boolean boolean60 = weeks26.isLessThan(weeks51);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks62 = weeks61.negated();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        org.joda.time.Weeks weeks65 = weeks63.dividedBy((int) '4');
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks67 = weeks66.negated();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        org.joda.time.Weeks weeks70 = weeks68.dividedBy((int) '4');
        int int71 = weeks68.size();
        org.joda.time.Weeks weeks72 = weeks65.plus(weeks68);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks76 = weeks75.negated();
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks76);
        org.joda.time.DurationFieldType durationFieldType78 = weeks77.getFieldType();
        org.joda.time.DurationFieldType durationFieldType80 = weeks77.getFieldType(0);
        boolean boolean81 = weeks74.isSupported(durationFieldType80);
        boolean boolean82 = weeks68.isSupported(durationFieldType80);
        org.joda.time.PeriodType periodType83 = weeks68.getPeriodType();
        boolean boolean84 = weeks51.isLessThan(weeks68);
        org.joda.time.Weeks weeks86 = weeks51.plus((-3));
        int int87 = weeks86.getWeeks();
        boolean boolean88 = weeks23.isGreaterThan(weeks86);
        int int89 = weeks8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 97 + "'", int87 == 97);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks4.getWeeks();
        org.joda.time.MutablePeriod mutablePeriod6 = weeks4.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P100W");
        org.joda.time.Period period2 = weeks1.toPeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(period2);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        int int19 = weeks17.getWeeks();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks31.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks20.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.dividedBy((int) (short) 100);
        boolean boolean39 = weeks17.isGreaterThan(weeks38);
        int int40 = weeks38.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Duration duration17 = weeks15.toStandardDuration();
        org.joda.time.Weeks weeks19 = weeks15.multipliedBy((int) (short) 100);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.minus(weeks28);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks38 = weeks35.multipliedBy(0);
        org.joda.time.Weeks weeks39 = weeks33.minus(weeks38);
        int int40 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks41 = weeks39.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        int int48 = weeks45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        org.joda.time.Weeks weeks50 = weeks47.plus((int) (short) -1);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        org.joda.time.Weeks weeks57 = weeks47.minus(weeks54);
        boolean boolean58 = weeks39.isGreaterThan(weeks54);
        boolean boolean59 = weeks15.equals((java.lang.Object) weeks39);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks17.plus((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        java.lang.String str22 = weeks20.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P1W" + "'", str22, "P1W");
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) 0);
        int int7 = weeks2.size();
        org.joda.time.Weeks weeks9 = weeks2.dividedBy((int) (byte) 10);
        org.joda.time.Weeks weeks11 = weeks9.plus((int) (short) 1);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = weeks0.minus(1030);
        org.joda.time.Period period4 = weeks3.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks4.getWeeks();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.weeks((-1));
        int int8 = weeks7.size();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks13 = weeks11.dividedBy((int) '4');
        int int14 = weeks11.size();
        org.joda.time.Period period15 = weeks11.toPeriod();
        org.joda.time.DurationFieldType durationFieldType16 = weeks11.getFieldType();
        org.joda.time.Weeks weeks17 = weeks7.minus(weeks11);
        org.joda.time.Weeks weeks19 = weeks17.minus((-3));
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        boolean boolean22 = weeks20.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks24);
        java.lang.String str27 = weeks26.toString();
        boolean boolean28 = weeks20.isLessThan(weeks26);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = weeks30.toMutablePeriod();
        org.joda.time.Weeks weeks32 = weeks26.plus(weeks30);
        org.joda.time.Weeks weeks33 = weeks19.plus(weeks26);
        org.joda.time.Weeks weeks34 = weeks4.minus(weeks33);
        org.joda.time.Weeks weeks35 = null;
        org.joda.time.Weeks weeks36 = weeks33.plus(weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        int int43 = weeks40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        java.lang.String str44 = weeks40.toString();
        org.joda.time.Weeks weeks46 = weeks40.dividedBy(1);
        org.joda.time.Weeks weeks48 = weeks40.minus((int) 'a');
        org.joda.time.Weeks weeks50 = weeks48.minus((int) (short) 1);
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = weeks36.minus(weeks50);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks54);
        java.lang.String str57 = weeks56.toString();
        org.joda.time.Weeks weeks58 = weeks50.minus(weeks56);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "P-3W" + "'", str27, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "P-3W" + "'", str57, "P-3W");
        org.junit.Assert.assertNotNull(weeks58);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = weeks1.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        org.joda.time.Weeks weeks6 = weeks4.negated();
        org.joda.time.DurationFieldType durationFieldType7 = weeks6.getFieldType();
        org.joda.time.Period period8 = weeks6.toPeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks18.negated();
        org.joda.time.Weeks weeks22 = weeks1.plus(weeks21);
        int int23 = weeks21.size();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks30.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks37 = weeks33.plus(weeks35);
        int int38 = weeks35.size();
        org.joda.time.Weeks weeks40 = weeks35.minus((int) (byte) -1);
        org.joda.time.Weeks weeks42 = weeks35.dividedBy(100);
        int int43 = weeks21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        java.lang.String str44 = weeks42.toString();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        boolean boolean47 = weeks45.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        java.lang.String str52 = weeks51.toString();
        boolean boolean53 = weeks45.isLessThan(weeks51);
        org.joda.time.Weeks weeks54 = weeks51.negated();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.MutablePeriod mutablePeriod57 = weeks56.toMutablePeriod();
        org.joda.time.Weeks weeks58 = weeks54.plus(weeks56);
        int int59 = weeks56.size();
        org.joda.time.Weeks weeks61 = weeks56.minus((int) (byte) -1);
        org.joda.time.Weeks weeks63 = weeks56.dividedBy(100);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType65 = weeks64.getPeriodType();
        org.joda.time.Weeks weeks67 = weeks64.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        boolean boolean71 = weeks69.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        java.lang.String str76 = weeks75.toString();
        boolean boolean77 = weeks69.isLessThan(weeks75);
        org.joda.time.Weeks weeks78 = weeks68.plus(weeks69);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks80 = weeks79.negated();
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks80);
        org.joda.time.Weeks weeks82 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks80);
        java.lang.String str83 = weeks82.toString();
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.ONE;
        int int85 = weeks82.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks84);
        boolean boolean86 = weeks68.isGreaterThan(weeks84);
        org.joda.time.Weeks weeks87 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType88 = weeks87.getFieldType();
        int int89 = weeks84.get(durationFieldType88);
        boolean boolean90 = weeks64.isSupported(durationFieldType88);
        boolean boolean91 = weeks56.isSupported(durationFieldType88);
        boolean boolean92 = weeks42.isSupported(durationFieldType88);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P0W" + "'", str44, "P0W");
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "P-3W" + "'", str52, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "P-3W" + "'", str76, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "P-3W" + "'", str83, "P-3W");
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(durationFieldType88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks17.plus(weeks18);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        boolean boolean30 = weeks27.isSupported(durationFieldType29);
        int int31 = weeks15.get(durationFieldType29);
        org.joda.time.Weeks weeks33 = weeks15.minus((int) ' ');
        int int34 = weeks33.size();
        org.joda.time.MutablePeriod mutablePeriod35 = weeks33.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod35);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Period period19 = weeks16.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType24 = weeks2.getFieldType();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = weeks25.plus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.ONE;
        int int40 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks39.plus((int) (short) -1);
        int int43 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks25.plus((int) (short) 100);
        org.joda.time.Weeks weeks47 = weeks45.multipliedBy((int) (short) 10);
        boolean boolean48 = weeks2.isGreaterThan(weeks45);
        org.joda.time.Weeks weeks50 = weeks45.minus((int) ' ');
        org.joda.time.Period period51 = weeks50.toPeriod();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        boolean boolean55 = weeks53.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        java.lang.String str60 = weeks59.toString();
        boolean boolean61 = weeks53.isLessThan(weeks59);
        org.joda.time.Weeks weeks62 = weeks52.plus(weeks53);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks64 = weeks63.negated();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks64);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks64);
        java.lang.String str67 = weeks66.toString();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.ONE;
        int int69 = weeks66.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks68);
        boolean boolean70 = weeks52.isGreaterThan(weeks68);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.ReadableInterval readableInterval72 = null;
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.weeksIn(readableInterval72);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.THREE;
        boolean boolean76 = weeks74.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks77 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks78 = weeks77.negated();
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks78);
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks78);
        java.lang.String str81 = weeks80.toString();
        boolean boolean82 = weeks74.isLessThan(weeks80);
        org.joda.time.Weeks weeks83 = weeks73.minus(weeks80);
        org.joda.time.Weeks weeks85 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks86 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks87 = weeks86.negated();
        org.joda.time.MutablePeriod mutablePeriod88 = weeks87.toMutablePeriod();
        org.joda.time.Weeks weeks90 = weeks87.multipliedBy(0);
        org.joda.time.Weeks weeks91 = weeks85.minus(weeks90);
        int int92 = weeks83.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks91);
        org.joda.time.Weeks weeks93 = weeks91.negated();
        org.joda.time.MutablePeriod mutablePeriod94 = weeks93.toMutablePeriod();
        org.joda.time.Weeks weeks95 = weeks52.plus(weeks93);
        int int96 = weeks95.size();
        org.joda.time.Weeks weeks98 = weeks95.multipliedBy((-3));
        org.joda.time.Weeks weeks99 = weeks50.minus(weeks98);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "P-3W" + "'", str60, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "P-3W" + "'", str67, "P-3W");
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "P-3W" + "'", str81, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(mutablePeriod88);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertNotNull(weeks91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertNotNull(weeks93);
        org.junit.Assert.assertNotNull(mutablePeriod94);
        org.junit.Assert.assertNotNull(weeks95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
        org.junit.Assert.assertNotNull(weeks98);
        org.junit.Assert.assertNotNull(weeks99);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = weeks20.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        boolean boolean25 = weeks23.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        java.lang.String str30 = weeks29.toString();
        boolean boolean31 = weeks23.isLessThan(weeks29);
        org.joda.time.Weeks weeks33 = weeks23.dividedBy(100);
        org.joda.time.Duration duration34 = weeks33.toStandardDuration();
        int int35 = weeks33.getWeeks();
        org.joda.time.Weeks weeks36 = weeks20.plus(weeks33);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "P-3W" + "'", str30, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(weeks36);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.PeriodType periodType7 = weeks5.getPeriodType();
        boolean boolean8 = weeks1.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks10 = weeks5.minus((int) (byte) 0);
        org.joda.time.Duration duration11 = weeks10.toStandardDuration();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = weeks12.plus(weeks18);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.ONE;
        int int27 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        org.joda.time.Weeks weeks29 = weeks26.plus((int) (short) -1);
        int int30 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks12.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod33 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        boolean boolean37 = weeks34.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks39 = weeks34.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeks((-1));
        int int47 = weeks46.size();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks52 = weeks50.dividedBy((int) '4');
        int int53 = weeks50.size();
        org.joda.time.Period period54 = weeks50.toPeriod();
        org.joda.time.DurationFieldType durationFieldType55 = weeks50.getFieldType();
        org.joda.time.Weeks weeks56 = weeks46.minus(weeks50);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks63.negated();
        org.joda.time.Weeks weeks67 = weeks46.plus(weeks66);
        boolean boolean68 = weeks43.isLessThan(weeks67);
        org.joda.time.MutablePeriod mutablePeriod69 = weeks43.toMutablePeriod();
        int int71 = weeks43.getValue((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType72 = weeks43.getFieldType();
        boolean boolean73 = weeks34.isSupported(durationFieldType72);
        boolean boolean74 = weeks32.isSupported(durationFieldType72);
        boolean boolean75 = weeks10.equals((java.lang.Object) weeks32);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-3) + "'", int71 == (-3));
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        java.lang.String str26 = weeks6.toString();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks6.toMutablePeriod();
        int int28 = weeks6.size();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType30 = weeks29.getPeriodType();
        org.joda.time.Weeks weeks32 = weeks29.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks34 = weeks29.dividedBy((int) 'a');
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        boolean boolean38 = weeks36.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        java.lang.String str43 = weeks42.toString();
        boolean boolean44 = weeks36.isLessThan(weeks42);
        org.joda.time.Weeks weeks45 = weeks35.plus(weeks36);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks47 = weeks46.negated();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        java.lang.String str50 = weeks49.toString();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.ONE;
        int int52 = weeks49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks51);
        boolean boolean53 = weeks35.isGreaterThan(weeks51);
        int int54 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks35);
        org.joda.time.DurationFieldType durationFieldType55 = weeks34.getFieldType();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.TWO;
        org.joda.time.Weeks weeks57 = weeks34.plus(weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks60.dividedBy((int) '4');
        int int63 = weeks60.size();
        org.joda.time.Period period64 = weeks60.toPeriod();
        org.joda.time.DurationFieldType durationFieldType65 = weeks60.getFieldType();
        org.joda.time.Weeks weeks66 = weeks56.plus(weeks60);
        org.joda.time.Weeks weeks67 = weeks6.plus(weeks66);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType69 = weeks68.getFieldType();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType71 = weeks70.getPeriodType();
        org.joda.time.Weeks weeks73 = weeks70.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks75 = weeks70.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod76 = weeks70.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType77 = weeks70.getFieldType();
        org.joda.time.PeriodType periodType78 = weeks70.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType79 = weeks70.getFieldType();
        org.joda.time.Weeks weeks80 = weeks70.negated();
        org.joda.time.Weeks weeks82 = weeks70.multipliedBy(300);
        boolean boolean83 = weeks68.equals((java.lang.Object) weeks70);
        org.joda.time.Weeks weeks85 = weeks68.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType86 = weeks68.getFieldType();
        boolean boolean87 = weeks66.isSupported(durationFieldType86);
        org.joda.time.Period period88 = weeks66.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P1W" + "'", str26, "P1W");
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-3W" + "'", str43, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "P-3W" + "'", str50, "P-3W");
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(mutablePeriod76);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(weeks85);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(period88);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(9);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks4 = weeks2.dividedBy(900);
        java.lang.Class<?> wildcardClass5 = weeks2.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = weeks11.plus(weeks17);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.weeks((-1));
        int int28 = weeks27.size();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks31.dividedBy((int) '4');
        int int34 = weeks31.size();
        org.joda.time.Period period35 = weeks31.toPeriod();
        org.joda.time.DurationFieldType durationFieldType36 = weeks31.getFieldType();
        org.joda.time.Weeks weeks37 = weeks27.minus(weeks31);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        boolean boolean40 = weeks38.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks42 = weeks41.negated();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks42);
        java.lang.String str45 = weeks44.toString();
        boolean boolean46 = weeks38.isLessThan(weeks44);
        org.joda.time.Weeks weeks47 = weeks44.negated();
        org.joda.time.Weeks weeks48 = weeks27.plus(weeks47);
        boolean boolean49 = weeks24.isLessThan(weeks48);
        org.joda.time.MutablePeriod mutablePeriod50 = weeks24.toMutablePeriod();
        int int51 = weeks24.getWeeks();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks55 = weeks54.negated();
        org.joda.time.Weeks weeks56 = weeks53.minus(weeks54);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks58 = weeks57.negated();
        org.joda.time.PeriodType periodType59 = weeks57.getPeriodType();
        boolean boolean60 = weeks53.isGreaterThan(weeks57);
        org.joda.time.Weeks weeks62 = weeks57.minus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType63 = weeks62.getFieldType();
        boolean boolean64 = weeks24.isSupported(durationFieldType63);
        boolean boolean65 = weeks20.equals((java.lang.Object) durationFieldType63);
        boolean boolean66 = weeks0.equals((java.lang.Object) weeks20);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P-3W" + "'", str45, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-3) + "'", int51 == (-3));
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MAX_VALUE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        int int5 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks2);
        org.joda.time.Weeks weeks7 = weeks2.minus((-55));
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = weeks8.getFieldType();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        boolean boolean12 = weeks10.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        java.lang.String str17 = weeks16.toString();
        boolean boolean18 = weeks10.isLessThan(weeks16);
        org.joda.time.Weeks weeks19 = weeks16.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.MutablePeriod mutablePeriod22 = weeks21.toMutablePeriod();
        org.joda.time.Weeks weeks23 = weeks19.plus(weeks21);
        org.joda.time.Weeks weeks24 = weeks8.plus(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.ONE;
        int int33 = weeks30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.Weeks weeks34 = weeks26.plus(weeks30);
        org.joda.time.MutablePeriod mutablePeriod35 = weeks30.toMutablePeriod();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks37 = weeks7.minus(weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks40.dividedBy((int) '4');
        int int43 = weeks40.size();
        org.joda.time.Weeks weeks44 = weeks40.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks46);
        org.joda.time.Weeks weeks49 = weeks47.dividedBy((int) '4');
        int int50 = weeks47.size();
        org.joda.time.Weeks weeks51 = weeks47.negated();
        boolean boolean52 = weeks44.isGreaterThan(weeks47);
        org.joda.time.DurationFieldType durationFieldType53 = weeks44.getFieldType();
        org.joda.time.Weeks weeks55 = weeks44.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.weeks((-1));
        int int58 = weeks57.size();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks60 = weeks59.negated();
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks60);
        org.joda.time.Weeks weeks63 = weeks61.dividedBy((int) '4');
        int int64 = weeks61.size();
        org.joda.time.Period period65 = weeks61.toPeriod();
        org.joda.time.DurationFieldType durationFieldType66 = weeks61.getFieldType();
        org.joda.time.Weeks weeks67 = weeks57.minus(weeks61);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        boolean boolean70 = weeks68.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks72 = weeks71.negated();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        java.lang.String str75 = weeks74.toString();
        boolean boolean76 = weeks68.isLessThan(weeks74);
        org.joda.time.Weeks weeks77 = weeks74.negated();
        org.joda.time.Weeks weeks78 = weeks57.plus(weeks77);
        org.joda.time.Weeks weeks79 = weeks55.plus(weeks78);
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.TWO;
        int int81 = weeks80.size();
        org.joda.time.Weeks weeks83 = weeks80.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks84 = weeks78.plus(weeks80);
        org.joda.time.Weeks weeks86 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks87 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks88 = weeks87.negated();
        org.joda.time.Weeks weeks89 = weeks86.minus(weeks87);
        org.joda.time.DurationFieldType durationFieldType90 = weeks87.getFieldType();
        org.joda.time.Weeks weeks91 = weeks78.plus(weeks87);
        boolean boolean92 = weeks37.isLessThan(weeks87);
        org.joda.time.Weeks weeks93 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks87);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "P-3W" + "'", str17, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "P-3W" + "'", str75, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertNotNull(weeks91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(weeks93);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(3);
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = weeks4.getFieldType(0);
        boolean boolean8 = weeks1.isSupported(durationFieldType7);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = weeks10.minus(weeks11);
        org.joda.time.DurationFieldType durationFieldType14 = weeks11.getFieldType();
        boolean boolean15 = weeks1.isLessThan(weeks11);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((-1));
        int int18 = weeks17.size();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks23 = weeks21.dividedBy((int) '4');
        int int24 = weeks21.size();
        org.joda.time.Period period25 = weeks21.toPeriod();
        org.joda.time.DurationFieldType durationFieldType26 = weeks21.getFieldType();
        org.joda.time.Weeks weeks27 = weeks17.minus(weeks21);
        org.joda.time.Weeks weeks29 = weeks17.minus((int) (byte) 100);
        org.joda.time.Duration duration30 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks31 = weeks1.minus(weeks17);
        org.joda.time.Weeks weeks33 = weeks31.multipliedBy((-3));
        java.lang.Object obj34 = null;
        boolean boolean35 = weeks31.equals(obj34);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = weeks11.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks16 = weeks14.negated();
        java.lang.Class<?> wildcardClass17 = weeks16.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-103));
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        java.lang.String str6 = weeks5.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType8 = weeks5.getFieldType((-10));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-3W" + "'", str6, "P-3W");
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        java.lang.String str14 = weeks13.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P0W" + "'", str14, "P0W");
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P-4W");
        org.joda.time.Weeks weeks3 = weeks1.dividedBy((int) (short) 1);
        int int4 = weeks3.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = weeks20.multipliedBy((int) (short) 10);
        org.joda.time.Period period23 = weeks20.toPeriod();
        int int24 = weeks20.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.minus(weeks28);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks38 = weeks35.multipliedBy(0);
        org.joda.time.Weeks weeks39 = weeks33.minus(weeks38);
        int int40 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks41 = weeks39.negated();
        org.joda.time.MutablePeriod mutablePeriod42 = weeks41.toMutablePeriod();
        org.joda.time.Weeks weeks43 = weeks0.plus(weeks41);
        org.joda.time.Weeks weeks45 = weeks43.plus((int) 'a');
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ZERO;
        org.joda.time.Weeks weeks2 = weeks0.minus((int) (short) -1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = weeks6.minus(weeks7);
        boolean boolean10 = weeks3.isLessThan(weeks6);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks15 = weeks13.dividedBy((int) '4');
        int int16 = weeks15.getWeeks();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.weeks((-1));
        int int19 = weeks18.size();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks24 = weeks22.dividedBy((int) '4');
        int int25 = weeks22.size();
        org.joda.time.Period period26 = weeks22.toPeriod();
        org.joda.time.DurationFieldType durationFieldType27 = weeks22.getFieldType();
        org.joda.time.Weeks weeks28 = weeks18.minus(weeks22);
        org.joda.time.Weeks weeks30 = weeks28.minus((-3));
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        boolean boolean33 = weeks31.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        boolean boolean39 = weeks31.isLessThan(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.MutablePeriod mutablePeriod42 = weeks41.toMutablePeriod();
        org.joda.time.Weeks weeks43 = weeks37.plus(weeks41);
        org.joda.time.Weeks weeks44 = weeks30.plus(weeks37);
        org.joda.time.Weeks weeks45 = weeks15.minus(weeks44);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.weeks((int) 'a');
        org.joda.time.Weeks weeks48 = weeks15.minus(weeks47);
        org.joda.time.DurationFieldType durationFieldType50 = weeks47.getFieldType((int) (byte) 0);
        boolean boolean51 = weeks6.isSupported(durationFieldType50);
        boolean boolean52 = weeks2.isSupported(durationFieldType50);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((-1));
        int int7 = weeks6.size();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks10.size();
        org.joda.time.Period period14 = weeks10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType15 = weeks10.getFieldType();
        org.joda.time.Weeks weeks16 = weeks6.minus(weeks10);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks23.negated();
        org.joda.time.Weeks weeks27 = weeks6.plus(weeks26);
        boolean boolean28 = weeks3.isLessThan(weeks27);
        org.joda.time.MutablePeriod mutablePeriod29 = weeks3.toMutablePeriod();
        int int31 = weeks3.getValue((int) (short) 0);
        java.lang.String str32 = weeks3.toString();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks34 = weeks33.negated();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks34);
        java.lang.String str37 = weeks36.toString();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.ONE;
        int int39 = weeks36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks38);
        org.joda.time.Weeks weeks41 = weeks38.plus((int) (short) -1);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks45);
        org.joda.time.Weeks weeks48 = weeks38.minus(weeks45);
        org.joda.time.Weeks weeks50 = weeks38.dividedBy((int) (short) 1);
        org.joda.time.Weeks weeks51 = weeks3.minus(weeks50);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-3) + "'", int31 == (-3));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "P-3W" + "'", str37, "P-3W");
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        boolean boolean3 = weeks0.equals((java.lang.Object) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod4 = weeks0.toMutablePeriod();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks9 = weeks7.dividedBy((int) '4');
        int int10 = weeks7.size();
        org.joda.time.Period period11 = weeks7.toPeriod();
        boolean boolean12 = weeks0.isGreaterThan(weeks7);
        int int13 = weeks7.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.DurationFieldType durationFieldType22 = weeks21.getFieldType();
        org.joda.time.DurationFieldType durationFieldType24 = weeks21.getFieldType(0);
        int int25 = weeks15.get(durationFieldType24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.Weeks weeks30 = weeks28.dividedBy((int) '4');
        org.joda.time.Weeks weeks32 = weeks28.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.THREE;
        boolean boolean35 = weeks33.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        java.lang.String str40 = weeks39.toString();
        boolean boolean41 = weeks33.isLessThan(weeks39);
        org.joda.time.Weeks weeks42 = weeks39.negated();
        org.joda.time.Weeks weeks43 = weeks32.plus(weeks42);
        int int44 = weeks15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.Weeks weeks45 = weeks15.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "P-3W" + "'", str40, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(weeks45);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = weeks13.minus(weeks14);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.PeriodType periodType19 = weeks17.getPeriodType();
        boolean boolean20 = weeks13.isGreaterThan(weeks17);
        org.joda.time.Weeks weeks22 = weeks17.minus((int) (byte) 0);
        org.joda.time.Weeks weeks23 = weeks10.plus(weeks22);
        org.joda.time.Weeks weeks25 = weeks23.minus(300);
        java.lang.String str26 = weeks23.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P7W" + "'", str26, "P7W");
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = weeks17.minus(weeks18);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType22 = weeks21.getPeriodType();
        org.joda.time.Weeks weeks24 = weeks21.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks26 = weeks21.dividedBy((int) 'a');
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = weeks27.plus(weeks28);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        java.lang.String str42 = weeks41.toString();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.ONE;
        int int44 = weeks41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks43);
        boolean boolean45 = weeks27.isGreaterThan(weeks43);
        int int46 = weeks26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks27);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        boolean boolean49 = weeks47.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        java.lang.String str54 = weeks53.toString();
        boolean boolean55 = weeks47.isLessThan(weeks53);
        org.joda.time.Weeks weeks56 = weeks53.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks58 = weeks57.negated();
        org.joda.time.MutablePeriod mutablePeriod59 = weeks58.toMutablePeriod();
        org.joda.time.Weeks weeks60 = weeks56.plus(weeks58);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks62 = weeks26.minus(weeks56);
        boolean boolean63 = weeks18.isLessThan(weeks26);
        int int64 = weeks6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks18);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P-3W" + "'", str42, "P-3W");
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "P-3W" + "'", str54, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period1 = weeks0.toPeriod();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Weeks weeks6 = weeks4.dividedBy((int) '4');
        org.joda.time.Weeks weeks8 = weeks4.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks9 = weeks0.minus(weeks8);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks16 = weeks13.multipliedBy(0);
        org.joda.time.Weeks weeks17 = weeks11.minus(weeks16);
        org.joda.time.Duration duration18 = weeks17.toStandardDuration();
        org.joda.time.Weeks weeks20 = weeks17.minus((int) (byte) 10);
        boolean boolean21 = weeks8.equals((java.lang.Object) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        org.joda.time.Weeks weeks30 = weeks22.plus(weeks28);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.ONE;
        int int37 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks36);
        org.joda.time.Weeks weeks39 = weeks36.plus((int) (short) -1);
        int int40 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        int int41 = weeks39.getWeeks();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = weeks42.getFieldType();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        boolean boolean46 = weeks44.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        java.lang.String str51 = weeks50.toString();
        boolean boolean52 = weeks44.isLessThan(weeks50);
        org.joda.time.Weeks weeks53 = weeks50.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks55 = weeks54.negated();
        org.joda.time.MutablePeriod mutablePeriod56 = weeks55.toMutablePeriod();
        org.joda.time.Weeks weeks57 = weeks53.plus(weeks55);
        org.joda.time.Weeks weeks58 = weeks42.plus(weeks57);
        org.joda.time.Weeks weeks60 = weeks57.dividedBy((int) (short) 100);
        boolean boolean61 = weeks39.isGreaterThan(weeks60);
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        boolean boolean64 = weeks62.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks66 = weeks65.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        java.lang.String str69 = weeks68.toString();
        org.joda.time.Weeks weeks70 = weeks62.plus(weeks68);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks72 = weeks71.negated();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks72);
        java.lang.String str75 = weeks74.toString();
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.ONE;
        int int77 = weeks74.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks76);
        org.joda.time.Weeks weeks79 = weeks76.plus((int) (short) -1);
        int int80 = weeks62.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks79);
        int int81 = weeks79.getWeeks();
        org.joda.time.Weeks weeks82 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks83 = weeks82.negated();
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks83);
        org.joda.time.DurationFieldType durationFieldType85 = null;
        int int86 = weeks84.get(durationFieldType85);
        int int87 = weeks84.size();
        org.joda.time.Weeks weeks88 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks89 = weeks88.negated();
        org.joda.time.Weeks weeks90 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks89);
        org.joda.time.DurationFieldType durationFieldType91 = weeks90.getFieldType();
        boolean boolean92 = weeks84.isSupported(durationFieldType91);
        int int93 = weeks79.get(durationFieldType91);
        int int94 = weeks60.get(durationFieldType91);
        int int95 = weeks8.get(durationFieldType91);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "P-3W" + "'", str69, "P-3W");
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "P-3W" + "'", str75, "P-3W");
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks10 = weeks0.negated();
        org.joda.time.Weeks weeks12 = weeks0.multipliedBy(300);
        int int13 = weeks12.getWeeks();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType15 = weeks14.getPeriodType();
        org.joda.time.Weeks weeks17 = weeks14.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks19 = weeks14.dividedBy((int) 'a');
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        boolean boolean23 = weeks21.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        boolean boolean29 = weeks21.isLessThan(weeks27);
        org.joda.time.Weeks weeks30 = weeks20.plus(weeks21);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.ONE;
        int int37 = weeks34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks36);
        boolean boolean38 = weeks20.isGreaterThan(weeks36);
        int int39 = weeks19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        org.joda.time.Weeks weeks41 = weeks19.minus(300);
        boolean boolean42 = weeks12.isGreaterThan(weeks19);
        org.joda.time.MutablePeriod mutablePeriod43 = weeks12.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 900 + "'", int13 == 900);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(mutablePeriod43);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeksIn(readableInterval4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks5.minus(weeks12);
        org.joda.time.Weeks weeks17 = weeks15.plus((int) 'a');
        org.joda.time.Weeks weeks18 = weeks17.negated();
        boolean boolean19 = weeks3.isLessThan(weeks18);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        boolean boolean3 = weeks0.equals((java.lang.Object) (short) -1);
        org.joda.time.Weeks weeks5 = weeks0.multipliedBy((int) (byte) 100);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = weeks6.getFieldType();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        boolean boolean10 = weeks8.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        boolean boolean16 = weeks8.isLessThan(weeks14);
        org.joda.time.Weeks weeks17 = weeks14.negated();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.MutablePeriod mutablePeriod20 = weeks19.toMutablePeriod();
        org.joda.time.Weeks weeks21 = weeks17.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks6.plus(weeks21);
        org.joda.time.Weeks weeks23 = weeks5.minus(weeks6);
        int int24 = weeks5.getWeeks();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType26 = weeks5.getFieldType((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 300 + "'", int24 == 300);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks11.plus((int) 'a');
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.Weeks weeks18 = weeks15.minus(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks13.plus(weeks19);
        org.joda.time.Weeks weeks24 = weeks22.minus(1030);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = weeks25.plus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.ONE;
        int int40 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks39.plus((int) (short) -1);
        int int43 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks25.plus((int) (short) 100);
        org.joda.time.Weeks weeks47 = weeks25.multipliedBy(3);
        int int48 = weeks47.getWeeks();
        int int49 = weeks24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        org.joda.time.Weeks weeks51 = weeks24.plus((int) '4');
        java.lang.Class<?> wildcardClass52 = weeks24.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 9 + "'", int48 == 9);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = null;
        boolean boolean20 = weeks18.isLessThan(weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.plus(weeks22);
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks34 = weeks31.dividedBy(25);
        int int35 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks31);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.minus((int) (byte) 10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.DurationFieldType durationFieldType15 = weeks14.getFieldType();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = weeks16.getFieldType();
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks24.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.MutablePeriod mutablePeriod30 = weeks29.toMutablePeriod();
        org.joda.time.Weeks weeks31 = weeks27.plus(weeks29);
        org.joda.time.Weeks weeks32 = weeks16.plus(weeks31);
        org.joda.time.Weeks weeks34 = weeks31.dividedBy((int) (short) 100);
        boolean boolean35 = weeks14.isGreaterThan(weeks31);
        org.joda.time.DurationFieldType durationFieldType36 = weeks14.getFieldType();
        boolean boolean37 = weeks11.isLessThan(weeks14);
        org.joda.time.Period period38 = weeks11.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(period38);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P903W");
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        org.joda.time.PeriodType periodType8 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = weeks0.getFieldType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeks((-1));
        int int12 = weeks11.size();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks15.dividedBy((int) '4');
        int int18 = weeks15.size();
        org.joda.time.Period period19 = weeks15.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = weeks15.getFieldType();
        org.joda.time.Weeks weeks21 = weeks11.minus(weeks15);
        org.joda.time.Weeks weeks23 = weeks11.minus((int) (byte) 100);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        org.joda.time.DurationFieldType durationFieldType31 = weeks28.getFieldType(0);
        boolean boolean32 = weeks25.isSupported(durationFieldType31);
        boolean boolean33 = weeks11.equals((java.lang.Object) weeks25);
        boolean boolean34 = weeks0.isLessThan(weeks25);
        org.joda.time.Weeks weeks36 = weeks25.multipliedBy(3);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType38 = weeks36.getFieldType((-103));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -103");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(weeks36);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.MutablePeriod mutablePeriod33 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks34 = weeks28.plus(weeks32);
        boolean boolean35 = weeks20.isLessThan(weeks32);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks37);
        org.joda.time.Weeks weeks40 = weeks37.multipliedBy((int) ' ');
        boolean boolean41 = weeks20.isLessThan(weeks37);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks43);
        java.lang.String str46 = weeks45.toString();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        int int48 = weeks45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        org.joda.time.Weeks weeks50 = weeks47.plus((int) (short) -1);
        org.joda.time.Weeks weeks52 = weeks47.multipliedBy((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType54 = weeks52.getFieldType((int) (byte) 0);
        org.joda.time.Weeks weeks56 = weeks52.multipliedBy((int) (byte) -1);
        boolean boolean57 = weeks37.isLessThan(weeks52);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-3W" + "'", str46, "P-3W");
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType21 = weeks20.getPeriodType();
        org.joda.time.Weeks weeks23 = weeks20.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        boolean boolean33 = weeks25.isLessThan(weeks31);
        org.joda.time.Weeks weeks34 = weeks24.plus(weeks25);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.ONE;
        int int41 = weeks38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks40);
        boolean boolean42 = weeks24.isGreaterThan(weeks40);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType44 = weeks43.getFieldType();
        int int45 = weeks40.get(durationFieldType44);
        boolean boolean46 = weeks20.isSupported(durationFieldType44);
        boolean boolean47 = weeks0.isSupported(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType48 = weeks0.getFieldType();
        org.joda.time.Period period49 = weeks0.toPeriod();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.MutablePeriod mutablePeriod52 = weeks51.toMutablePeriod();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.weeks((-1));
        int int55 = weeks54.size();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks60 = weeks58.dividedBy((int) '4');
        int int61 = weeks58.size();
        org.joda.time.Period period62 = weeks58.toPeriod();
        org.joda.time.DurationFieldType durationFieldType63 = weeks58.getFieldType();
        org.joda.time.Weeks weeks64 = weeks54.minus(weeks58);
        org.joda.time.Weeks weeks66 = weeks64.minus((-3));
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        boolean boolean69 = weeks67.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks71 = weeks70.negated();
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks71);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks71);
        java.lang.String str74 = weeks73.toString();
        boolean boolean75 = weeks67.isLessThan(weeks73);
        org.joda.time.Weeks weeks76 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks77 = weeks76.negated();
        org.joda.time.MutablePeriod mutablePeriod78 = weeks77.toMutablePeriod();
        org.joda.time.Weeks weeks79 = weeks73.plus(weeks77);
        org.joda.time.Weeks weeks80 = weeks66.plus(weeks73);
        org.joda.time.Weeks weeks81 = weeks51.plus(weeks66);
        org.joda.time.Weeks weeks83 = weeks66.minus(3);
        boolean boolean84 = weeks0.isGreaterThan(weeks66);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "P-3W" + "'", str74, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks77);
        org.junit.Assert.assertNotNull(mutablePeriod78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.PeriodType periodType4 = weeks3.getPeriodType();
        org.joda.time.Weeks weeks6 = weeks3.multipliedBy(300);
        int int7 = weeks3.size();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P32W");
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-55));
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        int int19 = weeks17.getWeeks();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = weeks22.get(durationFieldType23);
        int int25 = weeks22.size();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        boolean boolean30 = weeks22.isSupported(durationFieldType29);
        int int31 = weeks17.get(durationFieldType29);
        org.joda.time.Weeks weeks33 = weeks17.dividedBy(2);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(weeks33);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks12.getWeeks();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        int int16 = weeks15.size();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks19.dividedBy((int) '4');
        int int22 = weeks19.size();
        org.joda.time.Period period23 = weeks19.toPeriod();
        org.joda.time.DurationFieldType durationFieldType24 = weeks19.getFieldType();
        org.joda.time.Weeks weeks25 = weeks15.minus(weeks19);
        org.joda.time.Weeks weeks27 = weeks25.minus((-3));
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.MutablePeriod mutablePeriod39 = weeks38.toMutablePeriod();
        org.joda.time.Weeks weeks40 = weeks34.plus(weeks38);
        org.joda.time.Weeks weeks41 = weeks27.plus(weeks34);
        org.joda.time.Weeks weeks42 = weeks12.minus(weeks41);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.weeks((int) 'a');
        org.joda.time.Weeks weeks45 = weeks12.minus(weeks44);
        org.joda.time.DurationFieldType durationFieldType47 = weeks44.getFieldType((int) (byte) 0);
        boolean boolean48 = weeks3.isSupported(durationFieldType47);
        org.joda.time.Weeks weeks50 = weeks3.plus((-13));
        org.joda.time.DurationFieldType durationFieldType51 = weeks3.getFieldType();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(durationFieldType51);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = weeks2.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks7.negated();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks8);
        org.joda.time.Weeks weeks11 = weeks9.dividedBy((int) '4');
        int int12 = weeks9.size();
        org.joda.time.Weeks weeks13 = weeks9.negated();
        boolean boolean14 = weeks6.isGreaterThan(weeks9);
        org.joda.time.DurationFieldType durationFieldType15 = weeks6.getFieldType();
        org.joda.time.Weeks weeks17 = weeks6.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        int int24 = weeks21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        java.lang.String str25 = weeks21.toString();
        org.joda.time.Weeks weeks27 = weeks21.dividedBy(1);
        org.joda.time.Weeks weeks29 = weeks21.minus((int) 'a');
        int int30 = weeks17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks21);
        org.joda.time.Weeks weeks31 = null;
        boolean boolean32 = weeks21.isGreaterThan(weeks31);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) 0);
        int int7 = weeks2.size();
        int int8 = weeks2.getWeeks();
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        boolean boolean11 = weeks9.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks13);
        java.lang.String str16 = weeks15.toString();
        org.joda.time.Weeks weeks17 = weeks9.plus(weeks15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        int int24 = weeks21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks23.plus((int) (short) -1);
        int int27 = weeks9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks26);
        org.joda.time.Weeks weeks29 = weeks9.plus((int) (short) 100);
        org.joda.time.Weeks weeks31 = weeks29.multipliedBy((int) (short) 10);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType33 = weeks32.getFieldType();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        boolean boolean36 = weeks34.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks38);
        java.lang.String str41 = weeks40.toString();
        boolean boolean42 = weeks34.isLessThan(weeks40);
        org.joda.time.Weeks weeks43 = weeks40.negated();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks45 = weeks44.negated();
        org.joda.time.MutablePeriod mutablePeriod46 = weeks45.toMutablePeriod();
        org.joda.time.Weeks weeks47 = weeks43.plus(weeks45);
        org.joda.time.Weeks weeks48 = weeks32.plus(weeks47);
        org.joda.time.Weeks weeks50 = weeks47.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks51 = weeks50.negated();
        boolean boolean52 = weeks31.isGreaterThan(weeks50);
        int int53 = weeks31.getWeeks();
        org.joda.time.Weeks weeks54 = weeks2.minus(weeks31);
        int int56 = weeks31.getValue(0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-3) + "'", int8 == (-3));
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "P-3W" + "'", str41, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1030 + "'", int53 == 1030);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1030 + "'", int56 == 1030);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks10 = weeks0.dividedBy(100);
        org.joda.time.Period period11 = weeks10.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks16 = weeks11.minus((int) (byte) -1);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        boolean boolean20 = weeks18.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        java.lang.String str25 = weeks24.toString();
        boolean boolean26 = weeks18.isLessThan(weeks24);
        org.joda.time.Weeks weeks27 = weeks17.plus(weeks18);
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = weeks30.minus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.PeriodType periodType36 = weeks34.getPeriodType();
        boolean boolean37 = weeks30.isGreaterThan(weeks34);
        org.joda.time.Weeks weeks39 = weeks34.minus((int) (byte) 0);
        org.joda.time.Weeks weeks40 = weeks27.plus(weeks39);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType42 = weeks41.getPeriodType();
        org.joda.time.Weeks weeks44 = weeks41.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks46 = weeks41.dividedBy((int) 'a');
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        boolean boolean50 = weeks48.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks52);
        java.lang.String str55 = weeks54.toString();
        boolean boolean56 = weeks48.isLessThan(weeks54);
        org.joda.time.Weeks weeks57 = weeks47.plus(weeks48);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.ONE;
        int int64 = weeks61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks63);
        boolean boolean65 = weeks47.isGreaterThan(weeks63);
        int int66 = weeks46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks47);
        org.joda.time.DurationFieldType durationFieldType67 = weeks46.getFieldType();
        org.joda.time.Weeks weeks68 = weeks27.plus(weeks46);
        org.joda.time.Weeks weeks69 = weeks11.plus(weeks46);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks71 = weeks69.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-3W" + "'", str25, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "P-3W" + "'", str55, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-2147483648));
        org.joda.time.Weeks weeks3 = weeks1.minus((-1));
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Period period6 = weeks2.toPeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks2.getFieldType();
        org.joda.time.Weeks weeks8 = weeks2.negated();
        org.joda.time.Period period9 = weeks2.toPeriod();
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.weeksIn(readableInterval10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        boolean boolean14 = weeks12.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        boolean boolean20 = weeks12.isLessThan(weeks18);
        org.joda.time.Weeks weeks21 = weeks11.minus(weeks18);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.MutablePeriod mutablePeriod26 = weeks25.toMutablePeriod();
        org.joda.time.Weeks weeks28 = weeks25.multipliedBy(0);
        org.joda.time.Weeks weeks29 = weeks23.minus(weeks28);
        int int30 = weeks21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        boolean boolean31 = weeks2.equals((java.lang.Object) weeks29);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType13 = weeks12.getFieldType();
        int int14 = weeks1.get(durationFieldType13);
        org.joda.time.Weeks weeks16 = weeks1.dividedBy(97);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(weeks16);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = weeks0.multipliedBy(3);
        org.joda.time.Weeks weeks24 = weeks0.dividedBy((-927));
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.weeks((-1));
        int int27 = weeks26.size();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks30.dividedBy((int) '4');
        int int33 = weeks30.size();
        org.joda.time.Period period34 = weeks30.toPeriod();
        org.joda.time.DurationFieldType durationFieldType35 = weeks30.getFieldType();
        org.joda.time.Weeks weeks36 = weeks26.minus(weeks30);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        boolean boolean39 = weeks37.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        boolean boolean45 = weeks37.isLessThan(weeks43);
        org.joda.time.Weeks weeks46 = weeks43.negated();
        org.joda.time.Weeks weeks47 = weeks26.plus(weeks46);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks47);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks54 = weeks53.negated();
        org.joda.time.Weeks weeks55 = weeks52.minus(weeks53);
        boolean boolean56 = weeks49.isLessThan(weeks52);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType58 = weeks57.getPeriodType();
        org.joda.time.Weeks weeks60 = weeks57.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks62 = weeks57.dividedBy((int) 'a');
        boolean boolean63 = weeks49.isGreaterThan(weeks57);
        boolean boolean64 = weeks47.isLessThan(weeks57);
        org.joda.time.Weeks weeks65 = weeks0.minus(weeks47);
        org.joda.time.Weeks weeks67 = weeks65.dividedBy(10);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks67);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = weeks0.multipliedBy(3);
        org.joda.time.Weeks weeks24 = weeks0.dividedBy((int) (byte) -1);
        org.joda.time.Weeks weeks26 = weeks24.minus((int) '4');
        org.joda.time.Weeks weeks28 = weeks26.dividedBy((-1027));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        org.joda.time.DurationFieldType durationFieldType5 = weeks2.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks2);
        java.lang.Class<?> wildcardClass7 = weeks6.getClass();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        boolean boolean9 = weeks7.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks11);
        java.lang.String str14 = weeks13.toString();
        boolean boolean15 = weeks7.isLessThan(weeks13);
        org.joda.time.Weeks weeks16 = weeks6.plus(weeks7);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        java.lang.String str21 = weeks20.toString();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        int int23 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        boolean boolean24 = weeks6.isGreaterThan(weeks22);
        int int25 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks6);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        boolean boolean28 = weeks26.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        boolean boolean34 = weeks26.isLessThan(weeks32);
        org.joda.time.Weeks weeks35 = weeks32.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks36.negated();
        org.joda.time.MutablePeriod mutablePeriod38 = weeks37.toMutablePeriod();
        org.joda.time.Weeks weeks39 = weeks35.plus(weeks37);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks41 = weeks5.minus(weeks35);
        org.joda.time.Weeks weeks42 = null;
        org.joda.time.Weeks weeks43 = weeks35.minus(weeks42);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks45 = weeks35.multipliedBy((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 3 * -2147483648");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "P-3W" + "'", str14, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P-3W" + "'", str21, "P-3W");
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks43);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType12 = weeks11.getPeriodType();
        org.joda.time.Weeks weeks14 = weeks11.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks16 = weeks11.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod17 = weeks11.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType18 = weeks11.getFieldType();
        int int19 = weeks10.get(durationFieldType18);
        int int20 = weeks6.get(durationFieldType18);
        org.joda.time.Weeks weeks22 = weeks6.minus((-1));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-3) + "'", int20 == (-3));
        org.junit.Assert.assertNotNull(weeks22);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeksIn(readableInterval0);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks8);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = weeks15.toMutablePeriod();
        org.joda.time.Weeks weeks18 = weeks15.multipliedBy(0);
        org.joda.time.Weeks weeks19 = weeks13.minus(weeks18);
        int int20 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks21 = weeks19.negated();
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.weeks((int) '4');
        boolean boolean24 = weeks19.isGreaterThan(weeks23);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = weeks16.get(durationFieldType17);
        int int19 = weeks16.size();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.DurationFieldType durationFieldType23 = weeks22.getFieldType();
        boolean boolean24 = weeks16.isSupported(durationFieldType23);
        int int25 = weeks13.get(durationFieldType23);
        org.joda.time.Weeks weeks27 = weeks13.plus((int) (byte) 100);
        org.joda.time.Weeks weeks28 = weeks13.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        int int24 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        org.joda.time.Weeks weeks26 = weeks22.minus((int) (short) 1);
        org.joda.time.Weeks weeks28 = weeks26.minus(2);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        boolean boolean31 = weeks29.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        java.lang.String str36 = weeks35.toString();
        boolean boolean37 = weeks29.isLessThan(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.negated();
        org.joda.time.Weeks weeks39 = weeks28.minus(weeks35);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.weeks((int) (short) 10);
        boolean boolean42 = weeks28.isGreaterThan(weeks41);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "P-3W" + "'", str36, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.Weeks weeks16 = weeks11.minus((int) (byte) -1);
        org.joda.time.Weeks weeks18 = weeks11.dividedBy(100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType20 = weeks19.getPeriodType();
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks23.plus(weeks24);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.ONE;
        int int40 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        boolean boolean41 = weeks23.isGreaterThan(weeks39);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = weeks42.getFieldType();
        int int44 = weeks39.get(durationFieldType43);
        boolean boolean45 = weeks19.isSupported(durationFieldType43);
        boolean boolean46 = weeks11.isSupported(durationFieldType43);
        org.joda.time.Weeks weeks48 = weeks11.multipliedBy((-4));
        int int49 = weeks48.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 12 + "'", int49 == 12);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks17.plus((int) (byte) 1);
        boolean boolean22 = weeks20.equals((java.lang.Object) 1.0d);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks23.plus(weeks24);
        org.joda.time.Weeks weeks35 = weeks23.dividedBy((int) (short) -1);
        boolean boolean36 = weeks20.isLessThan(weeks35);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType38 = weeks20.getFieldType((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.Period period6 = weeks2.toPeriod();
        org.joda.time.Duration duration7 = weeks2.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration7);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType24 = weeks2.getFieldType();
        org.joda.time.Weeks weeks25 = null;
        org.joda.time.Weeks weeks26 = weeks2.plus(weeks25);
        org.joda.time.Weeks weeks27 = weeks26.negated();
        java.lang.String str28 = weeks26.toString();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Period period2 = weeks1.toPeriod();
        int int3 = weeks1.size();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = weeks2.get(durationFieldType3);
        int int5 = weeks2.size();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = weeks6.negated();
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks7);
        org.joda.time.DurationFieldType durationFieldType9 = weeks8.getFieldType();
        boolean boolean10 = weeks2.isSupported(durationFieldType9);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = weeks2.getFieldType((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.plus((int) (short) 10);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.DurationFieldType durationFieldType22 = weeks21.getFieldType();
        org.joda.time.DurationFieldType durationFieldType24 = weeks21.getFieldType(0);
        int int25 = weeks15.get(durationFieldType24);
        org.joda.time.Weeks weeks27 = weeks15.plus((int) (byte) 0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(weeks27);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType15 = weeks14.getFieldType();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        boolean boolean18 = weeks16.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        boolean boolean24 = weeks16.isLessThan(weeks22);
        org.joda.time.Weeks weeks25 = weeks22.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.MutablePeriod mutablePeriod28 = weeks27.toMutablePeriod();
        org.joda.time.Weeks weeks29 = weeks25.plus(weeks27);
        org.joda.time.Weeks weeks30 = weeks14.plus(weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        boolean boolean40 = weeks32.isLessThan(weeks38);
        org.joda.time.Weeks weeks41 = weeks31.plus(weeks32);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = weeks42.getFieldType();
        boolean boolean44 = weeks41.isSupported(durationFieldType43);
        int int45 = weeks29.get(durationFieldType43);
        int int46 = weeks11.get(durationFieldType43);
        org.joda.time.PeriodType periodType47 = weeks11.getPeriodType();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period49 = weeks48.toPeriod();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        org.joda.time.Weeks weeks54 = weeks52.dividedBy((int) '4');
        org.joda.time.Weeks weeks56 = weeks52.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks57 = weeks48.minus(weeks56);
        org.joda.time.Weeks weeks59 = weeks48.dividedBy((int) ' ');
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType61 = weeks60.getFieldType();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.THREE;
        boolean boolean64 = weeks62.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks66 = weeks65.negated();
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks66);
        java.lang.String str69 = weeks68.toString();
        boolean boolean70 = weeks62.isLessThan(weeks68);
        org.joda.time.Weeks weeks71 = weeks68.negated();
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.MutablePeriod mutablePeriod74 = weeks73.toMutablePeriod();
        org.joda.time.Weeks weeks75 = weeks71.plus(weeks73);
        org.joda.time.Weeks weeks76 = weeks60.plus(weeks75);
        org.joda.time.Weeks weeks78 = weeks75.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks80 = weeks79.negated();
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks80);
        org.joda.time.Weeks weeks82 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks80);
        java.lang.String str83 = weeks82.toString();
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.ONE;
        int int85 = weeks82.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks84);
        org.joda.time.Weeks weeks86 = weeks78.plus(weeks82);
        boolean boolean87 = weeks59.isGreaterThan(weeks82);
        int int88 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks59);
        org.joda.time.MutablePeriod mutablePeriod89 = weeks59.toMutablePeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-3) + "'", int46 == (-3));
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "P-3W" + "'", str69, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(mutablePeriod74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "P-3W" + "'", str83, "P-3W");
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod89);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks0);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn(readableInterval20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks21.minus(weeks28);
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks38 = weeks35.multipliedBy(0);
        org.joda.time.Weeks weeks39 = weeks33.minus(weeks38);
        int int40 = weeks31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks41 = weeks39.negated();
        org.joda.time.MutablePeriod mutablePeriod42 = weeks41.toMutablePeriod();
        org.joda.time.Weeks weeks43 = weeks0.plus(weeks41);
        org.joda.time.PeriodType periodType44 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        boolean boolean47 = weeks45.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        java.lang.String str52 = weeks51.toString();
        org.joda.time.Weeks weeks53 = weeks45.plus(weeks51);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks55 = weeks54.negated();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks55);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks55);
        java.lang.String str58 = weeks57.toString();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.ONE;
        int int60 = weeks57.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks59);
        org.joda.time.Weeks weeks62 = weeks59.plus((int) (short) -1);
        int int63 = weeks45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks62);
        int int64 = weeks62.getWeeks();
        int int65 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks62);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "P-3W" + "'", str52, "P-3W");
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "P-3W" + "'", str58, "P-3W");
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks4 = weeks2.dividedBy((int) '4');
        int int5 = weeks2.size();
        org.joda.time.DurationFieldType durationFieldType6 = weeks2.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType8 = weeks2.getFieldType(300);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 300");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(durationFieldType6);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) 1);
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        org.joda.time.Weeks weeks10 = weeks2.plus(weeks8);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        org.joda.time.Weeks weeks19 = weeks16.plus((int) (short) -1);
        int int20 = weeks2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        int int21 = weeks19.getWeeks();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType23 = weeks22.getFieldType();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        boolean boolean26 = weeks24.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks28);
        java.lang.String str31 = weeks30.toString();
        boolean boolean32 = weeks24.isLessThan(weeks30);
        org.joda.time.Weeks weeks33 = weeks30.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.MutablePeriod mutablePeriod36 = weeks35.toMutablePeriod();
        org.joda.time.Weeks weeks37 = weeks33.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks22.plus(weeks37);
        org.joda.time.Weeks weeks40 = weeks37.dividedBy((int) (short) 100);
        boolean boolean41 = weeks19.isGreaterThan(weeks40);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = weeks42.getFieldType();
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.THREE;
        boolean boolean46 = weeks44.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks48 = weeks47.negated();
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks48);
        java.lang.String str51 = weeks50.toString();
        boolean boolean52 = weeks44.isLessThan(weeks50);
        org.joda.time.Weeks weeks53 = weeks50.negated();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks55 = weeks54.negated();
        org.joda.time.MutablePeriod mutablePeriod56 = weeks55.toMutablePeriod();
        org.joda.time.Weeks weeks57 = weeks53.plus(weeks55);
        org.joda.time.Weeks weeks58 = weeks42.plus(weeks57);
        org.joda.time.Weeks weeks60 = weeks57.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        boolean boolean63 = weeks61.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks65 = weeks64.negated();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks65);
        java.lang.String str68 = weeks67.toString();
        org.joda.time.Weeks weeks69 = weeks61.plus(weeks67);
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks71 = weeks70.negated();
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks71);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks71);
        java.lang.String str74 = weeks73.toString();
        org.joda.time.Weeks weeks75 = org.joda.time.Weeks.ONE;
        int int76 = weeks73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks75);
        org.joda.time.Weeks weeks78 = weeks75.plus((int) (short) -1);
        int int79 = weeks61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks78);
        org.joda.time.Weeks weeks81 = weeks61.plus((int) (short) 100);
        org.joda.time.Weeks weeks83 = weeks61.multipliedBy(3);
        org.joda.time.Weeks weeks84 = weeks60.minus(weeks61);
        boolean boolean85 = weeks40.isGreaterThan(weeks61);
        org.joda.time.Weeks weeks86 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks87 = weeks1.plus(weeks86);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-3W" + "'", str31, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "P-3W" + "'", str51, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "P-3W" + "'", str68, "P-3W");
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "P-3W" + "'", str74, "P-3W");
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(weeks86);
        org.junit.Assert.assertNotNull(weeks87);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeksIn(readableInterval15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        boolean boolean19 = weeks17.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        boolean boolean25 = weeks17.isLessThan(weeks23);
        org.joda.time.Weeks weeks26 = weeks16.minus(weeks23);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = weeks30.toMutablePeriod();
        org.joda.time.Weeks weeks33 = weeks30.multipliedBy(0);
        org.joda.time.Weeks weeks34 = weeks28.minus(weeks33);
        int int35 = weeks26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks34);
        org.joda.time.Weeks weeks36 = weeks26.negated();
        boolean boolean37 = weeks11.isGreaterThan(weeks26);
        org.joda.time.Weeks weeks39 = weeks26.dividedBy(9);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks39);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((int) (byte) 100);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        int int24 = weeks20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        org.joda.time.Weeks weeks26 = weeks22.minus((int) (short) 1);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = weeks28.minus(weeks29);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        boolean boolean40 = weeks32.isLessThan(weeks38);
        int int41 = weeks29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks38);
        org.joda.time.Duration duration42 = weeks38.toStandardDuration();
        org.joda.time.Weeks weeks44 = weeks38.minus(1030);
        int int45 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks44);
        org.joda.time.Weeks weeks47 = weeks22.multipliedBy((-927));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(weeks47);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks3.minus(weeks4);
        boolean boolean7 = weeks0.isLessThan(weeks3);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks12 = weeks10.dividedBy((int) '4');
        int int13 = weeks12.getWeeks();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.weeks((-1));
        int int16 = weeks15.size();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks18 = weeks17.negated();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        org.joda.time.Weeks weeks21 = weeks19.dividedBy((int) '4');
        int int22 = weeks19.size();
        org.joda.time.Period period23 = weeks19.toPeriod();
        org.joda.time.DurationFieldType durationFieldType24 = weeks19.getFieldType();
        org.joda.time.Weeks weeks25 = weeks15.minus(weeks19);
        org.joda.time.Weeks weeks27 = weeks25.minus((-3));
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        boolean boolean30 = weeks28.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks32 = weeks31.negated();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks32);
        java.lang.String str35 = weeks34.toString();
        boolean boolean36 = weeks28.isLessThan(weeks34);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks38 = weeks37.negated();
        org.joda.time.MutablePeriod mutablePeriod39 = weeks38.toMutablePeriod();
        org.joda.time.Weeks weeks40 = weeks34.plus(weeks38);
        org.joda.time.Weeks weeks41 = weeks27.plus(weeks34);
        org.joda.time.Weeks weeks42 = weeks12.minus(weeks41);
        org.joda.time.Weeks weeks44 = org.joda.time.Weeks.weeks((int) 'a');
        org.joda.time.Weeks weeks45 = weeks12.minus(weeks44);
        org.joda.time.DurationFieldType durationFieldType47 = weeks44.getFieldType((int) (byte) 0);
        boolean boolean48 = weeks3.isSupported(durationFieldType47);
        org.joda.time.Weeks weeks50 = weeks3.plus((-13));
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType52 = weeks51.getPeriodType();
        org.joda.time.Weeks weeks54 = weeks51.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks56 = weeks51.dividedBy((int) 'a');
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        boolean boolean60 = weeks58.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks62 = weeks61.negated();
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks62);
        java.lang.String str65 = weeks64.toString();
        boolean boolean66 = weeks58.isLessThan(weeks64);
        org.joda.time.Weeks weeks67 = weeks57.plus(weeks58);
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = weeks68.negated();
        org.joda.time.Weeks weeks70 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks69);
        java.lang.String str72 = weeks71.toString();
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.ONE;
        int int74 = weeks71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks73);
        boolean boolean75 = weeks57.isGreaterThan(weeks73);
        int int76 = weeks56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks57);
        java.lang.String str77 = weeks57.toString();
        org.joda.time.Weeks weeks78 = weeks50.minus(weeks57);
        org.joda.time.Weeks weeks79 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType80 = weeks79.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod81 = weeks79.toMutablePeriod();
        boolean boolean82 = weeks50.isGreaterThan(weeks79);
        org.joda.time.Weeks weeks83 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.THREE;
        boolean boolean86 = weeks84.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks87 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks88 = weeks87.negated();
        org.joda.time.Weeks weeks89 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks88);
        org.joda.time.Weeks weeks90 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks88);
        java.lang.String str91 = weeks90.toString();
        boolean boolean92 = weeks84.isLessThan(weeks90);
        org.joda.time.Weeks weeks93 = weeks83.plus(weeks84);
        org.joda.time.Weeks weeks94 = weeks93.negated();
        org.joda.time.Weeks weeks96 = weeks93.dividedBy(25);
        boolean boolean97 = weeks50.equals((java.lang.Object) weeks96);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "P-3W" + "'", str35, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "P-3W" + "'", str65, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "P-3W" + "'", str72, "P-3W");
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "P1W" + "'", str77, "P1W");
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(mutablePeriod81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(weeks83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(weeks87);
        org.junit.Assert.assertNotNull(weeks88);
        org.junit.Assert.assertNotNull(weeks89);
        org.junit.Assert.assertNotNull(weeks90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "P-3W" + "'", str91, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(weeks93);
        org.junit.Assert.assertNotNull(weeks94);
        org.junit.Assert.assertNotNull(weeks96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType20 = weeks19.getFieldType();
        int int21 = weeks16.get(durationFieldType20);
        org.joda.time.Weeks weeks23 = weeks16.minus((int) (byte) -1);
        org.joda.time.Weeks weeks25 = weeks23.minus((int) '#');
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks27 = weeks26.negated();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks27);
        org.joda.time.DurationFieldType durationFieldType29 = weeks28.getFieldType();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType31 = weeks30.getFieldType();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        boolean boolean34 = weeks32.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = weeks35.negated();
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks36);
        java.lang.String str39 = weeks38.toString();
        boolean boolean40 = weeks32.isLessThan(weeks38);
        org.joda.time.Weeks weeks41 = weeks38.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.MutablePeriod mutablePeriod44 = weeks43.toMutablePeriod();
        org.joda.time.Weeks weeks45 = weeks41.plus(weeks43);
        org.joda.time.Weeks weeks46 = weeks30.plus(weeks45);
        org.joda.time.Weeks weeks48 = weeks45.dividedBy((int) (short) 100);
        boolean boolean49 = weeks28.isGreaterThan(weeks45);
        org.joda.time.DurationFieldType durationFieldType50 = weeks28.getFieldType();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.THREE;
        boolean boolean53 = weeks51.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks55 = weeks54.negated();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks55);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks55);
        java.lang.String str58 = weeks57.toString();
        org.joda.time.Weeks weeks59 = weeks51.plus(weeks57);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.ONE;
        int int66 = weeks63.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks65);
        org.joda.time.Weeks weeks68 = weeks65.plus((int) (short) -1);
        int int69 = weeks51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks68);
        org.joda.time.Weeks weeks71 = weeks51.plus((int) (short) 100);
        org.joda.time.Weeks weeks73 = weeks71.multipliedBy((int) (short) 10);
        boolean boolean74 = weeks28.isGreaterThan(weeks71);
        org.joda.time.Weeks weeks76 = weeks71.minus((int) ' ');
        org.joda.time.DurationFieldType durationFieldType77 = weeks71.getFieldType();
        boolean boolean78 = weeks25.isSupported(durationFieldType77);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "P-3W" + "'", str39, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "P-3W" + "'", str58, "P-3W");
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.MutablePeriod mutablePeriod27 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        boolean boolean31 = weeks29.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks33);
        java.lang.String str36 = weeks35.toString();
        org.joda.time.Weeks weeks37 = weeks29.plus(weeks35);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        java.lang.String str42 = weeks41.toString();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.ONE;
        int int44 = weeks41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks43);
        org.joda.time.Weeks weeks46 = weeks43.plus((int) (short) -1);
        int int47 = weeks29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks46);
        org.joda.time.Weeks weeks49 = weeks29.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod50 = weeks49.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType52 = weeks49.getFieldType(0);
        int int53 = weeks28.get(durationFieldType52);
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.TWO;
        org.joda.time.Period period55 = weeks54.toPeriod();
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks57);
        org.joda.time.Weeks weeks60 = weeks58.dividedBy((int) '4');
        org.joda.time.Weeks weeks62 = weeks58.multipliedBy((int) (short) 0);
        org.joda.time.Weeks weeks63 = weeks54.minus(weeks62);
        org.joda.time.Weeks weeks64 = weeks28.plus(weeks54);
        org.joda.time.Duration duration65 = weeks64.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "P-3W" + "'", str36, "P-3W");
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P-3W" + "'", str42, "P-3W");
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-3) + "'", int53 == (-3));
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(duration65);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType24 = weeks2.getFieldType();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        boolean boolean27 = weeks25.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks28.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks29);
        java.lang.String str32 = weeks31.toString();
        org.joda.time.Weeks weeks33 = weeks25.plus(weeks31);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        org.joda.time.Weeks weeks37 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks35);
        java.lang.String str38 = weeks37.toString();
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.ONE;
        int int40 = weeks37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks39);
        org.joda.time.Weeks weeks42 = weeks39.plus((int) (short) -1);
        int int43 = weeks25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks42);
        org.joda.time.Weeks weeks45 = weeks25.plus((int) (short) 100);
        org.joda.time.Weeks weeks47 = weeks45.multipliedBy((int) (short) 10);
        boolean boolean48 = weeks2.isGreaterThan(weeks45);
        org.joda.time.Weeks weeks50 = weeks45.dividedBy(1030);
        org.joda.time.Weeks weeks51 = weeks45.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-3W" + "'", str32, "P-3W");
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "P-3W" + "'", str38, "P-3W");
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.PeriodType periodType10 = weeks6.getPeriodType();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        boolean boolean13 = weeks11.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = weeks11.plus(weeks17);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        java.lang.String str24 = weeks23.toString();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.ONE;
        int int26 = weeks23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.Weeks weeks28 = weeks25.plus((int) (short) -1);
        int int29 = weeks11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks28);
        org.joda.time.Weeks weeks31 = weeks28.plus((int) (byte) 1);
        boolean boolean33 = weeks31.equals((java.lang.Object) 1.0d);
        org.joda.time.Weeks weeks35 = weeks31.plus((int) (byte) 100);
        org.joda.time.Weeks weeks36 = weeks6.plus(weeks31);
        int int37 = weeks31.size();
        org.joda.time.Period period38 = weeks31.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "P-3W" + "'", str24, "P-3W");
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(period38);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks10 = weeks6.dividedBy(3);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.weeks((int) (short) -1);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = weeks13.getFieldType();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        boolean boolean17 = weeks15.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks19);
        java.lang.String str22 = weeks21.toString();
        boolean boolean23 = weeks15.isLessThan(weeks21);
        org.joda.time.Weeks weeks24 = weeks21.negated();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.MutablePeriod mutablePeriod27 = weeks26.toMutablePeriod();
        org.joda.time.Weeks weeks28 = weeks24.plus(weeks26);
        org.joda.time.Weeks weeks29 = weeks13.plus(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks32 = weeks31.negated();
        int int33 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks32);
        org.joda.time.MutablePeriod mutablePeriod34 = weeks32.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks6.plus(weeks32);
        java.lang.Class<?> wildcardClass36 = weeks32.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "P-3W" + "'", str22, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        boolean boolean13 = weeks5.isLessThan(weeks11);
        org.joda.time.Weeks weeks14 = weeks4.plus(weeks5);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks15.negated();
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks16);
        java.lang.String str19 = weeks18.toString();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        int int21 = weeks18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks20);
        boolean boolean22 = weeks4.isGreaterThan(weeks20);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = weeks23.getFieldType();
        int int25 = weeks20.get(durationFieldType24);
        boolean boolean26 = weeks0.isSupported(durationFieldType24);
        org.joda.time.Weeks weeks28 = weeks0.dividedBy((-1));
        org.joda.time.Weeks weeks30 = weeks0.dividedBy(3);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType32 = weeks31.getPeriodType();
        org.joda.time.Weeks weeks34 = weeks31.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks36 = weeks31.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod37 = weeks31.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType38 = weeks31.getFieldType();
        org.joda.time.PeriodType periodType39 = weeks31.getPeriodType();
        boolean boolean40 = weeks30.isGreaterThan(weeks31);
        org.joda.time.Weeks weeks42 = weeks30.multipliedBy((-1027));
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "P-3W" + "'", str19, "P-3W");
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(weeks42);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks3 = weeks2.negated();
        org.joda.time.Weeks weeks4 = weeks1.minus(weeks2);
        int int5 = weeks4.size();
        java.lang.String str6 = weeks4.toString();
        org.joda.time.Duration duration7 = weeks4.toStandardDuration();
        java.lang.String str8 = weeks4.toString();
        org.joda.time.Period period9 = weeks4.toPeriod();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "P-4W" + "'", str6, "P-4W");
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-4W" + "'", str8, "P-4W");
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.MutablePeriod mutablePeriod2 = weeks1.toMutablePeriod();
        org.joda.time.Weeks weeks4 = weeks1.multipliedBy(0);
        org.joda.time.PeriodType periodType5 = weeks4.getPeriodType();
        java.lang.Class<?> wildcardClass6 = periodType5.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks20 = weeks0.multipliedBy((-100));
        org.joda.time.MutablePeriod mutablePeriod21 = weeks0.toMutablePeriod();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks22.negated();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks23);
        org.joda.time.Weeks weeks26 = weeks24.dividedBy((int) '4');
        int int27 = weeks24.size();
        org.joda.time.Weeks weeks28 = weeks24.negated();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks33 = weeks31.dividedBy((int) '4');
        int int34 = weeks31.size();
        org.joda.time.Weeks weeks35 = weeks31.negated();
        boolean boolean36 = weeks28.isGreaterThan(weeks31);
        org.joda.time.DurationFieldType durationFieldType37 = weeks28.getFieldType();
        org.joda.time.Weeks weeks39 = weeks28.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.weeks((-1));
        int int42 = weeks41.size();
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks47 = weeks45.dividedBy((int) '4');
        int int48 = weeks45.size();
        org.joda.time.Period period49 = weeks45.toPeriod();
        org.joda.time.DurationFieldType durationFieldType50 = weeks45.getFieldType();
        org.joda.time.Weeks weeks51 = weeks41.minus(weeks45);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.THREE;
        boolean boolean54 = weeks52.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks56);
        java.lang.String str59 = weeks58.toString();
        boolean boolean60 = weeks52.isLessThan(weeks58);
        org.joda.time.Weeks weeks61 = weeks58.negated();
        org.joda.time.Weeks weeks62 = weeks41.plus(weeks61);
        org.joda.time.Weeks weeks63 = weeks39.plus(weeks62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.TWO;
        int int65 = weeks64.size();
        org.joda.time.Weeks weeks67 = weeks64.multipliedBy((int) (short) 1);
        org.joda.time.Weeks weeks68 = weeks62.plus(weeks64);
        int int69 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks68);
        org.joda.time.DurationFieldType durationFieldType71 = weeks68.getFieldType((int) (byte) 0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "P-3W" + "'", str59, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType71);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = weeks11.negated();
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks14);
        org.joda.time.Duration duration16 = weeks15.toStandardDuration();
        org.joda.time.Period period17 = weeks15.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        int int14 = weeks11.size();
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = weeks11.isSupported(durationFieldType15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.weeks((int) (short) 0);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks18);
        boolean boolean20 = weeks11.isGreaterThan(weeks19);
        org.joda.time.Duration duration21 = weeks19.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration21);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks20);
        java.lang.String str23 = weeks22.toString();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.ONE;
        int int25 = weeks22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks24);
        org.joda.time.Weeks weeks26 = weeks18.plus(weeks22);
        org.joda.time.MutablePeriod mutablePeriod27 = weeks22.toMutablePeriod();
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks30 = weeks29.negated();
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks30);
        java.lang.String str33 = weeks32.toString();
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.ONE;
        int int35 = weeks32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks34);
        org.joda.time.Weeks weeks37 = weeks34.plus((int) (short) -1);
        org.joda.time.Weeks weeks39 = weeks34.multipliedBy((int) (byte) 10);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks41 = weeks40.negated();
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks41);
        java.lang.String str44 = weeks43.toString();
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeks((-1));
        int int47 = weeks46.size();
        org.joda.time.Weeks weeks48 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks49 = weeks48.negated();
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks49);
        org.joda.time.Weeks weeks52 = weeks50.dividedBy((int) '4');
        int int53 = weeks50.size();
        org.joda.time.Period period54 = weeks50.toPeriod();
        org.joda.time.DurationFieldType durationFieldType55 = weeks50.getFieldType();
        org.joda.time.Weeks weeks56 = weeks46.minus(weeks50);
        org.joda.time.Weeks weeks57 = org.joda.time.Weeks.THREE;
        boolean boolean59 = weeks57.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        java.lang.String str64 = weeks63.toString();
        boolean boolean65 = weeks57.isLessThan(weeks63);
        org.joda.time.Weeks weeks66 = weeks63.negated();
        org.joda.time.Weeks weeks67 = weeks46.plus(weeks66);
        boolean boolean68 = weeks43.isLessThan(weeks67);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        org.joda.time.Weeks weeks73 = weeks71.dividedBy((int) '4');
        int int74 = weeks71.size();
        org.joda.time.Period period75 = weeks71.toPeriod();
        org.joda.time.DurationFieldType durationFieldType76 = weeks71.getFieldType();
        boolean boolean77 = weeks43.isSupported(durationFieldType76);
        int int78 = weeks39.get(durationFieldType76);
        org.joda.time.Weeks weeks79 = weeks22.plus(weeks39);
        org.joda.time.Weeks weeks80 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks22);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P-3W" + "'", str23, "P-3W");
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "P-3W" + "'", str33, "P-3W");
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "P-3W" + "'", str44, "P-3W");
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "P-3W" + "'", str64, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(weeks80);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((-1));
        int int2 = weeks1.size();
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks7 = weeks5.dividedBy((int) '4');
        int int8 = weeks5.size();
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = weeks5.getFieldType();
        org.joda.time.Weeks weeks11 = weeks1.minus(weeks5);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.parseWeeks("P-3W");
        boolean boolean14 = weeks5.isLessThan(weeks13);
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str16 = weeks5.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P-3W" + "'", str16, "P-3W");
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        boolean boolean3 = weeks1.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks5);
        java.lang.String str8 = weeks7.toString();
        boolean boolean9 = weeks1.isLessThan(weeks7);
        org.joda.time.Weeks weeks10 = weeks0.plus(weeks1);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks11.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks12);
        java.lang.String str15 = weeks14.toString();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.ONE;
        int int17 = weeks14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks16);
        boolean boolean18 = weeks0.isGreaterThan(weeks16);
        org.joda.time.Weeks weeks20 = weeks0.multipliedBy((-100));
        org.joda.time.MutablePeriod mutablePeriod21 = weeks0.toMutablePeriod();
        org.joda.time.PeriodType periodType22 = weeks0.getPeriodType();
        java.lang.Class<?> wildcardClass23 = weeks0.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P-3W" + "'", str8, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-3W" + "'", str15, "P-3W");
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.weeks((-1));
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks24 = weeks23.negated();
        org.joda.time.Weeks weeks25 = weeks22.minus(weeks23);
        java.lang.String str26 = weeks25.toString();
        int int27 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks25);
        org.joda.time.DurationFieldType durationFieldType29 = weeks25.getFieldType(0);
        org.joda.time.DurationFieldType durationFieldType30 = weeks25.getFieldType();
        java.lang.Class<?> wildcardClass31 = weeks25.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P-4W" + "'", str26, "P-4W");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.DurationFieldType durationFieldType3 = weeks2.getFieldType();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = weeks4.getFieldType();
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        boolean boolean8 = weeks6.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        boolean boolean14 = weeks6.isLessThan(weeks12);
        org.joda.time.Weeks weeks15 = weeks12.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = weeks17.toMutablePeriod();
        org.joda.time.Weeks weeks19 = weeks15.plus(weeks17);
        org.joda.time.Weeks weeks20 = weeks4.plus(weeks19);
        org.joda.time.Weeks weeks22 = weeks19.dividedBy((int) (short) 100);
        boolean boolean23 = weeks2.isGreaterThan(weeks19);
        org.joda.time.DurationFieldType durationFieldType24 = weeks2.getFieldType();
        org.joda.time.Weeks weeks26 = weeks2.multipliedBy((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType28 = weeks26.getFieldType((int) (byte) 0);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(durationFieldType28);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        org.joda.time.Weeks weeks20 = weeks0.plus((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks20.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType23 = weeks20.getFieldType(0);
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks25 = weeks24.negated();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks25);
        java.lang.String str28 = weeks27.toString();
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.ONE;
        int int30 = weeks27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks29);
        org.joda.time.Weeks weeks32 = weeks29.plus((int) (short) -1);
        boolean boolean33 = weeks20.equals((java.lang.Object) weeks32);
        org.joda.time.Weeks weeks34 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks35 = weeks34.negated();
        org.joda.time.PeriodType periodType36 = weeks34.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType37 = null;
        boolean boolean38 = weeks34.isSupported(durationFieldType37);
        org.joda.time.Weeks weeks39 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks40 = weeks39.negated();
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks40);
        org.joda.time.DurationFieldType durationFieldType42 = weeks41.getFieldType();
        org.joda.time.DurationFieldType durationFieldType44 = weeks41.getFieldType(0);
        int int45 = weeks34.get(durationFieldType44);
        boolean boolean46 = weeks32.equals((java.lang.Object) weeks34);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.THREE;
        boolean boolean49 = weeks47.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks50 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks51 = weeks50.negated();
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks51);
        java.lang.String str54 = weeks53.toString();
        boolean boolean55 = weeks47.isLessThan(weeks53);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.MutablePeriod mutablePeriod58 = weeks57.toMutablePeriod();
        org.joda.time.Weeks weeks59 = weeks53.plus(weeks57);
        org.joda.time.Weeks weeks61 = weeks57.multipliedBy(10);
        org.joda.time.DurationFieldType durationFieldType62 = weeks61.getFieldType();
        int int63 = weeks34.get(durationFieldType62);
        org.joda.time.Weeks weeks64 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks65 = weeks64.negated();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        boolean boolean68 = weeks66.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks70);
        java.lang.String str73 = weeks72.toString();
        boolean boolean74 = weeks66.isLessThan(weeks72);
        org.joda.time.Weeks weeks76 = weeks66.multipliedBy((int) (short) -1);
        boolean boolean77 = weeks65.isLessThan(weeks66);
        org.joda.time.Weeks weeks78 = weeks34.plus(weeks66);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-3W" + "'", str28, "P-3W");
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3 + "'", int45 == 3);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "P-3W" + "'", str54, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 3 + "'", int63 == 3);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "P-3W" + "'", str73, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(weeks78);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.PeriodType periodType1 = weeks0.getPeriodType();
        org.joda.time.Weeks weeks3 = weeks0.dividedBy((int) (byte) 100);
        org.joda.time.Weeks weeks5 = weeks0.dividedBy((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod6 = weeks0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = weeks0.getFieldType();
        java.lang.String str8 = weeks0.toString();
        org.joda.time.Duration duration9 = weeks0.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P3W" + "'", str8, "P3W");
        org.junit.Assert.assertNotNull(duration9);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        java.lang.Class<?> wildcardClass17 = weeks16.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = weeks0.getFieldType();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.THREE;
        boolean boolean4 = weeks2.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks6 = weeks5.negated();
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks6);
        java.lang.String str9 = weeks8.toString();
        boolean boolean10 = weeks2.isLessThan(weeks8);
        org.joda.time.Weeks weeks11 = weeks8.negated();
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks13 = weeks12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = weeks13.toMutablePeriod();
        org.joda.time.Weeks weeks15 = weeks11.plus(weeks13);
        org.joda.time.Weeks weeks16 = weeks0.plus(weeks15);
        org.joda.time.Weeks weeks18 = weeks15.dividedBy((int) (short) 100);
        boolean boolean20 = weeks15.equals((java.lang.Object) 1L);
        org.joda.time.MutablePeriod mutablePeriod21 = weeks15.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType23 = weeks15.getFieldType((int) (byte) 0);
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod24 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int25 = weeks15.compareTo(baseSingleFieldPeriod24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "P-3W" + "'", str9, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(durationFieldType23);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.PeriodType periodType2 = weeks0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        boolean boolean4 = weeks0.isSupported(durationFieldType3);
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.THREE;
        boolean boolean7 = weeks5.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks9 = weeks8.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks9);
        java.lang.String str12 = weeks11.toString();
        org.joda.time.Weeks weeks13 = weeks5.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.Weeks weeks17 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        java.lang.String str18 = weeks17.toString();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.ONE;
        int int20 = weeks17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks19);
        org.joda.time.Weeks weeks22 = weeks19.plus((int) (short) -1);
        int int23 = weeks5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks22);
        org.joda.time.Weeks weeks25 = weeks5.plus((int) (short) 100);
        org.joda.time.Weeks weeks27 = weeks5.multipliedBy(3);
        org.joda.time.Weeks weeks29 = weeks5.dividedBy((int) (byte) -1);
        boolean boolean30 = weeks0.isGreaterThan(weeks5);
        org.joda.time.Weeks weeks31 = org.joda.time.Weeks.MIN_VALUE;
        int int32 = weeks31.getWeeks();
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType34 = weeks33.getFieldType();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        boolean boolean37 = weeks35.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks39 = weeks38.negated();
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        org.joda.time.Weeks weeks41 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks39);
        java.lang.String str42 = weeks41.toString();
        boolean boolean43 = weeks35.isLessThan(weeks41);
        org.joda.time.Weeks weeks44 = weeks41.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.MutablePeriod mutablePeriod47 = weeks46.toMutablePeriod();
        org.joda.time.Weeks weeks48 = weeks44.plus(weeks46);
        org.joda.time.Weeks weeks49 = weeks33.plus(weeks48);
        org.joda.time.Weeks weeks51 = weeks48.dividedBy((int) (short) 100);
        org.joda.time.Weeks weeks52 = weeks51.negated();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType54 = weeks53.getFieldType();
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        boolean boolean57 = weeks55.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = weeks58.negated();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        org.joda.time.Weeks weeks61 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks59);
        java.lang.String str62 = weeks61.toString();
        boolean boolean63 = weeks55.isLessThan(weeks61);
        org.joda.time.Weeks weeks64 = weeks61.negated();
        org.joda.time.Weeks weeks65 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks66 = weeks65.negated();
        org.joda.time.MutablePeriod mutablePeriod67 = weeks66.toMutablePeriod();
        org.joda.time.Weeks weeks68 = weeks64.plus(weeks66);
        org.joda.time.Weeks weeks69 = weeks53.plus(weeks68);
        org.joda.time.Weeks weeks71 = weeks68.plus((int) (short) 10);
        org.joda.time.Weeks weeks72 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks73 = weeks72.negated();
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks73);
        org.joda.time.DurationFieldType durationFieldType75 = weeks74.getFieldType();
        org.joda.time.DurationFieldType durationFieldType77 = weeks74.getFieldType(0);
        int int78 = weeks68.get(durationFieldType77);
        int int79 = weeks51.get(durationFieldType77);
        boolean boolean80 = weeks31.isSupported(durationFieldType77);
        int int81 = weeks5.get(durationFieldType77);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "P-3W" + "'", str12, "P-3W");
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P-3W" + "'", str18, "P-3W");
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-2147483648) + "'", int32 == (-2147483648));
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P-3W" + "'", str42, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "P-3W" + "'", str62, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 3 + "'", int81 == 3);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        org.joda.time.Weeks weeks8 = weeks0.plus(weeks6);
        org.joda.time.Weeks weeks9 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks10 = weeks9.negated();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        org.joda.time.Weeks weeks12 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks10);
        java.lang.String str13 = weeks12.toString();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.ONE;
        int int15 = weeks12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks14);
        org.joda.time.Weeks weeks17 = weeks14.plus((int) (short) -1);
        int int18 = weeks0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
        int int19 = weeks17.getWeeks();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.ONE;
        org.joda.time.DurationFieldType durationFieldType21 = weeks20.getFieldType();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        boolean boolean24 = weeks22.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks25.negated();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks26);
        java.lang.String str29 = weeks28.toString();
        boolean boolean30 = weeks22.isLessThan(weeks28);
        org.joda.time.Weeks weeks31 = weeks28.negated();
        org.joda.time.Weeks weeks32 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = weeks33.toMutablePeriod();
        org.joda.time.Weeks weeks35 = weeks31.plus(weeks33);
        org.joda.time.Weeks weeks36 = weeks20.plus(weeks35);
        org.joda.time.Weeks weeks38 = weeks35.dividedBy((int) (short) 100);
        boolean boolean39 = weeks17.isGreaterThan(weeks38);
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.THREE;
        boolean boolean42 = weeks40.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks43 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks44 = weeks43.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks44);
        java.lang.String str47 = weeks46.toString();
        org.joda.time.Weeks weeks48 = weeks40.plus(weeks46);
        org.joda.time.Weeks weeks49 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks50 = weeks49.negated();
        org.joda.time.Weeks weeks51 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks50);
        java.lang.String str53 = weeks52.toString();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.ONE;
        int int55 = weeks52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks54);
        org.joda.time.Weeks weeks57 = weeks54.plus((int) (short) -1);
        int int58 = weeks40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks57);
        int int59 = weeks57.getWeeks();
        org.joda.time.Weeks weeks60 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks61);
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = weeks62.get(durationFieldType63);
        int int65 = weeks62.size();
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks67 = weeks66.negated();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks67);
        org.joda.time.DurationFieldType durationFieldType69 = weeks68.getFieldType();
        boolean boolean70 = weeks62.isSupported(durationFieldType69);
        int int71 = weeks57.get(durationFieldType69);
        int int72 = weeks38.get(durationFieldType69);
        java.lang.Class<?> wildcardClass73 = durationFieldType69.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P-3W" + "'", str13, "P-3W");
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "P-3W" + "'", str29, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks44);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "P-3W" + "'", str47, "P-3W");
        org.junit.Assert.assertNotNull(weeks48);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks50);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "P-3W" + "'", str53, "P-3W");
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        boolean boolean2 = weeks0.equals((java.lang.Object) 10.0f);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks4 = weeks3.negated();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks4);
        java.lang.String str7 = weeks6.toString();
        boolean boolean8 = weeks0.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks6.negated();
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.MutablePeriod mutablePeriod12 = weeks11.toMutablePeriod();
        org.joda.time.Weeks weeks13 = weeks9.plus(weeks11);
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = weeks14.negated();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = weeks16.get(durationFieldType17);
        int int19 = weeks16.size();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks21);
        org.joda.time.DurationFieldType durationFieldType23 = weeks22.getFieldType();
        boolean boolean24 = weeks16.isSupported(durationFieldType23);
        int int25 = weeks13.get(durationFieldType23);
        org.joda.time.Weeks weeks27 = weeks13.plus((int) (byte) 100);
        org.joda.time.Period period28 = weeks27.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = weeks0.negated();
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks1);
        java.lang.String str4 = weeks3.toString();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.ONE;
        int int6 = weeks3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks5);
        java.lang.String str7 = weeks3.toString();
        org.joda.time.Weeks weeks9 = weeks3.dividedBy(1);
        int int11 = weeks3.getValue(0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType13 = weeks3.getFieldType((-13));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -13");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P-3W" + "'", str4, "P-3W");
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P-3W" + "'", str7, "P-3W");
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
    }
}

