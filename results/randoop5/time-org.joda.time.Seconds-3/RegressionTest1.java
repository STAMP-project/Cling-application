import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        int int26 = seconds4.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int9 = seconds8.getSeconds();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds11 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = seconds12.get(durationFieldType13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds16 = seconds12.minus(seconds15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds17.get(durationFieldType18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = seconds17.minus(seconds20);
        org.joda.time.Seconds seconds23 = seconds21.dividedBy((int) '4');
        int int24 = seconds21.size();
        int int25 = seconds16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds21);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        boolean boolean29 = seconds21.isLessThan(seconds26);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = seconds35.get(durationFieldType36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds39 = seconds35.minus(seconds38);
        org.joda.time.Seconds seconds41 = seconds39.dividedBy((int) '4');
        int int42 = seconds39.size();
        int int43 = seconds34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds39);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        boolean boolean47 = seconds39.isLessThan(seconds44);
        boolean boolean48 = seconds26.isLessThan(seconds39);
        int int49 = seconds39.size();
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds39);
        org.joda.time.Seconds seconds51 = seconds5.plus(seconds39);
        org.joda.time.Seconds seconds52 = seconds5.negated();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Period period7 = seconds6.toPeriod();
        org.joda.time.Seconds seconds9 = seconds6.dividedBy(100);
        org.joda.time.Seconds seconds11 = seconds6.minus(0);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        java.lang.String str6 = seconds5.toString();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds5);
        org.joda.time.Seconds seconds9 = seconds7.multipliedBy((-2147483644));
        java.lang.String str10 = seconds7.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0S" + "'", str10, "PT0S");
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT2S");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        java.lang.String str18 = seconds17.toString();
        org.joda.time.Period period19 = seconds17.toPeriod();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        org.joda.time.Seconds seconds22 = seconds21.negated();
        org.joda.time.MutablePeriod mutablePeriod23 = seconds21.toMutablePeriod();
        org.joda.time.Duration duration24 = seconds21.toStandardDuration();
        boolean boolean25 = seconds17.equals((java.lang.Object) seconds21);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        org.joda.time.MutablePeriod mutablePeriod42 = seconds35.toMutablePeriod();
        int int43 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds45 = seconds17.minus(2147483644);
        java.lang.String str46 = seconds17.toString();
        int int47 = seconds17.size();
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.Seconds seconds49 = seconds1.minus(seconds48);
        org.joda.time.DurationFieldType durationFieldType50 = seconds1.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2147483644S" + "'", str18, "PT2147483644S");
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT2147483644S" + "'", str46, "PT2147483644S");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(durationFieldType50);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds5 = seconds1.minus((int) (byte) -1);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType9 = seconds8.getPeriodType();
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.Seconds seconds12 = seconds11.negated();
        org.joda.time.MutablePeriod mutablePeriod13 = seconds11.toMutablePeriod();
        int int14 = seconds8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType17 = seconds16.getPeriodType();
        org.joda.time.Duration duration18 = seconds16.toStandardDuration();
        org.joda.time.Seconds seconds20 = seconds16.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds22 = seconds16.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds24 = seconds16.minus(seconds23);
        org.joda.time.DurationFieldType durationFieldType25 = seconds24.getFieldType();
        boolean boolean26 = seconds8.isSupported(durationFieldType25);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Period period30 = seconds28.toPeriod();
        org.joda.time.Duration duration31 = seconds28.toStandardDuration();
        boolean boolean32 = seconds8.equals((java.lang.Object) seconds28);
        org.joda.time.Duration duration33 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds34 = seconds28.negated();
        int int35 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds34);
        org.joda.time.Seconds seconds37 = seconds34.plus((int) '4');
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType39 = seconds38.getPeriodType();
        org.joda.time.Seconds seconds41 = seconds38.plus(1);
        int int42 = seconds41.getSeconds();
        org.joda.time.Seconds seconds44 = seconds41.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds46 = seconds41.minus((int) (short) 100);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.secondsIn(readableInterval47);
        org.joda.time.DurationFieldType durationFieldType49 = seconds48.getFieldType();
        org.joda.time.Seconds seconds51 = seconds48.dividedBy((-1));
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds48);
        java.lang.String str53 = seconds48.toString();
        org.joda.time.Seconds seconds55 = seconds48.multipliedBy((int) (byte) 10);
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType58 = seconds57.getPeriodType();
        org.joda.time.Duration duration59 = seconds57.toStandardDuration();
        org.joda.time.Seconds seconds61 = seconds57.multipliedBy(0);
        java.lang.String str62 = seconds61.toString();
        org.joda.time.DurationFieldType durationFieldType63 = seconds61.getFieldType();
        org.joda.time.Seconds seconds65 = seconds61.minus(3);
        org.joda.time.Seconds seconds66 = seconds65.negated();
        boolean boolean67 = seconds55.equals((java.lang.Object) seconds65);
        int int68 = seconds41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds55);
        org.joda.time.Seconds seconds69 = seconds37.plus(seconds41);
        org.joda.time.Duration duration70 = seconds37.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "PT0S" + "'", str53, "PT0S");
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PT0S" + "'", str62, "PT0S");
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(duration70);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.Seconds seconds20 = seconds17.plus(0);
        org.joda.time.MutablePeriod mutablePeriod21 = seconds20.toMutablePeriod();
        int int22 = seconds20.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.PeriodType periodType19 = seconds17.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            int int21 = seconds17.getValue((-100));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        org.joda.time.Duration duration10 = seconds7.toStandardDuration();
        int int11 = seconds7.getSeconds();
        boolean boolean12 = seconds1.isLessThan(seconds7);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = seconds22.dividedBy((int) '4');
        int int25 = seconds22.size();
        int int26 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds22);
        org.joda.time.Seconds seconds28 = seconds22.plus(0);
        java.lang.String str29 = seconds28.toString();
        org.joda.time.Period period30 = seconds28.toPeriod();
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn(readableInterval31);
        org.joda.time.Seconds seconds33 = seconds32.negated();
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds32.get(durationFieldType34);
        boolean boolean36 = seconds28.isLessThan(seconds32);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds32);
        org.joda.time.Seconds seconds38 = seconds1.plus(seconds32);
        org.joda.time.DurationFieldType durationFieldType39 = seconds1.getFieldType();
        org.joda.time.Seconds seconds41 = seconds1.minus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType42 = seconds41.getFieldType();
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.secondsIn(readableInterval43);
        org.joda.time.Seconds seconds45 = seconds44.negated();
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        int int48 = seconds47.size();
        boolean boolean49 = seconds45.isLessThan(seconds47);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.secondsIn(readableInterval50);
        int int52 = seconds51.size();
        org.joda.time.Seconds seconds54 = seconds51.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.secondsIn(readableInterval55);
        org.joda.time.DurationFieldType durationFieldType57 = seconds56.getFieldType();
        boolean boolean58 = seconds54.isSupported(durationFieldType57);
        boolean boolean59 = seconds47.isSupported(durationFieldType57);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds47);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType63 = seconds62.getPeriodType();
        org.joda.time.Duration duration64 = seconds62.toStandardDuration();
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds62);
        boolean boolean66 = seconds60.equals((java.lang.Object) seconds62);
        int int67 = seconds60.size();
        org.joda.time.Seconds seconds69 = seconds60.plus(0);
        org.joda.time.Seconds seconds70 = seconds41.plus(seconds60);
        org.joda.time.Seconds seconds72 = seconds60.minus(0);
        org.joda.time.Seconds seconds74 = seconds60.multipliedBy(52);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2147483644S" + "'", str29, "PT2147483644S");
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds74);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds17.multipliedBy((int) (short) 0);
        int int21 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds20);
        org.joda.time.MutablePeriod mutablePeriod22 = seconds20.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod23 = seconds20.toMutablePeriod();
        org.joda.time.Seconds seconds25 = seconds20.minus((int) (byte) -1);
        int int26 = seconds25.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        boolean boolean26 = seconds16.equals((java.lang.Object) seconds22);
        org.joda.time.MutablePeriod mutablePeriod27 = seconds16.toMutablePeriod();
        org.joda.time.Seconds seconds28 = seconds0.plus(seconds16);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Seconds seconds33 = seconds30.dividedBy((-1));
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds30);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        boolean boolean36 = seconds34.isSupported(durationFieldType35);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.secondsIn(readableInterval37);
        int int39 = seconds38.size();
        org.joda.time.Seconds seconds41 = seconds38.dividedBy(100);
        org.joda.time.PeriodType periodType42 = seconds41.getPeriodType();
        org.joda.time.Seconds seconds44 = seconds41.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds46 = seconds44.minus((-1));
        org.joda.time.DurationFieldType durationFieldType48 = seconds44.getFieldType((int) (byte) 0);
        boolean boolean49 = seconds34.isSupported(durationFieldType48);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.secondsIn(readableInterval50);
        org.joda.time.Seconds seconds52 = seconds51.negated();
        org.joda.time.MutablePeriod mutablePeriod53 = seconds51.toMutablePeriod();
        org.joda.time.Duration duration54 = seconds51.toStandardDuration();
        int int55 = seconds51.getSeconds();
        java.lang.String str56 = seconds51.toString();
        org.joda.time.Seconds seconds58 = seconds51.minus((int) (short) 10);
        org.joda.time.Seconds seconds59 = seconds34.minus(seconds51);
        org.joda.time.DurationFieldType durationFieldType60 = seconds59.getFieldType();
        org.joda.time.Seconds seconds62 = seconds59.dividedBy((int) (short) 1);
        org.joda.time.PeriodType periodType63 = seconds62.getPeriodType();
        org.joda.time.ReadableInterval readableInterval64 = null;
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.secondsIn(readableInterval64);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = seconds66.get(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds70 = seconds66.minus(seconds69);
        org.joda.time.Seconds seconds72 = seconds70.dividedBy((int) '4');
        org.joda.time.Seconds seconds73 = seconds65.minus(seconds72);
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int76 = seconds75.getSeconds();
        org.joda.time.DurationFieldType durationFieldType77 = seconds75.getFieldType();
        boolean boolean78 = seconds65.isSupported(durationFieldType77);
        boolean boolean79 = seconds62.isSupported(durationFieldType77);
        int int80 = seconds0.get(durationFieldType77);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PT0S" + "'", str56, "PT0S");
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-2147483648) + "'", int80 == (-2147483648));
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        int int10 = seconds9.size();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy(100);
        org.joda.time.PeriodType periodType13 = seconds12.getPeriodType();
        org.joda.time.Seconds seconds15 = seconds12.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds17 = seconds15.minus((-1));
        org.joda.time.DurationFieldType durationFieldType19 = seconds15.getFieldType((int) (byte) 0);
        boolean boolean20 = seconds5.isSupported(durationFieldType19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        int int26 = seconds22.getSeconds();
        java.lang.String str27 = seconds22.toString();
        org.joda.time.Seconds seconds29 = seconds22.minus((int) (short) 10);
        org.joda.time.Seconds seconds30 = seconds5.minus(seconds22);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Seconds seconds33 = seconds30.dividedBy((int) (short) 1);
        int int34 = seconds30.getSeconds();
        org.joda.time.Period period35 = seconds30.toPeriod();
        org.joda.time.Period period36 = seconds30.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT0S" + "'", str27, "PT0S");
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        boolean boolean17 = seconds9.isLessThan(seconds14);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds29 = seconds27.dividedBy((int) '4');
        int int30 = seconds27.size();
        int int31 = seconds22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds27);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        boolean boolean35 = seconds27.isLessThan(seconds32);
        boolean boolean36 = seconds14.isLessThan(seconds27);
        org.joda.time.PeriodType periodType37 = seconds14.getPeriodType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(periodType37);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.secondsIn(readableInterval4);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Seconds seconds8 = seconds6.plus((int) (byte) 100);
        org.joda.time.Seconds seconds9 = seconds3.plus(seconds8);
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((int) (byte) 1);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType14 = seconds13.getPeriodType();
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.secondsIn(readableInterval15);
        org.joda.time.Seconds seconds17 = seconds16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = seconds16.toMutablePeriod();
        int int19 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds16);
        org.joda.time.PeriodType periodType20 = seconds13.getPeriodType();
        boolean boolean21 = seconds8.isGreaterThan(seconds13);
        int int22 = seconds0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds13);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Period period2 = seconds1.toPeriod();
        java.lang.Class<?> wildcardClass3 = period2.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Period period3 = seconds1.toPeriod();
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds6 = seconds1.plus((int) (short) 0);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        boolean boolean22 = seconds7.isLessThan(seconds17);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.secondsIn(readableInterval28);
        org.joda.time.Seconds seconds30 = seconds29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = seconds29.toMutablePeriod();
        org.joda.time.Duration duration32 = seconds29.toStandardDuration();
        boolean boolean33 = seconds23.equals((java.lang.Object) seconds29);
        org.joda.time.MutablePeriod mutablePeriod34 = seconds23.toMutablePeriod();
        org.joda.time.Seconds seconds35 = seconds7.plus(seconds23);
        org.joda.time.PeriodType periodType36 = seconds23.getPeriodType();
        boolean boolean37 = seconds6.isGreaterThan(seconds23);
        java.lang.String str38 = seconds23.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT2147483647S" + "'", str38, "PT2147483647S");
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        java.lang.String str18 = seconds17.toString();
        org.joda.time.Period period19 = seconds17.toPeriod();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        org.joda.time.Seconds seconds24 = seconds21.dividedBy((-1));
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        int int27 = seconds17.get(durationFieldType26);
        boolean boolean28 = seconds0.isLessThan(seconds17);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType31 = seconds30.getPeriodType();
        org.joda.time.Duration duration32 = seconds30.toStandardDuration();
        org.joda.time.Seconds seconds34 = seconds30.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds35 = seconds34.negated();
        org.joda.time.Seconds seconds36 = seconds34.negated();
        org.joda.time.Seconds seconds37 = seconds0.minus(seconds34);
        int int38 = seconds37.getSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2147483644S" + "'", str18, "PT2147483644S");
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483644 + "'", int27 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.MutablePeriod mutablePeriod40 = seconds33.toMutablePeriod();
        int int41 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds43 = seconds15.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds45 = seconds43.multipliedBy((int) (short) 1);
        org.joda.time.Seconds seconds46 = seconds43.negated();
        org.joda.time.Period period47 = seconds43.toPeriod();
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds52 = seconds48.minus(seconds51);
        org.joda.time.Seconds seconds54 = seconds51.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds70 = seconds64.plus(0);
        org.joda.time.MutablePeriod mutablePeriod71 = seconds64.toMutablePeriod();
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType73 = null;
        int int74 = seconds72.get(durationFieldType73);
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds76 = seconds72.minus(seconds75);
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType78 = null;
        int int79 = seconds77.get(durationFieldType78);
        org.joda.time.Seconds seconds80 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds81 = seconds77.minus(seconds80);
        org.joda.time.Seconds seconds83 = seconds81.dividedBy((int) '4');
        int int84 = seconds81.size();
        int int85 = seconds76.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds81);
        org.joda.time.DurationFieldType durationFieldType86 = seconds76.getFieldType();
        int int87 = seconds64.get(durationFieldType86);
        boolean boolean88 = seconds51.isSupported(durationFieldType86);
        boolean boolean89 = seconds43.isGreaterThan(seconds51);
        org.joda.time.DurationFieldType durationFieldType90 = null;
        boolean boolean91 = seconds43.isSupported(durationFieldType90);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2147483644 + "'", int87 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        java.lang.String str6 = seconds1.toString();
        org.joda.time.Seconds seconds8 = seconds1.multipliedBy((int) (byte) 10);
        org.joda.time.PeriodType periodType9 = seconds1.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        int int9 = seconds4.size();
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        org.joda.time.Seconds seconds14 = seconds11.dividedBy((-1));
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds11);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = seconds15.isSupported(durationFieldType16);
        org.joda.time.Seconds seconds19 = seconds15.plus((int) (byte) 1);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds24 = seconds20.minus(seconds23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = seconds25.get(durationFieldType26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds29 = seconds25.minus(seconds28);
        org.joda.time.Seconds seconds31 = seconds29.dividedBy((int) '4');
        int int32 = seconds29.size();
        int int33 = seconds24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds29);
        org.joda.time.Seconds seconds35 = seconds29.plus(0);
        java.lang.String str36 = seconds35.toString();
        org.joda.time.Period period37 = seconds35.toPeriod();
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.secondsIn(readableInterval38);
        org.joda.time.Seconds seconds40 = seconds39.negated();
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = seconds39.get(durationFieldType41);
        boolean boolean43 = seconds35.isLessThan(seconds39);
        org.joda.time.Seconds seconds44 = seconds19.minus(seconds35);
        org.joda.time.DurationFieldType durationFieldType45 = seconds44.getFieldType();
        int int46 = seconds4.get(durationFieldType45);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT2147483644S" + "'", str36, "PT2147483644S");
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds4.dividedBy((int) '4');
        org.joda.time.MutablePeriod mutablePeriod7 = seconds4.toMutablePeriod();
        org.joda.time.Seconds seconds9 = seconds4.minus(101);
        org.joda.time.MutablePeriod mutablePeriod10 = seconds4.toMutablePeriod();
        java.lang.Class<?> wildcardClass11 = mutablePeriod10.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds8 = seconds6.dividedBy((int) '4');
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        org.joda.time.MutablePeriod mutablePeriod10 = seconds9.toMutablePeriod();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.Seconds seconds18 = seconds17.negated();
        org.joda.time.MutablePeriod mutablePeriod19 = seconds17.toMutablePeriod();
        org.joda.time.Duration duration20 = seconds17.toStandardDuration();
        boolean boolean21 = seconds11.equals((java.lang.Object) seconds17);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.Period period23 = seconds17.toPeriod();
        boolean boolean24 = seconds9.isLessThan(seconds17);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds16 = seconds14.dividedBy((int) '4');
        int int17 = seconds14.size();
        int int18 = seconds9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds14);
        org.joda.time.Seconds seconds20 = seconds14.plus(0);
        boolean boolean21 = seconds1.isLessThan(seconds14);
        org.joda.time.DurationFieldType durationFieldType22 = seconds1.getFieldType();
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(seconds23);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        // The following exception was thrown during execution in test generation
        try {
            int int4 = seconds0.getValue(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        int int5 = seconds1.getSeconds();
        org.joda.time.Seconds seconds7 = seconds1.plus(2147483644);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds16 = seconds14.dividedBy((int) '4');
        org.joda.time.Seconds seconds17 = seconds9.minus(seconds16);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy((-1));
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType27 = seconds26.getPeriodType();
        org.joda.time.Duration duration28 = seconds26.toStandardDuration();
        org.joda.time.Seconds seconds30 = seconds26.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds31 = seconds30.negated();
        boolean boolean32 = seconds24.isLessThan(seconds31);
        org.joda.time.Seconds seconds33 = seconds22.plus(seconds24);
        org.joda.time.Seconds seconds34 = seconds9.plus(seconds33);
        org.joda.time.DurationFieldType durationFieldType35 = seconds33.getFieldType();
        boolean boolean36 = seconds7.isLessThan(seconds33);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Duration duration14 = seconds9.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType15 = seconds9.getFieldType();
        java.lang.String str16 = seconds9.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.DurationFieldType durationFieldType26 = seconds4.getFieldType();
        int int27 = seconds4.size();
        org.joda.time.MutablePeriod mutablePeriod28 = seconds4.toMutablePeriod();
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType31 = seconds30.getPeriodType();
        org.joda.time.Duration duration32 = seconds30.toStandardDuration();
        org.joda.time.Seconds seconds34 = seconds30.multipliedBy(0);
        org.joda.time.Seconds seconds35 = seconds30.negated();
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = seconds36.get(durationFieldType37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds40 = seconds36.minus(seconds39);
        boolean boolean41 = seconds35.isGreaterThan(seconds40);
        org.joda.time.Seconds seconds43 = seconds35.multipliedBy(1);
        int int44 = seconds35.getSeconds();
        org.joda.time.Seconds seconds45 = seconds4.plus(seconds35);
        org.joda.time.Seconds seconds47 = seconds4.dividedBy((int) (short) -1);
        int int48 = seconds47.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.standardSecondsIn(readablePeriod0);
        org.joda.time.Minutes minutes2 = seconds1.toStandardMinutes();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(minutes2);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds17.multipliedBy((int) (short) 0);
        int int21 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds20);
        int int22 = seconds13.size();
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int25 = seconds24.getSeconds();
        org.joda.time.DurationFieldType durationFieldType26 = seconds24.getFieldType();
        org.joda.time.Seconds seconds28 = seconds24.dividedBy((int) ' ');
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.Seconds seconds31 = seconds30.negated();
        org.joda.time.Seconds seconds32 = seconds28.plus(seconds31);
        boolean boolean33 = seconds13.isLessThan(seconds32);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Seconds seconds6 = seconds1.minus(3);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType9 = seconds8.getPeriodType();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds12 = seconds8.multipliedBy(0);
        org.joda.time.Seconds seconds13 = seconds8.negated();
        org.joda.time.Period period14 = seconds13.toPeriod();
        boolean boolean15 = seconds6.equals((java.lang.Object) period14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.Duration duration19 = seconds17.toStandardDuration();
        org.joda.time.Seconds seconds21 = seconds17.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds23 = seconds17.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds25 = seconds17.minus(seconds24);
        boolean boolean26 = seconds6.isLessThan(seconds24);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) '4');
        int int40 = seconds37.size();
        int int41 = seconds32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds37);
        boolean boolean42 = seconds27.isLessThan(seconds37);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = seconds43.get(durationFieldType44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds47 = seconds43.minus(seconds46);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.secondsIn(readableInterval48);
        org.joda.time.Seconds seconds50 = seconds49.negated();
        org.joda.time.MutablePeriod mutablePeriod51 = seconds49.toMutablePeriod();
        org.joda.time.Duration duration52 = seconds49.toStandardDuration();
        boolean boolean53 = seconds43.equals((java.lang.Object) seconds49);
        org.joda.time.MutablePeriod mutablePeriod54 = seconds43.toMutablePeriod();
        org.joda.time.Seconds seconds55 = seconds27.plus(seconds43);
        boolean boolean56 = seconds24.isGreaterThan(seconds43);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType59 = seconds58.getPeriodType();
        org.joda.time.Duration duration60 = seconds58.toStandardDuration();
        org.joda.time.Seconds seconds62 = seconds58.multipliedBy(0);
        org.joda.time.Seconds seconds63 = seconds58.negated();
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = seconds64.get(durationFieldType65);
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds68 = seconds64.minus(seconds67);
        boolean boolean69 = seconds63.isGreaterThan(seconds68);
        boolean boolean70 = seconds24.equals((java.lang.Object) boolean69);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.DurationFieldType durationFieldType54 = seconds9.getFieldType();
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.secondsIn(readableInterval55);
        org.joda.time.DurationFieldType durationFieldType57 = seconds56.getFieldType();
        org.joda.time.Seconds seconds59 = seconds56.dividedBy((-1));
        org.joda.time.ReadableInterval readableInterval60 = null;
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.secondsIn(readableInterval60);
        int int62 = seconds61.size();
        org.joda.time.Seconds seconds64 = seconds61.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval65 = null;
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.secondsIn(readableInterval65);
        org.joda.time.DurationFieldType durationFieldType67 = seconds66.getFieldType();
        boolean boolean68 = seconds64.isSupported(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds73 = seconds69.minus(seconds72);
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType75 = null;
        int int76 = seconds74.get(durationFieldType75);
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds78 = seconds74.minus(seconds77);
        org.joda.time.Seconds seconds80 = seconds78.dividedBy((int) '4');
        int int81 = seconds78.size();
        int int82 = seconds73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds78);
        org.joda.time.Seconds seconds84 = seconds78.plus(0);
        org.joda.time.Seconds seconds85 = seconds64.minus(seconds78);
        org.joda.time.DurationFieldType durationFieldType86 = seconds64.getFieldType();
        boolean boolean87 = seconds56.isSupported(durationFieldType86);
        boolean boolean88 = seconds9.isGreaterThan(seconds56);
        org.joda.time.Seconds seconds90 = seconds56.multipliedBy(2);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(seconds90);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Duration duration11 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds9.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds15 = seconds9.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds17 = seconds9.minus(seconds16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        boolean boolean19 = seconds1.isSupported(durationFieldType18);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        org.joda.time.Period period23 = seconds21.toPeriod();
        org.joda.time.Duration duration24 = seconds21.toStandardDuration();
        boolean boolean25 = seconds1.equals((java.lang.Object) seconds21);
        int int26 = seconds21.size();
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.Seconds seconds29 = seconds28.negated();
        org.joda.time.Seconds seconds31 = seconds28.minus((int) '#');
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType34 = seconds33.getPeriodType();
        org.joda.time.Duration duration35 = seconds33.toStandardDuration();
        org.joda.time.Seconds seconds36 = seconds28.plus(seconds33);
        boolean boolean37 = seconds21.equals((java.lang.Object) seconds33);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.secondsIn(readableInterval38);
        org.joda.time.DurationFieldType durationFieldType40 = seconds39.getFieldType();
        org.joda.time.Seconds seconds42 = seconds39.dividedBy((-1));
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds42);
        org.joda.time.Seconds seconds44 = seconds42.negated();
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.secondsIn(readableInterval45);
        org.joda.time.DurationFieldType durationFieldType47 = seconds46.getFieldType();
        org.joda.time.Seconds seconds49 = seconds46.dividedBy((-1));
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds46);
        org.joda.time.DurationFieldType durationFieldType51 = null;
        boolean boolean52 = seconds50.isSupported(durationFieldType51);
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.secondsIn(readableInterval53);
        int int55 = seconds54.size();
        org.joda.time.Seconds seconds57 = seconds54.dividedBy(100);
        org.joda.time.PeriodType periodType58 = seconds57.getPeriodType();
        org.joda.time.Seconds seconds60 = seconds57.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds62 = seconds60.minus((-1));
        org.joda.time.DurationFieldType durationFieldType64 = seconds60.getFieldType((int) (byte) 0);
        boolean boolean65 = seconds50.isSupported(durationFieldType64);
        org.joda.time.ReadableInterval readableInterval66 = null;
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.secondsIn(readableInterval66);
        org.joda.time.Seconds seconds68 = seconds67.negated();
        org.joda.time.MutablePeriod mutablePeriod69 = seconds67.toMutablePeriod();
        org.joda.time.Duration duration70 = seconds67.toStandardDuration();
        int int71 = seconds67.getSeconds();
        java.lang.String str72 = seconds67.toString();
        org.joda.time.Seconds seconds74 = seconds67.minus((int) (short) 10);
        org.joda.time.Seconds seconds75 = seconds50.minus(seconds67);
        boolean boolean76 = seconds42.isGreaterThan(seconds67);
        java.lang.String str77 = seconds42.toString();
        org.joda.time.Seconds seconds79 = seconds42.multipliedBy(1);
        int int80 = seconds33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds79);
        java.lang.Class<?> wildcardClass81 = seconds79.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "PT0S" + "'", str72, "PT0S");
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "PT0S" + "'", str77, "PT0S");
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        boolean boolean9 = seconds1.isLessThan(seconds8);
        org.joda.time.Seconds seconds11 = seconds1.plus((int) (byte) 0);
        java.lang.Class<?> wildcardClass12 = seconds11.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Seconds seconds7 = seconds5.negated();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        org.joda.time.Seconds seconds23 = seconds17.plus(0);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.secondsIn(readableInterval24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        org.joda.time.Seconds seconds28 = seconds25.dividedBy((-1));
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds25);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        boolean boolean31 = seconds29.isSupported(durationFieldType30);
        org.joda.time.Seconds seconds33 = seconds29.plus((int) (byte) 1);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = seconds34.get(durationFieldType35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds38 = seconds34.minus(seconds37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = seconds39.get(durationFieldType40);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds43 = seconds39.minus(seconds42);
        org.joda.time.Seconds seconds45 = seconds43.dividedBy((int) '4');
        int int46 = seconds43.size();
        int int47 = seconds38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds43);
        org.joda.time.Seconds seconds49 = seconds43.plus(0);
        java.lang.String str50 = seconds49.toString();
        org.joda.time.Period period51 = seconds49.toPeriod();
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.secondsIn(readableInterval52);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = seconds53.get(durationFieldType55);
        boolean boolean57 = seconds49.isLessThan(seconds53);
        org.joda.time.Seconds seconds58 = seconds33.minus(seconds49);
        org.joda.time.Seconds seconds60 = seconds58.dividedBy((int) 'a');
        org.joda.time.Seconds seconds61 = seconds17.plus(seconds58);
        org.joda.time.Seconds seconds62 = seconds7.plus(seconds61);
        org.joda.time.ReadableInterval readableInterval63 = null;
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.secondsIn(readableInterval63);
        org.joda.time.DurationFieldType durationFieldType65 = seconds64.getFieldType();
        org.joda.time.Seconds seconds67 = seconds64.dividedBy((-1));
        org.joda.time.Seconds seconds68 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds67);
        org.joda.time.DurationFieldType durationFieldType69 = seconds68.getFieldType();
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int72 = seconds71.getSeconds();
        org.joda.time.Duration duration73 = seconds71.toStandardDuration();
        org.joda.time.Seconds seconds74 = seconds68.minus(seconds71);
        org.joda.time.ReadableInterval readableInterval75 = null;
        org.joda.time.Seconds seconds76 = org.joda.time.Seconds.secondsIn(readableInterval75);
        org.joda.time.Seconds seconds77 = seconds76.negated();
        org.joda.time.Seconds seconds79 = seconds76.minus((int) '#');
        org.joda.time.Seconds seconds81 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType82 = seconds81.getPeriodType();
        org.joda.time.Duration duration83 = seconds81.toStandardDuration();
        org.joda.time.Seconds seconds85 = seconds81.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds86 = seconds85.negated();
        org.joda.time.Duration duration87 = seconds85.toStandardDuration();
        org.joda.time.Seconds seconds88 = seconds85.negated();
        org.joda.time.DurationFieldType durationFieldType89 = seconds85.getFieldType();
        boolean boolean90 = seconds76.isSupported(durationFieldType89);
        boolean boolean91 = seconds74.isSupported(durationFieldType89);
        org.joda.time.DurationFieldType durationFieldType92 = seconds74.getFieldType();
        int int93 = seconds7.get(durationFieldType92);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds95 = seconds7.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT2147483644S" + "'", str50, "PT2147483644S");
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(durationFieldType92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        boolean boolean17 = seconds9.isLessThan(seconds14);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds29 = seconds27.dividedBy((int) '4');
        int int30 = seconds27.size();
        int int31 = seconds22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds27);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        boolean boolean35 = seconds27.isLessThan(seconds32);
        boolean boolean36 = seconds14.isLessThan(seconds27);
        org.joda.time.DurationFieldType durationFieldType37 = seconds27.getFieldType();
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds27);
        org.joda.time.Seconds seconds40 = seconds27.dividedBy(2147483647);
        org.joda.time.Seconds seconds42 = seconds40.multipliedBy((int) '4');
        org.joda.time.Seconds seconds44 = seconds42.plus((int) (short) -1);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.PeriodType periodType5 = seconds4.getPeriodType();
        org.joda.time.Seconds seconds7 = seconds4.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds9 = seconds7.minus((-1));
        org.joda.time.DurationFieldType durationFieldType10 = seconds9.getFieldType();
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType13 = seconds12.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod14 = seconds12.toMutablePeriod();
        boolean boolean15 = seconds9.equals((java.lang.Object) mutablePeriod14);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds16 = seconds14.dividedBy((int) '4');
        int int17 = seconds14.size();
        int int18 = seconds9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds14);
        org.joda.time.Seconds seconds20 = seconds14.plus(0);
        boolean boolean21 = seconds1.isLessThan(seconds14);
        int int22 = seconds1.getSeconds();
        org.joda.time.Seconds seconds24 = seconds1.multipliedBy(0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds3 = seconds0.plus(1);
        int int4 = seconds3.getSeconds();
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (byte) 0);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        boolean boolean14 = seconds12.isSupported(durationFieldType13);
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.secondsIn(readableInterval15);
        int int17 = seconds16.size();
        org.joda.time.Seconds seconds19 = seconds16.dividedBy(100);
        org.joda.time.PeriodType periodType20 = seconds19.getPeriodType();
        org.joda.time.Seconds seconds22 = seconds19.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds24 = seconds22.minus((-1));
        org.joda.time.DurationFieldType durationFieldType26 = seconds22.getFieldType((int) (byte) 0);
        boolean boolean27 = seconds12.isSupported(durationFieldType26);
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.secondsIn(readableInterval28);
        org.joda.time.Seconds seconds30 = seconds29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = seconds29.toMutablePeriod();
        org.joda.time.Duration duration32 = seconds29.toStandardDuration();
        int int33 = seconds29.getSeconds();
        java.lang.String str34 = seconds29.toString();
        org.joda.time.Seconds seconds36 = seconds29.minus((int) (short) 10);
        org.joda.time.Seconds seconds37 = seconds12.minus(seconds29);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType40 = seconds39.getPeriodType();
        org.joda.time.Duration duration41 = seconds39.toStandardDuration();
        org.joda.time.Seconds seconds43 = seconds39.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds45 = seconds39.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds47 = seconds39.minus(seconds46);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.secondsIn(readableInterval48);
        org.joda.time.Seconds seconds50 = seconds49.negated();
        org.joda.time.MutablePeriod mutablePeriod51 = seconds50.toMutablePeriod();
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType53 = null;
        int int54 = seconds52.get(durationFieldType53);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds56 = seconds52.minus(seconds55);
        org.joda.time.DurationFieldType durationFieldType57 = seconds52.getFieldType();
        int int58 = seconds50.get(durationFieldType57);
        boolean boolean59 = seconds47.isSupported(durationFieldType57);
        boolean boolean60 = seconds12.isSupported(durationFieldType57);
        boolean boolean61 = seconds3.isSupported(durationFieldType57);
        org.joda.time.PeriodType periodType62 = seconds3.getPeriodType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT0S" + "'", str34, "PT0S");
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(periodType62);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        int int5 = seconds1.getSeconds();
        org.joda.time.Seconds seconds6 = null;
        boolean boolean7 = seconds1.isLessThan(seconds6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        org.joda.time.DurationFieldType durationFieldType10 = seconds9.getFieldType();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy((-1));
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.secondsIn(readableInterval13);
        int int15 = seconds14.size();
        org.joda.time.Seconds seconds17 = seconds14.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        boolean boolean21 = seconds17.isSupported(durationFieldType20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = seconds22.get(durationFieldType23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds26 = seconds22.minus(seconds25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = seconds27.get(durationFieldType28);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds31 = seconds27.minus(seconds30);
        org.joda.time.Seconds seconds33 = seconds31.dividedBy((int) '4');
        int int34 = seconds31.size();
        int int35 = seconds26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds31);
        org.joda.time.Seconds seconds37 = seconds31.plus(0);
        org.joda.time.Seconds seconds38 = seconds17.minus(seconds31);
        org.joda.time.DurationFieldType durationFieldType39 = seconds17.getFieldType();
        boolean boolean40 = seconds9.isSupported(durationFieldType39);
        boolean boolean41 = seconds1.isLessThan(seconds9);
        org.joda.time.Period period42 = seconds9.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(period42);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT-2147483648S");
        org.joda.time.Seconds seconds3 = seconds1.plus((int) (short) 100);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds8 = seconds6.minus((int) (byte) 0);
        boolean boolean9 = seconds5.isLessThan(seconds8);
        org.joda.time.Period period10 = seconds5.toPeriod();
        int int11 = seconds3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds5);
        org.joda.time.Seconds seconds13 = seconds3.plus(0);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(seconds13);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds4.dividedBy((int) '4');
        org.joda.time.MutablePeriod mutablePeriod7 = seconds4.toMutablePeriod();
        org.joda.time.Seconds seconds9 = seconds4.minus(101);
        org.joda.time.MutablePeriod mutablePeriod10 = seconds4.toMutablePeriod();
        org.joda.time.Seconds seconds12 = seconds4.plus((-2147483647));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType14 = seconds12.getFieldType((-2147483644));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483644");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(seconds12);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        int int10 = seconds9.size();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy(100);
        org.joda.time.PeriodType periodType13 = seconds12.getPeriodType();
        org.joda.time.Seconds seconds15 = seconds12.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds17 = seconds15.minus((-1));
        org.joda.time.DurationFieldType durationFieldType19 = seconds15.getFieldType((int) (byte) 0);
        boolean boolean20 = seconds5.isSupported(durationFieldType19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        int int26 = seconds22.getSeconds();
        java.lang.String str27 = seconds22.toString();
        org.joda.time.Seconds seconds29 = seconds22.minus((int) (short) 10);
        org.joda.time.Seconds seconds30 = seconds5.minus(seconds22);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Seconds seconds33 = seconds30.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds35 = seconds30.minus((int) 'a');
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT0S" + "'", str27, "PT0S");
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.MutablePeriod mutablePeriod8 = seconds6.toMutablePeriod();
        org.joda.time.Duration duration9 = seconds6.toStandardDuration();
        boolean boolean10 = seconds0.equals((java.lang.Object) seconds6);
        org.joda.time.Seconds seconds12 = seconds6.plus((int) (byte) 10);
        java.lang.Class<?> wildcardClass13 = seconds12.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType20 = seconds19.getPeriodType();
        org.joda.time.Duration duration21 = seconds19.toStandardDuration();
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        boolean boolean23 = seconds17.equals((java.lang.Object) seconds19);
        org.joda.time.MutablePeriod mutablePeriod24 = seconds17.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(mutablePeriod24);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.secondsIn(readableInterval17);
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        org.joda.time.Seconds seconds21 = seconds18.dividedBy((-1));
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds18);
        int int23 = seconds18.size();
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.secondsIn(readableInterval24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        org.joda.time.Seconds seconds28 = seconds25.dividedBy((-1));
        int int29 = seconds25.getSeconds();
        org.joda.time.Seconds seconds30 = seconds18.minus(seconds25);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds34.multipliedBy((int) (short) 0);
        int int38 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds37);
        org.joda.time.DurationFieldType durationFieldType39 = seconds37.getFieldType();
        org.joda.time.Seconds seconds40 = seconds15.plus(seconds37);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.secondsIn(readableInterval41);
        org.joda.time.Seconds seconds43 = seconds42.negated();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        int int46 = seconds45.size();
        boolean boolean47 = seconds43.isLessThan(seconds45);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.secondsIn(readableInterval48);
        int int50 = seconds49.size();
        org.joda.time.Seconds seconds52 = seconds49.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.secondsIn(readableInterval53);
        org.joda.time.DurationFieldType durationFieldType55 = seconds54.getFieldType();
        boolean boolean56 = seconds52.isSupported(durationFieldType55);
        boolean boolean57 = seconds45.isSupported(durationFieldType55);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds45);
        org.joda.time.PeriodType periodType59 = seconds58.getPeriodType();
        org.joda.time.PeriodType periodType60 = seconds58.getPeriodType();
        org.joda.time.Seconds seconds62 = seconds58.dividedBy(100);
        org.joda.time.Seconds seconds63 = seconds58.negated();
        org.joda.time.Seconds seconds64 = seconds40.plus(seconds63);
        org.joda.time.ReadableInterval readableInterval65 = null;
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.secondsIn(readableInterval65);
        org.joda.time.Seconds seconds67 = seconds66.negated();
        org.joda.time.MutablePeriod mutablePeriod68 = seconds67.toMutablePeriod();
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds73 = seconds69.minus(seconds72);
        org.joda.time.DurationFieldType durationFieldType74 = seconds69.getFieldType();
        int int75 = seconds67.get(durationFieldType74);
        int int76 = seconds63.get(durationFieldType74);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(mutablePeriod68);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        java.lang.String str1 = seconds0.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "PT2147483647S" + "'", str1, "PT2147483647S");
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.Seconds seconds17 = seconds15.dividedBy((int) '4');
        int int18 = seconds15.size();
        int int19 = seconds10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds15);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        int int22 = seconds21.size();
        org.joda.time.Seconds seconds24 = seconds21.dividedBy(100);
        org.joda.time.PeriodType periodType25 = seconds24.getPeriodType();
        org.joda.time.Seconds seconds27 = seconds24.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds29 = seconds27.minus((-1));
        int int30 = seconds27.size();
        int int31 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds27);
        org.joda.time.Seconds seconds33 = seconds15.dividedBy((int) (short) 100);
        boolean boolean34 = seconds1.equals((java.lang.Object) seconds15);
        java.lang.String str35 = seconds15.toString();
        java.lang.Class<?> wildcardClass36 = seconds15.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "PT2147483644S" + "'", str35, "PT2147483644S");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds8 = seconds6.plus((int) (byte) 10);
        org.joda.time.Seconds seconds9 = seconds6.negated();
        org.joda.time.DurationFieldType durationFieldType11 = seconds9.getFieldType((int) (byte) 0);
        java.lang.String str12 = seconds9.toString();
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = seconds22.dividedBy((int) '4');
        int int25 = seconds22.size();
        int int26 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds22);
        org.joda.time.Seconds seconds28 = seconds22.plus(0);
        java.lang.String str29 = seconds28.toString();
        org.joda.time.Period period30 = seconds28.toPeriod();
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn(readableInterval31);
        org.joda.time.Seconds seconds33 = seconds32.negated();
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds32.get(durationFieldType34);
        boolean boolean36 = seconds28.isLessThan(seconds32);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds32);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds32);
        org.joda.time.Seconds seconds40 = seconds32.multipliedBy(100);
        boolean boolean41 = seconds9.isGreaterThan(seconds32);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds9);
        org.joda.time.PeriodType periodType43 = seconds42.getPeriodType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT0S" + "'", str12, "PT0S");
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2147483644S" + "'", str29, "PT2147483644S");
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(periodType43);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        boolean boolean17 = seconds9.isLessThan(seconds14);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds29 = seconds27.dividedBy((int) '4');
        int int30 = seconds27.size();
        int int31 = seconds22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds27);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        boolean boolean35 = seconds27.isLessThan(seconds32);
        boolean boolean36 = seconds14.isLessThan(seconds27);
        int int37 = seconds27.size();
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds27);
        org.joda.time.Seconds seconds40 = seconds38.minus((int) (byte) 10);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds40);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.Seconds seconds17 = seconds0.multipliedBy(1);
        java.lang.Class<?> wildcardClass18 = seconds17.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds6 = seconds1.multipliedBy((int) (short) 1);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        int int13 = seconds8.size();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        org.joda.time.Seconds seconds18 = seconds15.dividedBy((-1));
        int int19 = seconds15.getSeconds();
        org.joda.time.Seconds seconds20 = seconds8.minus(seconds15);
        boolean boolean21 = seconds6.isGreaterThan(seconds8);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.secondsIn(readableInterval22);
        org.joda.time.Period period24 = seconds23.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod25 = seconds23.toMutablePeriod();
        org.joda.time.Period period26 = seconds23.toPeriod();
        org.joda.time.Seconds seconds27 = seconds8.minus(seconds23);
        int int28 = seconds23.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType5 = seconds4.getPeriodType();
        org.joda.time.Duration duration6 = seconds4.toStandardDuration();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.Seconds seconds9 = seconds4.multipliedBy(3);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = seconds9.getValue((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds9);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds7 = seconds1.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        org.joda.time.DurationFieldType durationFieldType10 = seconds1.getFieldType();
        int int11 = seconds1.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        int int5 = seconds1.getSeconds();
        org.joda.time.Seconds seconds6 = null;
        boolean boolean7 = seconds1.isLessThan(seconds6);
        int int8 = seconds1.getSeconds();
        org.joda.time.Period period9 = seconds1.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod10 = seconds1.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        boolean boolean26 = seconds16.equals((java.lang.Object) seconds22);
        org.joda.time.MutablePeriod mutablePeriod27 = seconds16.toMutablePeriod();
        org.joda.time.Seconds seconds28 = seconds0.plus(seconds16);
        int int29 = seconds16.getSeconds();
        // The following exception was thrown during execution in test generation
        try {
            int int31 = seconds16.getValue(32);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2147483647 + "'", int29 == 2147483647);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) '#');
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy((-1));
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = seconds23.isSupported(durationFieldType24);
        org.joda.time.Seconds seconds27 = seconds23.plus((int) (byte) 1);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) '4');
        int int40 = seconds37.size();
        int int41 = seconds32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds37);
        org.joda.time.Seconds seconds43 = seconds37.plus(0);
        java.lang.String str44 = seconds43.toString();
        org.joda.time.Period period45 = seconds43.toPeriod();
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        org.joda.time.Seconds seconds48 = seconds47.negated();
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds47.get(durationFieldType49);
        boolean boolean51 = seconds43.isLessThan(seconds47);
        org.joda.time.Seconds seconds52 = seconds27.minus(seconds43);
        org.joda.time.Seconds seconds54 = seconds52.dividedBy((int) 'a');
        org.joda.time.Seconds seconds55 = seconds11.plus(seconds52);
        org.joda.time.Seconds seconds56 = seconds55.negated();
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = seconds57.get(durationFieldType58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds61 = seconds57.minus(seconds60);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = seconds62.get(durationFieldType63);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds66 = seconds62.minus(seconds65);
        org.joda.time.Seconds seconds68 = seconds66.dividedBy((int) '4');
        int int69 = seconds66.size();
        int int70 = seconds61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds66);
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = seconds71.get(durationFieldType72);
        boolean boolean74 = seconds66.isLessThan(seconds71);
        boolean boolean75 = seconds56.isLessThan(seconds66);
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType78 = seconds77.getPeriodType();
        org.joda.time.Duration duration79 = seconds77.toStandardDuration();
        org.joda.time.Seconds seconds81 = seconds77.dividedBy((int) (byte) 10);
        int int82 = seconds56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds81);
        boolean boolean83 = seconds1.isGreaterThan(seconds56);
        org.joda.time.Duration duration84 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds86 = seconds1.plus((-1));
        org.joda.time.Seconds seconds88 = seconds86.plus((-100));
        org.joda.time.Period period89 = seconds88.toPeriod();
        int int90 = seconds88.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2147483644S" + "'", str44, "PT2147483644S");
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Duration duration2 = seconds1.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        int int8 = seconds7.size();
        boolean boolean9 = seconds5.isLessThan(seconds7);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        int int12 = seconds11.size();
        org.joda.time.Seconds seconds14 = seconds11.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.secondsIn(readableInterval15);
        org.joda.time.DurationFieldType durationFieldType17 = seconds16.getFieldType();
        boolean boolean18 = seconds14.isSupported(durationFieldType17);
        boolean boolean19 = seconds7.isSupported(durationFieldType17);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds7);
        boolean boolean21 = seconds1.isLessThan(seconds7);
        int int22 = seconds1.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.MutablePeriod mutablePeriod8 = seconds6.toMutablePeriod();
        org.joda.time.Duration duration9 = seconds6.toStandardDuration();
        boolean boolean10 = seconds0.equals((java.lang.Object) seconds6);
        org.joda.time.Seconds seconds12 = seconds6.plus((int) (byte) 10);
        java.lang.String str13 = seconds12.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds15 = seconds12.plus(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 10 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT10S" + "'", str13, "PT10S");
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds5 = seconds1.minus((int) (byte) -1);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType9 = seconds8.getPeriodType();
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.Seconds seconds12 = seconds11.negated();
        org.joda.time.MutablePeriod mutablePeriod13 = seconds11.toMutablePeriod();
        int int14 = seconds8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType17 = seconds16.getPeriodType();
        org.joda.time.Duration duration18 = seconds16.toStandardDuration();
        org.joda.time.Seconds seconds20 = seconds16.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds22 = seconds16.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds24 = seconds16.minus(seconds23);
        org.joda.time.DurationFieldType durationFieldType25 = seconds24.getFieldType();
        boolean boolean26 = seconds8.isSupported(durationFieldType25);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Period period30 = seconds28.toPeriod();
        org.joda.time.Duration duration31 = seconds28.toStandardDuration();
        boolean boolean32 = seconds8.equals((java.lang.Object) seconds28);
        org.joda.time.Duration duration33 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds34 = seconds28.negated();
        int int35 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds34);
        org.joda.time.Seconds seconds37 = seconds34.plus((int) '4');
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType39 = seconds38.getPeriodType();
        org.joda.time.Seconds seconds41 = seconds38.plus(1);
        int int42 = seconds41.getSeconds();
        org.joda.time.Seconds seconds44 = seconds41.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds46 = seconds41.minus((int) (short) 100);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.secondsIn(readableInterval47);
        org.joda.time.DurationFieldType durationFieldType49 = seconds48.getFieldType();
        org.joda.time.Seconds seconds51 = seconds48.dividedBy((-1));
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds48);
        java.lang.String str53 = seconds48.toString();
        org.joda.time.Seconds seconds55 = seconds48.multipliedBy((int) (byte) 10);
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType58 = seconds57.getPeriodType();
        org.joda.time.Duration duration59 = seconds57.toStandardDuration();
        org.joda.time.Seconds seconds61 = seconds57.multipliedBy(0);
        java.lang.String str62 = seconds61.toString();
        org.joda.time.DurationFieldType durationFieldType63 = seconds61.getFieldType();
        org.joda.time.Seconds seconds65 = seconds61.minus(3);
        org.joda.time.Seconds seconds66 = seconds65.negated();
        boolean boolean67 = seconds55.equals((java.lang.Object) seconds65);
        int int68 = seconds41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds55);
        org.joda.time.Seconds seconds69 = seconds37.plus(seconds41);
        org.joda.time.Seconds seconds71 = seconds37.multipliedBy((int) (byte) 100);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "PT0S" + "'", str53, "PT0S");
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PT0S" + "'", str62, "PT0S");
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds71);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        java.lang.String str6 = seconds5.toString();
        org.joda.time.DurationFieldType durationFieldType7 = seconds5.getFieldType();
        org.joda.time.Seconds seconds9 = seconds5.minus(3);
        org.joda.time.Duration duration10 = seconds9.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(duration10);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds3 = seconds0.plus(1);
        java.lang.String str4 = seconds3.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT3S" + "'", str4, "PT3S");
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT-1S");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.Seconds seconds3 = seconds1.plus(seconds2);
        org.joda.time.Seconds seconds5 = seconds2.minus((int) (byte) 100);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds5);
        org.joda.time.Period period7 = seconds6.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Period period2 = seconds1.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Period period4 = seconds1.toPeriod();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType6 = seconds5.getPeriodType();
        boolean boolean7 = seconds1.isLessThan(seconds5);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds11 = seconds9.minus((int) (byte) 0);
        boolean boolean12 = seconds8.isLessThan(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds16 = seconds14.minus((int) (byte) 0);
        boolean boolean17 = seconds13.isLessThan(seconds16);
        org.joda.time.Period period18 = seconds13.toPeriod();
        int int19 = seconds11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds13);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        boolean boolean23 = seconds11.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds24 = seconds1.plus(seconds11);
        org.joda.time.Seconds seconds26 = seconds24.dividedBy((int) (byte) 100);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.DurationFieldType durationFieldType29 = seconds28.getFieldType();
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType32 = seconds31.getPeriodType();
        org.joda.time.Duration duration33 = seconds31.toStandardDuration();
        org.joda.time.Seconds seconds35 = seconds31.multipliedBy(0);
        org.joda.time.Seconds seconds36 = seconds31.negated();
        org.joda.time.Period period37 = seconds36.toPeriod();
        org.joda.time.Seconds seconds39 = seconds36.dividedBy(100);
        org.joda.time.Seconds seconds41 = seconds36.minus(0);
        int int42 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds36);
        org.joda.time.Seconds seconds44 = seconds36.minus(10);
        org.joda.time.MutablePeriod mutablePeriod45 = seconds44.toMutablePeriod();
        int int46 = seconds24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds44);
        org.joda.time.MutablePeriod mutablePeriod47 = seconds24.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod47);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.PeriodType periodType3 = seconds1.getPeriodType();
        org.joda.time.Seconds seconds4 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.dividedBy((-1));
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        boolean boolean12 = seconds10.isSupported(durationFieldType11);
        org.joda.time.Seconds seconds14 = seconds10.plus((int) (byte) 1);
        org.joda.time.Seconds seconds15 = seconds14.negated();
        int int16 = seconds15.size();
        boolean boolean17 = seconds4.isLessThan(seconds15);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.Seconds seconds17 = seconds0.multipliedBy(1);
        java.lang.Class<?> wildcardClass18 = seconds0.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        int int7 = seconds6.size();
        org.joda.time.Seconds seconds9 = seconds6.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        boolean boolean13 = seconds9.isSupported(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = seconds19.get(durationFieldType20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds23 = seconds19.minus(seconds22);
        org.joda.time.Seconds seconds25 = seconds23.dividedBy((int) '4');
        int int26 = seconds23.size();
        int int27 = seconds18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds23);
        org.joda.time.Seconds seconds29 = seconds23.plus(0);
        org.joda.time.Seconds seconds30 = seconds9.minus(seconds23);
        org.joda.time.DurationFieldType durationFieldType31 = seconds9.getFieldType();
        boolean boolean32 = seconds1.isSupported(durationFieldType31);
        java.lang.Class<?> wildcardClass33 = seconds1.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.MutablePeriod mutablePeriod16 = seconds9.toMutablePeriod();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds17.get(durationFieldType18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = seconds17.minus(seconds20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = seconds22.get(durationFieldType23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds26 = seconds22.minus(seconds25);
        org.joda.time.Seconds seconds28 = seconds26.dividedBy((int) '4');
        int int29 = seconds26.size();
        int int30 = seconds21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds26);
        org.joda.time.DurationFieldType durationFieldType31 = seconds21.getFieldType();
        int int32 = seconds9.get(durationFieldType31);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.secondsIn(readableInterval33);
        org.joda.time.DurationFieldType durationFieldType35 = seconds34.getFieldType();
        org.joda.time.Seconds seconds37 = seconds34.dividedBy((-1));
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds34);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        boolean boolean40 = seconds38.isSupported(durationFieldType39);
        org.joda.time.Seconds seconds42 = seconds38.plus((int) (byte) 1);
        org.joda.time.Seconds seconds44 = seconds38.multipliedBy((int) (short) 100);
        boolean boolean45 = seconds9.isGreaterThan(seconds38);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds9);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType51 = seconds50.getPeriodType();
        org.joda.time.Duration duration52 = seconds50.toStandardDuration();
        org.joda.time.Seconds seconds54 = seconds50.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds55 = seconds54.negated();
        boolean boolean56 = seconds48.isGreaterThan(seconds54);
        org.joda.time.Seconds seconds58 = seconds54.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds60 = seconds58.plus(100);
        org.joda.time.DurationFieldType durationFieldType61 = seconds58.getFieldType();
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType64 = seconds63.getPeriodType();
        org.joda.time.ReadableInterval readableInterval65 = null;
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.secondsIn(readableInterval65);
        org.joda.time.Seconds seconds67 = seconds66.negated();
        org.joda.time.MutablePeriod mutablePeriod68 = seconds66.toMutablePeriod();
        int int69 = seconds63.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds66);
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType71 = null;
        int int72 = seconds70.get(durationFieldType71);
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds74 = seconds70.minus(seconds73);
        org.joda.time.DurationFieldType durationFieldType75 = seconds70.getFieldType();
        boolean boolean76 = seconds63.isSupported(durationFieldType75);
        int int77 = seconds58.get(durationFieldType75);
        int int78 = seconds9.get(durationFieldType75);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483644 + "'", int32 == 2147483644);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(mutablePeriod68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2147483644 + "'", int78 == 2147483644);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.MutablePeriod mutablePeriod16 = seconds9.toMutablePeriod();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds17.get(durationFieldType18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = seconds17.minus(seconds20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = seconds22.get(durationFieldType23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds26 = seconds22.minus(seconds25);
        org.joda.time.Seconds seconds28 = seconds26.dividedBy((int) '4');
        int int29 = seconds26.size();
        int int30 = seconds21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds26);
        org.joda.time.DurationFieldType durationFieldType31 = seconds21.getFieldType();
        int int32 = seconds9.get(durationFieldType31);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.secondsIn(readableInterval33);
        org.joda.time.DurationFieldType durationFieldType35 = seconds34.getFieldType();
        org.joda.time.Seconds seconds37 = seconds34.dividedBy((-1));
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds34);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        boolean boolean40 = seconds38.isSupported(durationFieldType39);
        org.joda.time.Seconds seconds42 = seconds38.plus((int) (byte) 1);
        org.joda.time.Seconds seconds44 = seconds38.multipliedBy((int) (short) 100);
        boolean boolean45 = seconds9.isGreaterThan(seconds38);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds9);
        org.joda.time.PeriodType periodType47 = seconds9.getPeriodType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483644 + "'", int32 == 2147483644);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(periodType47);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        java.lang.String str6 = seconds5.toString();
        org.joda.time.DurationFieldType durationFieldType7 = seconds5.getFieldType();
        org.joda.time.Seconds seconds9 = seconds5.minus(3);
        org.joda.time.Seconds seconds10 = seconds9.negated();
        java.lang.String str11 = seconds9.toString();
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType14 = seconds13.getPeriodType();
        org.joda.time.Duration duration15 = seconds13.toStandardDuration();
        org.joda.time.Seconds seconds17 = seconds13.plus((int) (short) 0);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = seconds21.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = seconds25.get(durationFieldType26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds29 = seconds25.minus(seconds28);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds36 = seconds34.dividedBy((int) '4');
        int int37 = seconds34.size();
        int int38 = seconds29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds34);
        org.joda.time.Seconds seconds40 = seconds34.plus(0);
        org.joda.time.MutablePeriod mutablePeriod41 = seconds34.toMutablePeriod();
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = seconds42.get(durationFieldType43);
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds46 = seconds42.minus(seconds45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = seconds47.get(durationFieldType48);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds51 = seconds47.minus(seconds50);
        org.joda.time.Seconds seconds53 = seconds51.dividedBy((int) '4');
        int int54 = seconds51.size();
        int int55 = seconds46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds51);
        org.joda.time.DurationFieldType durationFieldType56 = seconds46.getFieldType();
        int int57 = seconds34.get(durationFieldType56);
        boolean boolean58 = seconds21.isSupported(durationFieldType56);
        org.joda.time.Seconds seconds59 = seconds17.plus(seconds21);
        org.joda.time.Period period60 = seconds59.toPeriod();
        org.joda.time.Seconds seconds61 = seconds9.minus(seconds59);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT-3S" + "'", str11, "PT-3S");
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2147483644 + "'", int57 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(seconds61);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds4.dividedBy((int) '4');
        org.joda.time.MutablePeriod mutablePeriod7 = seconds4.toMutablePeriod();
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Duration duration11 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds9.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds15 = seconds9.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds17 = seconds9.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType25 = seconds24.getPeriodType();
        org.joda.time.Duration duration26 = seconds24.toStandardDuration();
        org.joda.time.Seconds seconds28 = seconds24.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds29 = seconds28.negated();
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.secondsIn(readableInterval30);
        org.joda.time.Seconds seconds32 = seconds31.negated();
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.secondsIn(readableInterval33);
        int int35 = seconds34.size();
        boolean boolean36 = seconds32.isLessThan(seconds34);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.secondsIn(readableInterval37);
        int int39 = seconds38.size();
        org.joda.time.Seconds seconds41 = seconds38.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.secondsIn(readableInterval42);
        org.joda.time.DurationFieldType durationFieldType44 = seconds43.getFieldType();
        boolean boolean45 = seconds41.isSupported(durationFieldType44);
        boolean boolean46 = seconds34.isSupported(durationFieldType44);
        boolean boolean47 = seconds28.isSupported(durationFieldType44);
        boolean boolean48 = seconds21.isSupported(durationFieldType44);
        org.joda.time.Seconds seconds49 = seconds17.plus(seconds21);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType51 = seconds17.getFieldType();
        boolean boolean52 = seconds4.isSupported(durationFieldType51);
        org.joda.time.Seconds seconds54 = seconds4.minus((int) (byte) 100);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(seconds54);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        java.lang.String str18 = seconds17.toString();
        org.joda.time.Period period19 = seconds17.toPeriod();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        org.joda.time.Seconds seconds24 = seconds21.dividedBy((-1));
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        int int27 = seconds17.get(durationFieldType26);
        boolean boolean28 = seconds0.isLessThan(seconds17);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType31 = seconds30.getPeriodType();
        org.joda.time.Duration duration32 = seconds30.toStandardDuration();
        org.joda.time.Seconds seconds34 = seconds30.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds35 = seconds34.negated();
        org.joda.time.Seconds seconds36 = seconds34.negated();
        org.joda.time.Seconds seconds37 = seconds0.minus(seconds34);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) (byte) 100);
        org.joda.time.Seconds seconds41 = seconds39.minus(1);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2147483644S" + "'", str18, "PT2147483644S");
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483644 + "'", int27 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        org.joda.time.Seconds seconds10 = seconds1.minus(seconds9);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.secondsIn(readableInterval11);
        org.joda.time.Seconds seconds13 = seconds12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = seconds12.toMutablePeriod();
        org.joda.time.Duration duration15 = seconds12.toStandardDuration();
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = seconds21.get(durationFieldType22);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds25 = seconds21.minus(seconds24);
        org.joda.time.Seconds seconds27 = seconds25.dividedBy((int) '4');
        int int28 = seconds25.size();
        int int29 = seconds20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds25);
        org.joda.time.Seconds seconds31 = seconds25.plus(0);
        boolean boolean32 = seconds12.isLessThan(seconds25);
        org.joda.time.Seconds seconds34 = seconds25.minus((int) '#');
        org.joda.time.Seconds seconds35 = seconds1.plus(seconds34);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.secondsIn(readableInterval36);
        org.joda.time.Seconds seconds38 = seconds37.negated();
        org.joda.time.MutablePeriod mutablePeriod39 = seconds38.toMutablePeriod();
        org.joda.time.Duration duration40 = seconds38.toStandardDuration();
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = seconds41.get(durationFieldType42);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds45 = seconds41.minus(seconds44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds46.get(durationFieldType47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds50 = seconds46.minus(seconds49);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) '4');
        int int53 = seconds50.size();
        int int54 = seconds45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds50);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        boolean boolean58 = seconds50.isLessThan(seconds55);
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = seconds59.get(durationFieldType60);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds63 = seconds59.minus(seconds62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = seconds64.get(durationFieldType65);
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds68 = seconds64.minus(seconds67);
        org.joda.time.Seconds seconds70 = seconds68.dividedBy((int) '4');
        int int71 = seconds68.size();
        int int72 = seconds63.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds68);
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType74 = null;
        int int75 = seconds73.get(durationFieldType74);
        boolean boolean76 = seconds68.isLessThan(seconds73);
        boolean boolean77 = seconds55.isLessThan(seconds68);
        org.joda.time.DurationFieldType durationFieldType78 = seconds68.getFieldType();
        boolean boolean79 = seconds38.isSupported(durationFieldType78);
        int int80 = seconds34.get(durationFieldType78);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2147483609 + "'", int80 == 2147483609);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.dividedBy(2147483647);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds(0);
        org.joda.time.Seconds seconds10 = seconds8.minus((int) (byte) 100);
        boolean boolean11 = seconds6.isLessThan(seconds8);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.Period period14 = seconds13.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod15 = seconds13.toMutablePeriod();
        org.joda.time.Period period16 = seconds13.toPeriod();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        boolean boolean19 = seconds13.isLessThan(seconds17);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds23 = seconds21.minus((int) (byte) 0);
        boolean boolean24 = seconds20.isLessThan(seconds23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds28 = seconds26.minus((int) (byte) 0);
        boolean boolean29 = seconds25.isLessThan(seconds28);
        org.joda.time.Period period30 = seconds25.toPeriod();
        int int31 = seconds23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds25);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType34 = seconds33.getFieldType();
        boolean boolean35 = seconds23.isSupported(durationFieldType34);
        org.joda.time.Seconds seconds36 = seconds13.plus(seconds23);
        org.joda.time.Seconds seconds38 = seconds36.dividedBy((int) (byte) 100);
        org.joda.time.Seconds seconds39 = seconds6.minus(seconds38);
        int int41 = seconds6.getValue(0);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds8 = seconds6.dividedBy((int) '4');
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        org.joda.time.Seconds seconds14 = seconds11.dividedBy((-1));
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds22 = seconds18.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        boolean boolean24 = seconds16.isLessThan(seconds23);
        org.joda.time.Seconds seconds25 = seconds14.plus(seconds16);
        org.joda.time.Seconds seconds26 = seconds1.plus(seconds25);
        org.joda.time.DurationFieldType durationFieldType27 = seconds25.getFieldType();
        org.joda.time.Seconds seconds29 = seconds25.plus((int) (byte) 1);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(seconds29);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Duration duration7 = seconds5.toStandardDuration();
        org.joda.time.Seconds seconds8 = seconds5.negated();
        org.joda.time.Seconds seconds10 = seconds8.multipliedBy((-1));
        org.joda.time.Seconds seconds11 = seconds10.negated();
        org.joda.time.Period period12 = seconds10.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds6 = seconds4.negated();
        org.joda.time.Seconds seconds8 = seconds6.minus((int) 'a');
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.secondsIn(readableInterval9);
        org.joda.time.Seconds seconds11 = seconds10.negated();
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        int int14 = seconds13.size();
        boolean boolean15 = seconds11.isLessThan(seconds13);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.DurationFieldType durationFieldType23 = seconds22.getFieldType();
        boolean boolean24 = seconds20.isSupported(durationFieldType23);
        boolean boolean25 = seconds13.isSupported(durationFieldType23);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds13);
        org.joda.time.PeriodType periodType27 = seconds26.getPeriodType();
        org.joda.time.PeriodType periodType28 = seconds26.getPeriodType();
        java.lang.String str29 = seconds26.toString();
        boolean boolean30 = seconds6.isLessThan(seconds26);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType32 = seconds6.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT0S" + "'", str29, "PT0S");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds6 = seconds1.multipliedBy((int) (short) 1);
        int int7 = seconds6.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds1.get(durationFieldType3);
        org.joda.time.PeriodType periodType5 = seconds1.getPeriodType();
        java.lang.String str6 = seconds1.toString();
        java.lang.String str7 = seconds1.toString();
        java.lang.Class<?> wildcardClass8 = seconds1.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0S" + "'", str7, "PT0S");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        boolean boolean26 = seconds16.equals((java.lang.Object) seconds22);
        org.joda.time.MutablePeriod mutablePeriod27 = seconds16.toMutablePeriod();
        org.joda.time.Seconds seconds28 = seconds0.plus(seconds16);
        int int29 = seconds16.getSeconds();
        org.joda.time.Seconds seconds31 = seconds16.plus((-1));
        org.joda.time.DurationFieldType durationFieldType32 = seconds16.getFieldType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2147483647 + "'", int29 == 2147483647);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(durationFieldType32);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        boolean boolean9 = seconds1.isGreaterThan(seconds7);
        org.joda.time.Seconds seconds11 = seconds7.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds13 = seconds11.plus(100);
        org.joda.time.DurationFieldType durationFieldType14 = seconds11.getFieldType();
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType17 = seconds16.getPeriodType();
        org.joda.time.Duration duration18 = seconds16.toStandardDuration();
        org.joda.time.Seconds seconds20 = seconds16.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds21 = seconds20.negated();
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.secondsIn(readableInterval22);
        org.joda.time.Seconds seconds24 = seconds23.negated();
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.secondsIn(readableInterval25);
        int int27 = seconds26.size();
        boolean boolean28 = seconds24.isLessThan(seconds26);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        int int31 = seconds30.size();
        org.joda.time.Seconds seconds33 = seconds30.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.secondsIn(readableInterval34);
        org.joda.time.DurationFieldType durationFieldType36 = seconds35.getFieldType();
        boolean boolean37 = seconds33.isSupported(durationFieldType36);
        boolean boolean38 = seconds26.isSupported(durationFieldType36);
        boolean boolean39 = seconds20.isSupported(durationFieldType36);
        org.joda.time.Seconds seconds41 = seconds20.dividedBy(41297762);
        boolean boolean42 = seconds11.isLessThan(seconds20);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds58 = seconds56.minus((int) (byte) 0);
        boolean boolean59 = seconds55.isLessThan(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds63 = seconds61.minus((int) (byte) 0);
        boolean boolean64 = seconds60.isLessThan(seconds63);
        org.joda.time.Period period65 = seconds60.toPeriod();
        int int66 = seconds58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds60);
        org.joda.time.Seconds seconds68 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType69 = seconds68.getFieldType();
        boolean boolean70 = seconds58.isSupported(durationFieldType69);
        int int71 = seconds54.get(durationFieldType69);
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType76 = seconds75.getPeriodType();
        org.joda.time.Duration duration77 = seconds75.toStandardDuration();
        org.joda.time.Seconds seconds79 = seconds75.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds80 = seconds79.negated();
        boolean boolean81 = seconds73.isGreaterThan(seconds79);
        org.joda.time.Seconds seconds83 = seconds79.multipliedBy((int) ' ');
        boolean boolean84 = seconds54.isGreaterThan(seconds83);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.Seconds seconds17 = seconds9.multipliedBy(0);
        org.joda.time.Seconds seconds19 = seconds17.plus(100);
        org.joda.time.Seconds seconds21 = seconds17.minus((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType23 = seconds17.getFieldType(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int9 = seconds8.getSeconds();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds11 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = seconds12.get(durationFieldType13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds16 = seconds12.minus(seconds15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds17.get(durationFieldType18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = seconds17.minus(seconds20);
        org.joda.time.Seconds seconds23 = seconds21.dividedBy((int) '4');
        int int24 = seconds21.size();
        int int25 = seconds16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds21);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        boolean boolean29 = seconds21.isLessThan(seconds26);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = seconds35.get(durationFieldType36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds39 = seconds35.minus(seconds38);
        org.joda.time.Seconds seconds41 = seconds39.dividedBy((int) '4');
        int int42 = seconds39.size();
        int int43 = seconds34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds39);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        boolean boolean47 = seconds39.isLessThan(seconds44);
        boolean boolean48 = seconds26.isLessThan(seconds39);
        int int49 = seconds39.size();
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds39);
        org.joda.time.Seconds seconds51 = seconds5.plus(seconds39);
        org.joda.time.Seconds seconds53 = seconds51.minus(0);
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        boolean boolean69 = seconds54.isLessThan(seconds64);
        org.joda.time.ReadableInterval readableInterval70 = null;
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.secondsIn(readableInterval70);
        int int72 = seconds71.size();
        org.joda.time.Seconds seconds74 = seconds71.dividedBy(100);
        org.joda.time.PeriodType periodType75 = seconds74.getPeriodType();
        org.joda.time.Seconds seconds77 = seconds74.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds79 = seconds77.minus((-1));
        org.joda.time.Seconds seconds80 = seconds64.plus(seconds77);
        org.joda.time.Seconds seconds82 = seconds64.dividedBy((int) '#');
        org.joda.time.Seconds seconds83 = seconds51.minus(seconds64);
        int int84 = seconds83.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.secondsIn(readableInterval4);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds6);
        org.joda.time.MutablePeriod mutablePeriod8 = seconds6.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = seconds6.getValue((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        java.lang.String str6 = seconds5.toString();
        int int7 = seconds5.getSeconds();
        java.lang.Object obj8 = null;
        boolean boolean9 = seconds5.equals(obj8);
        boolean boolean11 = seconds5.equals((java.lang.Object) (short) 10);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Duration duration7 = seconds5.toStandardDuration();
        org.joda.time.Seconds seconds8 = seconds5.negated();
        org.joda.time.Seconds seconds10 = seconds5.dividedBy((int) (short) 10);
        org.joda.time.PeriodType periodType11 = seconds5.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(periodType11);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.Seconds seconds19 = seconds15.multipliedBy((int) (short) -1);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds24 = seconds20.minus(seconds23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = seconds25.get(durationFieldType26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds29 = seconds25.minus(seconds28);
        org.joda.time.Seconds seconds31 = seconds29.dividedBy((int) '4');
        int int32 = seconds29.size();
        int int33 = seconds24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds29);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = seconds34.get(durationFieldType35);
        boolean boolean37 = seconds29.isLessThan(seconds34);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = seconds38.get(durationFieldType39);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds42 = seconds38.minus(seconds41);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = seconds43.get(durationFieldType44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds47 = seconds43.minus(seconds46);
        org.joda.time.Seconds seconds49 = seconds47.dividedBy((int) '4');
        int int50 = seconds47.size();
        int int51 = seconds42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds47);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType53 = null;
        int int54 = seconds52.get(durationFieldType53);
        boolean boolean55 = seconds47.isLessThan(seconds52);
        boolean boolean56 = seconds34.isLessThan(seconds47);
        int int57 = seconds47.size();
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds47);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds59 = seconds15.plus(seconds47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483644 + 2147483644");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(seconds58);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Period period2 = seconds1.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Period period4 = seconds1.toPeriod();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType6 = seconds5.getPeriodType();
        boolean boolean7 = seconds1.isLessThan(seconds5);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds11 = seconds9.minus((int) (byte) 0);
        boolean boolean12 = seconds8.isLessThan(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds16 = seconds14.minus((int) (byte) 0);
        boolean boolean17 = seconds13.isLessThan(seconds16);
        org.joda.time.Period period18 = seconds13.toPeriod();
        int int19 = seconds11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds13);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        boolean boolean23 = seconds11.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds24 = seconds1.plus(seconds11);
        org.joda.time.Seconds seconds26 = seconds24.dividedBy((int) (byte) 100);
        org.joda.time.Period period27 = seconds24.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(period27);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.MutablePeriod mutablePeriod27 = seconds10.toMutablePeriod();
        boolean boolean29 = seconds10.equals((java.lang.Object) (short) -1);
        org.joda.time.Seconds seconds31 = seconds10.minus((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = seconds31.getValue(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(seconds31);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.Seconds seconds4 = seconds1.minus((int) '#');
        org.joda.time.Duration duration5 = seconds1.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(duration5);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Seconds seconds4 = seconds1.minus((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int6 = seconds4.getValue(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Seconds seconds7 = seconds5.negated();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        org.joda.time.Seconds seconds23 = seconds17.plus(0);
        java.lang.String str24 = seconds23.toString();
        org.joda.time.Period period25 = seconds23.toPeriod();
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn(readableInterval26);
        org.joda.time.DurationFieldType durationFieldType28 = seconds27.getFieldType();
        org.joda.time.Seconds seconds30 = seconds27.dividedBy((-1));
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds30);
        org.joda.time.DurationFieldType durationFieldType32 = seconds31.getFieldType();
        int int33 = seconds23.get(durationFieldType32);
        boolean boolean34 = seconds7.isSupported(durationFieldType32);
        org.joda.time.Seconds seconds36 = seconds7.dividedBy((int) 'a');
        java.lang.String str37 = seconds36.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2147483644S" + "'", str24, "PT2147483644S");
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2147483644 + "'", int33 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT0S" + "'", str37, "PT0S");
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType5 = seconds4.getPeriodType();
        org.joda.time.Duration duration6 = seconds4.toStandardDuration();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.Seconds seconds9 = seconds4.multipliedBy(3);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.Seconds seconds21 = seconds19.dividedBy((int) '4');
        int int22 = seconds19.size();
        int int23 = seconds14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds19);
        org.joda.time.Seconds seconds25 = seconds19.plus(0);
        java.lang.String str26 = seconds25.toString();
        org.joda.time.Period period27 = seconds25.toPeriod();
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.secondsIn(readableInterval28);
        org.joda.time.Seconds seconds30 = seconds29.negated();
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds29.get(durationFieldType31);
        boolean boolean33 = seconds25.isLessThan(seconds29);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds29);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds29);
        org.joda.time.Seconds seconds37 = seconds29.multipliedBy(100);
        org.joda.time.MutablePeriod mutablePeriod38 = seconds29.toMutablePeriod();
        org.joda.time.Seconds seconds40 = seconds29.plus(52);
        org.joda.time.DurationFieldType durationFieldType41 = seconds29.getFieldType();
        boolean boolean42 = seconds9.isSupported(durationFieldType41);
        java.lang.Class<?> wildcardClass43 = durationFieldType41.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483644S" + "'", str26, "PT2147483644S");
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        int int5 = seconds1.getSeconds();
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.Seconds seconds17 = seconds15.dividedBy((int) '4');
        int int18 = seconds15.size();
        int int19 = seconds10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds15);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        boolean boolean23 = seconds15.isLessThan(seconds20);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = seconds38.get(durationFieldType39);
        boolean boolean41 = seconds33.isLessThan(seconds38);
        boolean boolean42 = seconds20.isLessThan(seconds33);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.seconds((int) (byte) 1);
        boolean boolean45 = seconds33.isLessThan(seconds44);
        org.joda.time.Seconds seconds46 = seconds1.minus(seconds44);
        org.joda.time.DurationFieldType durationFieldType48 = seconds1.getFieldType((int) (byte) 0);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType51 = seconds50.getPeriodType();
        org.joda.time.Duration duration52 = seconds50.toStandardDuration();
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds50);
        org.joda.time.Seconds seconds55 = seconds50.minus(3);
        org.joda.time.DurationFieldType durationFieldType56 = seconds50.getFieldType();
        org.joda.time.Seconds seconds58 = seconds50.minus(100);
        boolean boolean59 = seconds1.isLessThan(seconds58);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        boolean boolean9 = seconds1.isGreaterThan(seconds7);
        org.joda.time.Seconds seconds11 = seconds7.multipliedBy((int) ' ');
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.Duration duration14 = seconds13.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.secondsIn(readableInterval15);
        org.joda.time.Seconds seconds17 = seconds16.negated();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        int int20 = seconds19.size();
        boolean boolean21 = seconds17.isLessThan(seconds19);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.secondsIn(readableInterval22);
        int int24 = seconds23.size();
        org.joda.time.Seconds seconds26 = seconds23.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.DurationFieldType durationFieldType29 = seconds28.getFieldType();
        boolean boolean30 = seconds26.isSupported(durationFieldType29);
        boolean boolean31 = seconds19.isSupported(durationFieldType29);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        boolean boolean33 = seconds13.isLessThan(seconds19);
        boolean boolean34 = seconds7.isGreaterThan(seconds19);
        org.joda.time.Seconds seconds36 = seconds19.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds38 = seconds36.minus(100);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((-100));
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds8 = seconds6.dividedBy((int) '4');
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        org.joda.time.Seconds seconds14 = seconds11.dividedBy((-1));
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds22 = seconds18.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        boolean boolean24 = seconds16.isLessThan(seconds23);
        org.joda.time.Seconds seconds25 = seconds14.plus(seconds16);
        org.joda.time.Seconds seconds26 = seconds1.plus(seconds25);
        org.joda.time.DurationFieldType durationFieldType28 = seconds25.getFieldType((int) (byte) 0);
        org.joda.time.MutablePeriod mutablePeriod29 = seconds25.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds1.get(durationFieldType3);
        org.joda.time.PeriodType periodType5 = seconds1.getPeriodType();
        java.lang.String str6 = seconds1.toString();
        java.lang.String str7 = seconds1.toString();
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType12 = seconds11.getPeriodType();
        org.joda.time.Duration duration13 = seconds11.toStandardDuration();
        org.joda.time.Seconds seconds15 = seconds11.multipliedBy(0);
        org.joda.time.Seconds seconds16 = seconds11.negated();
        org.joda.time.Seconds seconds17 = seconds9.plus(seconds11);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = seconds19.get(durationFieldType20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = seconds22.get(durationFieldType23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds26 = seconds22.minus(seconds25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = seconds27.get(durationFieldType28);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds31 = seconds27.minus(seconds30);
        org.joda.time.Seconds seconds33 = seconds31.dividedBy((int) '4');
        int int34 = seconds31.size();
        int int35 = seconds26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds31);
        org.joda.time.Seconds seconds37 = seconds31.plus(0);
        java.lang.String str38 = seconds37.toString();
        org.joda.time.Period period39 = seconds37.toPeriod();
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.secondsIn(readableInterval40);
        org.joda.time.Seconds seconds42 = seconds41.negated();
        org.joda.time.MutablePeriod mutablePeriod43 = seconds41.toMutablePeriod();
        org.joda.time.Duration duration44 = seconds41.toStandardDuration();
        boolean boolean45 = seconds37.equals((java.lang.Object) seconds41);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds46.get(durationFieldType47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds50 = seconds46.minus(seconds49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = seconds51.get(durationFieldType52);
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds55 = seconds51.minus(seconds54);
        org.joda.time.Seconds seconds57 = seconds55.dividedBy((int) '4');
        int int58 = seconds55.size();
        int int59 = seconds50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds55);
        org.joda.time.Seconds seconds61 = seconds55.plus(0);
        org.joda.time.MutablePeriod mutablePeriod62 = seconds55.toMutablePeriod();
        int int63 = seconds37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds55);
        org.joda.time.Seconds seconds65 = seconds37.minus(2147483644);
        org.joda.time.Seconds seconds66 = seconds19.minus(seconds65);
        boolean boolean67 = seconds17.isGreaterThan(seconds19);
        org.joda.time.Seconds seconds69 = seconds17.multipliedBy(0);
        org.joda.time.Seconds seconds70 = seconds17.negated();
        org.joda.time.DurationFieldType durationFieldType71 = seconds17.getFieldType();
        int int72 = seconds1.get(durationFieldType71);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0S" + "'", str7, "PT0S");
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT2147483644S" + "'", str38, "PT2147483644S");
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) ' ');
        java.lang.Class<?> wildcardClass2 = seconds1.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Duration duration7 = seconds5.toStandardDuration();
        org.joda.time.Seconds seconds8 = seconds5.negated();
        org.joda.time.Seconds seconds10 = seconds8.multipliedBy((-1));
        org.joda.time.Seconds seconds11 = seconds10.negated();
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType16 = seconds15.getPeriodType();
        org.joda.time.Duration duration17 = seconds15.toStandardDuration();
        org.joda.time.Seconds seconds19 = seconds15.multipliedBy(0);
        org.joda.time.Seconds seconds20 = seconds15.negated();
        org.joda.time.Seconds seconds21 = seconds13.plus(seconds15);
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        org.joda.time.Seconds seconds24 = seconds21.minus(2147483644);
        boolean boolean25 = seconds10.isLessThan(seconds21);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.DurationFieldType durationFieldType54 = seconds9.getFieldType();
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.secondsIn(readableInterval55);
        org.joda.time.DurationFieldType durationFieldType57 = seconds56.getFieldType();
        org.joda.time.Seconds seconds59 = seconds56.dividedBy((-1));
        org.joda.time.ReadableInterval readableInterval60 = null;
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.secondsIn(readableInterval60);
        int int62 = seconds61.size();
        org.joda.time.Seconds seconds64 = seconds61.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval65 = null;
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.secondsIn(readableInterval65);
        org.joda.time.DurationFieldType durationFieldType67 = seconds66.getFieldType();
        boolean boolean68 = seconds64.isSupported(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds73 = seconds69.minus(seconds72);
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType75 = null;
        int int76 = seconds74.get(durationFieldType75);
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds78 = seconds74.minus(seconds77);
        org.joda.time.Seconds seconds80 = seconds78.dividedBy((int) '4');
        int int81 = seconds78.size();
        int int82 = seconds73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds78);
        org.joda.time.Seconds seconds84 = seconds78.plus(0);
        org.joda.time.Seconds seconds85 = seconds64.minus(seconds78);
        org.joda.time.DurationFieldType durationFieldType86 = seconds64.getFieldType();
        boolean boolean87 = seconds56.isSupported(durationFieldType86);
        boolean boolean88 = seconds9.isGreaterThan(seconds56);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType90 = seconds56.getFieldType(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        boolean boolean12 = seconds6.isGreaterThan(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        org.joda.time.PeriodType periodType14 = seconds6.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod15 = seconds6.toMutablePeriod();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.secondsIn(readableInterval19);
        org.joda.time.Seconds seconds21 = seconds20.negated();
        org.joda.time.MutablePeriod mutablePeriod22 = seconds20.toMutablePeriod();
        int int23 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds20);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType26 = seconds25.getPeriodType();
        org.joda.time.Duration duration27 = seconds25.toStandardDuration();
        org.joda.time.Seconds seconds29 = seconds25.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds31 = seconds25.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds33 = seconds25.minus(seconds32);
        org.joda.time.DurationFieldType durationFieldType34 = seconds33.getFieldType();
        boolean boolean35 = seconds17.isSupported(durationFieldType34);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType38 = seconds37.getPeriodType();
        org.joda.time.Period period39 = seconds37.toPeriod();
        org.joda.time.Duration duration40 = seconds37.toStandardDuration();
        boolean boolean41 = seconds17.equals((java.lang.Object) seconds37);
        org.joda.time.Seconds seconds42 = seconds17.negated();
        int int43 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds42);
        org.joda.time.Seconds seconds45 = seconds6.plus(2);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds45);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        boolean boolean72 = seconds64.isLessThan(seconds69);
        boolean boolean73 = seconds54.isLessThan(seconds64);
        org.joda.time.Seconds seconds75 = seconds54.multipliedBy((int) (byte) -1);
        org.joda.time.Seconds seconds77 = seconds54.plus(100);
        org.joda.time.Seconds seconds79 = seconds77.plus((int) 'a');
        org.joda.time.Period period80 = seconds79.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int82 = seconds79.getValue((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(period80);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.Seconds seconds17 = seconds15.dividedBy((int) '4');
        int int18 = seconds15.size();
        int int19 = seconds10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds15);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        int int23 = seconds10.get(durationFieldType22);
        org.joda.time.Seconds seconds24 = seconds10.negated();
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        int int27 = seconds25.getSeconds();
        org.joda.time.Seconds seconds28 = seconds10.plus(seconds25);
        int int29 = seconds0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        org.joda.time.Period period30 = seconds0.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2147483644 + "'", int23 == 2147483644);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(period30);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.PeriodType periodType5 = seconds4.getPeriodType();
        org.joda.time.Seconds seconds7 = seconds4.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds9 = seconds7.minus((-1));
        org.joda.time.DurationFieldType durationFieldType10 = seconds9.getFieldType();
        org.joda.time.Seconds seconds12 = seconds9.multipliedBy(1);
        org.joda.time.Duration duration13 = seconds9.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            int int15 = seconds9.getValue(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(duration13);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Duration duration30 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds32 = seconds28.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds34 = seconds28.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds36 = seconds28.minus(seconds35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds43 = seconds40.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds48 = seconds44.minus(seconds47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds49.get(durationFieldType50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds53 = seconds49.minus(seconds52);
        org.joda.time.Seconds seconds55 = seconds53.dividedBy((int) '4');
        int int56 = seconds53.size();
        int int57 = seconds48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds53);
        org.joda.time.Seconds seconds59 = seconds53.plus(0);
        org.joda.time.MutablePeriod mutablePeriod60 = seconds53.toMutablePeriod();
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = seconds61.get(durationFieldType62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds65 = seconds61.minus(seconds64);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = seconds66.get(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds70 = seconds66.minus(seconds69);
        org.joda.time.Seconds seconds72 = seconds70.dividedBy((int) '4');
        int int73 = seconds70.size();
        int int74 = seconds65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds70);
        org.joda.time.DurationFieldType durationFieldType75 = seconds65.getFieldType();
        int int76 = seconds53.get(durationFieldType75);
        boolean boolean77 = seconds40.isSupported(durationFieldType75);
        boolean boolean78 = seconds36.isSupported(durationFieldType75);
        boolean boolean79 = seconds10.isGreaterThan(seconds36);
        org.joda.time.Seconds seconds81 = seconds36.plus(1);
        org.joda.time.Period period82 = seconds36.toPeriod();
        org.joda.time.Seconds seconds84 = seconds36.plus((int) '#');
        org.joda.time.Period period85 = seconds84.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483644 + "'", int76 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(period85);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.MutablePeriod mutablePeriod8 = seconds6.toMutablePeriod();
        org.joda.time.Duration duration9 = seconds6.toStandardDuration();
        boolean boolean10 = seconds0.equals((java.lang.Object) seconds6);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType14 = seconds13.getPeriodType();
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.secondsIn(readableInterval15);
        org.joda.time.Seconds seconds17 = seconds16.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = seconds16.toMutablePeriod();
        int int19 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds16);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds24 = seconds20.minus(seconds23);
        org.joda.time.DurationFieldType durationFieldType25 = seconds20.getFieldType();
        boolean boolean26 = seconds13.isSupported(durationFieldType25);
        boolean boolean27 = seconds6.isSupported(durationFieldType25);
        org.joda.time.Seconds seconds29 = seconds6.plus(41297762);
        org.joda.time.Seconds seconds30 = seconds6.negated();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        boolean boolean26 = seconds16.equals((java.lang.Object) seconds22);
        org.joda.time.MutablePeriod mutablePeriod27 = seconds16.toMutablePeriod();
        org.joda.time.Seconds seconds28 = seconds0.plus(seconds16);
        java.lang.String str29 = seconds28.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT-1S" + "'", str29, "PT-1S");
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds17.multipliedBy((int) (short) 0);
        int int21 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds20);
        org.joda.time.MutablePeriod mutablePeriod22 = seconds20.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod23 = seconds20.toMutablePeriod();
        org.joda.time.Seconds seconds25 = seconds20.minus((int) (byte) -1);
        int int26 = seconds20.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = seconds3.get(durationFieldType4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds7 = seconds3.minus(seconds6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds14 = seconds12.dividedBy((int) '4');
        int int15 = seconds12.size();
        int int16 = seconds7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds12);
        org.joda.time.Seconds seconds18 = seconds12.plus(0);
        java.lang.String str19 = seconds18.toString();
        org.joda.time.Period period20 = seconds18.toPeriod();
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        boolean boolean26 = seconds18.equals((java.lang.Object) seconds22);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = seconds27.get(durationFieldType28);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds31 = seconds27.minus(seconds30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds36 = seconds32.minus(seconds35);
        org.joda.time.Seconds seconds38 = seconds36.dividedBy((int) '4');
        int int39 = seconds36.size();
        int int40 = seconds31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds36);
        org.joda.time.Seconds seconds42 = seconds36.plus(0);
        org.joda.time.MutablePeriod mutablePeriod43 = seconds36.toMutablePeriod();
        int int44 = seconds18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds36);
        org.joda.time.Seconds seconds46 = seconds18.minus(2147483644);
        org.joda.time.Seconds seconds47 = seconds0.minus(seconds46);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.seconds(2147483644);
        boolean boolean50 = seconds0.isLessThan(seconds49);
        org.joda.time.Seconds seconds51 = seconds0.negated();
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType53 = null;
        int int54 = seconds52.get(durationFieldType53);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds56 = seconds52.minus(seconds55);
        org.joda.time.ReadableInterval readableInterval57 = null;
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.secondsIn(readableInterval57);
        org.joda.time.Seconds seconds59 = seconds58.negated();
        org.joda.time.MutablePeriod mutablePeriod60 = seconds58.toMutablePeriod();
        org.joda.time.Duration duration61 = seconds58.toStandardDuration();
        boolean boolean62 = seconds52.equals((java.lang.Object) seconds58);
        int int63 = seconds52.getSeconds();
        org.joda.time.Seconds seconds65 = seconds52.dividedBy(101);
        int int66 = seconds0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds65);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT2147483644S" + "'", str19, "PT2147483644S");
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2147483647 + "'", int63 == 2147483647);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod2 = seconds0.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int4 = seconds0.getValue(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Duration duration1 = seconds0.toStandardDuration();
        org.joda.time.Weeks weeks2 = seconds0.toStandardWeeks();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        int int10 = seconds9.size();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy(100);
        org.joda.time.PeriodType periodType13 = seconds12.getPeriodType();
        org.joda.time.Seconds seconds15 = seconds12.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds17 = seconds15.minus((-1));
        org.joda.time.DurationFieldType durationFieldType19 = seconds15.getFieldType((int) (byte) 0);
        boolean boolean20 = seconds5.isSupported(durationFieldType19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        int int26 = seconds22.getSeconds();
        java.lang.String str27 = seconds22.toString();
        org.joda.time.Seconds seconds29 = seconds22.minus((int) (short) 10);
        org.joda.time.Seconds seconds30 = seconds5.minus(seconds22);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Period period32 = seconds30.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT0S" + "'", str27, "PT0S");
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(period32);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.Seconds seconds17 = seconds15.dividedBy((int) '4');
        int int18 = seconds15.size();
        int int19 = seconds10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds15);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        boolean boolean23 = seconds15.isLessThan(seconds20);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = seconds38.get(durationFieldType39);
        boolean boolean41 = seconds33.isLessThan(seconds38);
        boolean boolean42 = seconds20.isLessThan(seconds33);
        org.joda.time.DurationFieldType durationFieldType43 = seconds33.getFieldType();
        org.joda.time.Seconds seconds44 = seconds5.plus(seconds33);
        org.joda.time.Duration duration45 = seconds44.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(duration45);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType8 = seconds7.getPeriodType();
        org.joda.time.Duration duration9 = seconds7.toStandardDuration();
        org.joda.time.Seconds seconds11 = seconds7.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds13 = seconds7.dividedBy((int) (short) 1);
        boolean boolean14 = seconds0.equals((java.lang.Object) (short) 1);
        org.joda.time.Seconds seconds16 = seconds0.multipliedBy((int) ' ');
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(seconds16);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType5 = seconds4.getPeriodType();
        org.joda.time.Duration duration6 = seconds4.toStandardDuration();
        org.joda.time.Seconds seconds8 = seconds4.multipliedBy(0);
        org.joda.time.Seconds seconds9 = seconds4.negated();
        org.joda.time.Period period10 = seconds9.toPeriod();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy(100);
        org.joda.time.Seconds seconds14 = seconds9.minus(0);
        int int15 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds17 = seconds9.plus((int) (short) 10);
        java.lang.String str18 = seconds9.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT-1S" + "'", str18, "PT-1S");
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds2 = seconds0.minus((int) (byte) 0);
        org.joda.time.Duration duration3 = seconds0.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = seconds0.get(durationFieldType4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        int int8 = seconds7.size();
        org.joda.time.Seconds seconds10 = seconds7.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.secondsIn(readableInterval11);
        org.joda.time.DurationFieldType durationFieldType13 = seconds12.getFieldType();
        boolean boolean14 = seconds10.isSupported(durationFieldType13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds24 = seconds20.minus(seconds23);
        org.joda.time.Seconds seconds26 = seconds24.dividedBy((int) '4');
        int int27 = seconds24.size();
        int int28 = seconds19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds24);
        org.joda.time.Seconds seconds30 = seconds24.plus(0);
        org.joda.time.Seconds seconds31 = seconds10.minus(seconds24);
        org.joda.time.DurationFieldType durationFieldType32 = seconds10.getFieldType();
        int int33 = seconds10.size();
        org.joda.time.MutablePeriod mutablePeriod34 = seconds10.toMutablePeriod();
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType37 = seconds36.getPeriodType();
        org.joda.time.Duration duration38 = seconds36.toStandardDuration();
        org.joda.time.Seconds seconds40 = seconds36.multipliedBy(0);
        org.joda.time.Seconds seconds41 = seconds36.negated();
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = seconds42.get(durationFieldType43);
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds46 = seconds42.minus(seconds45);
        boolean boolean47 = seconds41.isGreaterThan(seconds46);
        org.joda.time.Seconds seconds49 = seconds41.multipliedBy(1);
        int int50 = seconds41.getSeconds();
        org.joda.time.Seconds seconds51 = seconds10.plus(seconds41);
        boolean boolean52 = seconds0.isLessThan(seconds51);
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds56 = seconds54.minus((int) (byte) 0);
        boolean boolean57 = seconds53.isLessThan(seconds56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds53);
        org.joda.time.PeriodType periodType59 = seconds58.getPeriodType();
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds62 = seconds60.minus((int) (byte) 0);
        boolean boolean63 = seconds58.isLessThan(seconds62);
        org.joda.time.Seconds seconds64 = seconds0.minus(seconds58);
        org.joda.time.Seconds seconds66 = seconds0.dividedBy((-2147483644));
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        int int13 = seconds8.size();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        org.joda.time.Seconds seconds18 = seconds15.dividedBy((-1));
        int int19 = seconds15.getSeconds();
        org.joda.time.Seconds seconds20 = seconds8.minus(seconds15);
        boolean boolean21 = seconds6.isGreaterThan(seconds20);
        org.joda.time.Seconds seconds23 = seconds6.dividedBy((int) 'a');
        org.joda.time.Seconds seconds24 = seconds6.negated();
        java.lang.String str25 = seconds24.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT0S" + "'", str25, "PT0S");
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.Seconds seconds21 = seconds19.dividedBy((int) '4');
        int int22 = seconds19.size();
        int int23 = seconds14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds19);
        org.joda.time.Seconds seconds25 = seconds19.plus(0);
        java.lang.String str26 = seconds25.toString();
        org.joda.time.Period period27 = seconds25.toPeriod();
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.secondsIn(readableInterval28);
        org.joda.time.Seconds seconds30 = seconds29.negated();
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds29.get(durationFieldType31);
        boolean boolean33 = seconds25.isLessThan(seconds29);
        org.joda.time.Seconds seconds34 = seconds9.minus(seconds25);
        org.joda.time.DurationFieldType durationFieldType35 = seconds25.getFieldType();
        org.joda.time.Seconds seconds36 = seconds25.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds38 = seconds36.plus((-99));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483644 + -99");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483644S" + "'", str26, "PT2147483644S");
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(seconds36);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        int int1 = seconds0.size();
        org.joda.time.DurationFieldType durationFieldType2 = seconds0.getFieldType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(durationFieldType2);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds7 = seconds5.minus((int) (byte) 0);
        boolean boolean8 = seconds4.isLessThan(seconds7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType12 = seconds11.getPeriodType();
        org.joda.time.Duration duration13 = seconds11.toStandardDuration();
        org.joda.time.Seconds seconds15 = seconds11.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds17 = seconds11.dividedBy((int) (short) 1);
        boolean boolean18 = seconds4.equals((java.lang.Object) (short) 1);
        boolean boolean19 = seconds1.isGreaterThan(seconds4);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds24 = seconds20.minus(seconds23);
        org.joda.time.Seconds seconds26 = seconds23.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.DurationFieldType durationFieldType29 = seconds28.getFieldType();
        org.joda.time.Seconds seconds31 = seconds28.dividedBy((-1));
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds28);
        int int33 = seconds28.size();
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.secondsIn(readableInterval34);
        org.joda.time.DurationFieldType durationFieldType36 = seconds35.getFieldType();
        org.joda.time.Seconds seconds38 = seconds35.dividedBy((-1));
        int int39 = seconds35.getSeconds();
        org.joda.time.Seconds seconds40 = seconds28.minus(seconds35);
        boolean boolean41 = seconds26.isGreaterThan(seconds40);
        boolean boolean42 = seconds1.isGreaterThan(seconds40);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = seconds43.get(durationFieldType44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds47 = seconds43.minus(seconds46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds52 = seconds48.minus(seconds51);
        org.joda.time.Seconds seconds54 = seconds52.dividedBy((int) '4');
        int int55 = seconds52.size();
        int int56 = seconds47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds52);
        org.joda.time.Seconds seconds58 = seconds52.plus(0);
        java.lang.String str59 = seconds58.toString();
        org.joda.time.Period period60 = seconds58.toPeriod();
        org.joda.time.ReadableInterval readableInterval61 = null;
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.secondsIn(readableInterval61);
        org.joda.time.Seconds seconds63 = seconds62.negated();
        org.joda.time.MutablePeriod mutablePeriod64 = seconds62.toMutablePeriod();
        org.joda.time.Duration duration65 = seconds62.toStandardDuration();
        boolean boolean66 = seconds58.equals((java.lang.Object) seconds62);
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = seconds67.get(durationFieldType68);
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds71 = seconds67.minus(seconds70);
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType73 = null;
        int int74 = seconds72.get(durationFieldType73);
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds76 = seconds72.minus(seconds75);
        org.joda.time.Seconds seconds78 = seconds76.dividedBy((int) '4');
        int int79 = seconds76.size();
        int int80 = seconds71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds76);
        org.joda.time.Seconds seconds82 = seconds76.plus(0);
        org.joda.time.MutablePeriod mutablePeriod83 = seconds76.toMutablePeriod();
        int int84 = seconds58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds76);
        org.joda.time.Seconds seconds86 = seconds58.minus(2147483644);
        java.lang.String str87 = seconds58.toString();
        int int88 = seconds58.size();
        boolean boolean89 = seconds1.equals((java.lang.Object) int88);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "PT2147483644S" + "'", str59, "PT2147483644S");
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(mutablePeriod83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "PT2147483644S" + "'", str87, "PT2147483644S");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT100S");
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int9 = seconds8.getSeconds();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds11 = seconds5.minus(seconds8);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.Seconds seconds14 = seconds13.negated();
        org.joda.time.Seconds seconds16 = seconds13.minus((int) '#');
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds22 = seconds18.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.Duration duration24 = seconds22.toStandardDuration();
        org.joda.time.Seconds seconds25 = seconds22.negated();
        org.joda.time.DurationFieldType durationFieldType26 = seconds22.getFieldType();
        boolean boolean27 = seconds13.isSupported(durationFieldType26);
        boolean boolean28 = seconds11.isSupported(durationFieldType26);
        org.joda.time.Seconds seconds30 = seconds11.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType33 = seconds32.getPeriodType();
        org.joda.time.Duration duration34 = seconds32.toStandardDuration();
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds32);
        org.joda.time.Seconds seconds37 = seconds32.minus(3);
        org.joda.time.DurationFieldType durationFieldType38 = seconds32.getFieldType();
        org.joda.time.Seconds seconds40 = seconds32.minus(100);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.secondsIn(readableInterval41);
        org.joda.time.Seconds seconds43 = seconds42.negated();
        org.joda.time.MutablePeriod mutablePeriod44 = seconds42.toMutablePeriod();
        org.joda.time.Duration duration45 = seconds42.toStandardDuration();
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds46.get(durationFieldType47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds50 = seconds46.minus(seconds49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = seconds51.get(durationFieldType52);
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds55 = seconds51.minus(seconds54);
        org.joda.time.Seconds seconds57 = seconds55.dividedBy((int) '4');
        int int58 = seconds55.size();
        int int59 = seconds50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds55);
        org.joda.time.Seconds seconds61 = seconds55.plus(0);
        boolean boolean62 = seconds42.isLessThan(seconds55);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType64 = null;
        int int65 = seconds63.get(durationFieldType64);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds67 = seconds63.minus(seconds66);
        org.joda.time.Seconds seconds68 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType69 = null;
        int int70 = seconds68.get(durationFieldType69);
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds72 = seconds68.minus(seconds71);
        org.joda.time.Seconds seconds74 = seconds72.dividedBy((int) '4');
        int int75 = seconds72.size();
        int int76 = seconds67.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds72);
        org.joda.time.Seconds seconds78 = seconds72.plus(0);
        java.lang.String str79 = seconds78.toString();
        org.joda.time.Period period80 = seconds78.toPeriod();
        org.joda.time.ReadableInterval readableInterval81 = null;
        org.joda.time.Seconds seconds82 = org.joda.time.Seconds.secondsIn(readableInterval81);
        org.joda.time.Seconds seconds83 = seconds82.negated();
        org.joda.time.DurationFieldType durationFieldType84 = null;
        int int85 = seconds82.get(durationFieldType84);
        boolean boolean86 = seconds78.isLessThan(seconds82);
        org.joda.time.Seconds seconds87 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds82);
        org.joda.time.DurationFieldType durationFieldType89 = seconds82.getFieldType(0);
        int int90 = seconds55.get(durationFieldType89);
        org.joda.time.Seconds seconds92 = seconds55.minus((int) (byte) -1);
        org.joda.time.Seconds seconds93 = seconds92.negated();
        org.joda.time.DurationFieldType durationFieldType94 = seconds93.getFieldType();
        int int95 = seconds40.get(durationFieldType94);
        boolean boolean96 = seconds11.isSupported(durationFieldType94);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "PT2147483644S" + "'", str79, "PT2147483644S");
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(seconds87);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 2147483644 + "'", int90 == 2147483644);
        org.junit.Assert.assertNotNull(seconds92);
        org.junit.Assert.assertNotNull(seconds93);
        org.junit.Assert.assertNotNull(durationFieldType94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-99) + "'", int95 == (-99));
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        int int7 = seconds6.size();
        org.joda.time.Seconds seconds9 = seconds6.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        boolean boolean13 = seconds9.isSupported(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = seconds19.get(durationFieldType20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds23 = seconds19.minus(seconds22);
        org.joda.time.Seconds seconds25 = seconds23.dividedBy((int) '4');
        int int26 = seconds23.size();
        int int27 = seconds18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds23);
        org.joda.time.Seconds seconds29 = seconds23.plus(0);
        org.joda.time.Seconds seconds30 = seconds9.minus(seconds23);
        org.joda.time.DurationFieldType durationFieldType31 = seconds9.getFieldType();
        boolean boolean32 = seconds1.isSupported(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType34 = seconds33.getPeriodType();
        org.joda.time.Seconds seconds35 = seconds1.minus(seconds33);
        org.joda.time.MutablePeriod mutablePeriod36 = seconds35.toMutablePeriod();
        java.lang.String str37 = seconds35.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT-2S" + "'", str37, "PT-2S");
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.Seconds seconds4 = seconds1.minus((int) '#');
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType7 = seconds6.getPeriodType();
        org.joda.time.Duration duration8 = seconds6.toStandardDuration();
        org.joda.time.Seconds seconds10 = seconds6.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds11 = seconds10.negated();
        org.joda.time.Duration duration12 = seconds10.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds10.negated();
        org.joda.time.DurationFieldType durationFieldType14 = seconds10.getFieldType();
        boolean boolean15 = seconds1.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds16);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.Seconds seconds4 = seconds1.minus((int) '#');
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType7 = seconds6.getPeriodType();
        org.joda.time.Duration duration8 = seconds6.toStandardDuration();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds6);
        org.joda.time.Seconds seconds10 = seconds6.negated();
        int int11 = seconds6.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds7 = seconds1.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        org.joda.time.Seconds seconds23 = seconds17.plus(0);
        java.lang.String str24 = seconds23.toString();
        org.joda.time.Period period25 = seconds23.toPeriod();
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn(readableInterval26);
        org.joda.time.Seconds seconds28 = seconds27.negated();
        org.joda.time.MutablePeriod mutablePeriod29 = seconds27.toMutablePeriod();
        org.joda.time.Duration duration30 = seconds27.toStandardDuration();
        boolean boolean31 = seconds23.equals((java.lang.Object) seconds27);
        org.joda.time.Seconds seconds32 = seconds1.minus(seconds27);
        org.joda.time.Seconds seconds34 = seconds27.multipliedBy(52);
        java.lang.String str35 = seconds34.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2147483644S" + "'", str24, "PT2147483644S");
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "PT0S" + "'", str35, "PT0S");
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds17.multipliedBy((int) (short) 0);
        int int21 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds20);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.secondsIn(readableInterval22);
        org.joda.time.DurationFieldType durationFieldType24 = seconds23.getFieldType();
        org.joda.time.Seconds seconds26 = seconds23.dividedBy((-1));
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        int int29 = seconds28.size();
        org.joda.time.Seconds seconds31 = seconds28.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.secondsIn(readableInterval32);
        org.joda.time.DurationFieldType durationFieldType34 = seconds33.getFieldType();
        boolean boolean35 = seconds31.isSupported(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = seconds36.get(durationFieldType37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds40 = seconds36.minus(seconds39);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = seconds41.get(durationFieldType42);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds45 = seconds41.minus(seconds44);
        org.joda.time.Seconds seconds47 = seconds45.dividedBy((int) '4');
        int int48 = seconds45.size();
        int int49 = seconds40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds45);
        org.joda.time.Seconds seconds51 = seconds45.plus(0);
        org.joda.time.Seconds seconds52 = seconds31.minus(seconds45);
        org.joda.time.DurationFieldType durationFieldType53 = seconds31.getFieldType();
        boolean boolean54 = seconds23.isSupported(durationFieldType53);
        boolean boolean55 = seconds20.isGreaterThan(seconds23);
        org.joda.time.PeriodType periodType56 = seconds23.getPeriodType();
        org.joda.time.Duration duration57 = seconds23.toStandardDuration();
        int int58 = seconds23.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        org.joda.time.Duration duration10 = seconds7.toStandardDuration();
        int int11 = seconds7.getSeconds();
        boolean boolean12 = seconds1.isLessThan(seconds7);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = seconds7.plus(seconds13);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds17.get(durationFieldType18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = seconds17.minus(seconds20);
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds24 = seconds23.negated();
        org.joda.time.Seconds seconds26 = seconds23.multipliedBy(100);
        int int27 = seconds26.size();
        boolean boolean28 = seconds13.isGreaterThan(seconds26);
        java.lang.String str29 = seconds26.toString();
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.secondsIn(readableInterval30);
        org.joda.time.DurationFieldType durationFieldType32 = seconds31.getFieldType();
        org.joda.time.Seconds seconds34 = seconds31.dividedBy((-1));
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds34);
        org.joda.time.Seconds seconds36 = seconds34.negated();
        org.joda.time.Seconds seconds38 = seconds36.minus((int) 'a');
        org.joda.time.ReadableInterval readableInterval39 = null;
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.secondsIn(readableInterval39);
        org.joda.time.Seconds seconds41 = seconds40.negated();
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.secondsIn(readableInterval42);
        int int44 = seconds43.size();
        boolean boolean45 = seconds41.isLessThan(seconds43);
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        int int48 = seconds47.size();
        org.joda.time.Seconds seconds50 = seconds47.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.secondsIn(readableInterval51);
        org.joda.time.DurationFieldType durationFieldType53 = seconds52.getFieldType();
        boolean boolean54 = seconds50.isSupported(durationFieldType53);
        boolean boolean55 = seconds43.isSupported(durationFieldType53);
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds43);
        org.joda.time.PeriodType periodType57 = seconds56.getPeriodType();
        org.joda.time.PeriodType periodType58 = seconds56.getPeriodType();
        java.lang.String str59 = seconds56.toString();
        boolean boolean60 = seconds36.isLessThan(seconds56);
        org.joda.time.ReadableInterval readableInterval61 = null;
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.secondsIn(readableInterval61);
        org.joda.time.Seconds seconds63 = seconds62.negated();
        org.joda.time.ReadableInterval readableInterval64 = null;
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.secondsIn(readableInterval64);
        int int66 = seconds65.size();
        boolean boolean67 = seconds63.isLessThan(seconds65);
        org.joda.time.ReadableInterval readableInterval68 = null;
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.secondsIn(readableInterval68);
        int int70 = seconds69.size();
        org.joda.time.Seconds seconds72 = seconds69.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval73 = null;
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.secondsIn(readableInterval73);
        org.joda.time.DurationFieldType durationFieldType75 = seconds74.getFieldType();
        boolean boolean76 = seconds72.isSupported(durationFieldType75);
        boolean boolean77 = seconds65.isSupported(durationFieldType75);
        org.joda.time.Seconds seconds78 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds65);
        org.joda.time.PeriodType periodType79 = seconds78.getPeriodType();
        org.joda.time.Seconds seconds81 = seconds78.plus(0);
        org.joda.time.MutablePeriod mutablePeriod82 = seconds81.toMutablePeriod();
        org.joda.time.Seconds seconds84 = seconds81.dividedBy(1);
        org.joda.time.ReadableInterval readableInterval85 = null;
        org.joda.time.Seconds seconds86 = org.joda.time.Seconds.secondsIn(readableInterval85);
        org.joda.time.DurationFieldType durationFieldType87 = seconds86.getFieldType();
        org.joda.time.Seconds seconds88 = seconds81.plus(seconds86);
        org.joda.time.Seconds seconds89 = seconds36.plus(seconds86);
        org.joda.time.Seconds seconds90 = seconds26.plus(seconds86);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT0S" + "'", str29, "PT0S");
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "PT0S" + "'", str59, "PT0S");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(mutablePeriod82);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertNotNull(seconds89);
        org.junit.Assert.assertNotNull(seconds90);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds1.get(durationFieldType3);
        org.joda.time.PeriodType periodType5 = seconds1.getPeriodType();
        java.lang.String str6 = seconds1.toString();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = seconds12.get(durationFieldType13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds16 = seconds12.minus(seconds15);
        org.joda.time.Seconds seconds18 = seconds16.dividedBy((int) '4');
        int int19 = seconds16.size();
        int int20 = seconds11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds16);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = seconds21.get(durationFieldType22);
        boolean boolean24 = seconds16.isLessThan(seconds21);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = seconds25.get(durationFieldType26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds29 = seconds25.minus(seconds28);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds36 = seconds34.dividedBy((int) '4');
        int int37 = seconds34.size();
        int int38 = seconds29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds34);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = seconds39.get(durationFieldType40);
        boolean boolean42 = seconds34.isLessThan(seconds39);
        boolean boolean43 = seconds21.isLessThan(seconds34);
        int int44 = seconds34.size();
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds34);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType50 = seconds49.getPeriodType();
        org.joda.time.Duration duration51 = seconds49.toStandardDuration();
        org.joda.time.Seconds seconds53 = seconds49.multipliedBy(0);
        org.joda.time.Seconds seconds54 = seconds49.negated();
        org.joda.time.Seconds seconds55 = seconds47.plus(seconds49);
        org.joda.time.PeriodType periodType56 = seconds55.getPeriodType();
        org.joda.time.Seconds seconds58 = seconds55.minus(2147483644);
        boolean boolean59 = seconds45.isLessThan(seconds58);
        int int60 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds45);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        java.lang.String str25 = seconds24.toString();
        org.joda.time.Period period26 = seconds24.toPeriod();
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.Seconds seconds29 = seconds28.negated();
        org.joda.time.MutablePeriod mutablePeriod30 = seconds28.toMutablePeriod();
        org.joda.time.Duration duration31 = seconds28.toStandardDuration();
        boolean boolean32 = seconds24.equals((java.lang.Object) seconds28);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = seconds38.get(durationFieldType39);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds42 = seconds38.minus(seconds41);
        org.joda.time.Seconds seconds44 = seconds42.dividedBy((int) '4');
        int int45 = seconds42.size();
        int int46 = seconds37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds42);
        org.joda.time.Seconds seconds48 = seconds42.plus(0);
        org.joda.time.MutablePeriod mutablePeriod49 = seconds42.toMutablePeriod();
        int int50 = seconds24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds42);
        org.joda.time.Seconds seconds52 = seconds24.minus(2147483644);
        org.joda.time.Seconds seconds53 = seconds6.minus(seconds52);
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.secondsIn(readableInterval54);
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds55);
        boolean boolean57 = seconds6.isLessThan(seconds56);
        int int58 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds56);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType61 = seconds60.getFieldType();
        org.joda.time.Seconds seconds62 = seconds1.minus(seconds60);
        org.joda.time.PeriodType periodType63 = seconds1.getPeriodType();
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT2147483644S" + "'", str25, "PT2147483644S");
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(seconds64);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.PeriodType periodType6 = seconds5.getPeriodType();
        org.joda.time.PeriodType periodType7 = seconds5.getPeriodType();
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        org.joda.time.Seconds seconds10 = seconds9.negated();
        org.joda.time.Seconds seconds12 = seconds9.minus((int) '#');
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType15 = seconds14.getPeriodType();
        org.joda.time.Duration duration16 = seconds14.toStandardDuration();
        org.joda.time.Seconds seconds17 = seconds9.plus(seconds14);
        org.joda.time.Seconds seconds18 = seconds5.minus(seconds9);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.minus((int) (byte) 0);
        boolean boolean24 = seconds18.equals((java.lang.Object) seconds20);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds1.get(durationFieldType3);
        org.joda.time.PeriodType periodType5 = seconds1.getPeriodType();
        java.lang.String str6 = seconds1.toString();
        org.joda.time.Seconds seconds8 = seconds1.dividedBy(10);
        int int10 = seconds8.getValue(0);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        org.joda.time.PeriodType periodType12 = seconds8.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds7 = seconds5.minus((int) (byte) 0);
        boolean boolean8 = seconds4.isLessThan(seconds7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType12 = seconds11.getPeriodType();
        org.joda.time.Duration duration13 = seconds11.toStandardDuration();
        org.joda.time.Seconds seconds15 = seconds11.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds17 = seconds11.dividedBy((int) (short) 1);
        boolean boolean18 = seconds4.equals((java.lang.Object) (short) 1);
        boolean boolean19 = seconds1.isGreaterThan(seconds4);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds24 = seconds20.minus(seconds23);
        org.joda.time.Seconds seconds26 = seconds23.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.DurationFieldType durationFieldType29 = seconds28.getFieldType();
        org.joda.time.Seconds seconds31 = seconds28.dividedBy((-1));
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds28);
        int int33 = seconds28.size();
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.secondsIn(readableInterval34);
        org.joda.time.DurationFieldType durationFieldType36 = seconds35.getFieldType();
        org.joda.time.Seconds seconds38 = seconds35.dividedBy((-1));
        int int39 = seconds35.getSeconds();
        org.joda.time.Seconds seconds40 = seconds28.minus(seconds35);
        boolean boolean41 = seconds26.isGreaterThan(seconds40);
        boolean boolean42 = seconds1.isGreaterThan(seconds40);
        org.joda.time.Seconds seconds44 = seconds1.minus(3);
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = seconds45.get(durationFieldType46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds49 = seconds45.minus(seconds48);
        org.joda.time.Seconds seconds51 = seconds49.dividedBy((int) '4');
        org.joda.time.MutablePeriod mutablePeriod52 = seconds49.toMutablePeriod();
        org.joda.time.Seconds seconds54 = seconds49.minus(101);
        org.joda.time.Seconds seconds55 = seconds44.minus(seconds54);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        boolean boolean12 = seconds6.isGreaterThan(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        org.joda.time.PeriodType periodType14 = seconds6.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod15 = seconds6.toMutablePeriod();
        org.joda.time.Seconds seconds16 = seconds6.negated();
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.secondsIn(readableInterval17);
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        org.joda.time.Seconds seconds21 = seconds18.dividedBy((-1));
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.secondsIn(readableInterval22);
        int int24 = seconds23.size();
        org.joda.time.Seconds seconds26 = seconds23.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.DurationFieldType durationFieldType29 = seconds28.getFieldType();
        boolean boolean30 = seconds26.isSupported(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = seconds36.get(durationFieldType37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds40 = seconds36.minus(seconds39);
        org.joda.time.Seconds seconds42 = seconds40.dividedBy((int) '4');
        int int43 = seconds40.size();
        int int44 = seconds35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds40);
        org.joda.time.Seconds seconds46 = seconds40.plus(0);
        org.joda.time.Seconds seconds47 = seconds26.minus(seconds40);
        org.joda.time.DurationFieldType durationFieldType48 = seconds26.getFieldType();
        boolean boolean49 = seconds18.isSupported(durationFieldType48);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds53 = seconds51.minus((int) (byte) 0);
        boolean boolean54 = seconds50.isLessThan(seconds53);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds50);
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType58 = seconds57.getPeriodType();
        org.joda.time.Duration duration59 = seconds57.toStandardDuration();
        org.joda.time.Seconds seconds61 = seconds57.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds63 = seconds57.dividedBy((int) (short) 1);
        boolean boolean64 = seconds50.equals((java.lang.Object) (short) 1);
        boolean boolean65 = seconds18.equals((java.lang.Object) seconds50);
        boolean boolean66 = seconds16.equals((java.lang.Object) seconds50);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.Seconds seconds17 = seconds9.multipliedBy(0);
        org.joda.time.Seconds seconds19 = seconds17.plus(100);
        org.joda.time.Duration duration20 = seconds17.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType22 = seconds17.getFieldType(2147483609);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483609");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(duration20);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds0.getFieldType();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((int) ' ');
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.Seconds seconds10 = seconds8.plus((int) (short) 0);
        org.joda.time.Seconds seconds12 = seconds8.plus((int) (byte) -1);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.secondsIn(readableInterval13);
        org.joda.time.Seconds seconds15 = seconds14.negated();
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        boolean boolean19 = seconds15.isLessThan(seconds17);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        int int22 = seconds21.size();
        org.joda.time.Seconds seconds24 = seconds21.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.secondsIn(readableInterval25);
        org.joda.time.DurationFieldType durationFieldType27 = seconds26.getFieldType();
        boolean boolean28 = seconds24.isSupported(durationFieldType27);
        boolean boolean29 = seconds17.isSupported(durationFieldType27);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.Seconds seconds31 = seconds30.negated();
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.secondsIn(readableInterval32);
        int int34 = seconds33.size();
        org.joda.time.Seconds seconds36 = seconds33.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.secondsIn(readableInterval37);
        org.joda.time.DurationFieldType durationFieldType39 = seconds38.getFieldType();
        boolean boolean40 = seconds36.isSupported(durationFieldType39);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = seconds41.get(durationFieldType42);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds45 = seconds41.minus(seconds44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds46.get(durationFieldType47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds50 = seconds46.minus(seconds49);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) '4');
        int int53 = seconds50.size();
        int int54 = seconds45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds50);
        org.joda.time.Seconds seconds56 = seconds50.plus(0);
        org.joda.time.Seconds seconds57 = seconds36.minus(seconds50);
        org.joda.time.Seconds seconds59 = seconds50.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType60 = seconds59.getPeriodType();
        org.joda.time.ReadableInterval readableInterval61 = null;
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.secondsIn(readableInterval61);
        org.joda.time.DurationFieldType durationFieldType63 = seconds62.getFieldType();
        org.joda.time.Seconds seconds65 = seconds62.dividedBy((-1));
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds65);
        org.joda.time.Seconds seconds67 = seconds65.negated();
        org.joda.time.Seconds seconds68 = seconds59.plus(seconds65);
        org.joda.time.Seconds seconds69 = seconds30.plus(seconds68);
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType72 = seconds71.getPeriodType();
        org.joda.time.Duration duration73 = seconds71.toStandardDuration();
        org.joda.time.Seconds seconds75 = seconds71.plus((int) (short) 0);
        int int76 = seconds75.size();
        boolean boolean77 = seconds69.isLessThan(seconds75);
        int int78 = seconds8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds75);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Period period2 = seconds1.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Period period4 = seconds1.toPeriod();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType6 = seconds5.getPeriodType();
        boolean boolean7 = seconds1.isLessThan(seconds5);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds11 = seconds9.minus((int) (byte) 0);
        boolean boolean12 = seconds8.isLessThan(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds16 = seconds14.minus((int) (byte) 0);
        boolean boolean17 = seconds13.isLessThan(seconds16);
        org.joda.time.Period period18 = seconds13.toPeriod();
        int int19 = seconds11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds13);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        boolean boolean23 = seconds11.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds24 = seconds1.plus(seconds11);
        org.joda.time.Seconds seconds26 = seconds24.minus((int) (short) 10);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Period period7 = seconds5.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds16 = seconds14.dividedBy((int) '4');
        int int17 = seconds14.size();
        int int18 = seconds9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds14);
        org.joda.time.Seconds seconds20 = seconds14.plus(0);
        boolean boolean21 = seconds1.isLessThan(seconds14);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = seconds22.get(durationFieldType23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds26 = seconds22.minus(seconds25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = seconds27.get(durationFieldType28);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds31 = seconds27.minus(seconds30);
        org.joda.time.Seconds seconds33 = seconds31.dividedBy((int) '4');
        int int34 = seconds31.size();
        int int35 = seconds26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds31);
        org.joda.time.Seconds seconds37 = seconds31.plus(0);
        java.lang.String str38 = seconds37.toString();
        org.joda.time.Period period39 = seconds37.toPeriod();
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.secondsIn(readableInterval40);
        org.joda.time.Seconds seconds42 = seconds41.negated();
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = seconds41.get(durationFieldType43);
        boolean boolean45 = seconds37.isLessThan(seconds41);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds41);
        org.joda.time.DurationFieldType durationFieldType48 = seconds41.getFieldType(0);
        int int49 = seconds14.get(durationFieldType48);
        org.joda.time.Seconds seconds51 = seconds14.minus((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds53 = seconds14.multipliedBy((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483644 * 100");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT2147483644S" + "'", str38, "PT2147483644S");
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2147483644 + "'", int49 == 2147483644);
        org.junit.Assert.assertNotNull(seconds51);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        boolean boolean9 = seconds1.isLessThan(seconds8);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType12 = seconds11.getPeriodType();
        org.joda.time.Duration duration13 = seconds11.toStandardDuration();
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds17 = seconds15.minus((int) (byte) 0);
        boolean boolean18 = seconds14.isLessThan(seconds17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds14);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        org.joda.time.Duration duration23 = seconds21.toStandardDuration();
        org.joda.time.Seconds seconds25 = seconds21.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds27 = seconds21.dividedBy((int) (short) 1);
        boolean boolean28 = seconds14.equals((java.lang.Object) (short) 1);
        boolean boolean29 = seconds11.isGreaterThan(seconds14);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds36 = seconds33.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.secondsIn(readableInterval37);
        org.joda.time.DurationFieldType durationFieldType39 = seconds38.getFieldType();
        org.joda.time.Seconds seconds41 = seconds38.dividedBy((-1));
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds38);
        int int43 = seconds38.size();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.DurationFieldType durationFieldType46 = seconds45.getFieldType();
        org.joda.time.Seconds seconds48 = seconds45.dividedBy((-1));
        int int49 = seconds45.getSeconds();
        org.joda.time.Seconds seconds50 = seconds38.minus(seconds45);
        boolean boolean51 = seconds36.isGreaterThan(seconds50);
        boolean boolean52 = seconds11.isGreaterThan(seconds50);
        org.joda.time.Seconds seconds53 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds55 = seconds53.multipliedBy(3);
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType58 = seconds57.getPeriodType();
        org.joda.time.Duration duration59 = seconds57.toStandardDuration();
        org.joda.time.Seconds seconds61 = seconds57.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds63 = seconds57.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = seconds64.get(durationFieldType65);
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds68 = seconds64.minus(seconds67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds73 = seconds69.minus(seconds72);
        org.joda.time.Seconds seconds75 = seconds73.dividedBy((int) '4');
        int int76 = seconds73.size();
        int int77 = seconds68.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds73);
        org.joda.time.Seconds seconds79 = seconds73.plus(0);
        java.lang.String str80 = seconds79.toString();
        org.joda.time.Period period81 = seconds79.toPeriod();
        org.joda.time.ReadableInterval readableInterval82 = null;
        org.joda.time.Seconds seconds83 = org.joda.time.Seconds.secondsIn(readableInterval82);
        org.joda.time.Seconds seconds84 = seconds83.negated();
        org.joda.time.MutablePeriod mutablePeriod85 = seconds83.toMutablePeriod();
        org.joda.time.Duration duration86 = seconds83.toStandardDuration();
        boolean boolean87 = seconds79.equals((java.lang.Object) seconds83);
        org.joda.time.Seconds seconds88 = seconds57.minus(seconds83);
        org.joda.time.Seconds seconds90 = seconds83.multipliedBy(52);
        org.joda.time.ReadableInterval readableInterval91 = null;
        org.joda.time.Seconds seconds92 = org.joda.time.Seconds.secondsIn(readableInterval91);
        org.joda.time.DurationFieldType durationFieldType93 = seconds92.getFieldType();
        org.joda.time.Seconds seconds95 = seconds92.dividedBy((-1));
        org.joda.time.Seconds seconds96 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds92);
        org.joda.time.PeriodType periodType97 = seconds96.getPeriodType();
        boolean boolean98 = seconds83.equals((java.lang.Object) seconds96);
        boolean boolean99 = seconds55.equals((java.lang.Object) seconds96);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "PT2147483644S" + "'", str80, "PT2147483644S");
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(mutablePeriod85);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertNotNull(seconds90);
        org.junit.Assert.assertNotNull(seconds92);
        org.junit.Assert.assertNotNull(durationFieldType93);
        org.junit.Assert.assertNotNull(seconds95);
        org.junit.Assert.assertNotNull(seconds96);
        org.junit.Assert.assertNotNull(periodType97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Duration duration2 = seconds1.toStandardDuration();
        int int3 = seconds1.size();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = seconds4.get(durationFieldType5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds8 = seconds4.minus(seconds7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds15 = seconds13.dividedBy((int) '4');
        int int16 = seconds13.size();
        int int17 = seconds8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds13);
        org.joda.time.Seconds seconds19 = seconds13.plus(0);
        java.lang.String str20 = seconds19.toString();
        org.joda.time.Period period21 = seconds19.toPeriod();
        org.joda.time.Seconds seconds23 = seconds19.multipliedBy((int) (short) -1);
        org.joda.time.Seconds seconds24 = seconds1.plus(seconds19);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT2147483644S" + "'", str20, "PT2147483644S");
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.Seconds seconds4 = seconds1.minus((int) '#');
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType7 = seconds6.getPeriodType();
        org.joda.time.Duration duration8 = seconds6.toStandardDuration();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds6);
        org.joda.time.Seconds seconds10 = seconds6.negated();
        org.joda.time.Seconds seconds12 = seconds6.plus((-1));
        org.joda.time.Seconds seconds14 = seconds12.multipliedBy(2147483644);
        org.joda.time.PeriodType periodType15 = seconds12.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(periodType15);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        org.joda.time.Duration duration10 = seconds7.toStandardDuration();
        int int11 = seconds7.getSeconds();
        boolean boolean12 = seconds1.isLessThan(seconds7);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = seconds22.dividedBy((int) '4');
        int int25 = seconds22.size();
        int int26 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds22);
        org.joda.time.Seconds seconds28 = seconds22.plus(0);
        java.lang.String str29 = seconds28.toString();
        org.joda.time.Period period30 = seconds28.toPeriod();
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn(readableInterval31);
        org.joda.time.Seconds seconds33 = seconds32.negated();
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds32.get(durationFieldType34);
        boolean boolean36 = seconds28.isLessThan(seconds32);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds32);
        org.joda.time.Seconds seconds38 = seconds1.plus(seconds32);
        org.joda.time.DurationFieldType durationFieldType39 = seconds1.getFieldType();
        org.joda.time.Seconds seconds41 = seconds1.minus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType42 = seconds41.getFieldType();
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.secondsIn(readableInterval43);
        org.joda.time.Seconds seconds45 = seconds44.negated();
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        int int48 = seconds47.size();
        boolean boolean49 = seconds45.isLessThan(seconds47);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.secondsIn(readableInterval50);
        int int52 = seconds51.size();
        org.joda.time.Seconds seconds54 = seconds51.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.secondsIn(readableInterval55);
        org.joda.time.DurationFieldType durationFieldType57 = seconds56.getFieldType();
        boolean boolean58 = seconds54.isSupported(durationFieldType57);
        boolean boolean59 = seconds47.isSupported(durationFieldType57);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds47);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType63 = seconds62.getPeriodType();
        org.joda.time.Duration duration64 = seconds62.toStandardDuration();
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds62);
        boolean boolean66 = seconds60.equals((java.lang.Object) seconds62);
        int int67 = seconds60.size();
        org.joda.time.Seconds seconds69 = seconds60.plus(0);
        org.joda.time.Seconds seconds70 = seconds41.plus(seconds60);
        int int71 = seconds70.getSeconds();
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType73 = null;
        int int74 = seconds72.get(durationFieldType73);
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds76 = seconds72.minus(seconds75);
        org.joda.time.Seconds seconds78 = seconds75.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds79 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds80 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds82 = seconds80.minus((int) (byte) 0);
        boolean boolean83 = seconds79.isLessThan(seconds82);
        org.joda.time.Seconds seconds84 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds85 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds87 = seconds85.minus((int) (byte) 0);
        boolean boolean88 = seconds84.isLessThan(seconds87);
        org.joda.time.Period period89 = seconds84.toPeriod();
        int int90 = seconds82.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds84);
        org.joda.time.Seconds seconds91 = seconds75.plus(seconds84);
        int int92 = seconds70.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds84);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2147483644S" + "'", str29, "PT2147483644S");
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertNotNull(seconds87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(seconds91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((-2147483647));
        org.joda.time.Hours hours2 = seconds1.toStandardHours();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(hours2);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = seconds19.get(durationFieldType20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds23 = seconds19.minus(seconds22);
        org.joda.time.Seconds seconds25 = seconds23.dividedBy((int) '4');
        int int26 = seconds23.size();
        int int27 = seconds18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds23);
        org.joda.time.DurationFieldType durationFieldType28 = seconds18.getFieldType();
        boolean boolean29 = seconds13.isSupported(durationFieldType28);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        java.lang.String str3 = seconds1.toString();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds7 = seconds5.minus((int) (byte) 0);
        boolean boolean8 = seconds4.isLessThan(seconds7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds12 = seconds10.minus((int) (byte) 0);
        boolean boolean13 = seconds9.isLessThan(seconds12);
        org.joda.time.Period period14 = seconds9.toPeriod();
        int int15 = seconds7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds16 = seconds1.minus(seconds9);
        org.joda.time.Seconds seconds18 = seconds1.multipliedBy((int) (byte) 10);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0S" + "'", str3, "PT0S");
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) -1);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.minus(10);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.dividedBy((-1));
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds9);
        org.joda.time.DurationFieldType durationFieldType11 = seconds10.getFieldType();
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int14 = seconds13.getSeconds();
        org.joda.time.Duration duration15 = seconds13.toStandardDuration();
        org.joda.time.Seconds seconds16 = seconds10.minus(seconds13);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.secondsIn(readableInterval17);
        org.joda.time.Seconds seconds19 = seconds18.negated();
        org.joda.time.Seconds seconds21 = seconds18.minus((int) '#');
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType24 = seconds23.getPeriodType();
        org.joda.time.Duration duration25 = seconds23.toStandardDuration();
        org.joda.time.Seconds seconds27 = seconds23.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds28 = seconds27.negated();
        org.joda.time.Duration duration29 = seconds27.toStandardDuration();
        org.joda.time.Seconds seconds30 = seconds27.negated();
        org.joda.time.DurationFieldType durationFieldType31 = seconds27.getFieldType();
        boolean boolean32 = seconds18.isSupported(durationFieldType31);
        boolean boolean33 = seconds16.isSupported(durationFieldType31);
        org.joda.time.DurationFieldType durationFieldType34 = seconds16.getFieldType();
        boolean boolean35 = seconds4.isSupported(durationFieldType34);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType40 = seconds39.getPeriodType();
        org.joda.time.Duration duration41 = seconds39.toStandardDuration();
        org.joda.time.Seconds seconds43 = seconds39.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds44 = seconds43.negated();
        boolean boolean45 = seconds37.isGreaterThan(seconds43);
        org.joda.time.Seconds seconds47 = seconds43.multipliedBy((int) ' ');
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.secondsIn(readableInterval48);
        org.joda.time.Duration duration50 = seconds49.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.secondsIn(readableInterval51);
        org.joda.time.Seconds seconds53 = seconds52.negated();
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.secondsIn(readableInterval54);
        int int56 = seconds55.size();
        boolean boolean57 = seconds53.isLessThan(seconds55);
        org.joda.time.ReadableInterval readableInterval58 = null;
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.secondsIn(readableInterval58);
        int int60 = seconds59.size();
        org.joda.time.Seconds seconds62 = seconds59.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval63 = null;
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.secondsIn(readableInterval63);
        org.joda.time.DurationFieldType durationFieldType65 = seconds64.getFieldType();
        boolean boolean66 = seconds62.isSupported(durationFieldType65);
        boolean boolean67 = seconds55.isSupported(durationFieldType65);
        org.joda.time.Seconds seconds68 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds55);
        boolean boolean69 = seconds49.isLessThan(seconds55);
        boolean boolean70 = seconds43.isGreaterThan(seconds55);
        org.joda.time.Seconds seconds72 = seconds55.multipliedBy((int) (short) 0);
        boolean boolean73 = seconds4.isLessThan(seconds55);
        int int74 = seconds4.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-11) + "'", int74 == (-11));
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.PeriodType periodType7 = seconds2.getPeriodType();
        int int8 = seconds2.getSeconds();
        int int9 = seconds2.getSeconds();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType12 = seconds11.getPeriodType();
        org.joda.time.Duration duration13 = seconds11.toStandardDuration();
        org.joda.time.Seconds seconds15 = seconds11.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds16 = seconds15.negated();
        org.joda.time.Duration duration17 = seconds15.toStandardDuration();
        org.joda.time.Seconds seconds18 = seconds15.negated();
        org.joda.time.DurationFieldType durationFieldType19 = seconds15.getFieldType();
        boolean boolean20 = seconds2.isSupported(durationFieldType19);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.Seconds seconds20 = seconds17.plus(0);
        org.joda.time.MutablePeriod mutablePeriod21 = seconds20.toMutablePeriod();
        org.joda.time.Seconds seconds23 = seconds20.dividedBy(1);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.secondsIn(readableInterval24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        org.joda.time.Seconds seconds27 = seconds20.plus(seconds25);
        java.lang.String str28 = seconds20.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT0S" + "'", str28, "PT0S");
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.multipliedBy(0);
        org.joda.time.Seconds seconds8 = seconds3.negated();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds3);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Seconds seconds12 = seconds9.minus(2147483644);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.secondsIn(readableInterval13);
        org.joda.time.Seconds seconds15 = seconds14.negated();
        org.joda.time.MutablePeriod mutablePeriod16 = seconds14.toMutablePeriod();
        org.joda.time.Duration duration17 = seconds14.toStandardDuration();
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds29 = seconds27.dividedBy((int) '4');
        int int30 = seconds27.size();
        int int31 = seconds22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds27);
        org.joda.time.Seconds seconds33 = seconds27.plus(0);
        boolean boolean34 = seconds14.isLessThan(seconds27);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = seconds35.get(durationFieldType36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds39 = seconds35.minus(seconds38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = seconds40.get(durationFieldType41);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds44 = seconds40.minus(seconds43);
        org.joda.time.Seconds seconds46 = seconds44.dividedBy((int) '4');
        int int47 = seconds44.size();
        int int48 = seconds39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds44);
        org.joda.time.Seconds seconds50 = seconds44.plus(0);
        java.lang.String str51 = seconds50.toString();
        org.joda.time.Period period52 = seconds50.toPeriod();
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.secondsIn(readableInterval53);
        org.joda.time.Seconds seconds55 = seconds54.negated();
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds54.get(durationFieldType56);
        boolean boolean58 = seconds50.isLessThan(seconds54);
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds54);
        org.joda.time.DurationFieldType durationFieldType61 = seconds54.getFieldType(0);
        int int62 = seconds27.get(durationFieldType61);
        org.joda.time.Seconds seconds64 = seconds27.minus((int) (byte) -1);
        org.joda.time.Seconds seconds65 = seconds64.negated();
        boolean boolean66 = seconds12.equals((java.lang.Object) seconds64);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PT2147483644S" + "'", str51, "PT2147483644S");
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2147483644 + "'", int62 == 2147483644);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds0.getFieldType();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((int) ' ');
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.Seconds seconds9 = seconds0.negated();
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.Seconds seconds21 = seconds19.dividedBy((int) '4');
        int int22 = seconds19.size();
        int int23 = seconds14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        boolean boolean27 = seconds19.isLessThan(seconds24);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) '4');
        int int40 = seconds37.size();
        int int41 = seconds32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds37);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = seconds42.get(durationFieldType43);
        boolean boolean45 = seconds37.isLessThan(seconds42);
        boolean boolean46 = seconds24.isLessThan(seconds37);
        org.joda.time.DurationFieldType durationFieldType47 = seconds37.getFieldType();
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds37);
        org.joda.time.DurationFieldType durationFieldType49 = seconds37.getFieldType();
        int int50 = seconds9.get(durationFieldType49);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds52 = seconds9.multipliedBy(3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483647 * 3");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-2147483647) + "'", int50 == (-2147483647));
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.multipliedBy(0);
        org.joda.time.Seconds seconds8 = seconds3.negated();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds3);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = seconds19.get(durationFieldType20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds23 = seconds19.minus(seconds22);
        org.joda.time.Seconds seconds25 = seconds23.dividedBy((int) '4');
        int int26 = seconds23.size();
        int int27 = seconds18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds23);
        org.joda.time.Seconds seconds29 = seconds23.plus(0);
        java.lang.String str30 = seconds29.toString();
        org.joda.time.Period period31 = seconds29.toPeriod();
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.secondsIn(readableInterval32);
        org.joda.time.Seconds seconds34 = seconds33.negated();
        org.joda.time.MutablePeriod mutablePeriod35 = seconds33.toMutablePeriod();
        org.joda.time.Duration duration36 = seconds33.toStandardDuration();
        boolean boolean37 = seconds29.equals((java.lang.Object) seconds33);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = seconds38.get(durationFieldType39);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds42 = seconds38.minus(seconds41);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = seconds43.get(durationFieldType44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds47 = seconds43.minus(seconds46);
        org.joda.time.Seconds seconds49 = seconds47.dividedBy((int) '4');
        int int50 = seconds47.size();
        int int51 = seconds42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds47);
        org.joda.time.Seconds seconds53 = seconds47.plus(0);
        org.joda.time.MutablePeriod mutablePeriod54 = seconds47.toMutablePeriod();
        int int55 = seconds29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds47);
        org.joda.time.Seconds seconds57 = seconds29.minus(2147483644);
        org.joda.time.Seconds seconds58 = seconds11.minus(seconds57);
        boolean boolean59 = seconds9.isGreaterThan(seconds11);
        org.joda.time.PeriodType periodType60 = seconds9.getPeriodType();
        org.joda.time.Duration duration61 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.seconds((int) (byte) -1);
        int int64 = seconds63.size();
        org.joda.time.Seconds seconds66 = seconds63.minus(10);
        org.joda.time.ReadableInterval readableInterval67 = null;
        org.joda.time.Seconds seconds68 = org.joda.time.Seconds.secondsIn(readableInterval67);
        org.joda.time.DurationFieldType durationFieldType69 = seconds68.getFieldType();
        org.joda.time.Seconds seconds71 = seconds68.dividedBy((-1));
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds71);
        org.joda.time.DurationFieldType durationFieldType73 = seconds72.getFieldType();
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int76 = seconds75.getSeconds();
        org.joda.time.Duration duration77 = seconds75.toStandardDuration();
        org.joda.time.Seconds seconds78 = seconds72.minus(seconds75);
        org.joda.time.ReadableInterval readableInterval79 = null;
        org.joda.time.Seconds seconds80 = org.joda.time.Seconds.secondsIn(readableInterval79);
        org.joda.time.Seconds seconds81 = seconds80.negated();
        org.joda.time.Seconds seconds83 = seconds80.minus((int) '#');
        org.joda.time.Seconds seconds85 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType86 = seconds85.getPeriodType();
        org.joda.time.Duration duration87 = seconds85.toStandardDuration();
        org.joda.time.Seconds seconds89 = seconds85.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds90 = seconds89.negated();
        org.joda.time.Duration duration91 = seconds89.toStandardDuration();
        org.joda.time.Seconds seconds92 = seconds89.negated();
        org.joda.time.DurationFieldType durationFieldType93 = seconds89.getFieldType();
        boolean boolean94 = seconds80.isSupported(durationFieldType93);
        boolean boolean95 = seconds78.isSupported(durationFieldType93);
        org.joda.time.DurationFieldType durationFieldType96 = seconds78.getFieldType();
        boolean boolean97 = seconds66.isSupported(durationFieldType96);
        org.joda.time.Seconds seconds98 = seconds9.plus(seconds66);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT2147483644S" + "'", str30, "PT2147483644S");
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertNotNull(seconds89);
        org.junit.Assert.assertNotNull(seconds90);
        org.junit.Assert.assertNotNull(duration91);
        org.junit.Assert.assertNotNull(seconds92);
        org.junit.Assert.assertNotNull(durationFieldType93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(durationFieldType96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(seconds98);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds8 = seconds6.dividedBy((int) '4');
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        org.joda.time.PeriodType periodType10 = seconds8.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod11 = seconds8.toMutablePeriod();
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType14 = seconds13.getPeriodType();
        org.joda.time.Duration duration15 = seconds13.toStandardDuration();
        org.joda.time.Seconds seconds17 = seconds13.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds19 = seconds13.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds21 = seconds13.minus(seconds20);
        org.joda.time.DurationFieldType durationFieldType22 = seconds13.getFieldType();
        int int23 = seconds8.get(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds8.plus((int) (byte) 0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 41297762 + "'", int23 == 41297762);
        org.junit.Assert.assertNotNull(seconds25);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        org.joda.time.Duration duration10 = seconds7.toStandardDuration();
        int int11 = seconds7.getSeconds();
        boolean boolean12 = seconds1.isLessThan(seconds7);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = seconds22.dividedBy((int) '4');
        int int25 = seconds22.size();
        int int26 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds22);
        org.joda.time.Seconds seconds28 = seconds22.plus(0);
        java.lang.String str29 = seconds28.toString();
        org.joda.time.Period period30 = seconds28.toPeriod();
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn(readableInterval31);
        org.joda.time.Seconds seconds33 = seconds32.negated();
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds32.get(durationFieldType34);
        boolean boolean36 = seconds28.isLessThan(seconds32);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds32);
        org.joda.time.Seconds seconds38 = seconds1.plus(seconds32);
        org.joda.time.MutablePeriod mutablePeriod39 = seconds1.toMutablePeriod();
        java.lang.String str40 = seconds1.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2147483644S" + "'", str29, "PT2147483644S");
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT1S" + "'", str40, "PT1S");
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        boolean boolean12 = seconds6.isGreaterThan(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType16 = seconds15.getPeriodType();
        org.joda.time.Duration duration17 = seconds15.toStandardDuration();
        org.joda.time.Seconds seconds19 = seconds15.multipliedBy(0);
        java.lang.String str20 = seconds19.toString();
        org.joda.time.DurationFieldType durationFieldType21 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds34 = seconds32.dividedBy((int) '4');
        int int35 = seconds32.size();
        int int36 = seconds27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds32);
        boolean boolean37 = seconds22.isLessThan(seconds32);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.secondsIn(readableInterval38);
        int int40 = seconds39.size();
        org.joda.time.Seconds seconds42 = seconds39.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.secondsIn(readableInterval43);
        org.joda.time.DurationFieldType durationFieldType45 = seconds44.getFieldType();
        boolean boolean46 = seconds42.isSupported(durationFieldType45);
        boolean boolean47 = seconds22.isSupported(durationFieldType45);
        org.joda.time.Seconds seconds48 = seconds19.plus(seconds22);
        int int49 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds22);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT0S" + "'", str20, "PT0S");
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Duration duration1 = seconds0.toStandardDuration();
        org.joda.time.Period period2 = seconds0.toPeriod();
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = seconds4.get(durationFieldType5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds8 = seconds4.minus(seconds7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds15 = seconds13.dividedBy((int) '4');
        int int16 = seconds13.size();
        int int17 = seconds8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds13);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        int int21 = seconds8.get(durationFieldType20);
        org.joda.time.Seconds seconds22 = seconds8.negated();
        org.joda.time.DurationFieldType durationFieldType23 = seconds8.getFieldType();
        boolean boolean24 = seconds3.isSupported(durationFieldType23);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483644 + "'", int21 == 2147483644);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType5 = seconds4.getPeriodType();
        org.joda.time.Duration duration6 = seconds4.toStandardDuration();
        org.joda.time.Seconds seconds8 = seconds4.multipliedBy(0);
        org.joda.time.Seconds seconds9 = seconds4.negated();
        org.joda.time.Period period10 = seconds9.toPeriod();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy(100);
        org.joda.time.Seconds seconds14 = seconds9.minus(0);
        int int15 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds17 = seconds9.minus(0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(seconds17);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds19.get(durationFieldType21);
        boolean boolean23 = seconds15.isLessThan(seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        int int25 = seconds19.getSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 10);
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Seconds seconds6 = seconds1.minus(3);
        org.joda.time.MutablePeriod mutablePeriod7 = seconds6.toMutablePeriod();
        org.joda.time.Seconds seconds9 = seconds6.minus((int) (byte) 0);
        org.joda.time.Seconds seconds11 = seconds6.minus((int) ' ');
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        boolean boolean26 = seconds16.equals((java.lang.Object) seconds22);
        org.joda.time.MutablePeriod mutablePeriod27 = seconds16.toMutablePeriod();
        org.joda.time.Seconds seconds28 = seconds0.plus(seconds16);
        org.joda.time.MutablePeriod mutablePeriod29 = seconds0.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.MutablePeriod mutablePeriod40 = seconds33.toMutablePeriod();
        int int41 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds43 = seconds15.minus(2147483644);
        org.joda.time.Duration duration44 = seconds15.toStandardDuration();
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType47 = seconds46.getPeriodType();
        org.joda.time.Duration duration48 = seconds46.toStandardDuration();
        org.joda.time.Seconds seconds50 = seconds46.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds51 = seconds50.negated();
        org.joda.time.Duration duration52 = seconds50.toStandardDuration();
        org.joda.time.Seconds seconds53 = seconds50.negated();
        org.joda.time.DurationFieldType durationFieldType54 = seconds50.getFieldType();
        boolean boolean55 = seconds15.isLessThan(seconds50);
        org.joda.time.Seconds seconds57 = seconds15.dividedBy((-100));
        org.joda.time.Seconds seconds58 = seconds57.negated();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds58);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds0.getFieldType();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((int) ' ');
        org.joda.time.Seconds seconds9 = seconds7.plus(3);
        java.lang.String str10 = seconds7.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT67108863S" + "'", str10, "PT67108863S");
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        int int4 = seconds1.size();
        org.joda.time.Duration duration5 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds6 = seconds1.negated();
        int int7 = seconds1.getSeconds();
        org.joda.time.Seconds seconds9 = seconds1.plus(2147483647);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(seconds9);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds6 = seconds1.multipliedBy((int) (short) 1);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        int int13 = seconds8.size();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        org.joda.time.Seconds seconds18 = seconds15.dividedBy((-1));
        int int19 = seconds15.getSeconds();
        org.joda.time.Seconds seconds20 = seconds8.minus(seconds15);
        boolean boolean21 = seconds6.isGreaterThan(seconds8);
        org.joda.time.MutablePeriod mutablePeriod22 = seconds6.toMutablePeriod();
        int int23 = seconds6.getSeconds();
        org.joda.time.Period period24 = seconds6.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(period24);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.secondsIn(readableInterval4);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds6);
        org.joda.time.Duration duration8 = seconds1.toStandardDuration();
        org.joda.time.Duration duration9 = seconds1.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration9);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Period period5 = seconds0.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds0.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT-2147483644S");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds3 = seconds1.multipliedBy(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483644 * 10");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ONE;
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.secondsIn(readableInterval1);
        org.joda.time.DurationFieldType durationFieldType3 = seconds2.getFieldType();
        org.joda.time.Seconds seconds5 = seconds2.dividedBy((-1));
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        int int8 = seconds0.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(seconds9);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds18 = seconds17.negated();
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.secondsIn(readableInterval19);
        int int21 = seconds20.size();
        org.joda.time.Seconds seconds23 = seconds20.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.secondsIn(readableInterval24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        boolean boolean27 = seconds23.isSupported(durationFieldType26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) '4');
        int int40 = seconds37.size();
        int int41 = seconds32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds37);
        org.joda.time.Seconds seconds43 = seconds37.plus(0);
        org.joda.time.Seconds seconds44 = seconds23.minus(seconds37);
        org.joda.time.Seconds seconds46 = seconds37.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType47 = seconds46.getPeriodType();
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.secondsIn(readableInterval48);
        org.joda.time.DurationFieldType durationFieldType50 = seconds49.getFieldType();
        org.joda.time.Seconds seconds52 = seconds49.dividedBy((-1));
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds52);
        org.joda.time.Seconds seconds54 = seconds52.negated();
        org.joda.time.Seconds seconds55 = seconds46.plus(seconds52);
        org.joda.time.Seconds seconds56 = seconds17.plus(seconds55);
        org.joda.time.DurationFieldType durationFieldType57 = seconds56.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType59 = seconds56.getFieldType((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(durationFieldType57);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        boolean boolean9 = seconds1.isGreaterThan(seconds7);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        org.joda.time.Seconds seconds14 = seconds11.dividedBy((-1));
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds11);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = seconds15.isSupported(durationFieldType16);
        org.joda.time.Seconds seconds19 = seconds15.plus((int) (byte) 1);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds24 = seconds20.minus(seconds23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = seconds25.get(durationFieldType26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds29 = seconds25.minus(seconds28);
        org.joda.time.Seconds seconds31 = seconds29.dividedBy((int) '4');
        int int32 = seconds29.size();
        int int33 = seconds24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds29);
        org.joda.time.Seconds seconds35 = seconds29.plus(0);
        java.lang.String str36 = seconds35.toString();
        org.joda.time.Period period37 = seconds35.toPeriod();
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.secondsIn(readableInterval38);
        org.joda.time.Seconds seconds40 = seconds39.negated();
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = seconds39.get(durationFieldType41);
        boolean boolean43 = seconds35.isLessThan(seconds39);
        org.joda.time.Seconds seconds44 = seconds19.minus(seconds35);
        org.joda.time.DurationFieldType durationFieldType45 = seconds44.getFieldType();
        org.joda.time.Seconds seconds46 = seconds1.plus(seconds44);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = seconds44.getValue((-2147483647));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT2147483644S" + "'", str36, "PT2147483644S");
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(seconds46);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds19.get(durationFieldType21);
        boolean boolean23 = seconds15.isLessThan(seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.Period period25 = seconds24.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int27 = seconds24.getValue(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds8 = seconds6.dividedBy((int) '4');
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        org.joda.time.DurationFieldType durationFieldType10 = seconds8.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType10);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) '#');
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy((-1));
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = seconds23.isSupported(durationFieldType24);
        org.joda.time.Seconds seconds27 = seconds23.plus((int) (byte) 1);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) '4');
        int int40 = seconds37.size();
        int int41 = seconds32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds37);
        org.joda.time.Seconds seconds43 = seconds37.plus(0);
        java.lang.String str44 = seconds43.toString();
        org.joda.time.Period period45 = seconds43.toPeriod();
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        org.joda.time.Seconds seconds48 = seconds47.negated();
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds47.get(durationFieldType49);
        boolean boolean51 = seconds43.isLessThan(seconds47);
        org.joda.time.Seconds seconds52 = seconds27.minus(seconds43);
        org.joda.time.Seconds seconds54 = seconds52.dividedBy((int) 'a');
        org.joda.time.Seconds seconds55 = seconds11.plus(seconds52);
        org.joda.time.Seconds seconds56 = seconds55.negated();
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = seconds57.get(durationFieldType58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds61 = seconds57.minus(seconds60);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = seconds62.get(durationFieldType63);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds66 = seconds62.minus(seconds65);
        org.joda.time.Seconds seconds68 = seconds66.dividedBy((int) '4');
        int int69 = seconds66.size();
        int int70 = seconds61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds66);
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = seconds71.get(durationFieldType72);
        boolean boolean74 = seconds66.isLessThan(seconds71);
        boolean boolean75 = seconds56.isLessThan(seconds66);
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType78 = seconds77.getPeriodType();
        org.joda.time.Duration duration79 = seconds77.toStandardDuration();
        org.joda.time.Seconds seconds81 = seconds77.dividedBy((int) (byte) 10);
        int int82 = seconds56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds81);
        boolean boolean83 = seconds1.isGreaterThan(seconds56);
        org.joda.time.Duration duration84 = seconds1.toStandardDuration();
        java.lang.Class<?> wildcardClass85 = seconds1.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2147483644S" + "'", str44, "PT2147483644S");
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((-11));
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        java.lang.String str6 = seconds5.toString();
        org.joda.time.DurationFieldType durationFieldType7 = seconds5.getFieldType();
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        org.joda.time.DurationFieldType durationFieldType10 = seconds9.getFieldType();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy((-1));
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType17 = seconds16.getPeriodType();
        org.joda.time.Duration duration18 = seconds16.toStandardDuration();
        org.joda.time.Seconds seconds20 = seconds16.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds21 = seconds20.negated();
        boolean boolean22 = seconds14.isLessThan(seconds21);
        org.joda.time.Seconds seconds23 = seconds12.plus(seconds14);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = seconds38.get(durationFieldType39);
        boolean boolean41 = seconds33.isLessThan(seconds38);
        java.lang.Class<?> wildcardClass42 = seconds33.getClass();
        boolean boolean43 = seconds14.equals((java.lang.Object) seconds33);
        boolean boolean44 = seconds5.isLessThan(seconds14);
        int int45 = seconds14.size();
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds14);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(seconds46);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) '#');
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy((-1));
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = seconds23.isSupported(durationFieldType24);
        org.joda.time.Seconds seconds27 = seconds23.plus((int) (byte) 1);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) '4');
        int int40 = seconds37.size();
        int int41 = seconds32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds37);
        org.joda.time.Seconds seconds43 = seconds37.plus(0);
        java.lang.String str44 = seconds43.toString();
        org.joda.time.Period period45 = seconds43.toPeriod();
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        org.joda.time.Seconds seconds48 = seconds47.negated();
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds47.get(durationFieldType49);
        boolean boolean51 = seconds43.isLessThan(seconds47);
        org.joda.time.Seconds seconds52 = seconds27.minus(seconds43);
        org.joda.time.Seconds seconds54 = seconds52.dividedBy((int) 'a');
        org.joda.time.Seconds seconds55 = seconds11.plus(seconds52);
        org.joda.time.Seconds seconds56 = seconds55.negated();
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = seconds57.get(durationFieldType58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds61 = seconds57.minus(seconds60);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = seconds62.get(durationFieldType63);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds66 = seconds62.minus(seconds65);
        org.joda.time.Seconds seconds68 = seconds66.dividedBy((int) '4');
        int int69 = seconds66.size();
        int int70 = seconds61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds66);
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = seconds71.get(durationFieldType72);
        boolean boolean74 = seconds66.isLessThan(seconds71);
        boolean boolean75 = seconds56.isLessThan(seconds66);
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType78 = seconds77.getPeriodType();
        org.joda.time.Duration duration79 = seconds77.toStandardDuration();
        org.joda.time.Seconds seconds81 = seconds77.dividedBy((int) (byte) 10);
        int int82 = seconds56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds81);
        boolean boolean83 = seconds1.isGreaterThan(seconds56);
        org.joda.time.Duration duration84 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds86 = seconds1.plus((-1));
        org.joda.time.DurationFieldType durationFieldType87 = null;
        int int88 = seconds86.get(durationFieldType87);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2147483644S" + "'", str44, "PT2147483644S");
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.PeriodType periodType12 = seconds11.getPeriodType();
        org.joda.time.Seconds seconds13 = seconds11.negated();
        java.lang.String str14 = seconds13.toString();
        org.joda.time.Seconds seconds15 = seconds4.plus(seconds13);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT0S" + "'", str14, "PT0S");
        org.junit.Assert.assertNotNull(seconds15);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType20 = seconds19.getPeriodType();
        org.joda.time.Duration duration21 = seconds19.toStandardDuration();
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        boolean boolean23 = seconds17.equals((java.lang.Object) seconds19);
        int int24 = seconds17.size();
        org.joda.time.Seconds seconds26 = seconds17.plus(0);
        java.lang.String str27 = seconds26.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT0S" + "'", str27, "PT0S");
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds55 = seconds50.multipliedBy((int) (byte) 0);
        org.joda.time.Duration duration56 = seconds55.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval57 = null;
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.secondsIn(readableInterval57);
        int int59 = seconds58.size();
        org.joda.time.Seconds seconds61 = seconds58.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.secondsIn(readableInterval62);
        org.joda.time.DurationFieldType durationFieldType64 = seconds63.getFieldType();
        boolean boolean65 = seconds61.isSupported(durationFieldType64);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = seconds66.get(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds70 = seconds66.minus(seconds69);
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = seconds71.get(durationFieldType72);
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds75 = seconds71.minus(seconds74);
        org.joda.time.Seconds seconds77 = seconds75.dividedBy((int) '4');
        int int78 = seconds75.size();
        int int79 = seconds70.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds75);
        org.joda.time.Seconds seconds81 = seconds75.plus(0);
        org.joda.time.Seconds seconds82 = seconds61.minus(seconds75);
        java.lang.String str83 = seconds75.toString();
        org.joda.time.MutablePeriod mutablePeriod84 = seconds75.toMutablePeriod();
        boolean boolean85 = seconds55.isGreaterThan(seconds75);
        org.joda.time.Period period86 = seconds75.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "PT2147483644S" + "'", str83, "PT2147483644S");
        org.junit.Assert.assertNotNull(mutablePeriod84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(period86);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Period period3 = seconds1.toPeriod();
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds6 = seconds1.plus((int) (short) 0);
        org.joda.time.Seconds seconds8 = seconds1.minus(0);
        java.lang.Class<?> wildcardClass9 = seconds1.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        java.lang.String str28 = seconds27.toString();
        org.joda.time.PeriodType periodType29 = seconds27.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT-2147483644S" + "'", str28, "PT-2147483644S");
        org.junit.Assert.assertNotNull(periodType29);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds2.toMutablePeriod();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = seconds4.get(durationFieldType5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds8 = seconds4.minus(seconds7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds4.getFieldType();
        int int10 = seconds2.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType12 = seconds2.getFieldType((int) (byte) 0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType12);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.DurationFieldType durationFieldType8 = seconds7.getFieldType();
        org.joda.time.Seconds seconds10 = seconds7.dividedBy((-1));
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds7);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = seconds11.isSupported(durationFieldType12);
        org.joda.time.Seconds seconds15 = seconds11.plus((int) (byte) 1);
        org.joda.time.Seconds seconds16 = seconds1.minus(seconds11);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        org.joda.time.Seconds seconds21 = seconds18.minus((int) (short) 1);
        int int22 = seconds11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds21);
        java.lang.Class<?> wildcardClass23 = seconds21.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Seconds seconds15 = seconds13.multipliedBy(2147483647);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = seconds13.getValue(2147483644);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483644");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        java.lang.String str18 = seconds17.toString();
        org.joda.time.Period period19 = seconds17.toPeriod();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        org.joda.time.Seconds seconds24 = seconds21.dividedBy((-1));
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        int int27 = seconds17.get(durationFieldType26);
        boolean boolean28 = seconds0.isLessThan(seconds17);
        boolean boolean30 = seconds17.equals((java.lang.Object) 10);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2147483644S" + "'", str18, "PT2147483644S");
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483644 + "'", int27 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Duration duration30 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds32 = seconds28.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds34 = seconds28.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds36 = seconds28.minus(seconds35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds43 = seconds40.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds48 = seconds44.minus(seconds47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds49.get(durationFieldType50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds53 = seconds49.minus(seconds52);
        org.joda.time.Seconds seconds55 = seconds53.dividedBy((int) '4');
        int int56 = seconds53.size();
        int int57 = seconds48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds53);
        org.joda.time.Seconds seconds59 = seconds53.plus(0);
        org.joda.time.MutablePeriod mutablePeriod60 = seconds53.toMutablePeriod();
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = seconds61.get(durationFieldType62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds65 = seconds61.minus(seconds64);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = seconds66.get(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds70 = seconds66.minus(seconds69);
        org.joda.time.Seconds seconds72 = seconds70.dividedBy((int) '4');
        int int73 = seconds70.size();
        int int74 = seconds65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds70);
        org.joda.time.DurationFieldType durationFieldType75 = seconds65.getFieldType();
        int int76 = seconds53.get(durationFieldType75);
        boolean boolean77 = seconds40.isSupported(durationFieldType75);
        boolean boolean78 = seconds36.isSupported(durationFieldType75);
        boolean boolean79 = seconds10.isGreaterThan(seconds36);
        org.joda.time.Seconds seconds81 = seconds36.plus(1);
        org.joda.time.Seconds seconds83 = seconds36.multipliedBy((int) (byte) -1);
        org.joda.time.Seconds seconds85 = seconds83.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds86 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds83);
        org.joda.time.Seconds seconds87 = org.joda.time.Seconds.THREE;
        org.joda.time.DurationFieldType durationFieldType88 = seconds87.getFieldType();
        int int89 = seconds86.get(durationFieldType88);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483644 + "'", int76 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertNotNull(seconds87);
        org.junit.Assert.assertNotNull(durationFieldType88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.Seconds seconds40 = seconds19.plus(seconds39);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        int int42 = seconds19.size();
        java.lang.Class<?> wildcardClass43 = seconds19.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds4.dividedBy((int) '4');
        org.joda.time.MutablePeriod mutablePeriod7 = seconds4.toMutablePeriod();
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Duration duration11 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds9.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds15 = seconds9.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds17 = seconds9.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType25 = seconds24.getPeriodType();
        org.joda.time.Duration duration26 = seconds24.toStandardDuration();
        org.joda.time.Seconds seconds28 = seconds24.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds29 = seconds28.negated();
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.secondsIn(readableInterval30);
        org.joda.time.Seconds seconds32 = seconds31.negated();
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.secondsIn(readableInterval33);
        int int35 = seconds34.size();
        boolean boolean36 = seconds32.isLessThan(seconds34);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.secondsIn(readableInterval37);
        int int39 = seconds38.size();
        org.joda.time.Seconds seconds41 = seconds38.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.secondsIn(readableInterval42);
        org.joda.time.DurationFieldType durationFieldType44 = seconds43.getFieldType();
        boolean boolean45 = seconds41.isSupported(durationFieldType44);
        boolean boolean46 = seconds34.isSupported(durationFieldType44);
        boolean boolean47 = seconds28.isSupported(durationFieldType44);
        boolean boolean48 = seconds21.isSupported(durationFieldType44);
        org.joda.time.Seconds seconds49 = seconds17.plus(seconds21);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType51 = seconds17.getFieldType();
        boolean boolean52 = seconds4.isSupported(durationFieldType51);
        org.joda.time.PeriodType periodType53 = seconds4.getPeriodType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(periodType53);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Duration duration6 = seconds5.toStandardDuration();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds5);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Duration duration7 = seconds5.toStandardDuration();
        org.joda.time.Seconds seconds8 = seconds5.negated();
        org.joda.time.Seconds seconds10 = seconds5.dividedBy((int) (short) 10);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.secondsIn(readableInterval11);
        org.joda.time.DurationFieldType durationFieldType13 = seconds12.getFieldType();
        org.joda.time.Seconds seconds15 = seconds12.dividedBy((-1));
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds12);
        int int17 = seconds12.size();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy((-1));
        int int23 = seconds19.getSeconds();
        org.joda.time.Seconds seconds24 = seconds12.minus(seconds19);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = seconds25.get(durationFieldType26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds29 = seconds25.minus(seconds28);
        org.joda.time.Seconds seconds31 = seconds28.multipliedBy((int) (short) 0);
        int int32 = seconds24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds31);
        org.joda.time.MutablePeriod mutablePeriod33 = seconds31.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod34 = seconds31.toMutablePeriod();
        org.joda.time.Seconds seconds36 = seconds31.minus((int) (byte) -1);
        org.joda.time.Seconds seconds37 = seconds10.plus(seconds31);
        org.joda.time.Seconds seconds39 = seconds31.minus(32);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.secondsIn(readableInterval40);
        org.joda.time.Seconds seconds42 = seconds41.negated();
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.secondsIn(readableInterval43);
        int int45 = seconds44.size();
        boolean boolean46 = seconds42.isLessThan(seconds44);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.secondsIn(readableInterval47);
        int int49 = seconds48.size();
        org.joda.time.Seconds seconds51 = seconds48.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.secondsIn(readableInterval52);
        org.joda.time.DurationFieldType durationFieldType54 = seconds53.getFieldType();
        boolean boolean55 = seconds51.isSupported(durationFieldType54);
        boolean boolean56 = seconds44.isSupported(durationFieldType54);
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = seconds57.get(durationFieldType58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds61 = seconds57.minus(seconds60);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = seconds62.get(durationFieldType63);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds66 = seconds62.minus(seconds65);
        org.joda.time.Seconds seconds68 = seconds66.dividedBy((int) '4');
        int int69 = seconds66.size();
        int int70 = seconds61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds66);
        org.joda.time.Seconds seconds72 = seconds66.plus(0);
        java.lang.String str73 = seconds72.toString();
        org.joda.time.Period period74 = seconds72.toPeriod();
        org.joda.time.ReadableInterval readableInterval75 = null;
        org.joda.time.Seconds seconds76 = org.joda.time.Seconds.secondsIn(readableInterval75);
        org.joda.time.Seconds seconds77 = seconds76.negated();
        org.joda.time.DurationFieldType durationFieldType78 = null;
        int int79 = seconds76.get(durationFieldType78);
        boolean boolean80 = seconds72.isLessThan(seconds76);
        org.joda.time.Seconds seconds81 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds76);
        int int82 = seconds44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds76);
        org.joda.time.Seconds seconds84 = seconds44.multipliedBy(2147483644);
        boolean boolean85 = seconds39.isGreaterThan(seconds84);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "PT2147483644S" + "'", str73, "PT2147483644S");
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(0);
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 100);
        int int4 = seconds3.size();
        int int5 = seconds3.size();
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds9.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds13 = seconds12.negated();
        org.joda.time.Seconds seconds15 = seconds12.multipliedBy(100);
        int int16 = seconds15.size();
        int int17 = seconds3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds15);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.DurationFieldType durationFieldType23 = seconds18.getFieldType();
        org.joda.time.Seconds seconds25 = seconds18.dividedBy((int) ' ');
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds18);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.DurationFieldType durationFieldType29 = seconds28.getFieldType();
        org.joda.time.Seconds seconds31 = seconds28.dividedBy((-1));
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds31);
        org.joda.time.DurationFieldType durationFieldType33 = seconds32.getFieldType();
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int36 = seconds35.getSeconds();
        org.joda.time.Duration duration37 = seconds35.toStandardDuration();
        org.joda.time.Seconds seconds38 = seconds32.minus(seconds35);
        boolean boolean39 = seconds18.isGreaterThan(seconds32);
        boolean boolean40 = seconds3.isLessThan(seconds18);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        int int5 = seconds1.getSeconds();
        org.joda.time.Seconds seconds6 = null;
        boolean boolean7 = seconds1.isLessThan(seconds6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        org.joda.time.Seconds seconds23 = seconds17.plus(0);
        java.lang.String str24 = seconds23.toString();
        org.joda.time.Period period25 = seconds23.toPeriod();
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn(readableInterval26);
        org.joda.time.Seconds seconds28 = seconds27.negated();
        org.joda.time.MutablePeriod mutablePeriod29 = seconds27.toMutablePeriod();
        org.joda.time.Duration duration30 = seconds27.toStandardDuration();
        boolean boolean31 = seconds23.equals((java.lang.Object) seconds27);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds36 = seconds32.minus(seconds35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds43 = seconds41.dividedBy((int) '4');
        int int44 = seconds41.size();
        int int45 = seconds36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds41);
        org.joda.time.Seconds seconds47 = seconds41.plus(0);
        org.joda.time.Seconds seconds48 = seconds27.plus(seconds47);
        org.joda.time.MutablePeriod mutablePeriod49 = seconds48.toMutablePeriod();
        org.joda.time.Seconds seconds50 = seconds1.minus(seconds48);
        org.joda.time.PeriodType periodType51 = seconds48.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2147483644S" + "'", str24, "PT2147483644S");
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(periodType51);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        int int10 = seconds9.size();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy(100);
        org.joda.time.PeriodType periodType13 = seconds12.getPeriodType();
        org.joda.time.Seconds seconds15 = seconds12.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds17 = seconds15.minus((-1));
        org.joda.time.DurationFieldType durationFieldType19 = seconds15.getFieldType((int) (byte) 0);
        boolean boolean20 = seconds5.isSupported(durationFieldType19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        int int26 = seconds22.getSeconds();
        java.lang.String str27 = seconds22.toString();
        org.joda.time.Seconds seconds29 = seconds22.minus((int) (short) 10);
        org.joda.time.Seconds seconds30 = seconds5.minus(seconds22);
        int int31 = seconds22.size();
        org.joda.time.Seconds seconds33 = seconds22.plus((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType34 = seconds33.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT0S" + "'", str27, "PT0S");
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(durationFieldType34);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        org.joda.time.Duration duration10 = seconds7.toStandardDuration();
        int int11 = seconds7.getSeconds();
        boolean boolean12 = seconds1.isLessThan(seconds7);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType15 = seconds14.getPeriodType();
        org.joda.time.Duration duration16 = seconds14.toStandardDuration();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds20 = seconds18.minus((int) (byte) 0);
        boolean boolean21 = seconds17.isLessThan(seconds20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType25 = seconds24.getPeriodType();
        org.joda.time.Duration duration26 = seconds24.toStandardDuration();
        org.joda.time.Seconds seconds28 = seconds24.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds30 = seconds24.dividedBy((int) (short) 1);
        boolean boolean31 = seconds17.equals((java.lang.Object) (short) 1);
        boolean boolean32 = seconds14.isGreaterThan(seconds17);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds36.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.secondsIn(readableInterval40);
        org.joda.time.DurationFieldType durationFieldType42 = seconds41.getFieldType();
        org.joda.time.Seconds seconds44 = seconds41.dividedBy((-1));
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds41);
        int int46 = seconds41.size();
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.secondsIn(readableInterval47);
        org.joda.time.DurationFieldType durationFieldType49 = seconds48.getFieldType();
        org.joda.time.Seconds seconds51 = seconds48.dividedBy((-1));
        int int52 = seconds48.getSeconds();
        org.joda.time.Seconds seconds53 = seconds41.minus(seconds48);
        boolean boolean54 = seconds39.isGreaterThan(seconds53);
        boolean boolean55 = seconds14.isGreaterThan(seconds53);
        boolean boolean56 = seconds7.isGreaterThan(seconds14);
        org.joda.time.Seconds seconds57 = seconds14.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds59 = seconds14.plus(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 1 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(seconds57);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.Period period7 = seconds3.toPeriod();
        org.joda.time.Seconds seconds8 = seconds3.negated();
        org.joda.time.Seconds seconds10 = seconds3.minus((int) (byte) -1);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.Seconds seconds17 = seconds14.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds19 = seconds17.plus((int) (byte) 10);
        org.joda.time.Seconds seconds20 = seconds17.negated();
        org.joda.time.DurationFieldType durationFieldType22 = seconds20.getFieldType((int) (byte) 0);
        java.lang.String str23 = seconds20.toString();
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        java.lang.String str40 = seconds39.toString();
        org.joda.time.Period period41 = seconds39.toPeriod();
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.secondsIn(readableInterval42);
        org.joda.time.Seconds seconds44 = seconds43.negated();
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds43.get(durationFieldType45);
        boolean boolean47 = seconds39.isLessThan(seconds43);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds43);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds43);
        org.joda.time.Seconds seconds51 = seconds43.multipliedBy(100);
        boolean boolean52 = seconds20.isGreaterThan(seconds43);
        org.joda.time.Seconds seconds54 = seconds20.minus((-2147483647));
        int int55 = seconds3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds54);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT0S" + "'", str23, "PT0S");
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT2147483644S" + "'", str40, "PT2147483644S");
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Duration duration7 = seconds5.toStandardDuration();
        org.joda.time.Seconds seconds8 = seconds5.negated();
        org.joda.time.Seconds seconds10 = seconds5.dividedBy((int) (short) 10);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.secondsIn(readableInterval11);
        org.joda.time.DurationFieldType durationFieldType13 = seconds12.getFieldType();
        org.joda.time.Seconds seconds15 = seconds12.dividedBy((-1));
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds12);
        int int17 = seconds12.size();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy((-1));
        int int23 = seconds19.getSeconds();
        org.joda.time.Seconds seconds24 = seconds12.minus(seconds19);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = seconds25.get(durationFieldType26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds29 = seconds25.minus(seconds28);
        org.joda.time.Seconds seconds31 = seconds28.multipliedBy((int) (short) 0);
        int int32 = seconds24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds31);
        org.joda.time.MutablePeriod mutablePeriod33 = seconds31.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod34 = seconds31.toMutablePeriod();
        org.joda.time.Seconds seconds36 = seconds31.minus((int) (byte) -1);
        org.joda.time.Seconds seconds37 = seconds10.plus(seconds31);
        org.joda.time.Seconds seconds39 = seconds31.minus(32);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType42 = seconds41.getPeriodType();
        org.joda.time.Duration duration43 = seconds41.toStandardDuration();
        org.joda.time.Seconds seconds45 = seconds41.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        org.joda.time.Seconds seconds48 = seconds47.negated();
        org.joda.time.MutablePeriod mutablePeriod49 = seconds47.toMutablePeriod();
        org.joda.time.Duration duration50 = seconds47.toStandardDuration();
        int int51 = seconds47.getSeconds();
        boolean boolean52 = seconds41.isLessThan(seconds47);
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType55 = seconds54.getPeriodType();
        org.joda.time.Duration duration56 = seconds54.toStandardDuration();
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds60 = seconds58.minus((int) (byte) 0);
        boolean boolean61 = seconds57.isLessThan(seconds60);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds57);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType65 = seconds64.getPeriodType();
        org.joda.time.Duration duration66 = seconds64.toStandardDuration();
        org.joda.time.Seconds seconds68 = seconds64.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds70 = seconds64.dividedBy((int) (short) 1);
        boolean boolean71 = seconds57.equals((java.lang.Object) (short) 1);
        boolean boolean72 = seconds54.isGreaterThan(seconds57);
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType74 = null;
        int int75 = seconds73.get(durationFieldType74);
        org.joda.time.Seconds seconds76 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds77 = seconds73.minus(seconds76);
        org.joda.time.Seconds seconds79 = seconds76.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval80 = null;
        org.joda.time.Seconds seconds81 = org.joda.time.Seconds.secondsIn(readableInterval80);
        org.joda.time.DurationFieldType durationFieldType82 = seconds81.getFieldType();
        org.joda.time.Seconds seconds84 = seconds81.dividedBy((-1));
        org.joda.time.Seconds seconds85 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds81);
        int int86 = seconds81.size();
        org.joda.time.ReadableInterval readableInterval87 = null;
        org.joda.time.Seconds seconds88 = org.joda.time.Seconds.secondsIn(readableInterval87);
        org.joda.time.DurationFieldType durationFieldType89 = seconds88.getFieldType();
        org.joda.time.Seconds seconds91 = seconds88.dividedBy((-1));
        int int92 = seconds88.getSeconds();
        org.joda.time.Seconds seconds93 = seconds81.minus(seconds88);
        boolean boolean94 = seconds79.isGreaterThan(seconds93);
        boolean boolean95 = seconds54.isGreaterThan(seconds93);
        boolean boolean96 = seconds47.isGreaterThan(seconds54);
        org.joda.time.Seconds seconds97 = seconds31.minus(seconds54);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertNotNull(seconds91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(seconds93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(seconds97);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Seconds seconds15 = seconds13.multipliedBy(2147483647);
        int int16 = seconds15.getSeconds();
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds22 = seconds18.multipliedBy(0);
        org.joda.time.Seconds seconds24 = seconds18.multipliedBy(1);
        org.joda.time.Seconds seconds25 = seconds15.plus(seconds24);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = seconds15.getValue(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(0);
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 100);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.secondsIn(readableInterval4);
        org.joda.time.PeriodType periodType6 = seconds5.getPeriodType();
        org.joda.time.Seconds seconds8 = seconds5.dividedBy(100);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType13 = seconds12.getPeriodType();
        org.joda.time.Duration duration14 = seconds12.toStandardDuration();
        org.joda.time.Seconds seconds16 = seconds12.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds17 = seconds16.negated();
        boolean boolean18 = seconds10.isGreaterThan(seconds16);
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.secondsIn(readableInterval19);
        org.joda.time.DurationFieldType durationFieldType21 = seconds20.getFieldType();
        org.joda.time.Seconds seconds23 = seconds20.dividedBy((-1));
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds23);
        org.joda.time.DurationFieldType durationFieldType25 = seconds24.getFieldType();
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int28 = seconds27.getSeconds();
        org.joda.time.Duration duration29 = seconds27.toStandardDuration();
        org.joda.time.Seconds seconds30 = seconds24.minus(seconds27);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn(readableInterval31);
        org.joda.time.Seconds seconds33 = seconds32.negated();
        org.joda.time.Seconds seconds35 = seconds32.minus((int) '#');
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType38 = seconds37.getPeriodType();
        org.joda.time.Duration duration39 = seconds37.toStandardDuration();
        org.joda.time.Seconds seconds41 = seconds37.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds42 = seconds41.negated();
        org.joda.time.Duration duration43 = seconds41.toStandardDuration();
        org.joda.time.Seconds seconds44 = seconds41.negated();
        org.joda.time.DurationFieldType durationFieldType45 = seconds41.getFieldType();
        boolean boolean46 = seconds32.isSupported(durationFieldType45);
        boolean boolean47 = seconds30.isSupported(durationFieldType45);
        boolean boolean48 = seconds16.isSupported(durationFieldType45);
        boolean boolean49 = seconds5.isSupported(durationFieldType45);
        org.joda.time.Seconds seconds50 = seconds3.minus(seconds5);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(seconds50);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.MutablePeriod mutablePeriod6 = seconds5.toMutablePeriod();
        org.joda.time.Period period7 = seconds5.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        int int2 = seconds0.getSeconds();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds0.plus(seconds4);
        org.joda.time.Seconds seconds7 = seconds4.multipliedBy((-2147483644));
        org.joda.time.Seconds seconds9 = seconds7.dividedBy((-1));
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 3 + "'", int2 == 3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(32);
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod2 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = seconds1.compareTo(baseSingleFieldPeriod2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int9 = seconds8.getSeconds();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds11 = seconds5.minus(seconds8);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.Seconds seconds14 = seconds13.negated();
        org.joda.time.Seconds seconds16 = seconds13.minus((int) '#');
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds22 = seconds18.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.Duration duration24 = seconds22.toStandardDuration();
        org.joda.time.Seconds seconds25 = seconds22.negated();
        org.joda.time.DurationFieldType durationFieldType26 = seconds22.getFieldType();
        boolean boolean27 = seconds13.isSupported(durationFieldType26);
        boolean boolean28 = seconds11.isSupported(durationFieldType26);
        org.joda.time.Seconds seconds30 = seconds11.multipliedBy((-1));
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(seconds30);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT1S");
        int int2 = seconds1.getSeconds();
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = seconds3.get(durationFieldType4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds7 = seconds3.minus(seconds6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds14 = seconds12.dividedBy((int) '4');
        int int15 = seconds12.size();
        int int16 = seconds7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds12);
        org.joda.time.Seconds seconds18 = seconds12.plus(0);
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.secondsIn(readableInterval19);
        org.joda.time.DurationFieldType durationFieldType21 = seconds20.getFieldType();
        org.joda.time.Seconds seconds23 = seconds20.dividedBy((-1));
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds20);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = seconds24.isSupported(durationFieldType25);
        org.joda.time.Seconds seconds28 = seconds24.plus((int) (byte) 1);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = seconds34.get(durationFieldType35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds38 = seconds34.minus(seconds37);
        org.joda.time.Seconds seconds40 = seconds38.dividedBy((int) '4');
        int int41 = seconds38.size();
        int int42 = seconds33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds38);
        org.joda.time.Seconds seconds44 = seconds38.plus(0);
        java.lang.String str45 = seconds44.toString();
        org.joda.time.Period period46 = seconds44.toPeriod();
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.secondsIn(readableInterval47);
        org.joda.time.Seconds seconds49 = seconds48.negated();
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds48.get(durationFieldType50);
        boolean boolean52 = seconds44.isLessThan(seconds48);
        org.joda.time.Seconds seconds53 = seconds28.minus(seconds44);
        org.joda.time.Seconds seconds55 = seconds53.dividedBy((int) 'a');
        org.joda.time.Seconds seconds56 = seconds12.plus(seconds53);
        org.joda.time.Seconds seconds57 = seconds56.negated();
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = seconds58.get(durationFieldType59);
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds62 = seconds58.minus(seconds61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType64 = null;
        int int65 = seconds63.get(durationFieldType64);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds67 = seconds63.minus(seconds66);
        org.joda.time.Seconds seconds69 = seconds67.dividedBy((int) '4');
        int int70 = seconds67.size();
        int int71 = seconds62.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds67);
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType73 = null;
        int int74 = seconds72.get(durationFieldType73);
        boolean boolean75 = seconds67.isLessThan(seconds72);
        boolean boolean76 = seconds57.isLessThan(seconds67);
        boolean boolean77 = seconds1.isGreaterThan(seconds57);
        int int78 = seconds1.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "PT2147483644S" + "'", str45, "PT2147483644S");
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        int int5 = seconds1.getSeconds();
        org.joda.time.Seconds seconds6 = null;
        boolean boolean7 = seconds1.isLessThan(seconds6);
        int int8 = seconds1.getSeconds();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType10 = seconds1.getFieldType(2147483609);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483609");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        boolean boolean72 = seconds64.isLessThan(seconds69);
        boolean boolean73 = seconds54.isLessThan(seconds64);
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType76 = seconds75.getPeriodType();
        org.joda.time.Duration duration77 = seconds75.toStandardDuration();
        org.joda.time.Seconds seconds79 = seconds75.dividedBy((int) (byte) 10);
        int int80 = seconds54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds79);
        org.joda.time.Seconds seconds82 = org.joda.time.Seconds.parseSeconds("PT-1S");
        org.joda.time.Seconds seconds83 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.Seconds seconds84 = seconds82.plus(seconds83);
        org.joda.time.Seconds seconds85 = seconds54.minus(seconds84);
        org.joda.time.Period period86 = seconds84.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertNotNull(period86);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.Seconds seconds21 = seconds19.dividedBy((int) '4');
        int int22 = seconds19.size();
        int int23 = seconds14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds19);
        org.joda.time.Seconds seconds25 = seconds19.plus(0);
        java.lang.String str26 = seconds25.toString();
        org.joda.time.Period period27 = seconds25.toPeriod();
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.secondsIn(readableInterval28);
        org.joda.time.Seconds seconds30 = seconds29.negated();
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds29.get(durationFieldType31);
        boolean boolean33 = seconds25.isLessThan(seconds29);
        org.joda.time.Seconds seconds34 = seconds9.minus(seconds25);
        org.joda.time.Seconds seconds36 = seconds34.dividedBy((int) 'a');
        org.joda.time.DurationFieldType durationFieldType37 = seconds34.getFieldType();
        org.joda.time.DurationFieldType durationFieldType38 = seconds34.getFieldType();
        int int39 = seconds34.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483644S" + "'", str26, "PT2147483644S");
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-2147483643) + "'", int39 == (-2147483643));
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds0.getFieldType();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((int) ' ');
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType10 = seconds0.getFieldType((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.secondsIn(readableInterval4);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds6);
        org.joda.time.Seconds seconds9 = seconds1.multipliedBy(3);
        java.lang.String str10 = seconds1.toString();
        org.joda.time.Seconds seconds12 = seconds1.plus(100);
        java.lang.Class<?> wildcardClass13 = seconds1.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT-1S" + "'", str10, "PT-1S");
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType20 = seconds19.getPeriodType();
        org.joda.time.Duration duration21 = seconds19.toStandardDuration();
        org.joda.time.Seconds seconds23 = seconds19.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.secondsIn(readableInterval24);
        org.joda.time.Seconds seconds26 = seconds25.negated();
        org.joda.time.MutablePeriod mutablePeriod27 = seconds25.toMutablePeriod();
        org.joda.time.Duration duration28 = seconds25.toStandardDuration();
        int int29 = seconds25.getSeconds();
        boolean boolean30 = seconds19.isLessThan(seconds25);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = seconds36.get(durationFieldType37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds40 = seconds36.minus(seconds39);
        org.joda.time.Seconds seconds42 = seconds40.dividedBy((int) '4');
        int int43 = seconds40.size();
        int int44 = seconds35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds40);
        org.joda.time.Seconds seconds46 = seconds40.plus(0);
        java.lang.String str47 = seconds46.toString();
        org.joda.time.Period period48 = seconds46.toPeriod();
        org.joda.time.ReadableInterval readableInterval49 = null;
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.secondsIn(readableInterval49);
        org.joda.time.Seconds seconds51 = seconds50.negated();
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = seconds50.get(durationFieldType52);
        boolean boolean54 = seconds46.isLessThan(seconds50);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds50);
        org.joda.time.Seconds seconds56 = seconds19.plus(seconds50);
        org.joda.time.MutablePeriod mutablePeriod57 = seconds19.toMutablePeriod();
        org.joda.time.Seconds seconds58 = seconds4.minus(seconds19);
        org.joda.time.Seconds seconds60 = seconds4.dividedBy((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType61 = seconds60.getFieldType();
        org.joda.time.PeriodType periodType62 = seconds60.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT2147483644S" + "'", str47, "PT2147483644S");
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(periodType62);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT67108863S");
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.MutablePeriod mutablePeriod40 = seconds33.toMutablePeriod();
        int int41 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = seconds42.get(durationFieldType43);
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds46 = seconds42.minus(seconds45);
        org.joda.time.Seconds seconds48 = seconds46.dividedBy((int) '4');
        org.joda.time.MutablePeriod mutablePeriod49 = seconds46.toMutablePeriod();
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType52 = seconds51.getPeriodType();
        org.joda.time.Duration duration53 = seconds51.toStandardDuration();
        org.joda.time.Seconds seconds55 = seconds51.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds57 = seconds51.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds59 = seconds51.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType67 = seconds66.getPeriodType();
        org.joda.time.Duration duration68 = seconds66.toStandardDuration();
        org.joda.time.Seconds seconds70 = seconds66.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds71 = seconds70.negated();
        org.joda.time.ReadableInterval readableInterval72 = null;
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.secondsIn(readableInterval72);
        org.joda.time.Seconds seconds74 = seconds73.negated();
        org.joda.time.ReadableInterval readableInterval75 = null;
        org.joda.time.Seconds seconds76 = org.joda.time.Seconds.secondsIn(readableInterval75);
        int int77 = seconds76.size();
        boolean boolean78 = seconds74.isLessThan(seconds76);
        org.joda.time.ReadableInterval readableInterval79 = null;
        org.joda.time.Seconds seconds80 = org.joda.time.Seconds.secondsIn(readableInterval79);
        int int81 = seconds80.size();
        org.joda.time.Seconds seconds83 = seconds80.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval84 = null;
        org.joda.time.Seconds seconds85 = org.joda.time.Seconds.secondsIn(readableInterval84);
        org.joda.time.DurationFieldType durationFieldType86 = seconds85.getFieldType();
        boolean boolean87 = seconds83.isSupported(durationFieldType86);
        boolean boolean88 = seconds76.isSupported(durationFieldType86);
        boolean boolean89 = seconds70.isSupported(durationFieldType86);
        boolean boolean90 = seconds63.isSupported(durationFieldType86);
        org.joda.time.Seconds seconds91 = seconds59.plus(seconds63);
        org.joda.time.Seconds seconds92 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds59);
        org.joda.time.DurationFieldType durationFieldType93 = seconds59.getFieldType();
        boolean boolean94 = seconds46.isSupported(durationFieldType93);
        boolean boolean95 = seconds33.isSupported(durationFieldType93);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(seconds91);
        org.junit.Assert.assertNotNull(seconds92);
        org.junit.Assert.assertNotNull(durationFieldType93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds19.get(durationFieldType21);
        boolean boolean23 = seconds15.isLessThan(seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.DurationFieldType durationFieldType25 = seconds19.getFieldType();
        org.joda.time.PeriodType periodType26 = seconds19.getPeriodType();
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = seconds34.get(durationFieldType35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds38 = seconds34.minus(seconds37);
        org.joda.time.Seconds seconds40 = seconds38.dividedBy((int) '4');
        int int41 = seconds38.size();
        int int42 = seconds33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds38);
        boolean boolean43 = seconds28.isLessThan(seconds38);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        int int46 = seconds45.size();
        org.joda.time.Seconds seconds48 = seconds45.dividedBy(100);
        org.joda.time.PeriodType periodType49 = seconds48.getPeriodType();
        org.joda.time.Seconds seconds51 = seconds48.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds53 = seconds51.minus((-1));
        org.joda.time.Seconds seconds54 = seconds38.plus(seconds51);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = seconds56.get(durationFieldType57);
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds60 = seconds56.minus(seconds59);
        org.joda.time.Seconds seconds62 = seconds59.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType64 = null;
        int int65 = seconds63.get(durationFieldType64);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds67 = seconds63.minus(seconds66);
        org.joda.time.Seconds seconds68 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType69 = null;
        int int70 = seconds68.get(durationFieldType69);
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds72 = seconds68.minus(seconds71);
        org.joda.time.Seconds seconds74 = seconds72.dividedBy((int) '4');
        int int75 = seconds72.size();
        int int76 = seconds67.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds72);
        org.joda.time.Seconds seconds78 = seconds72.plus(0);
        org.joda.time.MutablePeriod mutablePeriod79 = seconds72.toMutablePeriod();
        org.joda.time.Seconds seconds80 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType81 = null;
        int int82 = seconds80.get(durationFieldType81);
        org.joda.time.Seconds seconds83 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds84 = seconds80.minus(seconds83);
        org.joda.time.Seconds seconds85 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType86 = null;
        int int87 = seconds85.get(durationFieldType86);
        org.joda.time.Seconds seconds88 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds89 = seconds85.minus(seconds88);
        org.joda.time.Seconds seconds91 = seconds89.dividedBy((int) '4');
        int int92 = seconds89.size();
        int int93 = seconds84.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds89);
        org.joda.time.DurationFieldType durationFieldType94 = seconds84.getFieldType();
        int int95 = seconds72.get(durationFieldType94);
        boolean boolean96 = seconds59.isSupported(durationFieldType94);
        boolean boolean97 = seconds55.isSupported(durationFieldType94);
        int int98 = seconds38.get(durationFieldType94);
        boolean boolean99 = seconds19.isSupported(durationFieldType94);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(mutablePeriod79);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertNotNull(seconds89);
        org.junit.Assert.assertNotNull(seconds91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(durationFieldType94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 2147483644 + "'", int95 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 2147483644 + "'", int98 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.Seconds seconds40 = seconds19.plus(seconds39);
        org.joda.time.MutablePeriod mutablePeriod41 = seconds40.toMutablePeriod();
        java.lang.String str42 = seconds40.toString();
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = seconds43.get(durationFieldType44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds47 = seconds43.minus(seconds46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds52 = seconds48.minus(seconds51);
        org.joda.time.Seconds seconds54 = seconds52.dividedBy((int) '4');
        int int55 = seconds52.size();
        int int56 = seconds47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds52);
        org.joda.time.Seconds seconds58 = seconds52.plus(0);
        java.lang.String str59 = seconds58.toString();
        org.joda.time.Period period60 = seconds58.toPeriod();
        org.joda.time.ReadableInterval readableInterval61 = null;
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.secondsIn(readableInterval61);
        org.joda.time.DurationFieldType durationFieldType63 = seconds62.getFieldType();
        org.joda.time.Seconds seconds65 = seconds62.dividedBy((-1));
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds65);
        org.joda.time.DurationFieldType durationFieldType67 = seconds66.getFieldType();
        int int68 = seconds58.get(durationFieldType67);
        org.joda.time.PeriodType periodType69 = seconds58.getPeriodType();
        boolean boolean70 = seconds40.isGreaterThan(seconds58);
        org.joda.time.Period period71 = seconds40.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "PT2147483644S" + "'", str59, "PT2147483644S");
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2147483644 + "'", int68 == 2147483644);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(period71);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.MutablePeriod mutablePeriod8 = seconds6.toMutablePeriod();
        org.joda.time.Duration duration9 = seconds6.toStandardDuration();
        boolean boolean10 = seconds0.equals((java.lang.Object) seconds6);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        org.joda.time.Period period12 = seconds6.toPeriod();
        int int13 = seconds6.size();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        org.joda.time.Duration duration23 = seconds21.toStandardDuration();
        org.joda.time.Seconds seconds25 = seconds21.multipliedBy(0);
        org.joda.time.Seconds seconds26 = seconds21.negated();
        org.joda.time.Seconds seconds27 = seconds19.plus(seconds21);
        java.lang.String str28 = seconds19.toString();
        org.joda.time.Seconds seconds29 = seconds17.plus(seconds19);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.THREE;
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        int int32 = seconds30.getSeconds();
        org.joda.time.Seconds seconds34 = seconds30.minus((int) (byte) 0);
        boolean boolean35 = seconds19.isGreaterThan(seconds30);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds30);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT1S" + "'", str28, "PT1S");
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 3 + "'", int32 == 3);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(seconds36);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds2 = seconds0.minus((int) (byte) 0);
        org.joda.time.Duration duration3 = seconds0.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = seconds0.get(durationFieldType4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        int int8 = seconds7.size();
        org.joda.time.Seconds seconds10 = seconds7.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.secondsIn(readableInterval11);
        org.joda.time.DurationFieldType durationFieldType13 = seconds12.getFieldType();
        boolean boolean14 = seconds10.isSupported(durationFieldType13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds24 = seconds20.minus(seconds23);
        org.joda.time.Seconds seconds26 = seconds24.dividedBy((int) '4');
        int int27 = seconds24.size();
        int int28 = seconds19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds24);
        org.joda.time.Seconds seconds30 = seconds24.plus(0);
        org.joda.time.Seconds seconds31 = seconds10.minus(seconds24);
        org.joda.time.DurationFieldType durationFieldType32 = seconds10.getFieldType();
        int int33 = seconds10.size();
        org.joda.time.MutablePeriod mutablePeriod34 = seconds10.toMutablePeriod();
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType37 = seconds36.getPeriodType();
        org.joda.time.Duration duration38 = seconds36.toStandardDuration();
        org.joda.time.Seconds seconds40 = seconds36.multipliedBy(0);
        org.joda.time.Seconds seconds41 = seconds36.negated();
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = seconds42.get(durationFieldType43);
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds46 = seconds42.minus(seconds45);
        boolean boolean47 = seconds41.isGreaterThan(seconds46);
        org.joda.time.Seconds seconds49 = seconds41.multipliedBy(1);
        int int50 = seconds41.getSeconds();
        org.joda.time.Seconds seconds51 = seconds10.plus(seconds41);
        boolean boolean52 = seconds0.isLessThan(seconds51);
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds56 = seconds54.minus((int) (byte) 0);
        boolean boolean57 = seconds53.isLessThan(seconds56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds53);
        org.joda.time.PeriodType periodType59 = seconds58.getPeriodType();
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds62 = seconds60.minus((int) (byte) 0);
        boolean boolean63 = seconds58.isLessThan(seconds62);
        org.joda.time.Seconds seconds64 = seconds0.minus(seconds58);
        org.joda.time.Seconds seconds66 = seconds58.dividedBy((int) 'a');
        int int67 = seconds66.size();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds16 = seconds14.dividedBy((int) '4');
        int int17 = seconds14.size();
        int int18 = seconds9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds14);
        org.joda.time.Seconds seconds20 = seconds14.plus(0);
        boolean boolean21 = seconds1.isLessThan(seconds14);
        org.joda.time.Seconds seconds23 = seconds14.minus((int) '#');
        org.joda.time.Period period24 = seconds23.toPeriod();
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.parseSeconds("PT-1S");
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.Seconds seconds28 = seconds26.plus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds27);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds30 = seconds23.plus(seconds29);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483609 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds12);
        org.joda.time.PeriodType periodType14 = seconds1.getPeriodType();
        java.lang.String str15 = seconds1.toString();
        org.joda.time.Duration duration16 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds18 = seconds1.multipliedBy(10);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds24 = seconds20.minus(seconds23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = seconds25.get(durationFieldType26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds29 = seconds25.minus(seconds28);
        org.joda.time.Seconds seconds31 = seconds29.dividedBy((int) '4');
        int int32 = seconds29.size();
        int int33 = seconds24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds29);
        boolean boolean34 = seconds19.isLessThan(seconds29);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = seconds35.get(durationFieldType36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds39 = seconds35.minus(seconds38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = seconds40.get(durationFieldType41);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds44 = seconds40.minus(seconds43);
        org.joda.time.Seconds seconds46 = seconds44.dividedBy((int) '4');
        int int47 = seconds44.size();
        int int48 = seconds39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds44);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds49.get(durationFieldType50);
        boolean boolean52 = seconds44.isLessThan(seconds49);
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType54 = null;
        int int55 = seconds53.get(durationFieldType54);
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds57 = seconds53.minus(seconds56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = seconds58.get(durationFieldType59);
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds62 = seconds58.minus(seconds61);
        org.joda.time.Seconds seconds64 = seconds62.dividedBy((int) '4');
        int int65 = seconds62.size();
        int int66 = seconds57.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds62);
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = seconds67.get(durationFieldType68);
        boolean boolean70 = seconds62.isLessThan(seconds67);
        boolean boolean71 = seconds49.isLessThan(seconds62);
        boolean boolean72 = seconds19.isGreaterThan(seconds62);
        boolean boolean73 = seconds18.isGreaterThan(seconds62);
        org.joda.time.Seconds seconds75 = seconds18.minus((int) (byte) 10);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT1S" + "'", str15, "PT1S");
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(seconds75);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.MutablePeriod mutablePeriod40 = seconds33.toMutablePeriod();
        int int41 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.DurationFieldType durationFieldType42 = seconds33.getFieldType();
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = seconds43.get(durationFieldType44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds47 = seconds43.minus(seconds46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds52 = seconds48.minus(seconds51);
        org.joda.time.Seconds seconds54 = seconds52.dividedBy((int) '4');
        int int55 = seconds52.size();
        int int56 = seconds47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds52);
        org.joda.time.Seconds seconds58 = seconds52.plus(0);
        org.joda.time.MutablePeriod mutablePeriod59 = seconds52.toMutablePeriod();
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType66 = null;
        int int67 = seconds65.get(durationFieldType66);
        org.joda.time.Seconds seconds68 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds69 = seconds65.minus(seconds68);
        org.joda.time.Seconds seconds71 = seconds69.dividedBy((int) '4');
        int int72 = seconds69.size();
        int int73 = seconds64.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds69);
        org.joda.time.DurationFieldType durationFieldType74 = seconds64.getFieldType();
        int int75 = seconds52.get(durationFieldType74);
        boolean boolean76 = seconds33.equals((java.lang.Object) int75);
        org.joda.time.Seconds seconds77 = seconds33.negated();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2147483644 + "'", int75 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(seconds77);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.PeriodType periodType19 = seconds17.getPeriodType();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        int int22 = seconds21.size();
        org.joda.time.Seconds seconds24 = seconds21.dividedBy(100);
        org.joda.time.PeriodType periodType25 = seconds24.getPeriodType();
        org.joda.time.Seconds seconds27 = seconds24.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds29 = seconds27.minus((-1));
        org.joda.time.DurationFieldType durationFieldType30 = seconds29.getFieldType();
        int int31 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds29);
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.secondsIn(readableInterval32);
        org.joda.time.Seconds seconds34 = seconds33.negated();
        org.joda.time.MutablePeriod mutablePeriod35 = seconds33.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.secondsIn(readableInterval36);
        org.joda.time.DurationFieldType durationFieldType38 = seconds37.getFieldType();
        org.joda.time.Seconds seconds40 = seconds37.dividedBy((-1));
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds37);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        boolean boolean43 = seconds41.isSupported(durationFieldType42);
        org.joda.time.Seconds seconds45 = seconds41.plus((int) (byte) 1);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.Seconds seconds47 = seconds33.plus(seconds45);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds52 = seconds48.minus(seconds51);
        org.joda.time.DurationFieldType durationFieldType53 = seconds48.getFieldType();
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.secondsIn(readableInterval54);
        int int56 = seconds55.size();
        org.joda.time.Seconds seconds58 = seconds55.dividedBy(100);
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = seconds59.get(durationFieldType60);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds63 = seconds59.minus(seconds62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = seconds64.get(durationFieldType65);
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds68 = seconds64.minus(seconds67);
        org.joda.time.Seconds seconds70 = seconds68.dividedBy((int) '4');
        int int71 = seconds68.size();
        int int72 = seconds63.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds68);
        org.joda.time.Seconds seconds74 = seconds68.plus(0);
        org.joda.time.MutablePeriod mutablePeriod75 = seconds68.toMutablePeriod();
        org.joda.time.Seconds seconds76 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType77 = null;
        int int78 = seconds76.get(durationFieldType77);
        org.joda.time.Seconds seconds79 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds80 = seconds76.minus(seconds79);
        org.joda.time.Seconds seconds81 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType82 = null;
        int int83 = seconds81.get(durationFieldType82);
        org.joda.time.Seconds seconds84 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds85 = seconds81.minus(seconds84);
        org.joda.time.Seconds seconds87 = seconds85.dividedBy((int) '4');
        int int88 = seconds85.size();
        int int89 = seconds80.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds85);
        org.joda.time.DurationFieldType durationFieldType90 = seconds80.getFieldType();
        int int91 = seconds68.get(durationFieldType90);
        int int92 = seconds55.get(durationFieldType90);
        boolean boolean93 = seconds48.isSupported(durationFieldType90);
        boolean boolean94 = seconds33.isSupported(durationFieldType90);
        int int95 = seconds29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertNotNull(seconds87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 2147483644 + "'", int91 == 2147483644);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.dividedBy((-1));
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        boolean boolean12 = seconds10.isSupported(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.secondsIn(readableInterval13);
        int int15 = seconds14.size();
        org.joda.time.Seconds seconds17 = seconds14.dividedBy(100);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.Seconds seconds20 = seconds17.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds22 = seconds20.minus((-1));
        org.joda.time.DurationFieldType durationFieldType24 = seconds20.getFieldType((int) (byte) 0);
        boolean boolean25 = seconds10.isSupported(durationFieldType24);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn(readableInterval26);
        org.joda.time.Seconds seconds28 = seconds27.negated();
        org.joda.time.MutablePeriod mutablePeriod29 = seconds27.toMutablePeriod();
        org.joda.time.Duration duration30 = seconds27.toStandardDuration();
        int int31 = seconds27.getSeconds();
        java.lang.String str32 = seconds27.toString();
        org.joda.time.Seconds seconds34 = seconds27.minus((int) (short) 10);
        org.joda.time.Seconds seconds35 = seconds10.minus(seconds27);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType38 = seconds37.getPeriodType();
        org.joda.time.Duration duration39 = seconds37.toStandardDuration();
        org.joda.time.Seconds seconds41 = seconds37.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds43 = seconds37.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds45 = seconds37.minus(seconds44);
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        org.joda.time.Seconds seconds48 = seconds47.negated();
        org.joda.time.MutablePeriod mutablePeriod49 = seconds48.toMutablePeriod();
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = seconds50.get(durationFieldType51);
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds54 = seconds50.minus(seconds53);
        org.joda.time.DurationFieldType durationFieldType55 = seconds50.getFieldType();
        int int56 = seconds48.get(durationFieldType55);
        boolean boolean57 = seconds45.isSupported(durationFieldType55);
        boolean boolean58 = seconds10.isSupported(durationFieldType55);
        org.joda.time.Seconds seconds59 = seconds4.plus(seconds10);
        org.joda.time.PeriodType periodType60 = seconds10.getPeriodType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT0S" + "'", str32, "PT0S");
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(periodType60);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        int int2 = seconds0.getSeconds();
        org.joda.time.Seconds seconds4 = seconds0.minus((int) (byte) 0);
        org.joda.time.MutablePeriod mutablePeriod5 = seconds0.toMutablePeriod();
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds8 = seconds6.minus((int) (byte) 0);
        org.joda.time.PeriodType periodType9 = seconds6.getPeriodType();
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds12 = seconds10.minus((int) (byte) 0);
        org.joda.time.PeriodType periodType13 = seconds10.getPeriodType();
        int int14 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isGreaterThan(seconds6);
        org.joda.time.Period period16 = seconds6.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 3 + "'", int2 == 3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds8 = seconds6.dividedBy((int) '4');
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        org.joda.time.Seconds seconds14 = seconds11.dividedBy((-1));
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds22 = seconds18.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        boolean boolean24 = seconds16.isLessThan(seconds23);
        org.joda.time.Seconds seconds25 = seconds14.plus(seconds16);
        org.joda.time.Seconds seconds26 = seconds1.plus(seconds25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.Seconds seconds29 = seconds28.negated();
        org.joda.time.MutablePeriod mutablePeriod30 = seconds29.toMutablePeriod();
        org.joda.time.Duration duration31 = seconds29.toStandardDuration();
        org.joda.time.Seconds seconds33 = seconds29.plus((int) '4');
        org.joda.time.Seconds seconds34 = seconds1.minus(seconds29);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.PeriodType periodType6 = seconds5.getPeriodType();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds9 = seconds7.minus((int) (byte) 0);
        boolean boolean10 = seconds5.isLessThan(seconds9);
        int int11 = seconds9.size();
        org.joda.time.Seconds seconds12 = seconds9.negated();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(seconds12);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        boolean boolean12 = seconds6.isGreaterThan(seconds11);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType15 = seconds14.getPeriodType();
        org.joda.time.Duration duration16 = seconds14.toStandardDuration();
        org.joda.time.Seconds seconds18 = seconds14.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds20 = seconds14.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds22 = seconds14.minus(seconds21);
        int int23 = seconds14.size();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds14.toMutablePeriod();
        org.joda.time.Seconds seconds26 = seconds14.plus((int) (short) 0);
        boolean boolean27 = seconds6.isLessThan(seconds14);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.DurationFieldType durationFieldType33 = seconds28.getFieldType();
        org.joda.time.Seconds seconds35 = seconds28.dividedBy((int) ' ');
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds28);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds36);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) (byte) 1);
        boolean boolean40 = seconds14.isLessThan(seconds39);
        org.joda.time.PeriodType periodType41 = seconds39.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(periodType41);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.PeriodType periodType3 = seconds1.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(periodType3);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Period period2 = seconds1.toPeriod();
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds6 = seconds4.minus((int) (byte) 0);
        boolean boolean7 = seconds3.isLessThan(seconds6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds3);
        org.joda.time.PeriodType periodType9 = seconds3.getPeriodType();
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.Seconds seconds21 = seconds19.dividedBy((int) '4');
        int int22 = seconds19.size();
        int int23 = seconds14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds19);
        org.joda.time.Seconds seconds25 = seconds19.plus(0);
        java.lang.String str26 = seconds25.toString();
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.DurationFieldType durationFieldType29 = seconds28.getFieldType();
        org.joda.time.Seconds seconds31 = seconds28.dividedBy((-1));
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds28);
        int int33 = seconds28.size();
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.secondsIn(readableInterval34);
        org.joda.time.DurationFieldType durationFieldType36 = seconds35.getFieldType();
        org.joda.time.Seconds seconds38 = seconds35.dividedBy((-1));
        int int39 = seconds35.getSeconds();
        org.joda.time.Seconds seconds40 = seconds28.minus(seconds35);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = seconds41.get(durationFieldType42);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds45 = seconds41.minus(seconds44);
        org.joda.time.Seconds seconds47 = seconds44.multipliedBy((int) (short) 0);
        int int48 = seconds40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds47);
        org.joda.time.DurationFieldType durationFieldType49 = seconds47.getFieldType();
        org.joda.time.Seconds seconds50 = seconds25.plus(seconds47);
        int int51 = seconds3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds25);
        org.joda.time.Seconds seconds52 = seconds1.minus(seconds3);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483644S" + "'", str26, "PT2147483644S");
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(seconds52);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType28 = seconds27.getPeriodType();
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Seconds seconds33 = seconds30.dividedBy((-1));
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds33);
        org.joda.time.Seconds seconds35 = seconds33.negated();
        org.joda.time.Seconds seconds36 = seconds27.plus(seconds33);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int39 = seconds38.getSeconds();
        org.joda.time.Duration duration40 = seconds38.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.secondsIn(readableInterval41);
        org.joda.time.Seconds seconds43 = seconds42.negated();
        int int44 = seconds38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds43);
        org.joda.time.Duration duration45 = seconds43.toStandardDuration();
        org.joda.time.Seconds seconds46 = seconds27.minus(seconds43);
        org.joda.time.PeriodType periodType47 = seconds43.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(periodType47);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        org.joda.time.Duration duration10 = seconds7.toStandardDuration();
        int int11 = seconds7.getSeconds();
        boolean boolean12 = seconds1.isLessThan(seconds7);
        org.joda.time.DurationFieldType durationFieldType13 = seconds7.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(durationFieldType13);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.DurationFieldType durationFieldType14 = seconds4.getFieldType();
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.MutablePeriod mutablePeriod20 = seconds18.toMutablePeriod();
        boolean boolean21 = seconds4.isGreaterThan(seconds18);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.secondsIn(readableInterval22);
        org.joda.time.DurationFieldType durationFieldType24 = seconds23.getFieldType();
        org.joda.time.Seconds seconds26 = seconds23.dividedBy((-1));
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds26);
        org.joda.time.Seconds seconds28 = seconds26.negated();
        org.joda.time.Seconds seconds30 = seconds28.minus((int) 'a');
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn(readableInterval31);
        org.joda.time.Seconds seconds33 = seconds32.negated();
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.secondsIn(readableInterval34);
        int int36 = seconds35.size();
        boolean boolean37 = seconds33.isLessThan(seconds35);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.secondsIn(readableInterval38);
        int int40 = seconds39.size();
        org.joda.time.Seconds seconds42 = seconds39.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.secondsIn(readableInterval43);
        org.joda.time.DurationFieldType durationFieldType45 = seconds44.getFieldType();
        boolean boolean46 = seconds42.isSupported(durationFieldType45);
        boolean boolean47 = seconds35.isSupported(durationFieldType45);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds35);
        org.joda.time.PeriodType periodType49 = seconds48.getPeriodType();
        org.joda.time.PeriodType periodType50 = seconds48.getPeriodType();
        java.lang.String str51 = seconds48.toString();
        boolean boolean52 = seconds28.isLessThan(seconds48);
        boolean boolean53 = seconds18.isGreaterThan(seconds48);
        java.lang.Class<?> wildcardClass54 = seconds48.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PT0S" + "'", str51, "PT0S");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        boolean boolean9 = seconds1.isLessThan(seconds8);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType12 = seconds11.getPeriodType();
        org.joda.time.Duration duration13 = seconds11.toStandardDuration();
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds17 = seconds15.minus((int) (byte) 0);
        boolean boolean18 = seconds14.isLessThan(seconds17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds14);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        org.joda.time.Duration duration23 = seconds21.toStandardDuration();
        org.joda.time.Seconds seconds25 = seconds21.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds27 = seconds21.dividedBy((int) (short) 1);
        boolean boolean28 = seconds14.equals((java.lang.Object) (short) 1);
        boolean boolean29 = seconds11.isGreaterThan(seconds14);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds36 = seconds33.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.secondsIn(readableInterval37);
        org.joda.time.DurationFieldType durationFieldType39 = seconds38.getFieldType();
        org.joda.time.Seconds seconds41 = seconds38.dividedBy((-1));
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds38);
        int int43 = seconds38.size();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.DurationFieldType durationFieldType46 = seconds45.getFieldType();
        org.joda.time.Seconds seconds48 = seconds45.dividedBy((-1));
        int int49 = seconds45.getSeconds();
        org.joda.time.Seconds seconds50 = seconds38.minus(seconds45);
        boolean boolean51 = seconds36.isGreaterThan(seconds50);
        boolean boolean52 = seconds11.isGreaterThan(seconds50);
        org.joda.time.Seconds seconds53 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds55 = seconds11.plus(0);
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds59 = seconds57.minus((int) (byte) 0);
        boolean boolean60 = seconds56.isLessThan(seconds59);
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds56);
        org.joda.time.PeriodType periodType62 = seconds56.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType64 = seconds56.getFieldType(0);
        boolean boolean65 = seconds11.isSupported(durationFieldType64);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        int int5 = seconds1.getSeconds();
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.Seconds seconds17 = seconds15.dividedBy((int) '4');
        int int18 = seconds15.size();
        int int19 = seconds10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds15);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        boolean boolean23 = seconds15.isLessThan(seconds20);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = seconds38.get(durationFieldType39);
        boolean boolean41 = seconds33.isLessThan(seconds38);
        boolean boolean42 = seconds20.isLessThan(seconds33);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.seconds((int) (byte) 1);
        boolean boolean45 = seconds33.isLessThan(seconds44);
        org.joda.time.Seconds seconds46 = seconds1.minus(seconds44);
        org.joda.time.DurationFieldType durationFieldType48 = seconds1.getFieldType((int) (byte) 0);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType51 = seconds50.getPeriodType();
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.secondsIn(readableInterval52);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.MutablePeriod mutablePeriod55 = seconds53.toMutablePeriod();
        int int56 = seconds50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds53);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType59 = seconds58.getPeriodType();
        org.joda.time.Duration duration60 = seconds58.toStandardDuration();
        org.joda.time.Seconds seconds62 = seconds58.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds64 = seconds58.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds66 = seconds58.minus(seconds65);
        org.joda.time.DurationFieldType durationFieldType67 = seconds66.getFieldType();
        boolean boolean68 = seconds50.isSupported(durationFieldType67);
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType71 = seconds70.getPeriodType();
        org.joda.time.Period period72 = seconds70.toPeriod();
        org.joda.time.Duration duration73 = seconds70.toStandardDuration();
        boolean boolean74 = seconds50.equals((java.lang.Object) seconds70);
        int int75 = seconds70.size();
        org.joda.time.ReadableInterval readableInterval76 = null;
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.secondsIn(readableInterval76);
        org.joda.time.Seconds seconds78 = seconds77.negated();
        org.joda.time.Seconds seconds80 = seconds77.minus((int) '#');
        org.joda.time.Seconds seconds82 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType83 = seconds82.getPeriodType();
        org.joda.time.Duration duration84 = seconds82.toStandardDuration();
        org.joda.time.Seconds seconds85 = seconds77.plus(seconds82);
        boolean boolean86 = seconds70.equals((java.lang.Object) seconds82);
        boolean boolean87 = seconds1.equals((java.lang.Object) seconds82);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType20 = seconds19.getPeriodType();
        org.joda.time.Duration duration21 = seconds19.toStandardDuration();
        org.joda.time.Seconds seconds23 = seconds19.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.secondsIn(readableInterval24);
        org.joda.time.Seconds seconds26 = seconds25.negated();
        org.joda.time.MutablePeriod mutablePeriod27 = seconds25.toMutablePeriod();
        org.joda.time.Duration duration28 = seconds25.toStandardDuration();
        int int29 = seconds25.getSeconds();
        boolean boolean30 = seconds19.isLessThan(seconds25);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = seconds36.get(durationFieldType37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds40 = seconds36.minus(seconds39);
        org.joda.time.Seconds seconds42 = seconds40.dividedBy((int) '4');
        int int43 = seconds40.size();
        int int44 = seconds35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds40);
        org.joda.time.Seconds seconds46 = seconds40.plus(0);
        java.lang.String str47 = seconds46.toString();
        org.joda.time.Period period48 = seconds46.toPeriod();
        org.joda.time.ReadableInterval readableInterval49 = null;
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.secondsIn(readableInterval49);
        org.joda.time.Seconds seconds51 = seconds50.negated();
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = seconds50.get(durationFieldType52);
        boolean boolean54 = seconds46.isLessThan(seconds50);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds50);
        org.joda.time.Seconds seconds56 = seconds19.plus(seconds50);
        org.joda.time.MutablePeriod mutablePeriod57 = seconds19.toMutablePeriod();
        org.joda.time.Seconds seconds58 = seconds4.minus(seconds19);
        org.joda.time.ReadableInterval readableInterval59 = null;
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.secondsIn(readableInterval59);
        org.joda.time.DurationFieldType durationFieldType61 = seconds60.getFieldType();
        org.joda.time.Seconds seconds63 = seconds60.dividedBy((-1));
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType68 = seconds67.getPeriodType();
        org.joda.time.Duration duration69 = seconds67.toStandardDuration();
        org.joda.time.Seconds seconds71 = seconds67.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds72 = seconds71.negated();
        boolean boolean73 = seconds65.isLessThan(seconds72);
        org.joda.time.Seconds seconds74 = seconds63.plus(seconds65);
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType76 = null;
        int int77 = seconds75.get(durationFieldType76);
        org.joda.time.Seconds seconds78 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds79 = seconds75.minus(seconds78);
        org.joda.time.Seconds seconds80 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType81 = null;
        int int82 = seconds80.get(durationFieldType81);
        org.joda.time.Seconds seconds83 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds84 = seconds80.minus(seconds83);
        org.joda.time.Seconds seconds86 = seconds84.dividedBy((int) '4');
        int int87 = seconds84.size();
        int int88 = seconds79.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds84);
        org.joda.time.Seconds seconds89 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType90 = null;
        int int91 = seconds89.get(durationFieldType90);
        boolean boolean92 = seconds84.isLessThan(seconds89);
        java.lang.Class<?> wildcardClass93 = seconds84.getClass();
        boolean boolean94 = seconds65.equals((java.lang.Object) seconds84);
        org.joda.time.Seconds seconds96 = seconds84.minus((int) (byte) 0);
        org.joda.time.Seconds seconds97 = seconds4.plus(seconds96);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT2147483644S" + "'", str47, "PT2147483644S");
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(seconds89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(seconds96);
        org.junit.Assert.assertNotNull(seconds97);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.Seconds seconds19 = seconds15.multipliedBy((int) (short) -1);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        org.joda.time.Seconds seconds22 = seconds21.negated();
        org.joda.time.MutablePeriod mutablePeriod23 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration24 = seconds22.toStandardDuration();
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = seconds25.get(durationFieldType26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds29 = seconds25.minus(seconds28);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds36 = seconds34.dividedBy((int) '4');
        int int37 = seconds34.size();
        int int38 = seconds29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds34);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = seconds39.get(durationFieldType40);
        boolean boolean42 = seconds34.isLessThan(seconds39);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = seconds43.get(durationFieldType44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds47 = seconds43.minus(seconds46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds52 = seconds48.minus(seconds51);
        org.joda.time.Seconds seconds54 = seconds52.dividedBy((int) '4');
        int int55 = seconds52.size();
        int int56 = seconds47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds52);
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = seconds57.get(durationFieldType58);
        boolean boolean60 = seconds52.isLessThan(seconds57);
        boolean boolean61 = seconds39.isLessThan(seconds52);
        org.joda.time.DurationFieldType durationFieldType62 = seconds52.getFieldType();
        boolean boolean63 = seconds22.isSupported(durationFieldType62);
        org.joda.time.Seconds seconds64 = seconds22.negated();
        org.joda.time.DurationFieldType durationFieldType65 = seconds22.getFieldType();
        boolean boolean66 = seconds19.isSupported(durationFieldType65);
        java.lang.String str67 = seconds19.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "PT-2147483644S" + "'", str67, "PT-2147483644S");
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Duration duration2 = seconds1.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = seconds4.get(durationFieldType5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds8 = seconds4.minus(seconds7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds15 = seconds13.dividedBy((int) '4');
        int int16 = seconds13.size();
        int int17 = seconds8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds13);
        org.joda.time.Seconds seconds19 = seconds13.plus(0);
        org.joda.time.MutablePeriod mutablePeriod20 = seconds13.toMutablePeriod();
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = seconds21.get(durationFieldType22);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds25 = seconds21.minus(seconds24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds32 = seconds30.dividedBy((int) '4');
        int int33 = seconds30.size();
        int int34 = seconds25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds30);
        org.joda.time.DurationFieldType durationFieldType35 = seconds25.getFieldType();
        int int36 = seconds13.get(durationFieldType35);
        boolean boolean37 = seconds1.isSupported(durationFieldType35);
        org.joda.time.PeriodType periodType38 = seconds1.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2147483644 + "'", int36 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(periodType38);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        org.joda.time.Period period10 = seconds5.toPeriod();
        org.joda.time.Seconds seconds12 = seconds5.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod13 = seconds5.toMutablePeriod();
        org.joda.time.Seconds seconds15 = seconds5.plus((-2147483647));
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(seconds15);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds3 = seconds0.plus(1);
        org.joda.time.Duration duration4 = seconds0.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds0.negated();
        org.joda.time.Duration duration6 = seconds0.toStandardDuration();
        java.lang.String str7 = seconds0.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2S" + "'", str7, "PT2S");
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.MutablePeriod mutablePeriod40 = seconds33.toMutablePeriod();
        int int41 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.seconds(0);
        org.joda.time.Seconds seconds45 = seconds43.minus((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds46 = seconds33.minus(seconds45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483644 + 100");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int9 = seconds8.getSeconds();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds11 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds13 = seconds5.plus(0);
        org.joda.time.MutablePeriod mutablePeriod14 = seconds13.toMutablePeriod();
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = seconds21.get(durationFieldType22);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds25 = seconds21.minus(seconds24);
        org.joda.time.Seconds seconds27 = seconds25.dividedBy((int) '4');
        int int28 = seconds25.size();
        int int29 = seconds20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds25);
        boolean boolean30 = seconds15.isLessThan(seconds25);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.secondsIn(readableInterval36);
        org.joda.time.Seconds seconds38 = seconds37.negated();
        org.joda.time.MutablePeriod mutablePeriod39 = seconds37.toMutablePeriod();
        org.joda.time.Duration duration40 = seconds37.toStandardDuration();
        boolean boolean41 = seconds31.equals((java.lang.Object) seconds37);
        org.joda.time.MutablePeriod mutablePeriod42 = seconds31.toMutablePeriod();
        org.joda.time.Seconds seconds43 = seconds15.plus(seconds31);
        boolean boolean44 = seconds13.isGreaterThan(seconds31);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT0S");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType3 = seconds1.getFieldType((-11));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -11");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds9);
        java.lang.String str15 = seconds14.toString();
        org.joda.time.MutablePeriod mutablePeriod16 = seconds14.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT2147483644S" + "'", str15, "PT2147483644S");
        org.junit.Assert.assertNotNull(mutablePeriod16);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.secondsIn(readableInterval4);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds11 = seconds9.minus((int) (byte) 0);
        boolean boolean12 = seconds8.isLessThan(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds16 = seconds14.minus((int) (byte) 0);
        boolean boolean17 = seconds13.isLessThan(seconds16);
        org.joda.time.Period period18 = seconds13.toPeriod();
        int int19 = seconds11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds13);
        boolean boolean20 = seconds1.equals((java.lang.Object) seconds13);
        java.lang.String str21 = seconds13.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT3S" + "'", str21, "PT3S");
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        boolean boolean72 = seconds64.isLessThan(seconds69);
        boolean boolean73 = seconds54.isLessThan(seconds64);
        org.joda.time.DurationFieldType durationFieldType74 = seconds64.getFieldType();
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType76 = null;
        int int77 = seconds75.get(durationFieldType76);
        org.joda.time.Seconds seconds78 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds79 = seconds75.minus(seconds78);
        org.joda.time.Seconds seconds81 = seconds78.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds82 = seconds81.negated();
        org.joda.time.DurationFieldType durationFieldType83 = seconds82.getFieldType();
        boolean boolean84 = seconds64.isSupported(durationFieldType83);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.MutablePeriod mutablePeriod16 = seconds9.toMutablePeriod();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds17.get(durationFieldType18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = seconds17.minus(seconds20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = seconds22.get(durationFieldType23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds26 = seconds22.minus(seconds25);
        org.joda.time.Seconds seconds28 = seconds26.dividedBy((int) '4');
        int int29 = seconds26.size();
        int int30 = seconds21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds26);
        org.joda.time.DurationFieldType durationFieldType31 = seconds21.getFieldType();
        int int32 = seconds9.get(durationFieldType31);
        java.lang.Class<?> wildcardClass33 = seconds9.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483644 + "'", int32 == 2147483644);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        java.lang.String str6 = seconds5.toString();
        org.joda.time.DurationFieldType durationFieldType7 = seconds5.getFieldType();
        org.joda.time.Seconds seconds9 = seconds5.minus(3);
        org.joda.time.Seconds seconds10 = seconds9.negated();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds10);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds5 = seconds1.minus((int) (byte) -1);
        int int6 = seconds1.size();
        org.joda.time.Seconds seconds8 = seconds1.dividedBy((int) (short) 10);
        org.joda.time.Period period9 = seconds1.toPeriod();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType14 = seconds13.getPeriodType();
        org.joda.time.Duration duration15 = seconds13.toStandardDuration();
        org.joda.time.Seconds seconds17 = seconds13.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds18 = seconds17.negated();
        boolean boolean19 = seconds11.isGreaterThan(seconds17);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        org.joda.time.Seconds seconds24 = seconds21.dividedBy((-1));
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int29 = seconds28.getSeconds();
        org.joda.time.Duration duration30 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds31 = seconds25.minus(seconds28);
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.secondsIn(readableInterval32);
        org.joda.time.Seconds seconds34 = seconds33.negated();
        org.joda.time.Seconds seconds36 = seconds33.minus((int) '#');
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType39 = seconds38.getPeriodType();
        org.joda.time.Duration duration40 = seconds38.toStandardDuration();
        org.joda.time.Seconds seconds42 = seconds38.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds43 = seconds42.negated();
        org.joda.time.Duration duration44 = seconds42.toStandardDuration();
        org.joda.time.Seconds seconds45 = seconds42.negated();
        org.joda.time.DurationFieldType durationFieldType46 = seconds42.getFieldType();
        boolean boolean47 = seconds33.isSupported(durationFieldType46);
        boolean boolean48 = seconds31.isSupported(durationFieldType46);
        boolean boolean49 = seconds17.isSupported(durationFieldType46);
        int int50 = seconds1.get(durationFieldType46);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy(101);
        org.joda.time.Seconds seconds8 = seconds6.minus(32);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        int int28 = seconds27.size();
        org.joda.time.PeriodType periodType29 = seconds27.getPeriodType();
        java.lang.Class<?> wildcardClass30 = periodType29.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType28 = seconds27.getPeriodType();
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Seconds seconds33 = seconds30.dividedBy((-1));
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds33);
        org.joda.time.Seconds seconds35 = seconds33.negated();
        org.joda.time.Seconds seconds36 = seconds27.plus(seconds33);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int39 = seconds38.getSeconds();
        org.joda.time.Duration duration40 = seconds38.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.secondsIn(readableInterval41);
        org.joda.time.Seconds seconds43 = seconds42.negated();
        int int44 = seconds38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds43);
        org.joda.time.Duration duration45 = seconds43.toStandardDuration();
        org.joda.time.Seconds seconds46 = seconds27.minus(seconds43);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType48 = seconds27.getFieldType((-99));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -99");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(seconds46);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        int int5 = seconds1.getSeconds();
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.Seconds seconds17 = seconds15.dividedBy((int) '4');
        int int18 = seconds15.size();
        int int19 = seconds10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds15);
        org.joda.time.Seconds seconds21 = seconds15.plus(0);
        java.lang.String str22 = seconds21.toString();
        org.joda.time.Period period23 = seconds21.toPeriod();
        org.joda.time.Seconds seconds25 = seconds21.multipliedBy((int) (short) -1);
        int int26 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds25);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.parseSeconds("PT-2S");
        org.joda.time.Seconds seconds29 = seconds1.minus(seconds28);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT2147483644S" + "'", str22, "PT2147483644S");
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        org.joda.time.Seconds seconds10 = seconds1.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.secondsIn(readableInterval13);
        org.joda.time.Seconds seconds15 = seconds14.negated();
        org.joda.time.Seconds seconds17 = seconds14.minus((int) '#');
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType20 = seconds19.getPeriodType();
        org.joda.time.Duration duration21 = seconds19.toStandardDuration();
        org.joda.time.Seconds seconds22 = seconds14.plus(seconds19);
        org.joda.time.Seconds seconds23 = seconds19.negated();
        org.joda.time.Seconds seconds25 = seconds19.plus((-1));
        org.joda.time.Seconds seconds26 = seconds12.minus(seconds19);
        org.joda.time.Seconds seconds27 = seconds19.negated();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        boolean boolean12 = seconds6.isGreaterThan(seconds11);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType15 = seconds14.getPeriodType();
        org.joda.time.Duration duration16 = seconds14.toStandardDuration();
        org.joda.time.Seconds seconds18 = seconds14.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds20 = seconds14.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds22 = seconds14.minus(seconds21);
        int int23 = seconds14.size();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds14.toMutablePeriod();
        org.joda.time.Seconds seconds26 = seconds14.plus((int) (short) 0);
        boolean boolean27 = seconds6.isLessThan(seconds14);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.DurationFieldType durationFieldType33 = seconds28.getFieldType();
        org.joda.time.Seconds seconds35 = seconds28.dividedBy((int) ' ');
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds28);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds36);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) (byte) 1);
        boolean boolean40 = seconds14.isLessThan(seconds39);
        int int41 = seconds39.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Seconds seconds4 = seconds1.minus((int) (byte) 0);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.Seconds seconds7 = seconds4.plus(0);
        org.joda.time.Period period8 = seconds4.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds3.getFieldType();
        java.lang.Class<?> wildcardClass6 = seconds3.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds7 = seconds1.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.Seconds seconds12 = seconds11.negated();
        org.joda.time.MutablePeriod mutablePeriod13 = seconds12.toMutablePeriod();
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.DurationFieldType durationFieldType19 = seconds14.getFieldType();
        int int20 = seconds12.get(durationFieldType19);
        boolean boolean21 = seconds9.isSupported(durationFieldType19);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds9);
        org.joda.time.PeriodType periodType23 = seconds9.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(periodType23);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds19.get(durationFieldType21);
        boolean boolean23 = seconds15.isLessThan(seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.Seconds seconds27 = seconds19.multipliedBy(100);
        int int28 = seconds19.size();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT2147483644S");
        int int2 = seconds1.getSeconds();
        int int3 = seconds1.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2147483644 + "'", int2 == 2147483644);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483644 + "'", int3 == 2147483644);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds4.get(durationFieldType6);
        org.joda.time.PeriodType periodType8 = seconds4.getPeriodType();
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.secondsIn(readableInterval9);
        org.joda.time.DurationFieldType durationFieldType11 = seconds10.getFieldType();
        org.joda.time.Seconds seconds13 = seconds10.dividedBy((-1));
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds10);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = seconds14.isSupported(durationFieldType15);
        org.joda.time.Seconds seconds18 = seconds14.plus((int) (byte) 1);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = seconds19.get(durationFieldType20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds23 = seconds19.minus(seconds22);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds30 = seconds28.dividedBy((int) '4');
        int int31 = seconds28.size();
        int int32 = seconds23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds28);
        org.joda.time.Seconds seconds34 = seconds28.plus(0);
        java.lang.String str35 = seconds34.toString();
        org.joda.time.Period period36 = seconds34.toPeriod();
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.secondsIn(readableInterval37);
        org.joda.time.Seconds seconds39 = seconds38.negated();
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = seconds38.get(durationFieldType40);
        boolean boolean42 = seconds34.isLessThan(seconds38);
        org.joda.time.Seconds seconds43 = seconds18.minus(seconds34);
        org.joda.time.DurationFieldType durationFieldType44 = seconds43.getFieldType();
        boolean boolean45 = seconds4.isSupported(durationFieldType44);
        boolean boolean46 = seconds1.isGreaterThan(seconds4);
        org.joda.time.Seconds seconds48 = seconds4.plus((-2147483644));
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "PT2147483644S" + "'", str35, "PT2147483644S");
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(seconds48);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Period period3 = seconds1.toPeriod();
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds6 = seconds1.plus((int) (short) 0);
        org.joda.time.Seconds seconds8 = seconds1.minus(0);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        int int7 = seconds6.size();
        org.joda.time.Seconds seconds9 = seconds6.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        boolean boolean13 = seconds9.isSupported(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = seconds19.get(durationFieldType20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds23 = seconds19.minus(seconds22);
        org.joda.time.Seconds seconds25 = seconds23.dividedBy((int) '4');
        int int26 = seconds23.size();
        int int27 = seconds18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds23);
        org.joda.time.Seconds seconds29 = seconds23.plus(0);
        org.joda.time.Seconds seconds30 = seconds9.minus(seconds23);
        org.joda.time.DurationFieldType durationFieldType31 = seconds9.getFieldType();
        boolean boolean32 = seconds1.isSupported(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType34 = seconds33.getPeriodType();
        org.joda.time.Seconds seconds35 = seconds1.minus(seconds33);
        org.joda.time.MutablePeriod mutablePeriod36 = seconds35.toMutablePeriod();
        int int37 = seconds35.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-2) + "'", int37 == (-2));
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        boolean boolean72 = seconds64.isLessThan(seconds69);
        boolean boolean73 = seconds54.isLessThan(seconds64);
        org.joda.time.Seconds seconds75 = seconds54.plus((-1));
        java.lang.String str76 = seconds75.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "PT-2S" + "'", str76, "PT-2S");
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Duration duration1 = seconds0.toStandardDuration();
        org.joda.time.Period period2 = seconds0.toPeriod();
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period2);
        org.joda.time.Seconds seconds5 = seconds3.multipliedBy((int) 'a');
        int int6 = seconds5.size();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Duration duration30 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds32 = seconds28.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds34 = seconds28.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds36 = seconds28.minus(seconds35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds43 = seconds40.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds48 = seconds44.minus(seconds47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds49.get(durationFieldType50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds53 = seconds49.minus(seconds52);
        org.joda.time.Seconds seconds55 = seconds53.dividedBy((int) '4');
        int int56 = seconds53.size();
        int int57 = seconds48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds53);
        org.joda.time.Seconds seconds59 = seconds53.plus(0);
        org.joda.time.MutablePeriod mutablePeriod60 = seconds53.toMutablePeriod();
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = seconds61.get(durationFieldType62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds65 = seconds61.minus(seconds64);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = seconds66.get(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds70 = seconds66.minus(seconds69);
        org.joda.time.Seconds seconds72 = seconds70.dividedBy((int) '4');
        int int73 = seconds70.size();
        int int74 = seconds65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds70);
        org.joda.time.DurationFieldType durationFieldType75 = seconds65.getFieldType();
        int int76 = seconds53.get(durationFieldType75);
        boolean boolean77 = seconds40.isSupported(durationFieldType75);
        boolean boolean78 = seconds36.isSupported(durationFieldType75);
        boolean boolean79 = seconds10.isGreaterThan(seconds36);
        org.joda.time.Seconds seconds81 = seconds36.dividedBy((int) ' ');
        org.joda.time.Seconds seconds83 = seconds81.multipliedBy((int) (byte) 0);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483644 + "'", int76 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(seconds83);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.multipliedBy(0);
        org.joda.time.Seconds seconds8 = seconds3.negated();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds3);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Seconds seconds12 = seconds9.minus(2147483644);
        java.lang.Class<?> wildcardClass13 = seconds9.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Seconds seconds15 = seconds13.multipliedBy(2147483647);
        int int16 = seconds15.getSeconds();
        org.joda.time.MutablePeriod mutablePeriod17 = seconds15.toMutablePeriod();
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds29 = seconds27.dividedBy((int) '4');
        int int30 = seconds27.size();
        int int31 = seconds22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds27);
        org.joda.time.Seconds seconds33 = seconds27.plus(0);
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.secondsIn(readableInterval34);
        org.joda.time.DurationFieldType durationFieldType36 = seconds35.getFieldType();
        org.joda.time.Seconds seconds38 = seconds35.dividedBy((-1));
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds35);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        boolean boolean41 = seconds39.isSupported(durationFieldType40);
        org.joda.time.Seconds seconds43 = seconds39.plus((int) (byte) 1);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds48 = seconds44.minus(seconds47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds49.get(durationFieldType50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds53 = seconds49.minus(seconds52);
        org.joda.time.Seconds seconds55 = seconds53.dividedBy((int) '4');
        int int56 = seconds53.size();
        int int57 = seconds48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds53);
        org.joda.time.Seconds seconds59 = seconds53.plus(0);
        java.lang.String str60 = seconds59.toString();
        org.joda.time.Period period61 = seconds59.toPeriod();
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.secondsIn(readableInterval62);
        org.joda.time.Seconds seconds64 = seconds63.negated();
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = seconds63.get(durationFieldType65);
        boolean boolean67 = seconds59.isLessThan(seconds63);
        org.joda.time.Seconds seconds68 = seconds43.minus(seconds59);
        org.joda.time.Seconds seconds70 = seconds68.dividedBy((int) 'a');
        org.joda.time.Seconds seconds71 = seconds27.plus(seconds68);
        org.joda.time.Seconds seconds72 = seconds71.negated();
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds76 = seconds74.minus((int) (byte) 0);
        boolean boolean77 = seconds73.isLessThan(seconds76);
        org.joda.time.Seconds seconds78 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds79 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds81 = seconds79.minus((int) (byte) 0);
        boolean boolean82 = seconds78.isLessThan(seconds81);
        org.joda.time.Period period83 = seconds78.toPeriod();
        int int84 = seconds76.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds78);
        org.joda.time.Seconds seconds86 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType87 = seconds86.getFieldType();
        boolean boolean88 = seconds76.isSupported(durationFieldType87);
        int int89 = seconds72.get(durationFieldType87);
        boolean boolean90 = seconds15.isSupported(durationFieldType87);
        org.joda.time.Seconds seconds91 = seconds15.negated();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PT2147483644S" + "'", str60, "PT2147483644S");
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(seconds91);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Duration duration6 = seconds5.toStandardDuration();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType9 = seconds8.getPeriodType();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds12 = seconds8.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds13 = seconds12.negated();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        org.joda.time.Seconds seconds16 = seconds15.negated();
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.secondsIn(readableInterval17);
        int int19 = seconds18.size();
        boolean boolean20 = seconds16.isLessThan(seconds18);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        int int23 = seconds22.size();
        org.joda.time.Seconds seconds25 = seconds22.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn(readableInterval26);
        org.joda.time.DurationFieldType durationFieldType28 = seconds27.getFieldType();
        boolean boolean29 = seconds25.isSupported(durationFieldType28);
        boolean boolean30 = seconds18.isSupported(durationFieldType28);
        boolean boolean31 = seconds12.isSupported(durationFieldType28);
        int int32 = seconds12.size();
        org.joda.time.Seconds seconds33 = seconds5.plus(seconds12);
        java.lang.Class<?> wildcardClass34 = seconds5.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        boolean boolean9 = seconds1.isLessThan(seconds8);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType12 = seconds11.getPeriodType();
        org.joda.time.Duration duration13 = seconds11.toStandardDuration();
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds17 = seconds15.minus((int) (byte) 0);
        boolean boolean18 = seconds14.isLessThan(seconds17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds14);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        org.joda.time.Duration duration23 = seconds21.toStandardDuration();
        org.joda.time.Seconds seconds25 = seconds21.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds27 = seconds21.dividedBy((int) (short) 1);
        boolean boolean28 = seconds14.equals((java.lang.Object) (short) 1);
        boolean boolean29 = seconds11.isGreaterThan(seconds14);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds36 = seconds33.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.secondsIn(readableInterval37);
        org.joda.time.DurationFieldType durationFieldType39 = seconds38.getFieldType();
        org.joda.time.Seconds seconds41 = seconds38.dividedBy((-1));
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds38);
        int int43 = seconds38.size();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.DurationFieldType durationFieldType46 = seconds45.getFieldType();
        org.joda.time.Seconds seconds48 = seconds45.dividedBy((-1));
        int int49 = seconds45.getSeconds();
        org.joda.time.Seconds seconds50 = seconds38.minus(seconds45);
        boolean boolean51 = seconds36.isGreaterThan(seconds50);
        boolean boolean52 = seconds11.isGreaterThan(seconds50);
        org.joda.time.Seconds seconds53 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds55 = seconds11.plus(0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds57 = seconds11.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = seconds0.negated();
        int int2 = seconds0.getSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 3 + "'", int2 == 3);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.MutablePeriod mutablePeriod8 = seconds6.toMutablePeriod();
        org.joda.time.Duration duration9 = seconds6.toStandardDuration();
        boolean boolean10 = seconds0.equals((java.lang.Object) seconds6);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Period period6 = seconds1.toPeriod();
        org.joda.time.Duration duration7 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.parseSeconds("PT-1S");
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.Seconds seconds11 = seconds9.plus(seconds10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds10);
        boolean boolean13 = seconds1.equals((java.lang.Object) seconds10);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        org.joda.time.Seconds seconds18 = seconds15.dividedBy((-1));
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds15);
        org.joda.time.Period period20 = seconds15.toPeriod();
        org.joda.time.Duration duration21 = seconds15.toStandardDuration();
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.parseSeconds("PT-1S");
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.Seconds seconds25 = seconds23.plus(seconds24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds24);
        boolean boolean27 = seconds15.equals((java.lang.Object) seconds24);
        boolean boolean28 = seconds10.equals((java.lang.Object) boolean27);
        org.joda.time.PeriodType periodType29 = seconds10.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(periodType29);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        java.lang.String str25 = seconds24.toString();
        org.joda.time.Period period26 = seconds24.toPeriod();
        org.joda.time.Seconds seconds27 = seconds4.minus(seconds24);
        org.joda.time.Period period28 = seconds27.toPeriod();
        java.lang.Class<?> wildcardClass29 = seconds27.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT2147483644S" + "'", str25, "PT2147483644S");
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.MutablePeriod mutablePeriod8 = seconds6.toMutablePeriod();
        org.joda.time.Duration duration9 = seconds6.toStandardDuration();
        boolean boolean10 = seconds0.equals((java.lang.Object) seconds6);
        int int11 = seconds0.getSeconds();
        org.joda.time.Seconds seconds13 = seconds0.dividedBy(101);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        org.joda.time.Seconds seconds18 = seconds15.dividedBy((-1));
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds15);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        boolean boolean21 = seconds19.isSupported(durationFieldType20);
        org.joda.time.Seconds seconds23 = seconds19.plus((int) (byte) 1);
        org.joda.time.Seconds seconds25 = seconds19.multipliedBy((int) (short) 100);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.Seconds seconds28 = seconds19.multipliedBy(0);
        boolean boolean29 = seconds0.equals((java.lang.Object) 0);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.secondsIn(readableInterval28);
        int int30 = seconds29.size();
        org.joda.time.Seconds seconds32 = seconds29.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.secondsIn(readableInterval33);
        org.joda.time.DurationFieldType durationFieldType35 = seconds34.getFieldType();
        boolean boolean36 = seconds32.isSupported(durationFieldType35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = seconds42.get(durationFieldType43);
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds46 = seconds42.minus(seconds45);
        org.joda.time.Seconds seconds48 = seconds46.dividedBy((int) '4');
        int int49 = seconds46.size();
        int int50 = seconds41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds46);
        org.joda.time.Seconds seconds52 = seconds46.plus(0);
        org.joda.time.Seconds seconds53 = seconds32.minus(seconds46);
        org.joda.time.Seconds seconds55 = seconds46.multipliedBy((int) (byte) -1);
        java.lang.String str56 = seconds46.toString();
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType59 = seconds58.getPeriodType();
        org.joda.time.Duration duration60 = seconds58.toStandardDuration();
        org.joda.time.Seconds seconds62 = seconds58.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds64 = seconds58.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds66 = seconds58.minus(seconds65);
        org.joda.time.DurationFieldType durationFieldType67 = seconds66.getFieldType();
        boolean boolean68 = seconds46.isSupported(durationFieldType67);
        int int69 = seconds27.get(durationFieldType67);
        java.lang.Class<?> wildcardClass70 = seconds27.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PT2147483644S" + "'", str56, "PT2147483644S");
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-2147483644) + "'", int69 == (-2147483644));
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds5 = seconds1.minus((int) (byte) -1);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType9 = seconds8.getPeriodType();
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.Seconds seconds12 = seconds11.negated();
        org.joda.time.MutablePeriod mutablePeriod13 = seconds11.toMutablePeriod();
        int int14 = seconds8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType17 = seconds16.getPeriodType();
        org.joda.time.Duration duration18 = seconds16.toStandardDuration();
        org.joda.time.Seconds seconds20 = seconds16.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds22 = seconds16.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds24 = seconds16.minus(seconds23);
        org.joda.time.DurationFieldType durationFieldType25 = seconds24.getFieldType();
        boolean boolean26 = seconds8.isSupported(durationFieldType25);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Period period30 = seconds28.toPeriod();
        org.joda.time.Duration duration31 = seconds28.toStandardDuration();
        boolean boolean32 = seconds8.equals((java.lang.Object) seconds28);
        org.joda.time.Duration duration33 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds34 = seconds28.negated();
        int int35 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds34);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType38 = seconds37.getPeriodType();
        org.joda.time.Period period39 = seconds37.toPeriod();
        org.joda.time.Duration duration40 = seconds37.toStandardDuration();
        org.joda.time.Seconds seconds42 = seconds37.plus((int) (short) 0);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType45 = seconds44.getPeriodType();
        org.joda.time.Duration duration46 = seconds44.toStandardDuration();
        org.joda.time.Seconds seconds48 = seconds44.plus((int) (short) 0);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds49.get(durationFieldType50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds53 = seconds49.minus(seconds52);
        org.joda.time.Seconds seconds55 = seconds52.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = seconds56.get(durationFieldType57);
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds60 = seconds56.minus(seconds59);
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = seconds61.get(durationFieldType62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds65 = seconds61.minus(seconds64);
        org.joda.time.Seconds seconds67 = seconds65.dividedBy((int) '4');
        int int68 = seconds65.size();
        int int69 = seconds60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds65);
        org.joda.time.Seconds seconds71 = seconds65.plus(0);
        org.joda.time.MutablePeriod mutablePeriod72 = seconds65.toMutablePeriod();
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType74 = null;
        int int75 = seconds73.get(durationFieldType74);
        org.joda.time.Seconds seconds76 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds77 = seconds73.minus(seconds76);
        org.joda.time.Seconds seconds78 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType79 = null;
        int int80 = seconds78.get(durationFieldType79);
        org.joda.time.Seconds seconds81 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds82 = seconds78.minus(seconds81);
        org.joda.time.Seconds seconds84 = seconds82.dividedBy((int) '4');
        int int85 = seconds82.size();
        int int86 = seconds77.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds82);
        org.joda.time.DurationFieldType durationFieldType87 = seconds77.getFieldType();
        int int88 = seconds65.get(durationFieldType87);
        boolean boolean89 = seconds52.isSupported(durationFieldType87);
        org.joda.time.Seconds seconds90 = seconds48.plus(seconds52);
        boolean boolean91 = seconds37.isLessThan(seconds52);
        org.joda.time.Seconds seconds92 = seconds34.minus(seconds52);
        int int93 = seconds92.size();
        java.lang.Class<?> wildcardClass94 = seconds92.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(mutablePeriod72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 2147483644 + "'", int88 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(seconds90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(seconds92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.PeriodType periodType19 = seconds17.getPeriodType();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        int int22 = seconds21.size();
        org.joda.time.Seconds seconds24 = seconds21.dividedBy(100);
        org.joda.time.PeriodType periodType25 = seconds24.getPeriodType();
        org.joda.time.Seconds seconds27 = seconds24.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds29 = seconds27.minus((-1));
        org.joda.time.DurationFieldType durationFieldType30 = seconds29.getFieldType();
        int int31 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds29);
        org.joda.time.PeriodType periodType32 = seconds29.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(periodType32);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        boolean boolean12 = seconds6.isGreaterThan(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        org.joda.time.PeriodType periodType14 = seconds6.getPeriodType();
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = seconds15.getValue((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(seconds15);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) '#');
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        java.lang.String str18 = seconds17.toString();
        org.joda.time.Period period19 = seconds17.toPeriod();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        org.joda.time.Seconds seconds22 = seconds21.negated();
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = seconds21.get(durationFieldType23);
        boolean boolean25 = seconds17.isLessThan(seconds21);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds21);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds21);
        org.joda.time.DurationFieldType durationFieldType29 = seconds27.getFieldType(0);
        int int30 = seconds1.get(durationFieldType29);
        java.lang.Class<?> wildcardClass31 = durationFieldType29.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2147483644S" + "'", str18, "PT2147483644S");
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 35 + "'", int30 == 35);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        boolean boolean12 = seconds6.isGreaterThan(seconds11);
        org.joda.time.Seconds seconds14 = seconds6.multipliedBy(1);
        org.joda.time.Seconds seconds16 = seconds14.multipliedBy(3);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.secondsIn(readableInterval17);
        org.joda.time.Seconds seconds19 = seconds18.negated();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        int int22 = seconds21.size();
        boolean boolean23 = seconds19.isLessThan(seconds21);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.secondsIn(readableInterval24);
        int int26 = seconds25.size();
        org.joda.time.Seconds seconds28 = seconds25.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        boolean boolean32 = seconds28.isSupported(durationFieldType31);
        boolean boolean33 = seconds21.isSupported(durationFieldType31);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds21);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType37 = seconds36.getPeriodType();
        org.joda.time.Duration duration38 = seconds36.toStandardDuration();
        org.joda.time.Seconds seconds40 = seconds36.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.secondsIn(readableInterval41);
        org.joda.time.Seconds seconds43 = seconds42.negated();
        org.joda.time.MutablePeriod mutablePeriod44 = seconds42.toMutablePeriod();
        org.joda.time.Duration duration45 = seconds42.toStandardDuration();
        int int46 = seconds42.getSeconds();
        boolean boolean47 = seconds36.isLessThan(seconds42);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds52 = seconds48.minus(seconds51);
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType54 = null;
        int int55 = seconds53.get(durationFieldType54);
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds57 = seconds53.minus(seconds56);
        org.joda.time.Seconds seconds59 = seconds57.dividedBy((int) '4');
        int int60 = seconds57.size();
        int int61 = seconds52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds57);
        org.joda.time.Seconds seconds63 = seconds57.plus(0);
        java.lang.String str64 = seconds63.toString();
        org.joda.time.Period period65 = seconds63.toPeriod();
        org.joda.time.ReadableInterval readableInterval66 = null;
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.secondsIn(readableInterval66);
        org.joda.time.Seconds seconds68 = seconds67.negated();
        org.joda.time.DurationFieldType durationFieldType69 = null;
        int int70 = seconds67.get(durationFieldType69);
        boolean boolean71 = seconds63.isLessThan(seconds67);
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds67);
        org.joda.time.Seconds seconds73 = seconds36.plus(seconds67);
        org.joda.time.MutablePeriod mutablePeriod74 = seconds36.toMutablePeriod();
        org.joda.time.Seconds seconds75 = seconds21.minus(seconds36);
        org.joda.time.Seconds seconds77 = seconds21.dividedBy((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType79 = seconds21.getFieldType(0);
        int int80 = seconds14.get(durationFieldType79);
        java.lang.Class<?> wildcardClass81 = seconds14.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT2147483644S" + "'", str64, "PT2147483644S");
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(mutablePeriod74);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        org.joda.time.Seconds seconds11 = seconds5.multipliedBy((int) (short) 100);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds5);
        org.joda.time.Seconds seconds14 = seconds5.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.secondsIn(readableInterval15);
        int int17 = seconds16.size();
        org.joda.time.Seconds seconds19 = seconds16.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        boolean boolean23 = seconds19.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.Seconds seconds40 = seconds19.minus(seconds33);
        org.joda.time.Seconds seconds42 = seconds33.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType43 = seconds42.getPeriodType();
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = seconds45.get(durationFieldType46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds49 = seconds45.minus(seconds48);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = seconds50.get(durationFieldType51);
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds54 = seconds50.minus(seconds53);
        org.joda.time.Seconds seconds56 = seconds54.dividedBy((int) '4');
        int int57 = seconds54.size();
        int int58 = seconds49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds54);
        boolean boolean59 = seconds44.isLessThan(seconds54);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.ReadableInterval readableInterval65 = null;
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.secondsIn(readableInterval65);
        org.joda.time.Seconds seconds67 = seconds66.negated();
        org.joda.time.MutablePeriod mutablePeriod68 = seconds66.toMutablePeriod();
        org.joda.time.Duration duration69 = seconds66.toStandardDuration();
        boolean boolean70 = seconds60.equals((java.lang.Object) seconds66);
        org.joda.time.MutablePeriod mutablePeriod71 = seconds60.toMutablePeriod();
        org.joda.time.Seconds seconds72 = seconds44.plus(seconds60);
        org.joda.time.DurationFieldType durationFieldType73 = seconds60.getFieldType();
        int int74 = seconds42.get(durationFieldType73);
        boolean boolean75 = seconds5.isSupported(durationFieldType73);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(mutablePeriod68);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-2147483644) + "'", int74 == (-2147483644));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.PeriodType periodType5 = seconds4.getPeriodType();
        org.joda.time.Seconds seconds7 = seconds4.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds9 = seconds7.minus((-1));
        org.joda.time.DurationFieldType durationFieldType10 = seconds9.getFieldType();
        org.joda.time.Seconds seconds12 = seconds9.multipliedBy(1);
        org.joda.time.Seconds seconds13 = seconds12.negated();
        org.joda.time.Seconds seconds15 = seconds12.multipliedBy((int) (byte) 100);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int18 = seconds17.getSeconds();
        org.joda.time.Duration duration19 = seconds17.toStandardDuration();
        int int20 = seconds17.size();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds17.toMutablePeriod();
        org.joda.time.PeriodType periodType22 = seconds17.getPeriodType();
        boolean boolean23 = seconds15.isGreaterThan(seconds17);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Duration duration2 = seconds1.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = seconds4.get(durationFieldType5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds8 = seconds4.minus(seconds7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds15 = seconds13.dividedBy((int) '4');
        int int16 = seconds13.size();
        int int17 = seconds8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds13);
        org.joda.time.Seconds seconds19 = seconds13.plus(0);
        org.joda.time.MutablePeriod mutablePeriod20 = seconds13.toMutablePeriod();
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = seconds21.get(durationFieldType22);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds25 = seconds21.minus(seconds24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds32 = seconds30.dividedBy((int) '4');
        int int33 = seconds30.size();
        int int34 = seconds25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds30);
        org.joda.time.DurationFieldType durationFieldType35 = seconds25.getFieldType();
        int int36 = seconds13.get(durationFieldType35);
        boolean boolean37 = seconds1.isSupported(durationFieldType35);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType40 = seconds39.getPeriodType();
        org.joda.time.Duration duration41 = seconds39.toStandardDuration();
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds39);
        org.joda.time.Seconds seconds43 = seconds1.plus(seconds42);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2147483644 + "'", int36 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Duration duration11 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds9.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds15 = seconds9.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds17 = seconds9.minus(seconds16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        boolean boolean19 = seconds1.isSupported(durationFieldType18);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        org.joda.time.Period period23 = seconds21.toPeriod();
        org.joda.time.Duration duration24 = seconds21.toStandardDuration();
        boolean boolean25 = seconds1.equals((java.lang.Object) seconds21);
        org.joda.time.Seconds seconds27 = seconds21.multipliedBy(100);
        org.joda.time.PeriodType periodType28 = seconds21.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType29 = seconds21.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(durationFieldType29);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Period period14 = seconds1.toPeriod();
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds24 = seconds20.minus(seconds23);
        org.joda.time.Seconds seconds26 = seconds24.dividedBy((int) '4');
        int int27 = seconds24.size();
        int int28 = seconds19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds24);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        boolean boolean32 = seconds24.isLessThan(seconds29);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = seconds38.get(durationFieldType39);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds42 = seconds38.minus(seconds41);
        org.joda.time.Seconds seconds44 = seconds42.dividedBy((int) '4');
        int int45 = seconds42.size();
        int int46 = seconds37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds42);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = seconds47.get(durationFieldType48);
        boolean boolean50 = seconds42.isLessThan(seconds47);
        boolean boolean51 = seconds29.isLessThan(seconds42);
        org.joda.time.DurationFieldType durationFieldType52 = seconds42.getFieldType();
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds42);
        org.joda.time.Seconds seconds55 = seconds42.dividedBy(2147483647);
        org.joda.time.Seconds seconds57 = seconds55.multipliedBy((int) '4');
        org.joda.time.Seconds seconds58 = seconds1.minus(seconds57);
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = seconds59.get(durationFieldType60);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds63 = seconds59.minus(seconds62);
        boolean boolean64 = seconds58.equals((java.lang.Object) seconds59);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.dividedBy(2147483647);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds(0);
        org.joda.time.Seconds seconds10 = seconds8.minus((int) (byte) 100);
        boolean boolean11 = seconds6.isLessThan(seconds8);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.Period period14 = seconds13.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod15 = seconds13.toMutablePeriod();
        org.joda.time.Period period16 = seconds13.toPeriod();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        boolean boolean19 = seconds13.isLessThan(seconds17);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds23 = seconds21.minus((int) (byte) 0);
        boolean boolean24 = seconds20.isLessThan(seconds23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds28 = seconds26.minus((int) (byte) 0);
        boolean boolean29 = seconds25.isLessThan(seconds28);
        org.joda.time.Period period30 = seconds25.toPeriod();
        int int31 = seconds23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds25);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType34 = seconds33.getFieldType();
        boolean boolean35 = seconds23.isSupported(durationFieldType34);
        org.joda.time.Seconds seconds36 = seconds13.plus(seconds23);
        org.joda.time.Seconds seconds38 = seconds36.dividedBy((int) (byte) 100);
        org.joda.time.Seconds seconds39 = seconds6.minus(seconds38);
        int int40 = seconds39.getSeconds();
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.secondsIn(readableInterval41);
        int int43 = seconds42.size();
        org.joda.time.Seconds seconds45 = seconds42.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        org.joda.time.DurationFieldType durationFieldType48 = seconds47.getFieldType();
        boolean boolean49 = seconds45.isSupported(durationFieldType48);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = seconds50.get(durationFieldType51);
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds54 = seconds50.minus(seconds53);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds61 = seconds59.dividedBy((int) '4');
        int int62 = seconds59.size();
        int int63 = seconds54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds59);
        org.joda.time.Seconds seconds65 = seconds59.plus(0);
        org.joda.time.Seconds seconds66 = seconds45.minus(seconds59);
        org.joda.time.Seconds seconds68 = seconds59.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType69 = seconds68.getPeriodType();
        org.joda.time.ReadableInterval readableInterval70 = null;
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.secondsIn(readableInterval70);
        org.joda.time.DurationFieldType durationFieldType72 = seconds71.getFieldType();
        org.joda.time.Seconds seconds74 = seconds71.dividedBy((-1));
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds74);
        org.joda.time.Seconds seconds76 = seconds74.negated();
        org.joda.time.Seconds seconds77 = seconds68.plus(seconds74);
        org.joda.time.PeriodType periodType78 = seconds77.getPeriodType();
        boolean boolean79 = seconds39.isLessThan(seconds77);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType81 = seconds39.getFieldType((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.Period period5 = seconds0.toPeriod();
        int int6 = seconds0.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType12 = seconds11.getPeriodType();
        org.joda.time.Duration duration13 = seconds11.toStandardDuration();
        org.joda.time.Seconds seconds15 = seconds11.multipliedBy(0);
        org.joda.time.Seconds seconds16 = seconds11.negated();
        org.joda.time.Period period17 = seconds16.toPeriod();
        org.joda.time.Seconds seconds19 = seconds16.dividedBy(100);
        org.joda.time.Seconds seconds21 = seconds16.minus(0);
        int int22 = seconds8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds16);
        org.joda.time.Seconds seconds24 = seconds16.plus((int) (short) 10);
        boolean boolean25 = seconds0.isLessThan(seconds16);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = seconds0.getValue((-2147483643));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483643");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.secondsIn(readableInterval4);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds11 = seconds9.minus((int) (byte) 0);
        boolean boolean12 = seconds8.isLessThan(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds16 = seconds14.minus((int) (byte) 0);
        boolean boolean17 = seconds13.isLessThan(seconds16);
        org.joda.time.Period period18 = seconds13.toPeriod();
        int int19 = seconds11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds13);
        boolean boolean20 = seconds1.equals((java.lang.Object) seconds13);
        org.joda.time.DurationFieldType durationFieldType21 = seconds1.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(durationFieldType21);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        java.lang.String str6 = seconds1.toString();
        org.joda.time.Seconds seconds8 = seconds1.multipliedBy((int) (byte) 10);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType11 = seconds10.getPeriodType();
        org.joda.time.Duration duration12 = seconds10.toStandardDuration();
        org.joda.time.Seconds seconds14 = seconds10.multipliedBy(0);
        java.lang.String str15 = seconds14.toString();
        org.joda.time.DurationFieldType durationFieldType16 = seconds14.getFieldType();
        org.joda.time.Seconds seconds18 = seconds14.minus(3);
        org.joda.time.Seconds seconds19 = seconds18.negated();
        boolean boolean20 = seconds8.equals((java.lang.Object) seconds18);
        org.joda.time.Seconds seconds22 = seconds18.dividedBy(41297762);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds34 = seconds32.dividedBy((int) '4');
        int int35 = seconds32.size();
        int int36 = seconds27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds32);
        org.joda.time.Seconds seconds38 = seconds32.plus(0);
        java.lang.String str39 = seconds38.toString();
        org.joda.time.Period period40 = seconds38.toPeriod();
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.secondsIn(readableInterval41);
        org.joda.time.Seconds seconds43 = seconds42.negated();
        org.joda.time.MutablePeriod mutablePeriod44 = seconds42.toMutablePeriod();
        org.joda.time.Duration duration45 = seconds42.toStandardDuration();
        boolean boolean46 = seconds38.equals((java.lang.Object) seconds42);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = seconds47.get(durationFieldType48);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds51 = seconds47.minus(seconds50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType53 = null;
        int int54 = seconds52.get(durationFieldType53);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds56 = seconds52.minus(seconds55);
        org.joda.time.Seconds seconds58 = seconds56.dividedBy((int) '4');
        int int59 = seconds56.size();
        int int60 = seconds51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds56);
        org.joda.time.Seconds seconds62 = seconds56.plus(0);
        org.joda.time.Seconds seconds63 = seconds42.plus(seconds62);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType66 = seconds65.getPeriodType();
        org.joda.time.Duration duration67 = seconds65.toStandardDuration();
        org.joda.time.Seconds seconds69 = seconds65.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds71 = seconds65.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds73 = seconds65.minus(seconds72);
        org.joda.time.ReadableInterval readableInterval74 = null;
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.secondsIn(readableInterval74);
        org.joda.time.Seconds seconds76 = seconds75.negated();
        org.joda.time.MutablePeriod mutablePeriod77 = seconds76.toMutablePeriod();
        org.joda.time.Seconds seconds78 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType79 = null;
        int int80 = seconds78.get(durationFieldType79);
        org.joda.time.Seconds seconds81 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds82 = seconds78.minus(seconds81);
        org.joda.time.DurationFieldType durationFieldType83 = seconds78.getFieldType();
        int int84 = seconds76.get(durationFieldType83);
        boolean boolean85 = seconds73.isSupported(durationFieldType83);
        boolean boolean86 = seconds42.isSupported(durationFieldType83);
        boolean boolean87 = seconds22.isSupported(durationFieldType83);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT0S" + "'", str15, "PT0S");
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT2147483644S" + "'", str39, "PT2147483644S");
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(mutablePeriod77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.PeriodType periodType6 = seconds1.getPeriodType();
        org.joda.time.PeriodType periodType7 = seconds1.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        java.lang.String str25 = seconds24.toString();
        org.joda.time.Period period26 = seconds24.toPeriod();
        org.joda.time.Seconds seconds27 = seconds4.minus(seconds24);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType32 = seconds31.getPeriodType();
        org.joda.time.Duration duration33 = seconds31.toStandardDuration();
        org.joda.time.Seconds seconds35 = seconds31.multipliedBy(0);
        org.joda.time.Seconds seconds36 = seconds31.negated();
        org.joda.time.Seconds seconds37 = seconds29.plus(seconds31);
        org.joda.time.PeriodType periodType38 = seconds37.getPeriodType();
        org.joda.time.Seconds seconds40 = seconds37.minus(2147483644);
        boolean boolean41 = seconds27.isGreaterThan(seconds40);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType44 = seconds43.getPeriodType();
        org.joda.time.Duration duration45 = seconds43.toStandardDuration();
        org.joda.time.Seconds seconds47 = seconds43.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.secondsIn(readableInterval48);
        org.joda.time.Seconds seconds50 = seconds49.negated();
        org.joda.time.MutablePeriod mutablePeriod51 = seconds49.toMutablePeriod();
        org.joda.time.Duration duration52 = seconds49.toStandardDuration();
        int int53 = seconds49.getSeconds();
        boolean boolean54 = seconds43.isLessThan(seconds49);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds70 = seconds64.plus(0);
        java.lang.String str71 = seconds70.toString();
        org.joda.time.Period period72 = seconds70.toPeriod();
        org.joda.time.ReadableInterval readableInterval73 = null;
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.secondsIn(readableInterval73);
        org.joda.time.Seconds seconds75 = seconds74.negated();
        org.joda.time.DurationFieldType durationFieldType76 = null;
        int int77 = seconds74.get(durationFieldType76);
        boolean boolean78 = seconds70.isLessThan(seconds74);
        org.joda.time.Seconds seconds79 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds74);
        org.joda.time.Seconds seconds80 = seconds43.plus(seconds74);
        org.joda.time.DurationFieldType durationFieldType81 = seconds43.getFieldType();
        org.joda.time.Seconds seconds83 = seconds43.minus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType84 = seconds83.getFieldType();
        boolean boolean85 = seconds40.isSupported(durationFieldType84);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT2147483644S" + "'", str25, "PT2147483644S");
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "PT2147483644S" + "'", str71, "PT2147483644S");
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 0);
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.secondsIn(readableInterval2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = seconds4.get(durationFieldType5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds8 = seconds4.minus(seconds7);
        org.joda.time.Seconds seconds10 = seconds8.dividedBy((int) '4');
        org.joda.time.Seconds seconds11 = seconds3.minus(seconds10);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int14 = seconds13.getSeconds();
        org.joda.time.DurationFieldType durationFieldType15 = seconds13.getFieldType();
        boolean boolean16 = seconds3.isSupported(durationFieldType15);
        int int17 = seconds1.get(durationFieldType15);
        org.joda.time.Seconds seconds19 = seconds1.plus((-2147483643));
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds19);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType7 = seconds6.getPeriodType();
        org.joda.time.Duration duration8 = seconds6.toStandardDuration();
        org.joda.time.Seconds seconds10 = seconds6.multipliedBy(0);
        org.joda.time.Seconds seconds11 = seconds6.negated();
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = seconds12.get(durationFieldType13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds16 = seconds12.minus(seconds15);
        boolean boolean17 = seconds11.isGreaterThan(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds11);
        org.joda.time.PeriodType periodType19 = seconds11.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod20 = seconds11.toMutablePeriod();
        org.joda.time.Seconds seconds21 = seconds11.negated();
        org.joda.time.Seconds seconds23 = seconds11.plus(0);
        org.joda.time.Seconds seconds24 = seconds3.plus(seconds11);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Duration duration30 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds32 = seconds28.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds33 = seconds32.negated();
        boolean boolean34 = seconds26.isGreaterThan(seconds32);
        org.joda.time.Seconds seconds36 = seconds32.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds37 = seconds24.plus(seconds32);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.secondsIn(readableInterval38);
        org.joda.time.Seconds seconds40 = seconds39.negated();
        org.joda.time.MutablePeriod mutablePeriod41 = seconds39.toMutablePeriod();
        org.joda.time.Seconds seconds43 = seconds39.minus((int) (byte) -1);
        org.joda.time.Seconds seconds44 = seconds39.negated();
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType47 = seconds46.getPeriodType();
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.secondsIn(readableInterval48);
        org.joda.time.Seconds seconds50 = seconds49.negated();
        org.joda.time.MutablePeriod mutablePeriod51 = seconds49.toMutablePeriod();
        int int52 = seconds46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds49);
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType55 = seconds54.getPeriodType();
        org.joda.time.Duration duration56 = seconds54.toStandardDuration();
        org.joda.time.Seconds seconds58 = seconds54.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds60 = seconds54.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds62 = seconds54.minus(seconds61);
        org.joda.time.DurationFieldType durationFieldType63 = seconds62.getFieldType();
        boolean boolean64 = seconds46.isSupported(durationFieldType63);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType67 = seconds66.getPeriodType();
        org.joda.time.Period period68 = seconds66.toPeriod();
        org.joda.time.Duration duration69 = seconds66.toStandardDuration();
        boolean boolean70 = seconds46.equals((java.lang.Object) seconds66);
        org.joda.time.Duration duration71 = seconds66.toStandardDuration();
        org.joda.time.Seconds seconds72 = seconds66.negated();
        int int73 = seconds44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds72);
        org.joda.time.Seconds seconds75 = seconds72.plus((int) '4');
        org.joda.time.DurationFieldType durationFieldType77 = seconds72.getFieldType((int) (short) 0);
        int int78 = seconds37.get(durationFieldType77);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        boolean boolean12 = seconds6.isGreaterThan(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        org.joda.time.Duration duration14 = seconds6.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(duration14);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT2S");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        java.lang.String str18 = seconds17.toString();
        org.joda.time.Period period19 = seconds17.toPeriod();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        org.joda.time.Seconds seconds22 = seconds21.negated();
        org.joda.time.MutablePeriod mutablePeriod23 = seconds21.toMutablePeriod();
        org.joda.time.Duration duration24 = seconds21.toStandardDuration();
        boolean boolean25 = seconds17.equals((java.lang.Object) seconds21);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        org.joda.time.MutablePeriod mutablePeriod42 = seconds35.toMutablePeriod();
        int int43 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds45 = seconds17.minus(2147483644);
        java.lang.String str46 = seconds17.toString();
        int int47 = seconds17.size();
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.Seconds seconds49 = seconds1.minus(seconds48);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = seconds51.get(durationFieldType52);
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds55 = seconds51.minus(seconds54);
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = seconds56.get(durationFieldType57);
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds60 = seconds56.minus(seconds59);
        org.joda.time.Seconds seconds62 = seconds60.dividedBy((int) '4');
        int int63 = seconds60.size();
        int int64 = seconds55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds60);
        boolean boolean65 = seconds50.isLessThan(seconds60);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = seconds66.get(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds70 = seconds66.minus(seconds69);
        org.joda.time.ReadableInterval readableInterval71 = null;
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.secondsIn(readableInterval71);
        org.joda.time.Seconds seconds73 = seconds72.negated();
        org.joda.time.MutablePeriod mutablePeriod74 = seconds72.toMutablePeriod();
        org.joda.time.Duration duration75 = seconds72.toStandardDuration();
        boolean boolean76 = seconds66.equals((java.lang.Object) seconds72);
        org.joda.time.MutablePeriod mutablePeriod77 = seconds66.toMutablePeriod();
        org.joda.time.Seconds seconds78 = seconds50.plus(seconds66);
        org.joda.time.PeriodType periodType79 = seconds66.getPeriodType();
        org.joda.time.PeriodType periodType80 = seconds66.getPeriodType();
        java.lang.String str81 = seconds66.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds82 = seconds48.plus(seconds66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483644 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2147483644S" + "'", str18, "PT2147483644S");
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT2147483644S" + "'", str46, "PT2147483644S");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(mutablePeriod74);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(mutablePeriod77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "PT2147483647S" + "'", str81, "PT2147483647S");
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds7 = seconds1.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        org.joda.time.Seconds seconds23 = seconds17.plus(0);
        java.lang.String str24 = seconds23.toString();
        org.joda.time.Period period25 = seconds23.toPeriod();
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn(readableInterval26);
        org.joda.time.Seconds seconds28 = seconds27.negated();
        org.joda.time.MutablePeriod mutablePeriod29 = seconds27.toMutablePeriod();
        org.joda.time.Duration duration30 = seconds27.toStandardDuration();
        boolean boolean31 = seconds23.equals((java.lang.Object) seconds27);
        org.joda.time.Seconds seconds32 = seconds1.minus(seconds27);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds36.multipliedBy((int) '#');
        boolean boolean40 = seconds27.isGreaterThan(seconds36);
        org.joda.time.Duration duration41 = seconds27.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2147483644S" + "'", str24, "PT2147483644S");
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration41);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        org.joda.time.Seconds seconds11 = seconds5.multipliedBy((int) (short) 100);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds5);
        org.joda.time.Duration duration13 = seconds12.toStandardDuration();
        java.lang.String str14 = seconds12.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT0S" + "'", str14, "PT0S");
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT3S");
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.plus((int) (short) 0);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds9.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = seconds22.dividedBy((int) '4');
        int int25 = seconds22.size();
        int int26 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds22);
        org.joda.time.Seconds seconds28 = seconds22.plus(0);
        org.joda.time.MutablePeriod mutablePeriod29 = seconds22.toMutablePeriod();
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = seconds35.get(durationFieldType36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds39 = seconds35.minus(seconds38);
        org.joda.time.Seconds seconds41 = seconds39.dividedBy((int) '4');
        int int42 = seconds39.size();
        int int43 = seconds34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds39);
        org.joda.time.DurationFieldType durationFieldType44 = seconds34.getFieldType();
        int int45 = seconds22.get(durationFieldType44);
        boolean boolean46 = seconds9.isSupported(durationFieldType44);
        org.joda.time.Seconds seconds47 = seconds5.plus(seconds9);
        org.joda.time.Period period48 = seconds47.toPeriod();
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period48);
        org.joda.time.MutablePeriod mutablePeriod50 = seconds49.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.secondsIn(readableInterval51);
        org.joda.time.Seconds seconds53 = seconds52.negated();
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.secondsIn(readableInterval54);
        int int56 = seconds55.size();
        boolean boolean57 = seconds53.isLessThan(seconds55);
        org.joda.time.ReadableInterval readableInterval58 = null;
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.secondsIn(readableInterval58);
        int int60 = seconds59.size();
        org.joda.time.Seconds seconds62 = seconds59.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval63 = null;
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.secondsIn(readableInterval63);
        org.joda.time.DurationFieldType durationFieldType65 = seconds64.getFieldType();
        boolean boolean66 = seconds62.isSupported(durationFieldType65);
        boolean boolean67 = seconds55.isSupported(durationFieldType65);
        org.joda.time.Seconds seconds68 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds55);
        org.joda.time.Seconds seconds69 = seconds68.negated();
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType71 = null;
        int int72 = seconds70.get(durationFieldType71);
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds74 = seconds70.minus(seconds73);
        org.joda.time.ReadableInterval readableInterval75 = null;
        org.joda.time.Seconds seconds76 = org.joda.time.Seconds.secondsIn(readableInterval75);
        org.joda.time.Seconds seconds77 = seconds76.negated();
        org.joda.time.MutablePeriod mutablePeriod78 = seconds76.toMutablePeriod();
        org.joda.time.Duration duration79 = seconds76.toStandardDuration();
        boolean boolean80 = seconds70.equals((java.lang.Object) seconds76);
        org.joda.time.Seconds seconds82 = seconds76.plus((int) (byte) 10);
        org.joda.time.Seconds seconds84 = seconds76.multipliedBy((int) (short) 1);
        boolean boolean85 = seconds68.isLessThan(seconds84);
        boolean boolean86 = seconds49.isGreaterThan(seconds68);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2147483644 + "'", int45 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(mutablePeriod78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds18 = seconds17.negated();
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.secondsIn(readableInterval19);
        int int21 = seconds20.size();
        org.joda.time.Seconds seconds23 = seconds20.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.secondsIn(readableInterval24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        boolean boolean27 = seconds23.isSupported(durationFieldType26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) '4');
        int int40 = seconds37.size();
        int int41 = seconds32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds37);
        org.joda.time.Seconds seconds43 = seconds37.plus(0);
        org.joda.time.Seconds seconds44 = seconds23.minus(seconds37);
        org.joda.time.Seconds seconds46 = seconds37.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType47 = seconds46.getPeriodType();
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.secondsIn(readableInterval48);
        org.joda.time.DurationFieldType durationFieldType50 = seconds49.getFieldType();
        org.joda.time.Seconds seconds52 = seconds49.dividedBy((-1));
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds52);
        org.joda.time.Seconds seconds54 = seconds52.negated();
        org.joda.time.Seconds seconds55 = seconds46.plus(seconds52);
        org.joda.time.Seconds seconds56 = seconds17.plus(seconds55);
        org.joda.time.Seconds seconds57 = seconds56.negated();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = seconds2.getValue(2147483644);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483644");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.DurationFieldType durationFieldType14 = seconds4.getFieldType();
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.MutablePeriod mutablePeriod20 = seconds18.toMutablePeriod();
        boolean boolean21 = seconds4.isGreaterThan(seconds18);
        int int22 = seconds18.size();
        org.joda.time.Seconds seconds24 = seconds18.plus((int) (byte) 0);
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.secondsIn(readableInterval25);
        int int27 = seconds26.size();
        org.joda.time.Seconds seconds29 = seconds26.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.secondsIn(readableInterval30);
        org.joda.time.DurationFieldType durationFieldType32 = seconds31.getFieldType();
        boolean boolean33 = seconds29.isSupported(durationFieldType32);
        int int34 = seconds29.size();
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = seconds35.get(durationFieldType36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds39 = seconds35.minus(seconds38);
        org.joda.time.DurationFieldType durationFieldType40 = seconds35.getFieldType();
        org.joda.time.Seconds seconds42 = seconds35.dividedBy((int) ' ');
        org.joda.time.Seconds seconds44 = seconds42.plus(3);
        org.joda.time.Seconds seconds45 = seconds29.minus(seconds42);
        org.joda.time.Seconds seconds46 = seconds18.plus(seconds42);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = seconds47.get(durationFieldType48);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds51 = seconds47.minus(seconds50);
        int int52 = seconds46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds51);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType28 = seconds27.getPeriodType();
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Seconds seconds33 = seconds30.dividedBy((-1));
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds33);
        org.joda.time.Seconds seconds35 = seconds33.negated();
        org.joda.time.Seconds seconds36 = seconds27.plus(seconds33);
        org.joda.time.PeriodType periodType37 = seconds36.getPeriodType();
        int int38 = seconds36.getSeconds();
        // The following exception was thrown during execution in test generation
        try {
            int int40 = seconds36.getValue(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-2147483644) + "'", int38 == (-2147483644));
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        java.lang.String str6 = seconds5.toString();
        org.joda.time.DurationFieldType durationFieldType7 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        boolean boolean23 = seconds8.isLessThan(seconds18);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.secondsIn(readableInterval24);
        int int26 = seconds25.size();
        org.joda.time.Seconds seconds28 = seconds25.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        boolean boolean32 = seconds28.isSupported(durationFieldType31);
        boolean boolean33 = seconds8.isSupported(durationFieldType31);
        org.joda.time.Seconds seconds34 = seconds5.plus(seconds8);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = seconds36.get(durationFieldType37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds40 = seconds36.minus(seconds39);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = seconds41.get(durationFieldType42);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds45 = seconds41.minus(seconds44);
        org.joda.time.Seconds seconds47 = seconds45.dividedBy((int) '4');
        int int48 = seconds45.size();
        int int49 = seconds40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds45);
        org.joda.time.Seconds seconds51 = seconds45.plus(0);
        java.lang.String str52 = seconds51.toString();
        org.joda.time.Period period53 = seconds51.toPeriod();
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.secondsIn(readableInterval54);
        org.joda.time.Seconds seconds56 = seconds55.negated();
        org.joda.time.MutablePeriod mutablePeriod57 = seconds55.toMutablePeriod();
        org.joda.time.Duration duration58 = seconds55.toStandardDuration();
        boolean boolean59 = seconds51.equals((java.lang.Object) seconds55);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType66 = null;
        int int67 = seconds65.get(durationFieldType66);
        org.joda.time.Seconds seconds68 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds69 = seconds65.minus(seconds68);
        org.joda.time.Seconds seconds71 = seconds69.dividedBy((int) '4');
        int int72 = seconds69.size();
        int int73 = seconds64.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds69);
        org.joda.time.Seconds seconds75 = seconds69.plus(0);
        org.joda.time.MutablePeriod mutablePeriod76 = seconds69.toMutablePeriod();
        int int77 = seconds51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds69);
        org.joda.time.Seconds seconds79 = seconds51.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds81 = org.joda.time.Seconds.seconds(0);
        org.joda.time.Seconds seconds83 = seconds81.minus((int) (byte) 100);
        org.joda.time.Seconds seconds84 = seconds51.plus(seconds81);
        org.joda.time.Seconds seconds86 = seconds81.plus((int) ' ');
        java.lang.String str87 = seconds81.toString();
        org.joda.time.MutablePeriod mutablePeriod88 = seconds81.toMutablePeriod();
        org.joda.time.Seconds seconds89 = seconds81.negated();
        boolean boolean90 = seconds35.isGreaterThan(seconds81);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT2147483644S" + "'", str52, "PT2147483644S");
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(mutablePeriod76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "PT0S" + "'", str87, "PT0S");
        org.junit.Assert.assertNotNull(mutablePeriod88);
        org.junit.Assert.assertNotNull(seconds89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType28 = seconds27.getPeriodType();
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = seconds35.get(durationFieldType36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds39 = seconds35.minus(seconds38);
        org.joda.time.Seconds seconds41 = seconds39.dividedBy((int) '4');
        int int42 = seconds39.size();
        int int43 = seconds34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds39);
        boolean boolean44 = seconds29.isLessThan(seconds39);
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = seconds45.get(durationFieldType46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds49 = seconds45.minus(seconds48);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.secondsIn(readableInterval50);
        org.joda.time.Seconds seconds52 = seconds51.negated();
        org.joda.time.MutablePeriod mutablePeriod53 = seconds51.toMutablePeriod();
        org.joda.time.Duration duration54 = seconds51.toStandardDuration();
        boolean boolean55 = seconds45.equals((java.lang.Object) seconds51);
        org.joda.time.MutablePeriod mutablePeriod56 = seconds45.toMutablePeriod();
        org.joda.time.Seconds seconds57 = seconds29.plus(seconds45);
        org.joda.time.DurationFieldType durationFieldType58 = seconds45.getFieldType();
        int int59 = seconds27.get(durationFieldType58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds62 = seconds60.minus((int) (byte) 0);
        org.joda.time.ReadableInterval readableInterval63 = null;
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.secondsIn(readableInterval63);
        org.joda.time.Seconds seconds65 = seconds64.negated();
        org.joda.time.Seconds seconds67 = seconds65.plus((int) (byte) 100);
        org.joda.time.Seconds seconds68 = seconds62.plus(seconds67);
        int int69 = seconds68.getSeconds();
        boolean boolean70 = seconds27.isLessThan(seconds68);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds72 = seconds27.multipliedBy(2147483609);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483644 * 2147483609");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-2147483644) + "'", int59 == (-2147483644));
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 101 + "'", int69 == 101);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType28 = seconds27.getPeriodType();
        org.joda.time.Seconds seconds30 = seconds27.plus(1);
        int int31 = seconds30.getSeconds();
        org.joda.time.Seconds seconds33 = seconds30.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.Seconds seconds36 = seconds33.plus(seconds35);
        int int37 = seconds10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds36);
        org.joda.time.MutablePeriod mutablePeriod38 = seconds36.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod38);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds5 = seconds1.minus((int) (byte) -1);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds8 = seconds6.multipliedBy((int) (byte) 100);
        java.lang.String str9 = seconds6.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT0S" + "'", str9, "PT0S");
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        int int2 = seconds0.getSeconds();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds0.plus(seconds4);
        java.lang.Class<?> wildcardClass6 = seconds0.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 3 + "'", int2 == 3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.Seconds seconds9 = seconds6.multipliedBy(100);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.DurationFieldType durationFieldType15 = seconds10.getFieldType();
        org.joda.time.Seconds seconds17 = seconds10.dividedBy((int) ' ');
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod19 = seconds17.toMutablePeriod();
        int int20 = seconds9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        org.joda.time.MutablePeriod mutablePeriod21 = seconds17.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.secondsIn(readableInterval22);
        org.joda.time.Period period24 = seconds23.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod25 = seconds23.toMutablePeriod();
        org.joda.time.Period period26 = seconds23.toPeriod();
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType28 = seconds27.getPeriodType();
        boolean boolean29 = seconds23.isLessThan(seconds27);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds33 = seconds31.minus((int) (byte) 0);
        boolean boolean34 = seconds30.isLessThan(seconds33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds38 = seconds36.minus((int) (byte) 0);
        boolean boolean39 = seconds35.isLessThan(seconds38);
        org.joda.time.Period period40 = seconds35.toPeriod();
        int int41 = seconds33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType44 = seconds43.getFieldType();
        boolean boolean45 = seconds33.isSupported(durationFieldType44);
        org.joda.time.Seconds seconds46 = seconds23.plus(seconds33);
        org.joda.time.Seconds seconds48 = seconds46.dividedBy((int) (byte) 100);
        org.joda.time.Seconds seconds49 = seconds17.minus(seconds46);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.MutablePeriod mutablePeriod5 = seconds0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType6 = seconds0.getFieldType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(durationFieldType6);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        boolean boolean72 = seconds64.isLessThan(seconds69);
        boolean boolean73 = seconds54.isLessThan(seconds64);
        org.joda.time.Seconds seconds75 = seconds54.multipliedBy((int) (byte) -1);
        org.joda.time.Seconds seconds77 = seconds54.plus(100);
        org.joda.time.DurationFieldType durationFieldType78 = seconds77.getFieldType();
        org.joda.time.PeriodType periodType79 = seconds77.getPeriodType();
        org.joda.time.Seconds seconds81 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType82 = seconds81.getPeriodType();
        org.joda.time.Duration duration83 = seconds81.toStandardDuration();
        org.joda.time.Seconds seconds84 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds81);
        org.joda.time.Seconds seconds86 = seconds81.minus(3);
        org.joda.time.Seconds seconds88 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType89 = seconds88.getPeriodType();
        org.joda.time.Duration duration90 = seconds88.toStandardDuration();
        org.joda.time.Seconds seconds92 = seconds88.multipliedBy(0);
        org.joda.time.Seconds seconds93 = seconds88.negated();
        org.joda.time.Period period94 = seconds93.toPeriod();
        boolean boolean95 = seconds86.equals((java.lang.Object) period94);
        org.joda.time.Seconds seconds96 = seconds77.minus(seconds86);
        org.joda.time.Seconds seconds98 = seconds86.multipliedBy((int) (byte) 10);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertNotNull(seconds92);
        org.junit.Assert.assertNotNull(seconds93);
        org.junit.Assert.assertNotNull(period94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(seconds96);
        org.junit.Assert.assertNotNull(seconds98);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType28 = seconds27.getPeriodType();
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = seconds35.get(durationFieldType36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds39 = seconds35.minus(seconds38);
        org.joda.time.Seconds seconds41 = seconds39.dividedBy((int) '4');
        int int42 = seconds39.size();
        int int43 = seconds34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds39);
        boolean boolean44 = seconds29.isLessThan(seconds39);
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = seconds45.get(durationFieldType46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds49 = seconds45.minus(seconds48);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.secondsIn(readableInterval50);
        org.joda.time.Seconds seconds52 = seconds51.negated();
        org.joda.time.MutablePeriod mutablePeriod53 = seconds51.toMutablePeriod();
        org.joda.time.Duration duration54 = seconds51.toStandardDuration();
        boolean boolean55 = seconds45.equals((java.lang.Object) seconds51);
        org.joda.time.MutablePeriod mutablePeriod56 = seconds45.toMutablePeriod();
        org.joda.time.Seconds seconds57 = seconds29.plus(seconds45);
        org.joda.time.DurationFieldType durationFieldType58 = seconds45.getFieldType();
        int int59 = seconds27.get(durationFieldType58);
        java.lang.String str60 = seconds27.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-2147483644) + "'", int59 == (-2147483644));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PT-2147483644S" + "'", str60, "PT-2147483644S");
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT0S");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.secondsIn(readableInterval2);
        org.joda.time.Seconds seconds4 = seconds3.negated();
        org.joda.time.MutablePeriod mutablePeriod5 = seconds3.toMutablePeriod();
        org.joda.time.Seconds seconds7 = seconds3.minus((int) (byte) -1);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        boolean boolean9 = seconds1.equals((java.lang.Object) seconds7);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.Seconds seconds17 = seconds15.dividedBy((int) '4');
        int int18 = seconds15.size();
        int int19 = seconds10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds15);
        org.joda.time.DurationFieldType durationFieldType20 = seconds10.getFieldType();
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = seconds21.get(durationFieldType22);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds25 = seconds21.minus(seconds24);
        org.joda.time.MutablePeriod mutablePeriod26 = seconds24.toMutablePeriod();
        boolean boolean27 = seconds10.isGreaterThan(seconds24);
        int int28 = seconds24.size();
        org.joda.time.Period period29 = seconds24.toPeriod();
        boolean boolean30 = seconds1.isGreaterThan(seconds24);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Period period2 = seconds1.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Period period4 = seconds1.toPeriod();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType6 = seconds5.getPeriodType();
        boolean boolean7 = seconds1.isLessThan(seconds5);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Duration duration11 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds9.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        org.joda.time.Seconds seconds16 = seconds15.negated();
        org.joda.time.MutablePeriod mutablePeriod17 = seconds15.toMutablePeriod();
        org.joda.time.Duration duration18 = seconds15.toStandardDuration();
        int int19 = seconds15.getSeconds();
        boolean boolean20 = seconds9.isLessThan(seconds15);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType23 = seconds22.getPeriodType();
        org.joda.time.Duration duration24 = seconds22.toStandardDuration();
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds28 = seconds26.minus((int) (byte) 0);
        boolean boolean29 = seconds25.isLessThan(seconds28);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds25);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType33 = seconds32.getPeriodType();
        org.joda.time.Duration duration34 = seconds32.toStandardDuration();
        org.joda.time.Seconds seconds36 = seconds32.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds38 = seconds32.dividedBy((int) (short) 1);
        boolean boolean39 = seconds25.equals((java.lang.Object) (short) 1);
        boolean boolean40 = seconds22.isGreaterThan(seconds25);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = seconds41.get(durationFieldType42);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds45 = seconds41.minus(seconds44);
        org.joda.time.Seconds seconds47 = seconds44.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.secondsIn(readableInterval48);
        org.joda.time.DurationFieldType durationFieldType50 = seconds49.getFieldType();
        org.joda.time.Seconds seconds52 = seconds49.dividedBy((-1));
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds49);
        int int54 = seconds49.size();
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.secondsIn(readableInterval55);
        org.joda.time.DurationFieldType durationFieldType57 = seconds56.getFieldType();
        org.joda.time.Seconds seconds59 = seconds56.dividedBy((-1));
        int int60 = seconds56.getSeconds();
        org.joda.time.Seconds seconds61 = seconds49.minus(seconds56);
        boolean boolean62 = seconds47.isGreaterThan(seconds61);
        boolean boolean63 = seconds22.isGreaterThan(seconds61);
        boolean boolean64 = seconds15.isGreaterThan(seconds22);
        org.joda.time.Duration duration65 = seconds15.toStandardDuration();
        org.joda.time.Seconds seconds67 = seconds15.plus(10);
        org.joda.time.Seconds seconds69 = seconds15.multipliedBy((int) (short) 100);
        org.joda.time.Seconds seconds70 = seconds1.plus(seconds15);
        org.joda.time.MutablePeriod mutablePeriod71 = seconds70.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.secondsIn(readableInterval4);
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = seconds5.dividedBy((-1));
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds5);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        boolean boolean11 = seconds9.isSupported(durationFieldType10);
        org.joda.time.Seconds seconds13 = seconds9.plus((int) (byte) 1);
        org.joda.time.Seconds seconds14 = seconds13.negated();
        org.joda.time.Seconds seconds15 = seconds1.plus(seconds13);
        org.joda.time.DurationFieldType durationFieldType16 = seconds1.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) '#');
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy((-1));
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = seconds23.isSupported(durationFieldType24);
        org.joda.time.Seconds seconds27 = seconds23.plus((int) (byte) 1);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) '4');
        int int40 = seconds37.size();
        int int41 = seconds32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds37);
        org.joda.time.Seconds seconds43 = seconds37.plus(0);
        java.lang.String str44 = seconds43.toString();
        org.joda.time.Period period45 = seconds43.toPeriod();
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        org.joda.time.Seconds seconds48 = seconds47.negated();
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds47.get(durationFieldType49);
        boolean boolean51 = seconds43.isLessThan(seconds47);
        org.joda.time.Seconds seconds52 = seconds27.minus(seconds43);
        org.joda.time.Seconds seconds54 = seconds52.dividedBy((int) 'a');
        org.joda.time.Seconds seconds55 = seconds11.plus(seconds52);
        org.joda.time.Seconds seconds56 = seconds55.negated();
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = seconds57.get(durationFieldType58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds61 = seconds57.minus(seconds60);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = seconds62.get(durationFieldType63);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds66 = seconds62.minus(seconds65);
        org.joda.time.Seconds seconds68 = seconds66.dividedBy((int) '4');
        int int69 = seconds66.size();
        int int70 = seconds61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds66);
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = seconds71.get(durationFieldType72);
        boolean boolean74 = seconds66.isLessThan(seconds71);
        boolean boolean75 = seconds56.isLessThan(seconds66);
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType78 = seconds77.getPeriodType();
        org.joda.time.Duration duration79 = seconds77.toStandardDuration();
        org.joda.time.Seconds seconds81 = seconds77.dividedBy((int) (byte) 10);
        int int82 = seconds56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds81);
        boolean boolean83 = seconds1.isGreaterThan(seconds56);
        org.joda.time.Duration duration84 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds86 = seconds1.plus((-1));
        org.joda.time.Seconds seconds88 = seconds86.plus((-100));
        org.joda.time.Seconds seconds90 = seconds86.multipliedBy((int) (byte) 1);
        int int91 = seconds90.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2147483644S" + "'", str44, "PT2147483644S");
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertNotNull(seconds90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds8 = seconds5.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds9 = seconds8.negated();
        boolean boolean10 = seconds1.isLessThan(seconds9);
        java.lang.String str11 = seconds1.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT-1S" + "'", str11, "PT-1S");
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Seconds seconds15 = seconds13.multipliedBy(2147483647);
        int int16 = seconds15.getSeconds();
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds22 = seconds18.multipliedBy(0);
        org.joda.time.Seconds seconds24 = seconds18.multipliedBy(1);
        org.joda.time.Seconds seconds25 = seconds15.plus(seconds24);
        org.joda.time.Period period26 = seconds25.toPeriod();
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds25);
        org.joda.time.Seconds seconds29 = seconds27.plus(41297762);
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.secondsIn(readableInterval30);
        int int32 = seconds31.size();
        org.joda.time.Seconds seconds34 = seconds31.dividedBy(100);
        org.joda.time.Period period35 = seconds34.toPeriod();
        org.joda.time.Seconds seconds36 = seconds27.plus(seconds34);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds43 = seconds40.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds48 = seconds44.minus(seconds47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds49.get(durationFieldType50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds53 = seconds49.minus(seconds52);
        org.joda.time.Seconds seconds55 = seconds53.dividedBy((int) '4');
        int int56 = seconds53.size();
        int int57 = seconds48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds53);
        org.joda.time.Seconds seconds59 = seconds53.plus(0);
        java.lang.String str60 = seconds59.toString();
        org.joda.time.Period period61 = seconds59.toPeriod();
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.secondsIn(readableInterval62);
        org.joda.time.Seconds seconds64 = seconds63.negated();
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = seconds63.get(durationFieldType65);
        boolean boolean67 = seconds59.isLessThan(seconds63);
        org.joda.time.Seconds seconds68 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds63);
        boolean boolean69 = seconds40.isLessThan(seconds63);
        org.joda.time.Seconds seconds70 = seconds63.negated();
        boolean boolean71 = seconds27.equals((java.lang.Object) seconds63);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PT2147483644S" + "'", str60, "PT2147483644S");
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((-2));
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds19.get(durationFieldType21);
        boolean boolean23 = seconds15.isLessThan(seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.Seconds seconds27 = seconds19.multipliedBy(100);
        org.joda.time.MutablePeriod mutablePeriod28 = seconds19.toMutablePeriod();
        org.joda.time.Seconds seconds30 = seconds19.plus(52);
        java.lang.String str31 = seconds19.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT0S" + "'", str31, "PT0S");
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.Period period7 = seconds3.toPeriod();
        org.joda.time.Seconds seconds9 = seconds3.minus((int) (short) 10);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(seconds9);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Seconds seconds7 = seconds5.negated();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        org.joda.time.Seconds seconds23 = seconds17.plus(0);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.secondsIn(readableInterval24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        org.joda.time.Seconds seconds28 = seconds25.dividedBy((-1));
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds25);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        boolean boolean31 = seconds29.isSupported(durationFieldType30);
        org.joda.time.Seconds seconds33 = seconds29.plus((int) (byte) 1);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = seconds34.get(durationFieldType35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds38 = seconds34.minus(seconds37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = seconds39.get(durationFieldType40);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds43 = seconds39.minus(seconds42);
        org.joda.time.Seconds seconds45 = seconds43.dividedBy((int) '4');
        int int46 = seconds43.size();
        int int47 = seconds38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds43);
        org.joda.time.Seconds seconds49 = seconds43.plus(0);
        java.lang.String str50 = seconds49.toString();
        org.joda.time.Period period51 = seconds49.toPeriod();
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.secondsIn(readableInterval52);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = seconds53.get(durationFieldType55);
        boolean boolean57 = seconds49.isLessThan(seconds53);
        org.joda.time.Seconds seconds58 = seconds33.minus(seconds49);
        org.joda.time.Seconds seconds60 = seconds58.dividedBy((int) 'a');
        org.joda.time.Seconds seconds61 = seconds17.plus(seconds58);
        org.joda.time.Seconds seconds62 = seconds7.plus(seconds61);
        org.joda.time.PeriodType periodType63 = seconds61.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT2147483644S" + "'", str50, "PT2147483644S");
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(periodType63);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        java.lang.String str18 = seconds17.toString();
        org.joda.time.Period period19 = seconds17.toPeriod();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        org.joda.time.Seconds seconds24 = seconds21.dividedBy((-1));
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        int int27 = seconds17.get(durationFieldType26);
        boolean boolean28 = seconds0.isLessThan(seconds17);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType31 = seconds30.getPeriodType();
        org.joda.time.Duration duration32 = seconds30.toStandardDuration();
        org.joda.time.Seconds seconds34 = seconds30.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds35 = seconds34.negated();
        org.joda.time.Seconds seconds36 = seconds34.negated();
        org.joda.time.Seconds seconds37 = seconds0.minus(seconds34);
        int int38 = seconds37.size();
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = seconds39.get(durationFieldType40);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds43 = seconds39.minus(seconds42);
        org.joda.time.Seconds seconds45 = seconds43.dividedBy((int) '4');
        org.joda.time.MutablePeriod mutablePeriod46 = seconds43.toMutablePeriod();
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType49 = seconds48.getPeriodType();
        org.joda.time.Duration duration50 = seconds48.toStandardDuration();
        org.joda.time.Seconds seconds52 = seconds48.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds54 = seconds48.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds56 = seconds48.minus(seconds55);
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = seconds57.get(durationFieldType58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds61 = seconds57.minus(seconds60);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType64 = seconds63.getPeriodType();
        org.joda.time.Duration duration65 = seconds63.toStandardDuration();
        org.joda.time.Seconds seconds67 = seconds63.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds68 = seconds67.negated();
        org.joda.time.ReadableInterval readableInterval69 = null;
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.secondsIn(readableInterval69);
        org.joda.time.Seconds seconds71 = seconds70.negated();
        org.joda.time.ReadableInterval readableInterval72 = null;
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.secondsIn(readableInterval72);
        int int74 = seconds73.size();
        boolean boolean75 = seconds71.isLessThan(seconds73);
        org.joda.time.ReadableInterval readableInterval76 = null;
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.secondsIn(readableInterval76);
        int int78 = seconds77.size();
        org.joda.time.Seconds seconds80 = seconds77.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval81 = null;
        org.joda.time.Seconds seconds82 = org.joda.time.Seconds.secondsIn(readableInterval81);
        org.joda.time.DurationFieldType durationFieldType83 = seconds82.getFieldType();
        boolean boolean84 = seconds80.isSupported(durationFieldType83);
        boolean boolean85 = seconds73.isSupported(durationFieldType83);
        boolean boolean86 = seconds67.isSupported(durationFieldType83);
        boolean boolean87 = seconds60.isSupported(durationFieldType83);
        org.joda.time.Seconds seconds88 = seconds56.plus(seconds60);
        org.joda.time.Seconds seconds89 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds56);
        org.joda.time.DurationFieldType durationFieldType90 = seconds56.getFieldType();
        boolean boolean91 = seconds43.isSupported(durationFieldType90);
        int int92 = seconds43.getSeconds();
        boolean boolean93 = seconds37.equals((java.lang.Object) seconds43);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2147483644S" + "'", str18, "PT2147483644S");
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483644 + "'", int27 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertNotNull(seconds89);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 2147483644 + "'", int92 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        int int5 = seconds1.getSeconds();
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.Seconds seconds17 = seconds15.dividedBy((int) '4');
        int int18 = seconds15.size();
        int int19 = seconds10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds15);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        boolean boolean23 = seconds15.isLessThan(seconds20);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = seconds38.get(durationFieldType39);
        boolean boolean41 = seconds33.isLessThan(seconds38);
        boolean boolean42 = seconds20.isLessThan(seconds33);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.seconds((int) (byte) 1);
        boolean boolean45 = seconds33.isLessThan(seconds44);
        org.joda.time.Seconds seconds46 = seconds1.minus(seconds44);
        org.joda.time.Period period47 = seconds44.toPeriod();
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.secondsIn(readableInterval48);
        org.joda.time.Seconds seconds50 = seconds49.negated();
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = seconds49.get(durationFieldType51);
        org.joda.time.PeriodType periodType53 = seconds49.getPeriodType();
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.secondsIn(readableInterval54);
        org.joda.time.DurationFieldType durationFieldType56 = seconds55.getFieldType();
        org.joda.time.Seconds seconds58 = seconds55.dividedBy((-1));
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds55);
        org.joda.time.DurationFieldType durationFieldType60 = null;
        boolean boolean61 = seconds59.isSupported(durationFieldType60);
        org.joda.time.Seconds seconds63 = seconds59.plus((int) (byte) 1);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = seconds64.get(durationFieldType65);
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds68 = seconds64.minus(seconds67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds73 = seconds69.minus(seconds72);
        org.joda.time.Seconds seconds75 = seconds73.dividedBy((int) '4');
        int int76 = seconds73.size();
        int int77 = seconds68.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds73);
        org.joda.time.Seconds seconds79 = seconds73.plus(0);
        java.lang.String str80 = seconds79.toString();
        org.joda.time.Period period81 = seconds79.toPeriod();
        org.joda.time.ReadableInterval readableInterval82 = null;
        org.joda.time.Seconds seconds83 = org.joda.time.Seconds.secondsIn(readableInterval82);
        org.joda.time.Seconds seconds84 = seconds83.negated();
        org.joda.time.DurationFieldType durationFieldType85 = null;
        int int86 = seconds83.get(durationFieldType85);
        boolean boolean87 = seconds79.isLessThan(seconds83);
        org.joda.time.Seconds seconds88 = seconds63.minus(seconds79);
        org.joda.time.DurationFieldType durationFieldType89 = seconds88.getFieldType();
        boolean boolean90 = seconds49.isSupported(durationFieldType89);
        int int91 = seconds44.get(durationFieldType89);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "PT2147483644S" + "'", str80, "PT2147483644S");
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        org.joda.time.Period period10 = seconds5.toPeriod();
        org.joda.time.Seconds seconds12 = seconds5.plus((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod13 = seconds5.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType15 = seconds5.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.DurationFieldType durationFieldType14 = seconds4.getFieldType();
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.MutablePeriod mutablePeriod20 = seconds18.toMutablePeriod();
        boolean boolean21 = seconds4.isGreaterThan(seconds18);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.THREE;
        org.joda.time.DurationFieldType durationFieldType23 = seconds22.getFieldType();
        int int24 = seconds22.getSeconds();
        org.joda.time.ReadableInterval readableInterval25 = null;
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.secondsIn(readableInterval25);
        org.joda.time.Seconds seconds27 = seconds22.plus(seconds26);
        org.joda.time.Seconds seconds28 = seconds18.plus(seconds22);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Days days2 = seconds1.toStandardDays();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds(2147483647);
        boolean boolean29 = seconds23.isLessThan(seconds28);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType31 = seconds28.getFieldType(41297762);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 41297762");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.MutablePeriod mutablePeriod5 = seconds0.toMutablePeriod();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType8 = seconds7.getPeriodType();
        org.joda.time.Duration duration9 = seconds7.toStandardDuration();
        org.joda.time.Seconds seconds11 = seconds7.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.Seconds seconds14 = seconds13.negated();
        org.joda.time.MutablePeriod mutablePeriod15 = seconds13.toMutablePeriod();
        org.joda.time.Duration duration16 = seconds13.toStandardDuration();
        int int17 = seconds13.getSeconds();
        boolean boolean18 = seconds7.isLessThan(seconds13);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = seconds19.get(durationFieldType20);
        org.joda.time.Seconds seconds22 = seconds13.plus(seconds19);
        org.joda.time.Seconds seconds23 = seconds19.negated();
        org.joda.time.Period period24 = seconds19.toPeriod();
        boolean boolean25 = seconds0.isLessThan(seconds19);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds(2147483647);
        boolean boolean29 = seconds23.isLessThan(seconds28);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = seconds28.getValue(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds16 = seconds14.dividedBy((int) '4');
        int int17 = seconds14.size();
        int int18 = seconds9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds14);
        org.joda.time.Seconds seconds20 = seconds14.plus(0);
        boolean boolean21 = seconds1.isLessThan(seconds14);
        org.joda.time.PeriodType periodType22 = seconds14.getPeriodType();
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds14);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(seconds23);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType20 = seconds19.getPeriodType();
        org.joda.time.Duration duration21 = seconds19.toStandardDuration();
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        boolean boolean23 = seconds17.equals((java.lang.Object) seconds19);
        org.joda.time.MutablePeriod mutablePeriod24 = seconds19.toMutablePeriod();
        org.joda.time.Seconds seconds26 = seconds19.minus(3);
        org.joda.time.Seconds seconds28 = seconds19.plus((int) 'a');
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = seconds3.get(durationFieldType4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds7 = seconds3.minus(seconds6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds14 = seconds12.dividedBy((int) '4');
        int int15 = seconds12.size();
        int int16 = seconds7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds12);
        org.joda.time.Seconds seconds18 = seconds12.plus(0);
        java.lang.String str19 = seconds18.toString();
        org.joda.time.Period period20 = seconds18.toPeriod();
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        boolean boolean26 = seconds18.equals((java.lang.Object) seconds22);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = seconds27.get(durationFieldType28);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds31 = seconds27.minus(seconds30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds36 = seconds32.minus(seconds35);
        org.joda.time.Seconds seconds38 = seconds36.dividedBy((int) '4');
        int int39 = seconds36.size();
        int int40 = seconds31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds36);
        org.joda.time.Seconds seconds42 = seconds36.plus(0);
        org.joda.time.MutablePeriod mutablePeriod43 = seconds36.toMutablePeriod();
        int int44 = seconds18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds36);
        org.joda.time.Seconds seconds46 = seconds18.minus(2147483644);
        org.joda.time.Seconds seconds47 = seconds0.minus(seconds46);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.secondsIn(readableInterval48);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds49);
        boolean boolean51 = seconds0.isLessThan(seconds50);
        int int52 = seconds0.size();
        org.joda.time.ReadableInterval readableInterval53 = null;
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.secondsIn(readableInterval53);
        int int55 = seconds54.size();
        org.joda.time.Seconds seconds57 = seconds54.dividedBy(100);
        org.joda.time.PeriodType periodType58 = seconds57.getPeriodType();
        org.joda.time.Seconds seconds60 = seconds57.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds62 = seconds60.minus((-1));
        boolean boolean63 = seconds0.isGreaterThan(seconds60);
        org.joda.time.Seconds seconds64 = seconds0.negated();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT2147483644S" + "'", str19, "PT2147483644S");
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(seconds64);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Period period2 = seconds1.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        java.lang.String str4 = seconds1.toString();
        org.joda.time.Hours hours5 = seconds1.toStandardHours();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT0S" + "'", str4, "PT0S");
        org.junit.Assert.assertNotNull(hours5);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = seconds21.get(durationFieldType22);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds25 = seconds21.minus(seconds24);
        org.joda.time.Seconds seconds27 = seconds25.dividedBy((int) '4');
        int int28 = seconds25.size();
        int int29 = seconds20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds25);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        boolean boolean33 = seconds25.isLessThan(seconds30);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = seconds34.get(durationFieldType35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds38 = seconds34.minus(seconds37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = seconds39.get(durationFieldType40);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds43 = seconds39.minus(seconds42);
        org.joda.time.Seconds seconds45 = seconds43.dividedBy((int) '4');
        int int46 = seconds43.size();
        int int47 = seconds38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds43);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        boolean boolean51 = seconds43.isLessThan(seconds48);
        boolean boolean52 = seconds30.isLessThan(seconds43);
        boolean boolean53 = seconds0.isGreaterThan(seconds43);
        // The following exception was thrown during execution in test generation
        try {
            int int55 = seconds0.getValue(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds7 = seconds1.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        org.joda.time.Seconds seconds23 = seconds17.plus(0);
        java.lang.String str24 = seconds23.toString();
        org.joda.time.Period period25 = seconds23.toPeriod();
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn(readableInterval26);
        org.joda.time.Seconds seconds28 = seconds27.negated();
        org.joda.time.MutablePeriod mutablePeriod29 = seconds27.toMutablePeriod();
        org.joda.time.Duration duration30 = seconds27.toStandardDuration();
        boolean boolean31 = seconds23.equals((java.lang.Object) seconds27);
        org.joda.time.Seconds seconds32 = seconds1.minus(seconds27);
        org.joda.time.Seconds seconds34 = seconds27.multipliedBy(52);
        java.lang.Class<?> wildcardClass35 = seconds34.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2147483644S" + "'", str24, "PT2147483644S");
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds5 = seconds1.minus((int) (byte) -1);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType9 = seconds8.getPeriodType();
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.Seconds seconds12 = seconds11.negated();
        org.joda.time.MutablePeriod mutablePeriod13 = seconds11.toMutablePeriod();
        int int14 = seconds8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType17 = seconds16.getPeriodType();
        org.joda.time.Duration duration18 = seconds16.toStandardDuration();
        org.joda.time.Seconds seconds20 = seconds16.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds22 = seconds16.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds24 = seconds16.minus(seconds23);
        org.joda.time.DurationFieldType durationFieldType25 = seconds24.getFieldType();
        boolean boolean26 = seconds8.isSupported(durationFieldType25);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Period period30 = seconds28.toPeriod();
        org.joda.time.Duration duration31 = seconds28.toStandardDuration();
        boolean boolean32 = seconds8.equals((java.lang.Object) seconds28);
        org.joda.time.Duration duration33 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds34 = seconds28.negated();
        int int35 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds34);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.secondsIn(readableInterval36);
        org.joda.time.DurationFieldType durationFieldType38 = seconds37.getFieldType();
        org.joda.time.Seconds seconds40 = seconds37.dividedBy((-1));
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds37);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        boolean boolean43 = seconds41.isSupported(durationFieldType42);
        org.joda.time.Seconds seconds45 = seconds41.plus((int) (byte) 1);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds46.get(durationFieldType47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds50 = seconds46.minus(seconds49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = seconds51.get(durationFieldType52);
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds55 = seconds51.minus(seconds54);
        org.joda.time.Seconds seconds57 = seconds55.dividedBy((int) '4');
        int int58 = seconds55.size();
        int int59 = seconds50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds55);
        org.joda.time.Seconds seconds61 = seconds55.plus(0);
        java.lang.String str62 = seconds61.toString();
        org.joda.time.Period period63 = seconds61.toPeriod();
        org.joda.time.ReadableInterval readableInterval64 = null;
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.secondsIn(readableInterval64);
        org.joda.time.Seconds seconds66 = seconds65.negated();
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = seconds65.get(durationFieldType67);
        boolean boolean69 = seconds61.isLessThan(seconds65);
        org.joda.time.Seconds seconds70 = seconds45.minus(seconds61);
        boolean boolean71 = seconds6.isLessThan(seconds61);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PT2147483644S" + "'", str62, "PT2147483644S");
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.MutablePeriod mutablePeriod40 = seconds33.toMutablePeriod();
        int int41 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds43 = seconds15.minus(2147483644);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds48 = seconds44.minus(seconds47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds49.get(durationFieldType50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds53 = seconds49.minus(seconds52);
        org.joda.time.Seconds seconds55 = seconds53.dividedBy((int) '4');
        int int56 = seconds53.size();
        int int57 = seconds48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds53);
        org.joda.time.Seconds seconds59 = seconds53.plus(0);
        org.joda.time.MutablePeriod mutablePeriod60 = seconds53.toMutablePeriod();
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType63 = seconds62.getPeriodType();
        org.joda.time.Duration duration64 = seconds62.toStandardDuration();
        org.joda.time.Seconds seconds66 = seconds62.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds67 = seconds66.negated();
        org.joda.time.Duration duration68 = seconds66.toStandardDuration();
        org.joda.time.Seconds seconds69 = seconds66.negated();
        org.joda.time.DurationFieldType durationFieldType70 = seconds66.getFieldType();
        boolean boolean71 = seconds53.isSupported(durationFieldType70);
        int int72 = seconds43.get(durationFieldType70);
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType75 = seconds74.getPeriodType();
        org.joda.time.Duration duration76 = seconds74.toStandardDuration();
        org.joda.time.Seconds seconds78 = seconds74.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval79 = null;
        org.joda.time.Seconds seconds80 = org.joda.time.Seconds.secondsIn(readableInterval79);
        org.joda.time.Seconds seconds81 = seconds80.negated();
        org.joda.time.MutablePeriod mutablePeriod82 = seconds80.toMutablePeriod();
        org.joda.time.Duration duration83 = seconds80.toStandardDuration();
        int int84 = seconds80.getSeconds();
        boolean boolean85 = seconds74.isLessThan(seconds80);
        boolean boolean86 = seconds43.isGreaterThan(seconds74);
        org.joda.time.MutablePeriod mutablePeriod87 = seconds43.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod88 = seconds43.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(mutablePeriod82);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(mutablePeriod87);
        org.junit.Assert.assertNotNull(mutablePeriod88);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) '#');
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy((-1));
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = seconds23.isSupported(durationFieldType24);
        org.joda.time.Seconds seconds27 = seconds23.plus((int) (byte) 1);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) '4');
        int int40 = seconds37.size();
        int int41 = seconds32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds37);
        org.joda.time.Seconds seconds43 = seconds37.plus(0);
        java.lang.String str44 = seconds43.toString();
        org.joda.time.Period period45 = seconds43.toPeriod();
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        org.joda.time.Seconds seconds48 = seconds47.negated();
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds47.get(durationFieldType49);
        boolean boolean51 = seconds43.isLessThan(seconds47);
        org.joda.time.Seconds seconds52 = seconds27.minus(seconds43);
        org.joda.time.Seconds seconds54 = seconds52.dividedBy((int) 'a');
        org.joda.time.Seconds seconds55 = seconds11.plus(seconds52);
        org.joda.time.Seconds seconds56 = seconds55.negated();
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = seconds57.get(durationFieldType58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds61 = seconds57.minus(seconds60);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = seconds62.get(durationFieldType63);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds66 = seconds62.minus(seconds65);
        org.joda.time.Seconds seconds68 = seconds66.dividedBy((int) '4');
        int int69 = seconds66.size();
        int int70 = seconds61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds66);
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = seconds71.get(durationFieldType72);
        boolean boolean74 = seconds66.isLessThan(seconds71);
        boolean boolean75 = seconds56.isLessThan(seconds66);
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType78 = seconds77.getPeriodType();
        org.joda.time.Duration duration79 = seconds77.toStandardDuration();
        org.joda.time.Seconds seconds81 = seconds77.dividedBy((int) (byte) 10);
        int int82 = seconds56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds81);
        boolean boolean83 = seconds1.isGreaterThan(seconds56);
        org.joda.time.Seconds seconds85 = seconds56.multipliedBy(101);
        org.joda.time.Seconds seconds87 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType88 = seconds87.getPeriodType();
        org.joda.time.Duration duration89 = seconds87.toStandardDuration();
        org.joda.time.Seconds seconds91 = seconds87.dividedBy((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod92 = seconds87.toMutablePeriod();
        int int93 = seconds56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds87);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2147483644S" + "'", str44, "PT2147483644S");
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertNotNull(seconds87);
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertNotNull(seconds91);
        org.junit.Assert.assertNotNull(mutablePeriod92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy(3);
        org.joda.time.Duration duration12 = seconds11.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.Seconds seconds21 = seconds19.dividedBy((int) '4');
        int int22 = seconds19.size();
        int int23 = seconds14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds19);
        org.joda.time.Seconds seconds25 = seconds19.plus(0);
        java.lang.String str26 = seconds25.toString();
        org.joda.time.Period period27 = seconds25.toPeriod();
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.secondsIn(readableInterval28);
        org.joda.time.Seconds seconds30 = seconds29.negated();
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds29.get(durationFieldType31);
        boolean boolean33 = seconds25.isLessThan(seconds29);
        org.joda.time.Seconds seconds34 = seconds9.minus(seconds25);
        org.joda.time.Seconds seconds36 = seconds34.dividedBy((int) 'a');
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.secondsIn(readableInterval37);
        org.joda.time.DurationFieldType durationFieldType39 = seconds38.getFieldType();
        org.joda.time.Seconds seconds41 = seconds38.dividedBy((-1));
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds38);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        boolean boolean44 = seconds42.isSupported(durationFieldType43);
        org.joda.time.Seconds seconds46 = seconds42.plus((int) (byte) 1);
        org.joda.time.Period period47 = seconds42.toPeriod();
        boolean boolean48 = seconds36.equals((java.lang.Object) seconds42);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int51 = seconds50.getSeconds();
        org.joda.time.Seconds seconds52 = seconds36.minus(seconds50);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483644S" + "'", str26, "PT2147483644S");
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(seconds52);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT-2147483644S");
        org.joda.time.Days days2 = seconds1.toStandardDays();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds17.multipliedBy((int) (short) 0);
        int int21 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds20);
        int int22 = seconds13.size();
        org.joda.time.MutablePeriod mutablePeriod23 = seconds13.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType24 = seconds13.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(durationFieldType24);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = seconds3.get(durationFieldType4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds7 = seconds3.minus(seconds6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds14 = seconds12.dividedBy((int) '4');
        int int15 = seconds12.size();
        int int16 = seconds7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds12);
        org.joda.time.Seconds seconds18 = seconds12.plus(0);
        java.lang.String str19 = seconds18.toString();
        org.joda.time.Period period20 = seconds18.toPeriod();
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        boolean boolean26 = seconds18.equals((java.lang.Object) seconds22);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = seconds27.get(durationFieldType28);
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds31 = seconds27.minus(seconds30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds36 = seconds32.minus(seconds35);
        org.joda.time.Seconds seconds38 = seconds36.dividedBy((int) '4');
        int int39 = seconds36.size();
        int int40 = seconds31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds36);
        org.joda.time.Seconds seconds42 = seconds36.plus(0);
        org.joda.time.MutablePeriod mutablePeriod43 = seconds36.toMutablePeriod();
        int int44 = seconds18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds36);
        org.joda.time.Seconds seconds46 = seconds18.minus(2147483644);
        org.joda.time.Seconds seconds47 = seconds0.minus(seconds46);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.secondsIn(readableInterval48);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds49);
        boolean boolean51 = seconds0.isLessThan(seconds50);
        int int52 = seconds0.size();
        int int53 = seconds0.getSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT2147483644S" + "'", str19, "PT2147483644S");
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2147483647 + "'", int53 == 2147483647);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        org.joda.time.Seconds seconds10 = seconds9.negated();
        org.joda.time.Period period11 = seconds10.toPeriod();
        org.joda.time.Seconds seconds13 = seconds10.multipliedBy((-100));
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(seconds13);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        java.lang.Class<?> wildcardClass16 = seconds0.getClass();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.MutablePeriod mutablePeriod16 = seconds9.toMutablePeriod();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds17.get(durationFieldType18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = seconds17.minus(seconds20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = seconds22.get(durationFieldType23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds26 = seconds22.minus(seconds25);
        org.joda.time.Seconds seconds28 = seconds26.dividedBy((int) '4');
        int int29 = seconds26.size();
        int int30 = seconds21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds26);
        org.joda.time.DurationFieldType durationFieldType31 = seconds21.getFieldType();
        int int32 = seconds9.get(durationFieldType31);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.secondsIn(readableInterval33);
        org.joda.time.DurationFieldType durationFieldType35 = seconds34.getFieldType();
        org.joda.time.Seconds seconds37 = seconds34.dividedBy((-1));
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds34);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        boolean boolean40 = seconds38.isSupported(durationFieldType39);
        org.joda.time.Seconds seconds42 = seconds38.plus((int) (byte) 1);
        org.joda.time.Seconds seconds44 = seconds38.multipliedBy((int) (short) 100);
        boolean boolean45 = seconds9.isGreaterThan(seconds38);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds9);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.secondsIn(readableInterval47);
        org.joda.time.DurationFieldType durationFieldType49 = seconds48.getFieldType();
        org.joda.time.Seconds seconds51 = seconds48.dividedBy((-1));
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds48);
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds52);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483644 + "'", int32 == 2147483644);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        boolean boolean72 = seconds64.isLessThan(seconds69);
        boolean boolean73 = seconds54.isLessThan(seconds64);
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType76 = seconds75.getPeriodType();
        org.joda.time.Duration duration77 = seconds75.toStandardDuration();
        org.joda.time.Seconds seconds79 = seconds75.dividedBy((int) (byte) 10);
        int int80 = seconds54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds79);
        org.joda.time.Seconds seconds82 = org.joda.time.Seconds.parseSeconds("PT-1S");
        org.joda.time.Seconds seconds83 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.Seconds seconds84 = seconds82.plus(seconds83);
        org.joda.time.Seconds seconds85 = seconds54.minus(seconds84);
        org.joda.time.Seconds seconds87 = seconds85.minus((int) (short) -1);
        int int88 = seconds87.size();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertNotNull(seconds87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        org.joda.time.Period period10 = seconds5.toPeriod();
        org.joda.time.Seconds seconds12 = seconds5.plus((int) (byte) 10);
        org.joda.time.Seconds seconds14 = seconds5.plus(2147483644);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        org.joda.time.Seconds seconds25 = seconds4.minus(seconds18);
        org.joda.time.Seconds seconds27 = seconds18.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType28 = seconds27.getPeriodType();
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Seconds seconds33 = seconds30.dividedBy((-1));
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds33);
        org.joda.time.Seconds seconds35 = seconds33.negated();
        org.joda.time.Seconds seconds36 = seconds27.plus(seconds33);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType39 = seconds38.getPeriodType();
        org.joda.time.Duration duration40 = seconds38.toStandardDuration();
        org.joda.time.Seconds seconds42 = seconds38.multipliedBy(0);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = seconds43.get(durationFieldType44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds47 = seconds43.minus(seconds46);
        org.joda.time.Seconds seconds49 = seconds47.dividedBy((int) '4');
        int int50 = seconds38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds49);
        org.joda.time.PeriodType periodType51 = seconds38.getPeriodType();
        java.lang.String str52 = seconds38.toString();
        org.joda.time.Duration duration53 = seconds38.toStandardDuration();
        org.joda.time.Seconds seconds55 = seconds38.multipliedBy(10);
        boolean boolean56 = seconds33.isGreaterThan(seconds55);
        org.joda.time.MutablePeriod mutablePeriod57 = seconds33.toMutablePeriod();
        org.joda.time.PeriodType periodType58 = seconds33.getPeriodType();
        org.joda.time.Duration duration59 = seconds33.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT1S" + "'", str52, "PT1S");
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(duration59);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds18 = seconds17.negated();
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = seconds19.get(durationFieldType20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds23 = seconds19.minus(seconds22);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.secondsIn(readableInterval24);
        org.joda.time.Seconds seconds26 = seconds25.negated();
        org.joda.time.MutablePeriod mutablePeriod27 = seconds25.toMutablePeriod();
        org.joda.time.Duration duration28 = seconds25.toStandardDuration();
        boolean boolean29 = seconds19.equals((java.lang.Object) seconds25);
        org.joda.time.Seconds seconds31 = seconds25.plus((int) (byte) 10);
        org.joda.time.Seconds seconds33 = seconds25.multipliedBy((int) (short) 1);
        boolean boolean34 = seconds17.isLessThan(seconds33);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType37 = seconds36.getPeriodType();
        org.joda.time.Duration duration38 = seconds36.toStandardDuration();
        org.joda.time.Seconds seconds40 = seconds36.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval41 = null;
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.secondsIn(readableInterval41);
        org.joda.time.Seconds seconds43 = seconds42.negated();
        org.joda.time.MutablePeriod mutablePeriod44 = seconds42.toMutablePeriod();
        org.joda.time.Duration duration45 = seconds42.toStandardDuration();
        int int46 = seconds42.getSeconds();
        boolean boolean47 = seconds36.isLessThan(seconds42);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        org.joda.time.Seconds seconds51 = seconds42.plus(seconds48);
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.secondsIn(readableInterval52);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = seconds53.get(durationFieldType55);
        org.joda.time.PeriodType periodType57 = seconds53.getPeriodType();
        java.lang.String str58 = seconds53.toString();
        org.joda.time.Seconds seconds60 = seconds53.dividedBy(10);
        org.joda.time.Seconds seconds62 = seconds53.dividedBy((int) 'a');
        org.joda.time.DurationFieldType durationFieldType64 = seconds53.getFieldType((int) (byte) 0);
        boolean boolean65 = seconds42.isSupported(durationFieldType64);
        boolean boolean66 = seconds17.isSupported(durationFieldType64);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "PT0S" + "'", str58, "PT0S");
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType20 = seconds19.getPeriodType();
        org.joda.time.Duration duration21 = seconds19.toStandardDuration();
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        boolean boolean23 = seconds17.equals((java.lang.Object) seconds19);
        org.joda.time.MutablePeriod mutablePeriod24 = seconds19.toMutablePeriod();
        org.joda.time.PeriodType periodType25 = seconds19.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(periodType25);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds19.get(durationFieldType21);
        boolean boolean23 = seconds15.isLessThan(seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType27 = seconds19.getFieldType(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        int int5 = seconds1.getSeconds();
        java.lang.String str6 = seconds1.toString();
        org.joda.time.Seconds seconds8 = seconds1.minus((int) (short) 10);
        int int9 = seconds1.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Duration duration11 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds9.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds15 = seconds9.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds17 = seconds9.minus(seconds16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        boolean boolean19 = seconds1.isSupported(durationFieldType18);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        org.joda.time.Period period23 = seconds21.toPeriod();
        org.joda.time.Duration duration24 = seconds21.toStandardDuration();
        boolean boolean25 = seconds1.equals((java.lang.Object) seconds21);
        org.joda.time.Duration duration26 = seconds21.toStandardDuration();
        org.joda.time.Seconds seconds27 = seconds21.negated();
        org.joda.time.Seconds seconds29 = seconds21.dividedBy((-2147483644));
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds19.get(durationFieldType21);
        boolean boolean23 = seconds15.isLessThan(seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.Seconds seconds27 = seconds25.dividedBy((-2147483644));
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.PeriodType periodType19 = seconds17.getPeriodType();
        org.joda.time.Seconds seconds21 = seconds17.dividedBy(100);
        org.joda.time.Seconds seconds23 = seconds21.multipliedBy(100);
        int int24 = seconds23.size();
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds23);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(seconds25);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds8 = seconds6.dividedBy((int) '4');
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        org.joda.time.Seconds seconds14 = seconds11.dividedBy((-1));
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds22 = seconds18.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        boolean boolean24 = seconds16.isLessThan(seconds23);
        org.joda.time.Seconds seconds25 = seconds14.plus(seconds16);
        org.joda.time.Seconds seconds26 = seconds1.plus(seconds25);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.DurationFieldType durationFieldType29 = seconds28.getFieldType();
        org.joda.time.Seconds seconds31 = seconds28.dividedBy((-1));
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds28);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        boolean boolean34 = seconds32.isSupported(durationFieldType33);
        org.joda.time.Seconds seconds36 = seconds32.plus((int) (byte) 1);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = seconds42.get(durationFieldType43);
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds46 = seconds42.minus(seconds45);
        org.joda.time.Seconds seconds48 = seconds46.dividedBy((int) '4');
        int int49 = seconds46.size();
        int int50 = seconds41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds46);
        org.joda.time.Seconds seconds52 = seconds46.plus(0);
        java.lang.String str53 = seconds52.toString();
        org.joda.time.Period period54 = seconds52.toPeriod();
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.secondsIn(readableInterval55);
        org.joda.time.Seconds seconds57 = seconds56.negated();
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = seconds56.get(durationFieldType58);
        boolean boolean60 = seconds52.isLessThan(seconds56);
        org.joda.time.Seconds seconds61 = seconds36.minus(seconds52);
        org.joda.time.DurationFieldType durationFieldType62 = seconds52.getFieldType();
        int int63 = seconds25.get(durationFieldType62);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "PT2147483644S" + "'", str53, "PT2147483644S");
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.dividedBy(2147483647);
        org.joda.time.MutablePeriod mutablePeriod7 = seconds3.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType20 = seconds19.getPeriodType();
        org.joda.time.Duration duration21 = seconds19.toStandardDuration();
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        boolean boolean23 = seconds17.equals((java.lang.Object) seconds19);
        int int24 = seconds17.size();
        org.joda.time.Seconds seconds26 = seconds17.plus(0);
        org.joda.time.Seconds seconds28 = seconds17.minus((int) (byte) 10);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds19.get(durationFieldType21);
        boolean boolean23 = seconds15.isLessThan(seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        int int25 = seconds24.getSeconds();
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds24);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.Seconds seconds4 = seconds1.minus((int) '#');
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType7 = seconds6.getPeriodType();
        org.joda.time.Duration duration8 = seconds6.toStandardDuration();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds6);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.Seconds seconds12 = seconds11.negated();
        org.joda.time.Seconds seconds14 = seconds11.minus((int) '#');
        org.joda.time.Seconds seconds15 = seconds6.plus(seconds11);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Seconds seconds6 = seconds1.minus(3);
        org.joda.time.Seconds seconds8 = seconds1.dividedBy(3);
        org.joda.time.Seconds seconds10 = seconds1.multipliedBy((int) (short) 100);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.secondsIn(readableInterval11);
        org.joda.time.DurationFieldType durationFieldType13 = seconds12.getFieldType();
        org.joda.time.Seconds seconds15 = seconds12.dividedBy((-1));
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds12);
        int int17 = seconds12.size();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy((-1));
        int int23 = seconds19.getSeconds();
        org.joda.time.Seconds seconds24 = seconds12.minus(seconds19);
        org.joda.time.Seconds seconds26 = seconds24.multipliedBy(2147483647);
        int int27 = seconds26.getSeconds();
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType30 = seconds29.getPeriodType();
        org.joda.time.Duration duration31 = seconds29.toStandardDuration();
        org.joda.time.Seconds seconds33 = seconds29.multipliedBy(0);
        org.joda.time.Seconds seconds35 = seconds29.multipliedBy(1);
        org.joda.time.Seconds seconds36 = seconds26.plus(seconds35);
        boolean boolean37 = seconds10.isLessThan(seconds26);
        int int38 = seconds10.getSeconds();
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = seconds39.get(durationFieldType40);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds43 = seconds39.minus(seconds42);
        org.joda.time.Seconds seconds45 = seconds43.dividedBy((int) '4');
        org.joda.time.MutablePeriod mutablePeriod46 = seconds43.toMutablePeriod();
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType49 = seconds48.getPeriodType();
        org.joda.time.Duration duration50 = seconds48.toStandardDuration();
        org.joda.time.Seconds seconds52 = seconds48.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds54 = seconds48.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds56 = seconds48.minus(seconds55);
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = seconds57.get(durationFieldType58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds61 = seconds57.minus(seconds60);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType64 = seconds63.getPeriodType();
        org.joda.time.Duration duration65 = seconds63.toStandardDuration();
        org.joda.time.Seconds seconds67 = seconds63.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds68 = seconds67.negated();
        org.joda.time.ReadableInterval readableInterval69 = null;
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.secondsIn(readableInterval69);
        org.joda.time.Seconds seconds71 = seconds70.negated();
        org.joda.time.ReadableInterval readableInterval72 = null;
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.secondsIn(readableInterval72);
        int int74 = seconds73.size();
        boolean boolean75 = seconds71.isLessThan(seconds73);
        org.joda.time.ReadableInterval readableInterval76 = null;
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.secondsIn(readableInterval76);
        int int78 = seconds77.size();
        org.joda.time.Seconds seconds80 = seconds77.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval81 = null;
        org.joda.time.Seconds seconds82 = org.joda.time.Seconds.secondsIn(readableInterval81);
        org.joda.time.DurationFieldType durationFieldType83 = seconds82.getFieldType();
        boolean boolean84 = seconds80.isSupported(durationFieldType83);
        boolean boolean85 = seconds73.isSupported(durationFieldType83);
        boolean boolean86 = seconds67.isSupported(durationFieldType83);
        boolean boolean87 = seconds60.isSupported(durationFieldType83);
        org.joda.time.Seconds seconds88 = seconds56.plus(seconds60);
        org.joda.time.Seconds seconds89 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds56);
        org.joda.time.DurationFieldType durationFieldType90 = seconds56.getFieldType();
        boolean boolean91 = seconds43.isSupported(durationFieldType90);
        boolean boolean92 = seconds10.isLessThan(seconds43);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertNotNull(seconds89);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT2S");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        java.lang.String str18 = seconds17.toString();
        org.joda.time.Period period19 = seconds17.toPeriod();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        org.joda.time.Seconds seconds22 = seconds21.negated();
        org.joda.time.MutablePeriod mutablePeriod23 = seconds21.toMutablePeriod();
        org.joda.time.Duration duration24 = seconds21.toStandardDuration();
        boolean boolean25 = seconds17.equals((java.lang.Object) seconds21);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        org.joda.time.MutablePeriod mutablePeriod42 = seconds35.toMutablePeriod();
        int int43 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds45 = seconds17.minus(2147483644);
        java.lang.String str46 = seconds17.toString();
        int int47 = seconds17.size();
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.Seconds seconds49 = seconds1.minus(seconds48);
        org.joda.time.PeriodType periodType50 = seconds49.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2147483644S" + "'", str18, "PT2147483644S");
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT2147483644S" + "'", str46, "PT2147483644S");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(periodType50);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds3 = seconds0.plus(1);
        org.joda.time.Duration duration4 = seconds0.toStandardDuration();
        org.joda.time.Duration duration5 = seconds0.toStandardDuration();
        org.joda.time.Period period6 = seconds0.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Duration duration11 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds9.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds15 = seconds9.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds17 = seconds9.minus(seconds16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        boolean boolean19 = seconds1.isSupported(durationFieldType18);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        org.joda.time.Period period23 = seconds21.toPeriod();
        org.joda.time.Duration duration24 = seconds21.toStandardDuration();
        boolean boolean25 = seconds1.equals((java.lang.Object) seconds21);
        int int26 = seconds21.size();
        org.joda.time.Seconds seconds27 = seconds21.negated();
        java.lang.Class<?> wildcardClass28 = seconds21.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Duration duration11 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds9.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds15 = seconds9.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds17 = seconds9.minus(seconds16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        boolean boolean19 = seconds1.isSupported(durationFieldType18);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        org.joda.time.Period period23 = seconds21.toPeriod();
        org.joda.time.Duration duration24 = seconds21.toStandardDuration();
        boolean boolean25 = seconds1.equals((java.lang.Object) seconds21);
        int int26 = seconds21.size();
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.Seconds seconds29 = seconds28.negated();
        org.joda.time.Seconds seconds31 = seconds28.minus((int) '#');
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType34 = seconds33.getPeriodType();
        org.joda.time.Duration duration35 = seconds33.toStandardDuration();
        org.joda.time.Seconds seconds36 = seconds28.plus(seconds33);
        boolean boolean37 = seconds21.equals((java.lang.Object) seconds33);
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.secondsIn(readableInterval38);
        org.joda.time.Seconds seconds40 = seconds39.negated();
        org.joda.time.MutablePeriod mutablePeriod41 = seconds39.toMutablePeriod();
        org.joda.time.Duration duration42 = seconds39.toStandardDuration();
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = seconds43.get(durationFieldType44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds47 = seconds43.minus(seconds46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds52 = seconds48.minus(seconds51);
        org.joda.time.Seconds seconds54 = seconds52.dividedBy((int) '4');
        int int55 = seconds52.size();
        int int56 = seconds47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds52);
        org.joda.time.Seconds seconds58 = seconds52.plus(0);
        boolean boolean59 = seconds39.isLessThan(seconds52);
        org.joda.time.DurationFieldType durationFieldType60 = seconds39.getFieldType();
        boolean boolean61 = seconds21.isGreaterThan(seconds39);
        org.joda.time.Seconds seconds63 = seconds39.dividedBy((int) (short) 10);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType66 = seconds65.getPeriodType();
        org.joda.time.ReadableInterval readableInterval67 = null;
        org.joda.time.Seconds seconds68 = org.joda.time.Seconds.secondsIn(readableInterval67);
        org.joda.time.Seconds seconds69 = seconds68.negated();
        org.joda.time.MutablePeriod mutablePeriod70 = seconds68.toMutablePeriod();
        int int71 = seconds65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds68);
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType74 = seconds73.getPeriodType();
        org.joda.time.Duration duration75 = seconds73.toStandardDuration();
        org.joda.time.Seconds seconds77 = seconds73.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds79 = seconds73.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds80 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds81 = seconds73.minus(seconds80);
        org.joda.time.DurationFieldType durationFieldType82 = seconds81.getFieldType();
        boolean boolean83 = seconds65.isSupported(durationFieldType82);
        boolean boolean84 = seconds39.equals((java.lang.Object) seconds65);
        org.joda.time.Seconds seconds86 = seconds39.dividedBy((-99));
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(seconds86);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.Seconds seconds9 = seconds8.negated();
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        int int12 = seconds11.size();
        boolean boolean13 = seconds9.isLessThan(seconds11);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        int int16 = seconds15.size();
        org.joda.time.Seconds seconds18 = seconds15.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.secondsIn(readableInterval19);
        org.joda.time.DurationFieldType durationFieldType21 = seconds20.getFieldType();
        boolean boolean22 = seconds18.isSupported(durationFieldType21);
        boolean boolean23 = seconds11.isSupported(durationFieldType21);
        boolean boolean24 = seconds5.isSupported(durationFieldType21);
        org.joda.time.Seconds seconds26 = seconds5.plus((int) (byte) 0);
        org.joda.time.PeriodType periodType27 = seconds5.getPeriodType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(periodType27);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds0.getFieldType();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((int) ' ');
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        int int9 = seconds8.size();
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        org.joda.time.Seconds seconds12 = seconds11.negated();
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.secondsIn(readableInterval13);
        int int15 = seconds14.size();
        boolean boolean16 = seconds12.isLessThan(seconds14);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.secondsIn(readableInterval17);
        int int19 = seconds18.size();
        org.joda.time.Seconds seconds21 = seconds18.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.secondsIn(readableInterval22);
        org.joda.time.DurationFieldType durationFieldType24 = seconds23.getFieldType();
        boolean boolean25 = seconds21.isSupported(durationFieldType24);
        boolean boolean26 = seconds14.isSupported(durationFieldType24);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds14);
        org.joda.time.Seconds seconds28 = seconds27.negated();
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        int int31 = seconds30.size();
        org.joda.time.Seconds seconds33 = seconds30.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.secondsIn(readableInterval34);
        org.joda.time.DurationFieldType durationFieldType36 = seconds35.getFieldType();
        boolean boolean37 = seconds33.isSupported(durationFieldType36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = seconds38.get(durationFieldType39);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds42 = seconds38.minus(seconds41);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = seconds43.get(durationFieldType44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds47 = seconds43.minus(seconds46);
        org.joda.time.Seconds seconds49 = seconds47.dividedBy((int) '4');
        int int50 = seconds47.size();
        int int51 = seconds42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds47);
        org.joda.time.Seconds seconds53 = seconds47.plus(0);
        org.joda.time.Seconds seconds54 = seconds33.minus(seconds47);
        org.joda.time.Seconds seconds56 = seconds47.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType57 = seconds56.getPeriodType();
        org.joda.time.ReadableInterval readableInterval58 = null;
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.secondsIn(readableInterval58);
        org.joda.time.DurationFieldType durationFieldType60 = seconds59.getFieldType();
        org.joda.time.Seconds seconds62 = seconds59.dividedBy((-1));
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds62);
        org.joda.time.Seconds seconds64 = seconds62.negated();
        org.joda.time.Seconds seconds65 = seconds56.plus(seconds62);
        org.joda.time.Seconds seconds66 = seconds27.plus(seconds65);
        int int67 = seconds8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds65);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        int int4 = seconds1.size();
        org.joda.time.Weeks weeks5 = seconds1.toStandardWeeks();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(weeks5);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Duration duration6 = seconds5.toStandardDuration();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds5);
        org.joda.time.DurationFieldType durationFieldType9 = seconds5.getFieldType((int) (byte) 0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(durationFieldType9);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds3 = seconds0.plus(1);
        int int4 = seconds3.getSeconds();
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (byte) 0);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        boolean boolean14 = seconds12.isSupported(durationFieldType13);
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.secondsIn(readableInterval15);
        int int17 = seconds16.size();
        org.joda.time.Seconds seconds19 = seconds16.dividedBy(100);
        org.joda.time.PeriodType periodType20 = seconds19.getPeriodType();
        org.joda.time.Seconds seconds22 = seconds19.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds24 = seconds22.minus((-1));
        org.joda.time.DurationFieldType durationFieldType26 = seconds22.getFieldType((int) (byte) 0);
        boolean boolean27 = seconds12.isSupported(durationFieldType26);
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.secondsIn(readableInterval28);
        org.joda.time.Seconds seconds30 = seconds29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = seconds29.toMutablePeriod();
        org.joda.time.Duration duration32 = seconds29.toStandardDuration();
        int int33 = seconds29.getSeconds();
        java.lang.String str34 = seconds29.toString();
        org.joda.time.Seconds seconds36 = seconds29.minus((int) (short) 10);
        org.joda.time.Seconds seconds37 = seconds12.minus(seconds29);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType40 = seconds39.getPeriodType();
        org.joda.time.Duration duration41 = seconds39.toStandardDuration();
        org.joda.time.Seconds seconds43 = seconds39.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds45 = seconds39.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds47 = seconds39.minus(seconds46);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.secondsIn(readableInterval48);
        org.joda.time.Seconds seconds50 = seconds49.negated();
        org.joda.time.MutablePeriod mutablePeriod51 = seconds50.toMutablePeriod();
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType53 = null;
        int int54 = seconds52.get(durationFieldType53);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds56 = seconds52.minus(seconds55);
        org.joda.time.DurationFieldType durationFieldType57 = seconds52.getFieldType();
        int int58 = seconds50.get(durationFieldType57);
        boolean boolean59 = seconds47.isSupported(durationFieldType57);
        boolean boolean60 = seconds12.isSupported(durationFieldType57);
        boolean boolean61 = seconds3.isSupported(durationFieldType57);
        org.joda.time.Period period62 = seconds3.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT0S" + "'", str34, "PT0S");
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(period62);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds5 = seconds1.minus((int) (byte) -1);
        int int6 = seconds1.size();
        org.joda.time.Seconds seconds8 = seconds1.dividedBy((int) (short) 10);
        org.joda.time.Period period9 = seconds1.toPeriod();
        org.joda.time.Seconds seconds11 = seconds1.dividedBy((-2147483647));
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(seconds11);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds2 = seconds0.minus((int) (byte) 0);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.Seconds seconds7 = seconds5.plus((int) (byte) 100);
        org.joda.time.Seconds seconds8 = seconds2.plus(seconds7);
        int int9 = seconds2.getSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.multipliedBy(0);
        org.joda.time.Seconds seconds8 = seconds3.negated();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds3);
        int int10 = seconds3.getSeconds();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.Seconds seconds22 = seconds20.dividedBy((int) '4');
        int int23 = seconds20.size();
        int int24 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds20);
        org.joda.time.Seconds seconds26 = seconds20.plus(0);
        org.joda.time.Seconds seconds28 = seconds20.multipliedBy(0);
        org.joda.time.Seconds seconds29 = seconds3.minus(seconds20);
        int int30 = seconds20.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        java.lang.String str18 = seconds17.toString();
        org.joda.time.Period period19 = seconds17.toPeriod();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        org.joda.time.Seconds seconds24 = seconds21.dividedBy((-1));
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        int int27 = seconds17.get(durationFieldType26);
        boolean boolean28 = seconds0.isLessThan(seconds17);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        boolean boolean36 = seconds0.isGreaterThan(seconds35);
        java.lang.String str37 = seconds0.toString();
        org.joda.time.Seconds seconds39 = seconds0.dividedBy((int) (short) 10);
        org.joda.time.Seconds seconds41 = seconds39.plus((-11));
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2147483644S" + "'", str18, "PT2147483644S");
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483644 + "'", int27 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT2S" + "'", str37, "PT2S");
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.Seconds seconds21 = seconds19.dividedBy((int) '4');
        int int22 = seconds19.size();
        int int23 = seconds14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds19);
        org.joda.time.Seconds seconds25 = seconds19.plus(0);
        java.lang.String str26 = seconds25.toString();
        org.joda.time.Period period27 = seconds25.toPeriod();
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.secondsIn(readableInterval28);
        org.joda.time.Seconds seconds30 = seconds29.negated();
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds29.get(durationFieldType31);
        boolean boolean33 = seconds25.isLessThan(seconds29);
        org.joda.time.Seconds seconds34 = seconds9.minus(seconds25);
        org.joda.time.DurationFieldType durationFieldType35 = seconds25.getFieldType();
        org.joda.time.Seconds seconds36 = seconds25.negated();
        org.joda.time.Seconds seconds38 = seconds25.plus((int) (short) 0);
        java.lang.String str39 = seconds38.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483644S" + "'", str26, "PT2147483644S");
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT2147483644S" + "'", str39, "PT2147483644S");
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.DurationFieldType durationFieldType14 = seconds4.getFieldType();
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.MutablePeriod mutablePeriod20 = seconds18.toMutablePeriod();
        boolean boolean21 = seconds4.isGreaterThan(seconds18);
        org.joda.time.MutablePeriod mutablePeriod22 = seconds4.toMutablePeriod();
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds26 = seconds24.minus((int) (byte) 0);
        boolean boolean27 = seconds23.isLessThan(seconds26);
        org.joda.time.Seconds seconds29 = seconds26.dividedBy(2147483647);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.seconds(0);
        org.joda.time.Seconds seconds33 = seconds31.minus((int) (byte) 100);
        boolean boolean34 = seconds29.isLessThan(seconds31);
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.secondsIn(readableInterval35);
        org.joda.time.Period period37 = seconds36.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod38 = seconds36.toMutablePeriod();
        org.joda.time.Period period39 = seconds36.toPeriod();
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType41 = seconds40.getPeriodType();
        boolean boolean42 = seconds36.isLessThan(seconds40);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds46 = seconds44.minus((int) (byte) 0);
        boolean boolean47 = seconds43.isLessThan(seconds46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds51 = seconds49.minus((int) (byte) 0);
        boolean boolean52 = seconds48.isLessThan(seconds51);
        org.joda.time.Period period53 = seconds48.toPeriod();
        int int54 = seconds46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds48);
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType57 = seconds56.getFieldType();
        boolean boolean58 = seconds46.isSupported(durationFieldType57);
        org.joda.time.Seconds seconds59 = seconds36.plus(seconds46);
        org.joda.time.Seconds seconds61 = seconds59.dividedBy((int) (byte) 100);
        org.joda.time.Seconds seconds62 = seconds29.minus(seconds61);
        org.joda.time.Seconds seconds63 = seconds4.plus(seconds29);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = seconds64.get(durationFieldType65);
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds68 = seconds64.minus(seconds67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds73 = seconds69.minus(seconds72);
        org.joda.time.Seconds seconds75 = seconds73.dividedBy((int) '4');
        int int76 = seconds73.size();
        int int77 = seconds68.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds73);
        org.joda.time.DurationFieldType durationFieldType78 = seconds68.getFieldType();
        org.joda.time.Seconds seconds79 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType80 = null;
        int int81 = seconds79.get(durationFieldType80);
        org.joda.time.Seconds seconds82 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds83 = seconds79.minus(seconds82);
        org.joda.time.MutablePeriod mutablePeriod84 = seconds82.toMutablePeriod();
        boolean boolean85 = seconds68.isGreaterThan(seconds82);
        org.joda.time.MutablePeriod mutablePeriod86 = seconds68.toMutablePeriod();
        boolean boolean87 = seconds29.equals((java.lang.Object) seconds68);
        org.joda.time.Period period88 = seconds68.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(mutablePeriod84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(mutablePeriod86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(period88);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        java.lang.String str6 = seconds5.toString();
        org.joda.time.PeriodType periodType7 = seconds5.getPeriodType();
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) ' ');
        int int13 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Period period9 = seconds4.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = seconds4.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.DurationFieldType durationFieldType8 = seconds7.getFieldType();
        org.joda.time.Seconds seconds10 = seconds7.dividedBy((-1));
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds7);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = seconds11.isSupported(durationFieldType12);
        org.joda.time.Seconds seconds15 = seconds11.plus((int) (byte) 1);
        org.joda.time.Seconds seconds16 = seconds1.minus(seconds11);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        org.joda.time.Seconds seconds21 = seconds18.minus((int) (short) 1);
        int int22 = seconds11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds21);
        org.joda.time.Seconds seconds25 = seconds21.plus(101);
        org.joda.time.Seconds seconds27 = seconds25.multipliedBy((-100));
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.plus((int) (short) 0);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds9.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = seconds22.dividedBy((int) '4');
        int int25 = seconds22.size();
        int int26 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds22);
        org.joda.time.Seconds seconds28 = seconds22.plus(0);
        org.joda.time.MutablePeriod mutablePeriod29 = seconds22.toMutablePeriod();
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds30.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds34 = seconds30.minus(seconds33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = seconds35.get(durationFieldType36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds39 = seconds35.minus(seconds38);
        org.joda.time.Seconds seconds41 = seconds39.dividedBy((int) '4');
        int int42 = seconds39.size();
        int int43 = seconds34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds39);
        org.joda.time.DurationFieldType durationFieldType44 = seconds34.getFieldType();
        int int45 = seconds22.get(durationFieldType44);
        boolean boolean46 = seconds9.isSupported(durationFieldType44);
        org.joda.time.Seconds seconds47 = seconds5.plus(seconds9);
        org.joda.time.Seconds seconds49 = seconds9.minus(10);
        int int50 = seconds49.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2147483644 + "'", int45 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-7) + "'", int50 == (-7));
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Duration duration7 = seconds5.toStandardDuration();
        org.joda.time.Seconds seconds8 = seconds5.negated();
        org.joda.time.DurationFieldType durationFieldType9 = seconds5.getFieldType();
        int int10 = seconds5.size();
        org.joda.time.Duration duration11 = seconds5.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(duration11);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        java.lang.String str6 = seconds5.toString();
        int int7 = seconds5.size();
        org.joda.time.DurationFieldType durationFieldType8 = seconds5.getFieldType();
        org.joda.time.PeriodType periodType9 = seconds5.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType10 = seconds5.getFieldType();
        java.lang.String str11 = seconds5.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT0S" + "'", str11, "PT0S");
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.PeriodType periodType19 = seconds17.getPeriodType();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        int int22 = seconds21.size();
        org.joda.time.Seconds seconds24 = seconds21.dividedBy(100);
        org.joda.time.PeriodType periodType25 = seconds24.getPeriodType();
        org.joda.time.Seconds seconds27 = seconds24.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds29 = seconds27.minus((-1));
        org.joda.time.DurationFieldType durationFieldType30 = seconds29.getFieldType();
        int int31 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds29);
        int int32 = seconds29.getSeconds();
        org.joda.time.DurationFieldType durationFieldType33 = null;
        boolean boolean34 = seconds29.isSupported(durationFieldType33);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = seconds29.getValue(41297762);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 41297762");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.MutablePeriod mutablePeriod8 = seconds6.toMutablePeriod();
        org.joda.time.Duration duration9 = seconds6.toStandardDuration();
        boolean boolean10 = seconds0.equals((java.lang.Object) seconds6);
        org.joda.time.PeriodType periodType11 = seconds0.getPeriodType();
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        org.joda.time.Seconds seconds16 = seconds13.dividedBy((-1));
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds13);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds29 = seconds27.dividedBy((int) '4');
        int int30 = seconds27.size();
        int int31 = seconds22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds27);
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.secondsIn(readableInterval32);
        int int34 = seconds33.size();
        org.joda.time.Seconds seconds36 = seconds33.dividedBy(100);
        org.joda.time.PeriodType periodType37 = seconds36.getPeriodType();
        org.joda.time.Seconds seconds39 = seconds36.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds41 = seconds39.minus((-1));
        int int42 = seconds39.size();
        int int43 = seconds27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds39);
        org.joda.time.Seconds seconds45 = seconds27.dividedBy((int) (short) 100);
        boolean boolean46 = seconds13.equals((java.lang.Object) seconds27);
        org.joda.time.Seconds seconds47 = seconds0.minus(seconds27);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(seconds47);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds8 = seconds6.dividedBy((int) '4');
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        org.joda.time.MutablePeriod mutablePeriod10 = seconds9.toMutablePeriod();
        java.lang.Class<?> wildcardClass11 = seconds9.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        org.joda.time.Duration duration10 = seconds7.toStandardDuration();
        int int11 = seconds7.getSeconds();
        boolean boolean12 = seconds1.isLessThan(seconds7);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = seconds22.dividedBy((int) '4');
        int int25 = seconds22.size();
        int int26 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds22);
        org.joda.time.Seconds seconds28 = seconds22.plus(0);
        java.lang.String str29 = seconds28.toString();
        org.joda.time.Period period30 = seconds28.toPeriod();
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn(readableInterval31);
        org.joda.time.Seconds seconds33 = seconds32.negated();
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds32.get(durationFieldType34);
        boolean boolean36 = seconds28.isLessThan(seconds32);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds32);
        org.joda.time.Seconds seconds38 = seconds1.plus(seconds32);
        org.joda.time.DurationFieldType durationFieldType39 = seconds1.getFieldType();
        org.joda.time.Seconds seconds41 = seconds1.minus((int) (byte) 0);
        org.joda.time.Duration duration42 = seconds1.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.secondsIn(readableInterval43);
        org.joda.time.Seconds seconds45 = seconds44.negated();
        org.joda.time.MutablePeriod mutablePeriod46 = seconds45.toMutablePeriod();
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = seconds47.get(durationFieldType48);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds51 = seconds47.minus(seconds50);
        org.joda.time.DurationFieldType durationFieldType52 = seconds47.getFieldType();
        int int53 = seconds45.get(durationFieldType52);
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.secondsIn(readableInterval54);
        org.joda.time.Seconds seconds56 = seconds55.negated();
        org.joda.time.ReadableInterval readableInterval57 = null;
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.secondsIn(readableInterval57);
        int int59 = seconds58.size();
        boolean boolean60 = seconds56.isLessThan(seconds58);
        org.joda.time.ReadableInterval readableInterval61 = null;
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.secondsIn(readableInterval61);
        int int63 = seconds62.size();
        org.joda.time.Seconds seconds65 = seconds62.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval66 = null;
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.secondsIn(readableInterval66);
        org.joda.time.DurationFieldType durationFieldType68 = seconds67.getFieldType();
        boolean boolean69 = seconds65.isSupported(durationFieldType68);
        boolean boolean70 = seconds58.isSupported(durationFieldType68);
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds58);
        org.joda.time.PeriodType periodType72 = seconds71.getPeriodType();
        org.joda.time.Seconds seconds74 = seconds71.plus(0);
        boolean boolean75 = seconds45.equals((java.lang.Object) seconds71);
        int int76 = seconds71.size();
        boolean boolean77 = seconds1.isGreaterThan(seconds71);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2147483644S" + "'", str29, "PT2147483644S");
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds2.toMutablePeriod();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = seconds4.get(durationFieldType5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds8 = seconds4.minus(seconds7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds4.getFieldType();
        int int10 = seconds2.get(durationFieldType9);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.secondsIn(readableInterval11);
        org.joda.time.Seconds seconds13 = seconds12.negated();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        int int16 = seconds15.size();
        boolean boolean17 = seconds13.isLessThan(seconds15);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        int int20 = seconds19.size();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.secondsIn(readableInterval23);
        org.joda.time.DurationFieldType durationFieldType25 = seconds24.getFieldType();
        boolean boolean26 = seconds22.isSupported(durationFieldType25);
        boolean boolean27 = seconds15.isSupported(durationFieldType25);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds15);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Seconds seconds31 = seconds28.plus(0);
        boolean boolean32 = seconds2.equals((java.lang.Object) seconds28);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds36.multipliedBy((int) (short) 0);
        int int40 = seconds36.getSeconds();
        org.joda.time.PeriodType periodType41 = seconds36.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType42 = seconds36.getFieldType();
        boolean boolean43 = seconds2.isSupported(durationFieldType42);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3 + "'", int40 == 3);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        boolean boolean17 = seconds9.isLessThan(seconds14);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds29 = seconds27.dividedBy((int) '4');
        int int30 = seconds27.size();
        int int31 = seconds22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds27);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        boolean boolean35 = seconds27.isLessThan(seconds32);
        boolean boolean36 = seconds14.isLessThan(seconds27);
        int int37 = seconds27.size();
        org.joda.time.Seconds seconds39 = seconds27.dividedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType40 = seconds27.getFieldType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(durationFieldType40);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Seconds seconds4 = seconds1.minus((int) (byte) 0);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.Seconds seconds7 = seconds4.plus(0);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        org.joda.time.Seconds seconds23 = seconds17.plus(0);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.secondsIn(readableInterval24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        org.joda.time.Seconds seconds28 = seconds25.dividedBy((-1));
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds25);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        boolean boolean31 = seconds29.isSupported(durationFieldType30);
        org.joda.time.Seconds seconds33 = seconds29.plus((int) (byte) 1);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = seconds34.get(durationFieldType35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds38 = seconds34.minus(seconds37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = seconds39.get(durationFieldType40);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds43 = seconds39.minus(seconds42);
        org.joda.time.Seconds seconds45 = seconds43.dividedBy((int) '4');
        int int46 = seconds43.size();
        int int47 = seconds38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds43);
        org.joda.time.Seconds seconds49 = seconds43.plus(0);
        java.lang.String str50 = seconds49.toString();
        org.joda.time.Period period51 = seconds49.toPeriod();
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.secondsIn(readableInterval52);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = seconds53.get(durationFieldType55);
        boolean boolean57 = seconds49.isLessThan(seconds53);
        org.joda.time.Seconds seconds58 = seconds33.minus(seconds49);
        org.joda.time.Seconds seconds60 = seconds58.dividedBy((int) 'a');
        org.joda.time.Seconds seconds61 = seconds17.plus(seconds58);
        org.joda.time.DurationFieldType durationFieldType62 = seconds17.getFieldType();
        org.joda.time.ReadableInterval readableInterval63 = null;
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.secondsIn(readableInterval63);
        org.joda.time.DurationFieldType durationFieldType65 = seconds64.getFieldType();
        org.joda.time.Seconds seconds67 = seconds64.dividedBy((-1));
        org.joda.time.ReadableInterval readableInterval68 = null;
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.secondsIn(readableInterval68);
        int int70 = seconds69.size();
        org.joda.time.Seconds seconds72 = seconds69.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval73 = null;
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.secondsIn(readableInterval73);
        org.joda.time.DurationFieldType durationFieldType75 = seconds74.getFieldType();
        boolean boolean76 = seconds72.isSupported(durationFieldType75);
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType78 = null;
        int int79 = seconds77.get(durationFieldType78);
        org.joda.time.Seconds seconds80 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds81 = seconds77.minus(seconds80);
        org.joda.time.Seconds seconds82 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType83 = null;
        int int84 = seconds82.get(durationFieldType83);
        org.joda.time.Seconds seconds85 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds86 = seconds82.minus(seconds85);
        org.joda.time.Seconds seconds88 = seconds86.dividedBy((int) '4');
        int int89 = seconds86.size();
        int int90 = seconds81.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds86);
        org.joda.time.Seconds seconds92 = seconds86.plus(0);
        org.joda.time.Seconds seconds93 = seconds72.minus(seconds86);
        org.joda.time.DurationFieldType durationFieldType94 = seconds72.getFieldType();
        boolean boolean95 = seconds64.isSupported(durationFieldType94);
        boolean boolean96 = seconds17.isGreaterThan(seconds64);
        org.joda.time.Seconds seconds98 = seconds64.plus(100);
        boolean boolean99 = seconds7.equals((java.lang.Object) seconds64);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT2147483644S" + "'", str50, "PT2147483644S");
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(seconds92);
        org.junit.Assert.assertNotNull(seconds93);
        org.junit.Assert.assertNotNull(durationFieldType94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(seconds98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds0.getFieldType();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((int) ' ');
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.Seconds seconds9 = seconds0.negated();
        org.joda.time.PeriodType periodType10 = seconds0.getPeriodType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.Seconds seconds9 = seconds8.negated();
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        int int12 = seconds11.size();
        boolean boolean13 = seconds9.isLessThan(seconds11);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        int int16 = seconds15.size();
        org.joda.time.Seconds seconds18 = seconds15.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.secondsIn(readableInterval19);
        org.joda.time.DurationFieldType durationFieldType21 = seconds20.getFieldType();
        boolean boolean22 = seconds18.isSupported(durationFieldType21);
        boolean boolean23 = seconds11.isSupported(durationFieldType21);
        boolean boolean24 = seconds5.isSupported(durationFieldType21);
        org.joda.time.Seconds seconds26 = seconds5.dividedBy(41297762);
        org.joda.time.Seconds seconds28 = seconds26.plus(101);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.Seconds seconds4 = seconds2.plus((int) (byte) 100);
        org.joda.time.Seconds seconds6 = seconds2.dividedBy((int) (short) 100);
        org.joda.time.Seconds seconds8 = seconds6.minus(2147483644);
        org.joda.time.Seconds seconds9 = null;
        org.joda.time.Seconds seconds10 = seconds8.minus(seconds9);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.MutablePeriod mutablePeriod40 = seconds33.toMutablePeriod();
        int int41 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds43 = seconds15.minus(2147483644);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds48 = seconds44.minus(seconds47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds49.get(durationFieldType50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds53 = seconds49.minus(seconds52);
        org.joda.time.Seconds seconds55 = seconds53.dividedBy((int) '4');
        int int56 = seconds53.size();
        int int57 = seconds48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds53);
        org.joda.time.Seconds seconds59 = seconds53.plus(0);
        org.joda.time.MutablePeriod mutablePeriod60 = seconds53.toMutablePeriod();
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType63 = seconds62.getPeriodType();
        org.joda.time.Duration duration64 = seconds62.toStandardDuration();
        org.joda.time.Seconds seconds66 = seconds62.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds67 = seconds66.negated();
        org.joda.time.Duration duration68 = seconds66.toStandardDuration();
        org.joda.time.Seconds seconds69 = seconds66.negated();
        org.joda.time.DurationFieldType durationFieldType70 = seconds66.getFieldType();
        boolean boolean71 = seconds53.isSupported(durationFieldType70);
        int int72 = seconds43.get(durationFieldType70);
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType75 = seconds74.getPeriodType();
        org.joda.time.Duration duration76 = seconds74.toStandardDuration();
        org.joda.time.Seconds seconds78 = seconds74.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval79 = null;
        org.joda.time.Seconds seconds80 = org.joda.time.Seconds.secondsIn(readableInterval79);
        org.joda.time.Seconds seconds81 = seconds80.negated();
        org.joda.time.MutablePeriod mutablePeriod82 = seconds80.toMutablePeriod();
        org.joda.time.Duration duration83 = seconds80.toStandardDuration();
        int int84 = seconds80.getSeconds();
        boolean boolean85 = seconds74.isLessThan(seconds80);
        boolean boolean86 = seconds43.isGreaterThan(seconds74);
        int int87 = seconds43.size();
        org.joda.time.PeriodType periodType88 = seconds43.getPeriodType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(mutablePeriod82);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(periodType88);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) '#');
        org.joda.time.Period period7 = seconds6.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        int int10 = seconds9.size();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy(100);
        org.joda.time.PeriodType periodType13 = seconds12.getPeriodType();
        org.joda.time.Seconds seconds15 = seconds12.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds17 = seconds15.minus((-1));
        org.joda.time.DurationFieldType durationFieldType19 = seconds15.getFieldType((int) (byte) 0);
        boolean boolean20 = seconds5.isSupported(durationFieldType19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        int int26 = seconds22.getSeconds();
        java.lang.String str27 = seconds22.toString();
        org.joda.time.Seconds seconds29 = seconds22.minus((int) (short) 10);
        org.joda.time.Seconds seconds30 = seconds5.minus(seconds22);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Seconds seconds33 = seconds30.dividedBy((int) (short) 1);
        org.joda.time.PeriodType periodType34 = seconds33.getPeriodType();
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.secondsIn(readableInterval35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds43 = seconds41.dividedBy((int) '4');
        org.joda.time.Seconds seconds44 = seconds36.minus(seconds43);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int47 = seconds46.getSeconds();
        org.joda.time.DurationFieldType durationFieldType48 = seconds46.getFieldType();
        boolean boolean49 = seconds36.isSupported(durationFieldType48);
        boolean boolean50 = seconds33.isSupported(durationFieldType48);
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.secondsIn(readableInterval51);
        org.joda.time.DurationFieldType durationFieldType53 = seconds52.getFieldType();
        org.joda.time.Seconds seconds55 = seconds52.dividedBy((-1));
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds52);
        int int57 = seconds52.size();
        org.joda.time.ReadableInterval readableInterval58 = null;
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.secondsIn(readableInterval58);
        org.joda.time.DurationFieldType durationFieldType60 = seconds59.getFieldType();
        org.joda.time.Seconds seconds62 = seconds59.dividedBy((-1));
        int int63 = seconds59.getSeconds();
        org.joda.time.Seconds seconds64 = seconds52.minus(seconds59);
        org.joda.time.Seconds seconds66 = seconds64.multipliedBy(2147483647);
        int int67 = seconds66.size();
        boolean boolean68 = seconds33.isGreaterThan(seconds66);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT0S" + "'", str27, "PT0S");
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds19.get(durationFieldType21);
        boolean boolean23 = seconds15.isLessThan(seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.Seconds seconds27 = seconds19.multipliedBy(100);
        org.joda.time.MutablePeriod mutablePeriod28 = seconds19.toMutablePeriod();
        org.joda.time.Seconds seconds30 = seconds19.plus(52);
        org.joda.time.DurationFieldType durationFieldType31 = seconds19.getFieldType();
        org.joda.time.Seconds seconds33 = seconds19.dividedBy((int) (short) 1);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        boolean boolean9 = seconds1.isLessThan(seconds8);
        org.joda.time.PeriodType periodType10 = seconds8.getPeriodType();
        org.joda.time.Seconds seconds12 = seconds8.dividedBy((int) (byte) 1);
        org.joda.time.Period period13 = seconds12.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds12);
        org.joda.time.PeriodType periodType14 = seconds1.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType15 = seconds1.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = seconds1.getValue((-11));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -11");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(durationFieldType15);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds55 = seconds50.multipliedBy((int) (byte) 0);
        org.joda.time.Duration duration56 = seconds55.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval57 = null;
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.secondsIn(readableInterval57);
        int int59 = seconds58.size();
        org.joda.time.Seconds seconds61 = seconds58.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval62 = null;
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.secondsIn(readableInterval62);
        org.joda.time.DurationFieldType durationFieldType64 = seconds63.getFieldType();
        boolean boolean65 = seconds61.isSupported(durationFieldType64);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = seconds66.get(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds70 = seconds66.minus(seconds69);
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = seconds71.get(durationFieldType72);
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds75 = seconds71.minus(seconds74);
        org.joda.time.Seconds seconds77 = seconds75.dividedBy((int) '4');
        int int78 = seconds75.size();
        int int79 = seconds70.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds75);
        org.joda.time.Seconds seconds81 = seconds75.plus(0);
        org.joda.time.Seconds seconds82 = seconds61.minus(seconds75);
        java.lang.String str83 = seconds75.toString();
        org.joda.time.MutablePeriod mutablePeriod84 = seconds75.toMutablePeriod();
        boolean boolean85 = seconds55.isGreaterThan(seconds75);
        java.lang.String str86 = seconds75.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "PT2147483644S" + "'", str83, "PT2147483644S");
        org.junit.Assert.assertNotNull(mutablePeriod84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "PT2147483644S" + "'", str86, "PT2147483644S");
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.Seconds seconds4 = seconds1.minus((int) '#');
        org.joda.time.Seconds seconds6 = seconds1.minus((-7));
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        java.lang.String str6 = seconds5.toString();
        org.joda.time.DurationFieldType durationFieldType7 = seconds5.getFieldType();
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        org.joda.time.Seconds seconds10 = seconds9.negated();
        org.joda.time.Seconds seconds12 = seconds9.minus((int) '#');
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType15 = seconds14.getPeriodType();
        org.joda.time.Duration duration16 = seconds14.toStandardDuration();
        org.joda.time.Seconds seconds17 = seconds9.plus(seconds14);
        org.joda.time.Seconds seconds18 = seconds14.negated();
        org.joda.time.Seconds seconds20 = seconds14.plus((-1));
        org.joda.time.Seconds seconds22 = seconds20.multipliedBy(2147483644);
        org.joda.time.Seconds seconds23 = seconds5.minus(seconds22);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.secondsIn(readableInterval24);
        org.joda.time.Seconds seconds26 = seconds25.negated();
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        int int29 = seconds28.size();
        boolean boolean30 = seconds26.isLessThan(seconds28);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn(readableInterval31);
        int int33 = seconds32.size();
        org.joda.time.Seconds seconds35 = seconds32.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.secondsIn(readableInterval36);
        org.joda.time.DurationFieldType durationFieldType38 = seconds37.getFieldType();
        boolean boolean39 = seconds35.isSupported(durationFieldType38);
        boolean boolean40 = seconds28.isSupported(durationFieldType38);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds28);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType44 = seconds43.getPeriodType();
        org.joda.time.Duration duration45 = seconds43.toStandardDuration();
        org.joda.time.Seconds seconds47 = seconds43.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.secondsIn(readableInterval48);
        org.joda.time.Seconds seconds50 = seconds49.negated();
        org.joda.time.MutablePeriod mutablePeriod51 = seconds49.toMutablePeriod();
        org.joda.time.Duration duration52 = seconds49.toStandardDuration();
        int int53 = seconds49.getSeconds();
        boolean boolean54 = seconds43.isLessThan(seconds49);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds70 = seconds64.plus(0);
        java.lang.String str71 = seconds70.toString();
        org.joda.time.Period period72 = seconds70.toPeriod();
        org.joda.time.ReadableInterval readableInterval73 = null;
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.secondsIn(readableInterval73);
        org.joda.time.Seconds seconds75 = seconds74.negated();
        org.joda.time.DurationFieldType durationFieldType76 = null;
        int int77 = seconds74.get(durationFieldType76);
        boolean boolean78 = seconds70.isLessThan(seconds74);
        org.joda.time.Seconds seconds79 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds74);
        org.joda.time.Seconds seconds80 = seconds43.plus(seconds74);
        org.joda.time.MutablePeriod mutablePeriod81 = seconds43.toMutablePeriod();
        org.joda.time.Seconds seconds82 = seconds28.minus(seconds43);
        org.joda.time.Seconds seconds84 = seconds28.dividedBy((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType86 = seconds28.getFieldType(0);
        int int87 = seconds23.get(durationFieldType86);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "PT2147483644S" + "'", str71, "PT2147483644S");
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(mutablePeriod81);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds8 = seconds6.plus((int) (byte) 10);
        org.joda.time.Seconds seconds9 = seconds6.negated();
        org.joda.time.DurationFieldType durationFieldType11 = seconds9.getFieldType((int) (byte) 0);
        java.lang.String str12 = seconds9.toString();
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = seconds22.dividedBy((int) '4');
        int int25 = seconds22.size();
        int int26 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds22);
        org.joda.time.Seconds seconds28 = seconds22.plus(0);
        java.lang.String str29 = seconds28.toString();
        org.joda.time.Period period30 = seconds28.toPeriod();
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn(readableInterval31);
        org.joda.time.Seconds seconds33 = seconds32.negated();
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds32.get(durationFieldType34);
        boolean boolean36 = seconds28.isLessThan(seconds32);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds32);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds32);
        org.joda.time.Seconds seconds40 = seconds32.multipliedBy(100);
        boolean boolean41 = seconds9.isGreaterThan(seconds32);
        org.joda.time.Seconds seconds43 = seconds9.minus((-2147483647));
        org.joda.time.PeriodType periodType44 = seconds9.getPeriodType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT0S" + "'", str12, "PT0S");
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2147483644S" + "'", str29, "PT2147483644S");
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(periodType44);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.DurationFieldType durationFieldType14 = seconds4.getFieldType();
        int int15 = seconds4.size();
        java.lang.String str16 = seconds4.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds0.getFieldType();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((int) ' ');
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.Seconds seconds9 = seconds0.negated();
        org.joda.time.MutablePeriod mutablePeriod10 = seconds0.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds8 = seconds6.plus((int) (byte) 10);
        org.joda.time.Seconds seconds9 = seconds6.negated();
        org.joda.time.DurationFieldType durationFieldType11 = seconds9.getFieldType((int) (byte) 0);
        java.lang.String str12 = seconds9.toString();
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = seconds19.get(durationFieldType20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds23 = seconds19.minus(seconds22);
        org.joda.time.Seconds seconds25 = seconds23.dividedBy((int) '4');
        int int26 = seconds23.size();
        int int27 = seconds18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds23);
        boolean boolean28 = seconds13.isLessThan(seconds23);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.ReadableInterval readableInterval34 = null;
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.secondsIn(readableInterval34);
        org.joda.time.Seconds seconds36 = seconds35.negated();
        org.joda.time.MutablePeriod mutablePeriod37 = seconds35.toMutablePeriod();
        org.joda.time.Duration duration38 = seconds35.toStandardDuration();
        boolean boolean39 = seconds29.equals((java.lang.Object) seconds35);
        org.joda.time.MutablePeriod mutablePeriod40 = seconds29.toMutablePeriod();
        org.joda.time.Seconds seconds41 = seconds13.plus(seconds29);
        org.joda.time.DurationFieldType durationFieldType42 = seconds13.getFieldType();
        boolean boolean43 = seconds9.isSupported(durationFieldType42);
        org.joda.time.PeriodType periodType44 = seconds9.getPeriodType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT0S" + "'", str12, "PT0S");
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(periodType44);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds18 = seconds17.negated();
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.secondsIn(readableInterval19);
        int int21 = seconds20.size();
        org.joda.time.Seconds seconds23 = seconds20.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.secondsIn(readableInterval24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        boolean boolean27 = seconds23.isSupported(durationFieldType26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) '4');
        int int40 = seconds37.size();
        int int41 = seconds32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds37);
        org.joda.time.Seconds seconds43 = seconds37.plus(0);
        org.joda.time.Seconds seconds44 = seconds23.minus(seconds37);
        org.joda.time.Seconds seconds46 = seconds37.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType47 = seconds46.getPeriodType();
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.secondsIn(readableInterval48);
        org.joda.time.DurationFieldType durationFieldType50 = seconds49.getFieldType();
        org.joda.time.Seconds seconds52 = seconds49.dividedBy((-1));
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds52);
        org.joda.time.Seconds seconds54 = seconds52.negated();
        org.joda.time.Seconds seconds55 = seconds46.plus(seconds52);
        org.joda.time.Seconds seconds56 = seconds17.plus(seconds55);
        org.joda.time.DurationFieldType durationFieldType57 = seconds56.getFieldType();
        org.joda.time.ReadableInterval readableInterval58 = null;
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.secondsIn(readableInterval58);
        org.joda.time.DurationFieldType durationFieldType60 = seconds59.getFieldType();
        org.joda.time.Seconds seconds62 = seconds59.dividedBy((-1));
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds59);
        org.joda.time.DurationFieldType durationFieldType64 = null;
        boolean boolean65 = seconds63.isSupported(durationFieldType64);
        org.joda.time.Seconds seconds67 = seconds63.plus((int) (byte) 1);
        org.joda.time.Seconds seconds68 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType69 = null;
        int int70 = seconds68.get(durationFieldType69);
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds72 = seconds68.minus(seconds71);
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType74 = null;
        int int75 = seconds73.get(durationFieldType74);
        org.joda.time.Seconds seconds76 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds77 = seconds73.minus(seconds76);
        org.joda.time.Seconds seconds79 = seconds77.dividedBy((int) '4');
        int int80 = seconds77.size();
        int int81 = seconds72.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds77);
        org.joda.time.Seconds seconds83 = seconds77.plus(0);
        java.lang.String str84 = seconds83.toString();
        org.joda.time.Period period85 = seconds83.toPeriod();
        org.joda.time.ReadableInterval readableInterval86 = null;
        org.joda.time.Seconds seconds87 = org.joda.time.Seconds.secondsIn(readableInterval86);
        org.joda.time.Seconds seconds88 = seconds87.negated();
        org.joda.time.DurationFieldType durationFieldType89 = null;
        int int90 = seconds87.get(durationFieldType89);
        boolean boolean91 = seconds83.isLessThan(seconds87);
        org.joda.time.Seconds seconds92 = seconds67.minus(seconds83);
        org.joda.time.DurationFieldType durationFieldType93 = seconds83.getFieldType();
        org.joda.time.Seconds seconds94 = seconds83.negated();
        boolean boolean95 = seconds56.equals((java.lang.Object) seconds94);
        org.joda.time.Period period96 = seconds94.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "PT2147483644S" + "'", str84, "PT2147483644S");
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(seconds87);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(seconds92);
        org.junit.Assert.assertNotNull(durationFieldType93);
        org.junit.Assert.assertNotNull(seconds94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(period96);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        int int10 = seconds9.size();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy(100);
        org.joda.time.PeriodType periodType13 = seconds12.getPeriodType();
        org.joda.time.Seconds seconds15 = seconds12.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds17 = seconds15.minus((-1));
        org.joda.time.DurationFieldType durationFieldType19 = seconds15.getFieldType((int) (byte) 0);
        boolean boolean20 = seconds5.isSupported(durationFieldType19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        int int26 = seconds22.getSeconds();
        java.lang.String str27 = seconds22.toString();
        org.joda.time.Seconds seconds29 = seconds22.minus((int) (short) 10);
        org.joda.time.Seconds seconds30 = seconds5.minus(seconds22);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds5);
        org.joda.time.Seconds seconds33 = seconds5.dividedBy((int) 'a');
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT0S" + "'", str27, "PT0S");
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        java.lang.String str6 = seconds1.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT1S" + "'", str6, "PT1S");
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds1.get(durationFieldType3);
        org.joda.time.Duration duration5 = seconds1.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(duration5);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds7 = seconds1.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds16 = seconds13.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds17.get(durationFieldType18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = seconds17.minus(seconds20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = seconds22.get(durationFieldType23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds26 = seconds22.minus(seconds25);
        org.joda.time.Seconds seconds28 = seconds26.dividedBy((int) '4');
        int int29 = seconds26.size();
        int int30 = seconds21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds26);
        org.joda.time.Seconds seconds32 = seconds26.plus(0);
        org.joda.time.MutablePeriod mutablePeriod33 = seconds26.toMutablePeriod();
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = seconds34.get(durationFieldType35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds38 = seconds34.minus(seconds37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = seconds39.get(durationFieldType40);
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds43 = seconds39.minus(seconds42);
        org.joda.time.Seconds seconds45 = seconds43.dividedBy((int) '4');
        int int46 = seconds43.size();
        int int47 = seconds38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds43);
        org.joda.time.DurationFieldType durationFieldType48 = seconds38.getFieldType();
        int int49 = seconds26.get(durationFieldType48);
        boolean boolean50 = seconds13.isSupported(durationFieldType48);
        boolean boolean51 = seconds9.isSupported(durationFieldType48);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds9);
        org.joda.time.Seconds seconds54 = seconds9.dividedBy((int) 'a');
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2147483644 + "'", int49 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        org.joda.time.Seconds seconds23 = seconds17.plus(0);
        java.lang.String str24 = seconds23.toString();
        org.joda.time.Period period25 = seconds23.toPeriod();
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn(readableInterval26);
        org.joda.time.Seconds seconds28 = seconds27.negated();
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds27.get(durationFieldType29);
        boolean boolean31 = seconds23.isLessThan(seconds27);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds27);
        org.joda.time.Seconds seconds33 = seconds5.plus(seconds27);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType35 = seconds34.getPeriodType();
        org.joda.time.Seconds seconds37 = seconds34.plus(1);
        int int38 = seconds37.getSeconds();
        org.joda.time.Seconds seconds40 = seconds37.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds42 = seconds37.multipliedBy((int) (short) 1);
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.secondsIn(readableInterval43);
        org.joda.time.Seconds seconds45 = seconds44.negated();
        org.joda.time.MutablePeriod mutablePeriod46 = seconds44.toMutablePeriod();
        org.joda.time.Duration duration47 = seconds44.toStandardDuration();
        int int48 = seconds44.getSeconds();
        java.lang.String str49 = seconds44.toString();
        org.joda.time.Seconds seconds51 = seconds44.minus((int) (short) 10);
        boolean boolean52 = seconds42.isGreaterThan(seconds44);
        boolean boolean53 = seconds33.isLessThan(seconds44);
        org.joda.time.Period period54 = seconds33.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2147483644S" + "'", str24, "PT2147483644S");
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3 + "'", int38 == 3);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "PT0S" + "'", str49, "PT0S");
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(period54);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.MutablePeriod mutablePeriod8 = seconds6.toMutablePeriod();
        org.joda.time.Duration duration9 = seconds6.toStandardDuration();
        boolean boolean10 = seconds0.equals((java.lang.Object) seconds6);
        org.joda.time.Seconds seconds12 = seconds6.plus((int) (byte) 10);
        org.joda.time.Seconds seconds14 = seconds6.multipliedBy((int) (short) 1);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds18 = seconds16.minus((int) (byte) 0);
        boolean boolean19 = seconds15.isLessThan(seconds18);
        org.joda.time.Seconds seconds21 = seconds18.dividedBy(2147483647);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.seconds(0);
        org.joda.time.Seconds seconds25 = seconds23.minus((int) (byte) 100);
        boolean boolean26 = seconds21.isLessThan(seconds23);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.Period period29 = seconds28.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod30 = seconds28.toMutablePeriod();
        org.joda.time.Period period31 = seconds28.toPeriod();
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType33 = seconds32.getPeriodType();
        boolean boolean34 = seconds28.isLessThan(seconds32);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds38 = seconds36.minus((int) (byte) 0);
        boolean boolean39 = seconds35.isLessThan(seconds38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds43 = seconds41.minus((int) (byte) 0);
        boolean boolean44 = seconds40.isLessThan(seconds43);
        org.joda.time.Period period45 = seconds40.toPeriod();
        int int46 = seconds38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds40);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType49 = seconds48.getFieldType();
        boolean boolean50 = seconds38.isSupported(durationFieldType49);
        org.joda.time.Seconds seconds51 = seconds28.plus(seconds38);
        org.joda.time.Seconds seconds53 = seconds51.dividedBy((int) (byte) 100);
        org.joda.time.Seconds seconds54 = seconds21.minus(seconds53);
        org.joda.time.Seconds seconds56 = seconds53.plus(1);
        boolean boolean57 = seconds14.isGreaterThan(seconds53);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.DurationFieldType durationFieldType54 = seconds9.getFieldType();
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.secondsIn(readableInterval55);
        org.joda.time.DurationFieldType durationFieldType57 = seconds56.getFieldType();
        org.joda.time.Seconds seconds59 = seconds56.dividedBy((-1));
        org.joda.time.ReadableInterval readableInterval60 = null;
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.secondsIn(readableInterval60);
        int int62 = seconds61.size();
        org.joda.time.Seconds seconds64 = seconds61.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval65 = null;
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.secondsIn(readableInterval65);
        org.joda.time.DurationFieldType durationFieldType67 = seconds66.getFieldType();
        boolean boolean68 = seconds64.isSupported(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds73 = seconds69.minus(seconds72);
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType75 = null;
        int int76 = seconds74.get(durationFieldType75);
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds78 = seconds74.minus(seconds77);
        org.joda.time.Seconds seconds80 = seconds78.dividedBy((int) '4');
        int int81 = seconds78.size();
        int int82 = seconds73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds78);
        org.joda.time.Seconds seconds84 = seconds78.plus(0);
        org.joda.time.Seconds seconds85 = seconds64.minus(seconds78);
        org.joda.time.DurationFieldType durationFieldType86 = seconds64.getFieldType();
        boolean boolean87 = seconds56.isSupported(durationFieldType86);
        boolean boolean88 = seconds9.isGreaterThan(seconds56);
        org.joda.time.Seconds seconds90 = seconds56.plus(100);
        org.joda.time.Duration duration91 = seconds90.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(seconds90);
        org.junit.Assert.assertNotNull(duration91);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds18 = seconds17.negated();
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.secondsIn(readableInterval19);
        int int21 = seconds20.size();
        org.joda.time.Seconds seconds23 = seconds20.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.secondsIn(readableInterval24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        boolean boolean27 = seconds23.isSupported(durationFieldType26);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) '4');
        int int40 = seconds37.size();
        int int41 = seconds32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds37);
        org.joda.time.Seconds seconds43 = seconds37.plus(0);
        org.joda.time.Seconds seconds44 = seconds23.minus(seconds37);
        org.joda.time.Seconds seconds46 = seconds37.multipliedBy((int) (byte) -1);
        org.joda.time.PeriodType periodType47 = seconds46.getPeriodType();
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.secondsIn(readableInterval48);
        org.joda.time.DurationFieldType durationFieldType50 = seconds49.getFieldType();
        org.joda.time.Seconds seconds52 = seconds49.dividedBy((-1));
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds52);
        org.joda.time.Seconds seconds54 = seconds52.negated();
        org.joda.time.Seconds seconds55 = seconds46.plus(seconds52);
        org.joda.time.Seconds seconds56 = seconds17.plus(seconds55);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds58 = seconds56.minus(35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483644 + -35");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds4.get(durationFieldType6);
        org.joda.time.PeriodType periodType8 = seconds4.getPeriodType();
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.secondsIn(readableInterval9);
        org.joda.time.DurationFieldType durationFieldType11 = seconds10.getFieldType();
        org.joda.time.Seconds seconds13 = seconds10.dividedBy((-1));
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds10);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = seconds14.isSupported(durationFieldType15);
        org.joda.time.Seconds seconds18 = seconds14.plus((int) (byte) 1);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = seconds19.get(durationFieldType20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds23 = seconds19.minus(seconds22);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds30 = seconds28.dividedBy((int) '4');
        int int31 = seconds28.size();
        int int32 = seconds23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds28);
        org.joda.time.Seconds seconds34 = seconds28.plus(0);
        java.lang.String str35 = seconds34.toString();
        org.joda.time.Period period36 = seconds34.toPeriod();
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.secondsIn(readableInterval37);
        org.joda.time.Seconds seconds39 = seconds38.negated();
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = seconds38.get(durationFieldType40);
        boolean boolean42 = seconds34.isLessThan(seconds38);
        org.joda.time.Seconds seconds43 = seconds18.minus(seconds34);
        org.joda.time.DurationFieldType durationFieldType44 = seconds43.getFieldType();
        boolean boolean45 = seconds4.isSupported(durationFieldType44);
        boolean boolean46 = seconds1.isGreaterThan(seconds4);
        org.joda.time.MutablePeriod mutablePeriod47 = seconds4.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "PT2147483644S" + "'", str35, "PT2147483644S");
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(mutablePeriod47);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.MutablePeriod mutablePeriod8 = seconds6.toMutablePeriod();
        org.joda.time.Duration duration9 = seconds6.toStandardDuration();
        boolean boolean10 = seconds0.equals((java.lang.Object) seconds6);
        org.joda.time.Seconds seconds12 = seconds6.plus((int) (byte) 10);
        int int13 = seconds6.size();
        org.joda.time.Seconds seconds15 = seconds6.plus((int) (byte) 10);
        java.lang.String str16 = seconds15.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT10S" + "'", str16, "PT10S");
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.DurationFieldType durationFieldType8 = seconds7.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = seconds7.getValue((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(durationFieldType8);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        java.lang.String str3 = seconds1.toString();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds7 = seconds5.minus((int) (byte) 0);
        boolean boolean8 = seconds4.isLessThan(seconds7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds12 = seconds10.minus((int) (byte) 0);
        boolean boolean13 = seconds9.isLessThan(seconds12);
        org.joda.time.Period period14 = seconds9.toPeriod();
        int int15 = seconds7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds16 = seconds1.minus(seconds9);
        org.joda.time.MutablePeriod mutablePeriod17 = seconds1.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        int int20 = seconds19.size();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy(100);
        org.joda.time.PeriodType periodType23 = seconds22.getPeriodType();
        org.joda.time.Seconds seconds25 = seconds22.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds27 = seconds25.minus((-1));
        org.joda.time.DurationFieldType durationFieldType28 = seconds27.getFieldType();
        int int29 = seconds1.get(durationFieldType28);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0S" + "'", str3, "PT0S");
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        int int16 = seconds10.getSeconds();
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Duration duration22 = seconds20.toStandardDuration();
        org.joda.time.Seconds seconds24 = seconds20.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds25 = seconds24.negated();
        boolean boolean26 = seconds18.isGreaterThan(seconds24);
        org.joda.time.Seconds seconds28 = seconds24.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds30 = seconds28.plus(100);
        org.joda.time.DurationFieldType durationFieldType31 = seconds28.getFieldType();
        boolean boolean32 = seconds10.isSupported(durationFieldType31);
        org.joda.time.Seconds seconds34 = seconds10.dividedBy(2147483644);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType36 = seconds34.getFieldType((-2147483647));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483644 + "'", int16 == 2147483644);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(seconds34);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT-1S");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.Seconds seconds3 = seconds1.plus(seconds2);
        boolean boolean5 = seconds2.equals((java.lang.Object) 0L);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.secondsIn(readableInterval9);
        int int11 = seconds10.size();
        boolean boolean12 = seconds8.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.secondsIn(readableInterval13);
        int int15 = seconds14.size();
        org.joda.time.Seconds seconds17 = seconds14.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        boolean boolean21 = seconds17.isSupported(durationFieldType20);
        boolean boolean22 = seconds10.isSupported(durationFieldType20);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds10);
        org.joda.time.PeriodType periodType24 = seconds23.getPeriodType();
        org.joda.time.Seconds seconds25 = seconds2.minus(seconds23);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(seconds25);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds5 = seconds1.minus((int) (byte) -1);
        int int6 = seconds1.size();
        org.joda.time.Seconds seconds8 = seconds1.dividedBy((int) (short) 10);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int11 = seconds10.getSeconds();
        org.joda.time.Duration duration12 = seconds10.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.secondsIn(readableInterval13);
        org.joda.time.Seconds seconds15 = seconds14.negated();
        int int16 = seconds10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds15);
        org.joda.time.Duration duration17 = seconds10.toStandardDuration();
        boolean boolean18 = seconds8.isGreaterThan(seconds10);
        org.joda.time.ReadableInterval readableInterval19 = null;
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.secondsIn(readableInterval19);
        org.joda.time.Seconds seconds21 = seconds20.negated();
        org.joda.time.MutablePeriod mutablePeriod22 = seconds20.toMutablePeriod();
        org.joda.time.Duration duration23 = seconds20.toStandardDuration();
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        boolean boolean40 = seconds20.isLessThan(seconds33);
        org.joda.time.PeriodType periodType41 = seconds33.getPeriodType();
        org.joda.time.Seconds seconds42 = seconds8.minus(seconds33);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(seconds42);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int2 = seconds1.getSeconds();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        int int4 = seconds1.size();
        org.joda.time.MutablePeriod mutablePeriod5 = seconds1.toMutablePeriod();
        java.lang.Class<?> wildcardClass6 = mutablePeriod5.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds5 = seconds1.minus((int) (byte) -1);
        org.joda.time.Seconds seconds7 = seconds5.minus(3);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.secondsIn(readableInterval11);
        org.joda.time.Seconds seconds13 = seconds12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = seconds12.toMutablePeriod();
        int int15 = seconds9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds12);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.Duration duration19 = seconds17.toStandardDuration();
        org.joda.time.Seconds seconds21 = seconds17.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds23 = seconds17.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds25 = seconds17.minus(seconds24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        boolean boolean27 = seconds9.isSupported(durationFieldType26);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType30 = seconds29.getPeriodType();
        org.joda.time.Period period31 = seconds29.toPeriod();
        org.joda.time.Duration duration32 = seconds29.toStandardDuration();
        boolean boolean33 = seconds9.equals((java.lang.Object) seconds29);
        org.joda.time.Duration duration34 = seconds29.toStandardDuration();
        int int35 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds29);
        org.joda.time.DurationFieldType durationFieldType36 = seconds5.getFieldType();
        org.joda.time.DurationFieldType durationFieldType38 = seconds5.getFieldType(0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(durationFieldType38);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.MutablePeriod mutablePeriod16 = seconds9.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.secondsIn(readableInterval17);
        org.joda.time.Seconds seconds19 = seconds18.negated();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        int int22 = seconds21.size();
        boolean boolean23 = seconds19.isLessThan(seconds21);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.secondsIn(readableInterval24);
        int int26 = seconds25.size();
        org.joda.time.Seconds seconds28 = seconds25.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval29 = null;
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.secondsIn(readableInterval29);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        boolean boolean32 = seconds28.isSupported(durationFieldType31);
        boolean boolean33 = seconds21.isSupported(durationFieldType31);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds21);
        int int35 = seconds9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = seconds36.get(durationFieldType37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds40 = seconds36.minus(seconds39);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = seconds41.get(durationFieldType42);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds45 = seconds41.minus(seconds44);
        org.joda.time.Seconds seconds47 = seconds45.dividedBy((int) '4');
        int int48 = seconds45.size();
        int int49 = seconds40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds45);
        org.joda.time.DurationFieldType durationFieldType50 = seconds40.getFieldType();
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = seconds51.get(durationFieldType52);
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds55 = seconds51.minus(seconds54);
        org.joda.time.MutablePeriod mutablePeriod56 = seconds54.toMutablePeriod();
        boolean boolean57 = seconds40.isGreaterThan(seconds54);
        int int58 = seconds54.size();
        org.joda.time.Seconds seconds60 = seconds54.plus((int) (byte) 0);
        boolean boolean61 = seconds9.equals((java.lang.Object) seconds60);
        java.lang.Object obj62 = null;
        boolean boolean63 = seconds9.equals(obj62);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds6 = seconds1.multipliedBy((int) (short) 1);
        org.joda.time.Seconds seconds8 = seconds6.dividedBy((-99));
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Seconds seconds7 = seconds1.minus(3);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.Seconds seconds7 = seconds5.plus(2147483644);
        java.lang.String str8 = seconds7.toString();
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType13 = seconds12.getPeriodType();
        org.joda.time.Duration duration14 = seconds12.toStandardDuration();
        org.joda.time.Seconds seconds16 = seconds12.multipliedBy(0);
        org.joda.time.Seconds seconds17 = seconds12.negated();
        org.joda.time.Seconds seconds18 = seconds10.plus(seconds12);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Seconds seconds21 = seconds18.minus(2147483644);
        org.joda.time.Seconds seconds22 = seconds7.plus(seconds18);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT2147483644S" + "'", str8, "PT2147483644S");
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        org.joda.time.Seconds seconds10 = seconds1.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds1.minus(2147483647);
        org.joda.time.Seconds seconds13 = seconds1.negated();
        java.lang.Class<?> wildcardClass14 = seconds13.getClass();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Seconds seconds15 = seconds13.multipliedBy(2147483647);
        int int16 = seconds15.getSeconds();
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds22 = seconds18.multipliedBy(0);
        org.joda.time.Seconds seconds24 = seconds18.multipliedBy(1);
        org.joda.time.Seconds seconds25 = seconds15.plus(seconds24);
        org.joda.time.Seconds seconds27 = seconds15.dividedBy((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType28 = seconds15.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(durationFieldType28);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        java.lang.String str18 = seconds17.toString();
        org.joda.time.Period period19 = seconds17.toPeriod();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        org.joda.time.Seconds seconds24 = seconds21.dividedBy((-1));
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        int int27 = seconds17.get(durationFieldType26);
        boolean boolean28 = seconds0.isLessThan(seconds17);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        boolean boolean36 = seconds0.isGreaterThan(seconds35);
        java.lang.String str37 = seconds0.toString();
        org.joda.time.Seconds seconds39 = seconds0.dividedBy((int) (short) 10);
        org.joda.time.DurationFieldType durationFieldType40 = seconds0.getFieldType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2147483644S" + "'", str18, "PT2147483644S");
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483644 + "'", int27 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT2S" + "'", str37, "PT2S");
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(durationFieldType40);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds(35);
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        int int5 = seconds4.size();
        boolean boolean6 = seconds2.isLessThan(seconds4);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        int int9 = seconds8.size();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.DurationFieldType durationFieldType14 = seconds13.getFieldType();
        boolean boolean15 = seconds11.isSupported(durationFieldType14);
        boolean boolean16 = seconds4.isSupported(durationFieldType14);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        org.joda.time.Duration duration23 = seconds21.toStandardDuration();
        org.joda.time.Seconds seconds25 = seconds21.multipliedBy(0);
        org.joda.time.Seconds seconds26 = seconds21.negated();
        org.joda.time.Seconds seconds27 = seconds19.plus(seconds21);
        java.lang.String str28 = seconds19.toString();
        org.joda.time.Seconds seconds29 = seconds17.plus(seconds19);
        org.joda.time.Duration duration30 = seconds17.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT1S" + "'", str28, "PT1S");
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(duration30);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.multipliedBy(0);
        org.joda.time.Seconds seconds8 = seconds3.negated();
        org.joda.time.Seconds seconds9 = seconds1.plus(seconds3);
        int int10 = seconds3.getSeconds();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = seconds11.get(durationFieldType12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds15 = seconds11.minus(seconds14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.Seconds seconds22 = seconds20.dividedBy((int) '4');
        int int23 = seconds20.size();
        int int24 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds20);
        org.joda.time.Seconds seconds26 = seconds20.plus(0);
        org.joda.time.Seconds seconds28 = seconds20.multipliedBy(0);
        org.joda.time.Seconds seconds29 = seconds3.minus(seconds20);
        org.joda.time.Seconds seconds31 = seconds20.multipliedBy((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = seconds20.getValue(101);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 101");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.DurationFieldType durationFieldType23 = seconds22.getFieldType();
        boolean boolean24 = seconds20.isSupported(durationFieldType23);
        boolean boolean25 = seconds0.isSupported(durationFieldType23);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType27 = seconds0.getFieldType(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT-1S");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.Seconds seconds3 = seconds1.plus(seconds2);
        org.joda.time.Seconds seconds5 = seconds2.minus((int) (byte) 100);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.standardSecondsIn(readablePeriod6);
        org.joda.time.Seconds seconds8 = seconds2.plus(seconds7);
        int int9 = seconds2.size();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        org.joda.time.Seconds seconds23 = seconds17.plus(0);
        java.lang.String str24 = seconds23.toString();
        org.joda.time.Period period25 = seconds23.toPeriod();
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn(readableInterval26);
        org.joda.time.Seconds seconds28 = seconds27.negated();
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds27.get(durationFieldType29);
        boolean boolean31 = seconds23.isLessThan(seconds27);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds27);
        org.joda.time.Seconds seconds33 = seconds5.plus(seconds27);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = seconds34.get(durationFieldType35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds38 = seconds34.minus(seconds37);
        org.joda.time.DurationFieldType durationFieldType39 = seconds34.getFieldType();
        org.joda.time.Seconds seconds41 = seconds34.dividedBy((int) ' ');
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds34);
        int int43 = seconds42.size();
        int int44 = seconds33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds42);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2147483644S" + "'", str24, "PT2147483644S");
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds19.get(durationFieldType21);
        boolean boolean23 = seconds15.isLessThan(seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.DurationFieldType durationFieldType27 = seconds25.getFieldType(0);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) '4');
        int int40 = seconds37.size();
        int int41 = seconds32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds37);
        org.joda.time.Seconds seconds43 = seconds37.plus(0);
        java.lang.String str44 = seconds43.toString();
        org.joda.time.Period period45 = seconds43.toPeriod();
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        org.joda.time.DurationFieldType durationFieldType48 = seconds47.getFieldType();
        org.joda.time.Seconds seconds50 = seconds47.dividedBy((-1));
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds50);
        org.joda.time.DurationFieldType durationFieldType52 = seconds51.getFieldType();
        int int53 = seconds43.get(durationFieldType52);
        org.joda.time.Seconds seconds54 = seconds25.minus(seconds43);
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType57 = seconds56.getPeriodType();
        org.joda.time.Duration duration58 = seconds56.toStandardDuration();
        org.joda.time.Seconds seconds60 = seconds56.multipliedBy(0);
        org.joda.time.Seconds seconds61 = seconds56.negated();
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = seconds62.get(durationFieldType63);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds66 = seconds62.minus(seconds65);
        boolean boolean67 = seconds61.isGreaterThan(seconds66);
        org.joda.time.Seconds seconds68 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds61);
        org.joda.time.PeriodType periodType69 = seconds61.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod70 = seconds61.toMutablePeriod();
        org.joda.time.Seconds seconds71 = seconds61.negated();
        org.joda.time.Seconds seconds73 = seconds61.plus(0);
        boolean boolean74 = seconds25.equals((java.lang.Object) seconds61);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2147483644S" + "'", str44, "PT2147483644S");
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2147483644 + "'", int53 == 2147483644);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.DurationFieldType durationFieldType8 = seconds7.getFieldType();
        org.joda.time.Seconds seconds10 = seconds7.dividedBy((-1));
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds7);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = seconds11.isSupported(durationFieldType12);
        org.joda.time.Seconds seconds15 = seconds11.plus((int) (byte) 1);
        org.joda.time.Seconds seconds16 = seconds1.minus(seconds11);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        org.joda.time.Seconds seconds21 = seconds18.minus((int) (short) 1);
        int int22 = seconds11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds21);
        java.lang.String str23 = seconds11.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT0S" + "'", str23, "PT0S");
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds2 = seconds0.minus((int) (byte) 0);
        org.joda.time.Duration duration3 = seconds0.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = seconds0.get(durationFieldType4);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        int int8 = seconds7.size();
        org.joda.time.Seconds seconds10 = seconds7.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.secondsIn(readableInterval11);
        org.joda.time.DurationFieldType durationFieldType13 = seconds12.getFieldType();
        boolean boolean14 = seconds10.isSupported(durationFieldType13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds20.get(durationFieldType21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds24 = seconds20.minus(seconds23);
        org.joda.time.Seconds seconds26 = seconds24.dividedBy((int) '4');
        int int27 = seconds24.size();
        int int28 = seconds19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds24);
        org.joda.time.Seconds seconds30 = seconds24.plus(0);
        org.joda.time.Seconds seconds31 = seconds10.minus(seconds24);
        org.joda.time.DurationFieldType durationFieldType32 = seconds10.getFieldType();
        int int33 = seconds10.size();
        org.joda.time.MutablePeriod mutablePeriod34 = seconds10.toMutablePeriod();
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType37 = seconds36.getPeriodType();
        org.joda.time.Duration duration38 = seconds36.toStandardDuration();
        org.joda.time.Seconds seconds40 = seconds36.multipliedBy(0);
        org.joda.time.Seconds seconds41 = seconds36.negated();
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = seconds42.get(durationFieldType43);
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds46 = seconds42.minus(seconds45);
        boolean boolean47 = seconds41.isGreaterThan(seconds46);
        org.joda.time.Seconds seconds49 = seconds41.multipliedBy(1);
        int int50 = seconds41.getSeconds();
        org.joda.time.Seconds seconds51 = seconds10.plus(seconds41);
        boolean boolean52 = seconds0.isLessThan(seconds51);
        org.joda.time.MutablePeriod mutablePeriod53 = seconds51.toMutablePeriod();
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) mutablePeriod53);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(seconds54);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        int int17 = seconds4.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = seconds4.negated();
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        int int21 = seconds19.getSeconds();
        org.joda.time.Seconds seconds22 = seconds4.plus(seconds19);
        org.joda.time.Seconds seconds24 = seconds19.multipliedBy(0);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType27 = seconds26.getPeriodType();
        org.joda.time.Duration duration28 = seconds26.toStandardDuration();
        org.joda.time.Seconds seconds30 = seconds26.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn(readableInterval31);
        org.joda.time.Seconds seconds33 = seconds32.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = seconds32.toMutablePeriod();
        org.joda.time.Duration duration35 = seconds32.toStandardDuration();
        int int36 = seconds32.getSeconds();
        boolean boolean37 = seconds26.isLessThan(seconds32);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType40 = seconds39.getPeriodType();
        org.joda.time.Duration duration41 = seconds39.toStandardDuration();
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds45 = seconds43.minus((int) (byte) 0);
        boolean boolean46 = seconds42.isLessThan(seconds45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds42);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType50 = seconds49.getPeriodType();
        org.joda.time.Duration duration51 = seconds49.toStandardDuration();
        org.joda.time.Seconds seconds53 = seconds49.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds55 = seconds49.dividedBy((int) (short) 1);
        boolean boolean56 = seconds42.equals((java.lang.Object) (short) 1);
        boolean boolean57 = seconds39.isGreaterThan(seconds42);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = seconds58.get(durationFieldType59);
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds62 = seconds58.minus(seconds61);
        org.joda.time.Seconds seconds64 = seconds61.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval65 = null;
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.secondsIn(readableInterval65);
        org.joda.time.DurationFieldType durationFieldType67 = seconds66.getFieldType();
        org.joda.time.Seconds seconds69 = seconds66.dividedBy((-1));
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds66);
        int int71 = seconds66.size();
        org.joda.time.ReadableInterval readableInterval72 = null;
        org.joda.time.Seconds seconds73 = org.joda.time.Seconds.secondsIn(readableInterval72);
        org.joda.time.DurationFieldType durationFieldType74 = seconds73.getFieldType();
        org.joda.time.Seconds seconds76 = seconds73.dividedBy((-1));
        int int77 = seconds73.getSeconds();
        org.joda.time.Seconds seconds78 = seconds66.minus(seconds73);
        boolean boolean79 = seconds64.isGreaterThan(seconds78);
        boolean boolean80 = seconds39.isGreaterThan(seconds78);
        boolean boolean81 = seconds32.isGreaterThan(seconds39);
        boolean boolean82 = seconds24.isLessThan(seconds39);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483644 + "'", int17 == 2147483644);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        boolean boolean17 = seconds9.isLessThan(seconds14);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds29 = seconds27.dividedBy((int) '4');
        int int30 = seconds27.size();
        int int31 = seconds22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds27);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        boolean boolean35 = seconds27.isLessThan(seconds32);
        boolean boolean36 = seconds14.isLessThan(seconds27);
        int int37 = seconds27.size();
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds27);
        org.joda.time.MutablePeriod mutablePeriod39 = seconds27.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.secondsIn(readableInterval40);
        org.joda.time.Seconds seconds42 = seconds41.negated();
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.secondsIn(readableInterval43);
        int int45 = seconds44.size();
        boolean boolean46 = seconds42.isLessThan(seconds44);
        org.joda.time.ReadableInterval readableInterval47 = null;
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.secondsIn(readableInterval47);
        int int49 = seconds48.size();
        org.joda.time.Seconds seconds51 = seconds48.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval52 = null;
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.secondsIn(readableInterval52);
        org.joda.time.DurationFieldType durationFieldType54 = seconds53.getFieldType();
        boolean boolean55 = seconds51.isSupported(durationFieldType54);
        boolean boolean56 = seconds44.isSupported(durationFieldType54);
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds44);
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType60 = seconds59.getPeriodType();
        org.joda.time.Duration duration61 = seconds59.toStandardDuration();
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds59);
        boolean boolean63 = seconds57.equals((java.lang.Object) seconds59);
        org.joda.time.Seconds seconds64 = seconds27.plus(seconds57);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(seconds64);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds5 = seconds1.minus((int) (byte) -1);
        int int6 = seconds1.size();
        int int7 = seconds1.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds4.dividedBy((int) '4');
        org.joda.time.MutablePeriod mutablePeriod7 = seconds4.toMutablePeriod();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        org.joda.time.Seconds seconds23 = seconds17.plus(0);
        java.lang.String str24 = seconds23.toString();
        org.joda.time.Period period25 = seconds23.toPeriod();
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn(readableInterval26);
        org.joda.time.Seconds seconds28 = seconds27.negated();
        org.joda.time.MutablePeriod mutablePeriod29 = seconds27.toMutablePeriod();
        org.joda.time.Duration duration30 = seconds27.toStandardDuration();
        boolean boolean31 = seconds23.equals((java.lang.Object) seconds27);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds36 = seconds32.minus(seconds35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds43 = seconds41.dividedBy((int) '4');
        int int44 = seconds41.size();
        int int45 = seconds36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds41);
        org.joda.time.Seconds seconds47 = seconds41.plus(0);
        org.joda.time.MutablePeriod mutablePeriod48 = seconds41.toMutablePeriod();
        int int49 = seconds23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds41);
        org.joda.time.Seconds seconds51 = seconds23.minus(2147483644);
        java.lang.String str52 = seconds23.toString();
        int int53 = seconds23.size();
        boolean boolean54 = seconds4.equals((java.lang.Object) seconds23);
        org.joda.time.MutablePeriod mutablePeriod55 = seconds23.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int57 = seconds23.getValue((-2147483647));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2147483644S" + "'", str24, "PT2147483644S");
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT2147483644S" + "'", str52, "PT2147483644S");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(mutablePeriod55);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        int int13 = seconds8.size();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        org.joda.time.Seconds seconds18 = seconds15.dividedBy((-1));
        int int19 = seconds15.getSeconds();
        org.joda.time.Seconds seconds20 = seconds8.minus(seconds15);
        boolean boolean21 = seconds6.isGreaterThan(seconds20);
        org.joda.time.Seconds seconds23 = seconds6.dividedBy((int) 'a');
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.seconds((-99));
        org.joda.time.Seconds seconds26 = seconds23.plus(seconds25);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds16 = seconds14.dividedBy((int) '4');
        int int17 = seconds14.size();
        int int18 = seconds9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds14);
        org.joda.time.Seconds seconds20 = seconds14.plus(0);
        boolean boolean21 = seconds1.isLessThan(seconds14);
        org.joda.time.Seconds seconds23 = seconds14.minus((int) '#');
        int int25 = seconds14.getValue(0);
        org.joda.time.Seconds seconds26 = seconds14.negated();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2147483644 + "'", int25 == 2147483644);
        org.junit.Assert.assertNotNull(seconds26);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds3 = seconds0.plus(1);
        org.joda.time.Duration duration4 = seconds0.toStandardDuration();
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType9 = seconds8.getPeriodType();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds12 = seconds8.multipliedBy(0);
        org.joda.time.Seconds seconds13 = seconds8.negated();
        org.joda.time.Seconds seconds14 = seconds6.plus(seconds8);
        int int15 = seconds8.getSeconds();
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = seconds21.get(durationFieldType22);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds25 = seconds21.minus(seconds24);
        org.joda.time.Seconds seconds27 = seconds25.dividedBy((int) '4');
        int int28 = seconds25.size();
        int int29 = seconds20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds25);
        org.joda.time.Seconds seconds31 = seconds25.plus(0);
        org.joda.time.Seconds seconds33 = seconds25.multipliedBy(0);
        org.joda.time.Seconds seconds34 = seconds8.minus(seconds25);
        org.joda.time.Seconds seconds36 = seconds25.dividedBy((-2147483644));
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.secondsIn(readableInterval37);
        org.joda.time.DurationFieldType durationFieldType39 = seconds38.getFieldType();
        org.joda.time.Seconds seconds41 = seconds38.dividedBy((-1));
        int int42 = seconds38.getSeconds();
        org.joda.time.Seconds seconds44 = seconds38.plus(2147483644);
        boolean boolean45 = seconds25.isGreaterThan(seconds38);
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        org.joda.time.DurationFieldType durationFieldType48 = seconds47.getFieldType();
        org.joda.time.Seconds seconds50 = seconds47.dividedBy((-1));
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds47);
        org.joda.time.Seconds seconds53 = seconds51.plus(2147483644);
        boolean boolean54 = seconds38.equals((java.lang.Object) seconds51);
        org.joda.time.Seconds seconds55 = seconds0.minus(seconds38);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(seconds55);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        java.lang.String str6 = seconds5.toString();
        org.joda.time.DurationFieldType durationFieldType7 = seconds5.getFieldType();
        org.joda.time.Seconds seconds9 = seconds5.minus(3);
        org.joda.time.Seconds seconds10 = seconds9.negated();
        org.joda.time.Seconds seconds12 = seconds10.minus((-100));
        org.joda.time.Period period13 = seconds12.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds15 = seconds12.multipliedBy(2147483609);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 103 * 2147483609");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        java.lang.String str3 = seconds1.toString();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds7 = seconds5.minus((int) (byte) 0);
        boolean boolean8 = seconds4.isLessThan(seconds7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds12 = seconds10.minus((int) (byte) 0);
        boolean boolean13 = seconds9.isLessThan(seconds12);
        org.joda.time.Period period14 = seconds9.toPeriod();
        int int15 = seconds7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds16 = seconds1.minus(seconds9);
        org.joda.time.Seconds seconds18 = seconds9.dividedBy(41297762);
        int int19 = seconds18.size();
        org.joda.time.Period period20 = seconds18.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0S" + "'", str3, "PT0S");
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT2147483644S");
        org.joda.time.Hours hours2 = seconds1.toStandardHours();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(hours2);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        org.joda.time.Seconds seconds10 = seconds1.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds1.minus(2147483647);
        org.joda.time.Seconds seconds13 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds16 = seconds1.plus(2147483609);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(seconds16);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds6 = seconds5.negated();
        org.joda.time.Seconds seconds8 = seconds5.plus((-1));
        // The following exception was thrown during execution in test generation
        try {
            int int10 = seconds8.getValue(2147483644);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483644");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType7 = seconds6.getPeriodType();
        org.joda.time.Duration duration8 = seconds6.toStandardDuration();
        org.joda.time.Seconds seconds10 = seconds6.multipliedBy(0);
        org.joda.time.Seconds seconds11 = seconds6.negated();
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = seconds12.get(durationFieldType13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds16 = seconds12.minus(seconds15);
        boolean boolean17 = seconds11.isGreaterThan(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds11);
        org.joda.time.PeriodType periodType19 = seconds11.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod20 = seconds11.toMutablePeriod();
        org.joda.time.Seconds seconds21 = seconds11.negated();
        org.joda.time.Seconds seconds23 = seconds11.plus(0);
        org.joda.time.Seconds seconds24 = seconds3.plus(seconds11);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType27 = seconds26.getPeriodType();
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.secondsIn(readableInterval28);
        org.joda.time.Seconds seconds30 = seconds29.negated();
        org.joda.time.MutablePeriod mutablePeriod31 = seconds29.toMutablePeriod();
        int int32 = seconds26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds29);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.secondsIn(readableInterval33);
        org.joda.time.Seconds seconds35 = seconds26.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds26.minus(2147483647);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) '4');
        boolean boolean40 = seconds24.isGreaterThan(seconds39);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.Seconds seconds54 = seconds53.negated();
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = seconds60.get(durationFieldType61);
        org.joda.time.Seconds seconds63 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds64 = seconds60.minus(seconds63);
        org.joda.time.Seconds seconds66 = seconds64.dividedBy((int) '4');
        int int67 = seconds64.size();
        int int68 = seconds59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds64);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        boolean boolean72 = seconds64.isLessThan(seconds69);
        boolean boolean73 = seconds54.isLessThan(seconds64);
        org.joda.time.Seconds seconds75 = seconds54.multipliedBy((int) (byte) -1);
        org.joda.time.Seconds seconds77 = seconds54.plus(100);
        org.joda.time.Seconds seconds79 = seconds77.plus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod80 = seconds77.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(mutablePeriod80);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType1 = seconds0.getPeriodType();
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds13 = seconds11.dividedBy((int) '4');
        int int14 = seconds11.size();
        int int15 = seconds6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds11);
        org.joda.time.Seconds seconds17 = seconds11.plus(0);
        java.lang.String str18 = seconds17.toString();
        org.joda.time.Period period19 = seconds17.toPeriod();
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.secondsIn(readableInterval20);
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        org.joda.time.Seconds seconds24 = seconds21.dividedBy((-1));
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        int int27 = seconds17.get(durationFieldType26);
        boolean boolean28 = seconds0.isLessThan(seconds17);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        boolean boolean36 = seconds0.isGreaterThan(seconds35);
        java.lang.String str37 = seconds0.toString();
        org.joda.time.Seconds seconds39 = seconds0.dividedBy((int) (short) 10);
        org.joda.time.Period period40 = seconds39.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2147483644S" + "'", str18, "PT2147483644S");
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483644 + "'", int27 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT2S" + "'", str37, "PT2S");
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(period40);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        org.joda.time.Duration duration10 = seconds7.toStandardDuration();
        int int11 = seconds7.getSeconds();
        boolean boolean12 = seconds1.isLessThan(seconds7);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = seconds22.dividedBy((int) '4');
        int int25 = seconds22.size();
        int int26 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds22);
        org.joda.time.Seconds seconds28 = seconds22.plus(0);
        java.lang.String str29 = seconds28.toString();
        org.joda.time.Period period30 = seconds28.toPeriod();
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn(readableInterval31);
        org.joda.time.Seconds seconds33 = seconds32.negated();
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds32.get(durationFieldType34);
        boolean boolean36 = seconds28.isLessThan(seconds32);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds32);
        org.joda.time.Seconds seconds38 = seconds1.plus(seconds32);
        org.joda.time.DurationFieldType durationFieldType39 = seconds38.getFieldType();
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = seconds40.get(durationFieldType41);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds44 = seconds40.minus(seconds43);
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = seconds45.get(durationFieldType46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds49 = seconds45.minus(seconds48);
        org.joda.time.Seconds seconds51 = seconds49.dividedBy((int) '4');
        int int52 = seconds49.size();
        int int53 = seconds44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds49);
        org.joda.time.Seconds seconds55 = seconds49.plus(0);
        org.joda.time.ReadableInterval readableInterval56 = null;
        org.joda.time.Seconds seconds57 = org.joda.time.Seconds.secondsIn(readableInterval56);
        org.joda.time.DurationFieldType durationFieldType58 = seconds57.getFieldType();
        org.joda.time.Seconds seconds60 = seconds57.dividedBy((-1));
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds57);
        org.joda.time.DurationFieldType durationFieldType62 = null;
        boolean boolean63 = seconds61.isSupported(durationFieldType62);
        org.joda.time.Seconds seconds65 = seconds61.plus((int) (byte) 1);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = seconds66.get(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds70 = seconds66.minus(seconds69);
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = seconds71.get(durationFieldType72);
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds75 = seconds71.minus(seconds74);
        org.joda.time.Seconds seconds77 = seconds75.dividedBy((int) '4');
        int int78 = seconds75.size();
        int int79 = seconds70.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds75);
        org.joda.time.Seconds seconds81 = seconds75.plus(0);
        java.lang.String str82 = seconds81.toString();
        org.joda.time.Period period83 = seconds81.toPeriod();
        org.joda.time.ReadableInterval readableInterval84 = null;
        org.joda.time.Seconds seconds85 = org.joda.time.Seconds.secondsIn(readableInterval84);
        org.joda.time.Seconds seconds86 = seconds85.negated();
        org.joda.time.DurationFieldType durationFieldType87 = null;
        int int88 = seconds85.get(durationFieldType87);
        boolean boolean89 = seconds81.isLessThan(seconds85);
        org.joda.time.Seconds seconds90 = seconds65.minus(seconds81);
        org.joda.time.Seconds seconds92 = seconds90.dividedBy((int) 'a');
        org.joda.time.Seconds seconds93 = seconds49.plus(seconds90);
        org.joda.time.DurationFieldType durationFieldType94 = seconds49.getFieldType();
        int int95 = seconds38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds49);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = seconds49.getValue(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2147483644S" + "'", str29, "PT2147483644S");
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "PT2147483644S" + "'", str82, "PT2147483644S");
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(seconds90);
        org.junit.Assert.assertNotNull(seconds92);
        org.junit.Assert.assertNotNull(seconds93);
        org.junit.Assert.assertNotNull(durationFieldType94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int5 = seconds4.getSeconds();
        org.joda.time.Duration duration6 = seconds4.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.Seconds seconds9 = seconds8.negated();
        int int10 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Duration duration11 = seconds4.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds4.dividedBy((int) (short) -1);
        boolean boolean14 = seconds1.isGreaterThan(seconds13);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType17 = seconds16.getPeriodType();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        int int22 = seconds16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType25 = seconds24.getPeriodType();
        org.joda.time.Duration duration26 = seconds24.toStandardDuration();
        org.joda.time.Seconds seconds28 = seconds24.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds30 = seconds24.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds32 = seconds24.minus(seconds31);
        org.joda.time.DurationFieldType durationFieldType33 = seconds32.getFieldType();
        boolean boolean34 = seconds16.isSupported(durationFieldType33);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType37 = seconds36.getPeriodType();
        org.joda.time.Period period38 = seconds36.toPeriod();
        org.joda.time.Duration duration39 = seconds36.toStandardDuration();
        boolean boolean40 = seconds16.equals((java.lang.Object) seconds36);
        int int41 = seconds36.size();
        int int42 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds36);
        org.joda.time.Seconds seconds44 = seconds36.multipliedBy(41297762);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(seconds44);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.MutablePeriod mutablePeriod8 = seconds6.toMutablePeriod();
        org.joda.time.Duration duration9 = seconds6.toStandardDuration();
        boolean boolean10 = seconds0.equals((java.lang.Object) seconds6);
        org.joda.time.Seconds seconds12 = seconds6.plus((int) (byte) 10);
        org.joda.time.Seconds seconds14 = seconds6.multipliedBy((int) (short) 1);
        org.joda.time.Seconds seconds16 = seconds14.multipliedBy(2147483644);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType18 = seconds16.getFieldType((-2147483644));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483644");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Duration duration2 = seconds1.toStandardDuration();
        int int3 = seconds1.size();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.parseSeconds("PT1S");
        int int6 = seconds5.getSeconds();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = seconds12.get(durationFieldType13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds16 = seconds12.minus(seconds15);
        org.joda.time.Seconds seconds18 = seconds16.dividedBy((int) '4');
        int int19 = seconds16.size();
        int int20 = seconds11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds16);
        org.joda.time.Seconds seconds22 = seconds16.plus(0);
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.secondsIn(readableInterval23);
        org.joda.time.DurationFieldType durationFieldType25 = seconds24.getFieldType();
        org.joda.time.Seconds seconds27 = seconds24.dividedBy((-1));
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds24);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        boolean boolean30 = seconds28.isSupported(durationFieldType29);
        org.joda.time.Seconds seconds32 = seconds28.plus((int) (byte) 1);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = seconds38.get(durationFieldType39);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds42 = seconds38.minus(seconds41);
        org.joda.time.Seconds seconds44 = seconds42.dividedBy((int) '4');
        int int45 = seconds42.size();
        int int46 = seconds37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds42);
        org.joda.time.Seconds seconds48 = seconds42.plus(0);
        java.lang.String str49 = seconds48.toString();
        org.joda.time.Period period50 = seconds48.toPeriod();
        org.joda.time.ReadableInterval readableInterval51 = null;
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.secondsIn(readableInterval51);
        org.joda.time.Seconds seconds53 = seconds52.negated();
        org.joda.time.DurationFieldType durationFieldType54 = null;
        int int55 = seconds52.get(durationFieldType54);
        boolean boolean56 = seconds48.isLessThan(seconds52);
        org.joda.time.Seconds seconds57 = seconds32.minus(seconds48);
        org.joda.time.Seconds seconds59 = seconds57.dividedBy((int) 'a');
        org.joda.time.Seconds seconds60 = seconds16.plus(seconds57);
        org.joda.time.Seconds seconds61 = seconds60.negated();
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = seconds62.get(durationFieldType63);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds66 = seconds62.minus(seconds65);
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = seconds67.get(durationFieldType68);
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds71 = seconds67.minus(seconds70);
        org.joda.time.Seconds seconds73 = seconds71.dividedBy((int) '4');
        int int74 = seconds71.size();
        int int75 = seconds66.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds71);
        org.joda.time.Seconds seconds76 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType77 = null;
        int int78 = seconds76.get(durationFieldType77);
        boolean boolean79 = seconds71.isLessThan(seconds76);
        boolean boolean80 = seconds61.isLessThan(seconds71);
        boolean boolean81 = seconds5.isGreaterThan(seconds61);
        boolean boolean82 = seconds1.isGreaterThan(seconds5);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "PT2147483644S" + "'", str49, "PT2147483644S");
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(seconds57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.DurationFieldType durationFieldType8 = seconds7.getFieldType();
        org.joda.time.Seconds seconds10 = seconds7.dividedBy((-1));
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds7);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = seconds11.isSupported(durationFieldType12);
        org.joda.time.Seconds seconds15 = seconds11.plus((int) (byte) 1);
        org.joda.time.Seconds seconds16 = seconds1.minus(seconds11);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        org.joda.time.Seconds seconds21 = seconds18.minus((int) (short) 1);
        int int22 = seconds11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds21);
        org.joda.time.Period period23 = seconds21.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        boolean boolean9 = seconds1.isGreaterThan(seconds7);
        org.joda.time.Seconds seconds11 = seconds7.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds13 = seconds7.dividedBy(35);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.DurationFieldType durationFieldType14 = seconds4.getFieldType();
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.Period period16 = seconds4.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds(2147483647);
        boolean boolean29 = seconds23.isLessThan(seconds28);
        org.joda.time.Period period30 = seconds28.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(period30);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.Seconds seconds9 = seconds5.plus((int) (byte) 1);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = seconds10.get(durationFieldType11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds14 = seconds10.minus(seconds13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = seconds15.get(durationFieldType16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds19 = seconds15.minus(seconds18);
        org.joda.time.Seconds seconds21 = seconds19.dividedBy((int) '4');
        int int22 = seconds19.size();
        int int23 = seconds14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds19);
        org.joda.time.Seconds seconds25 = seconds19.plus(0);
        java.lang.String str26 = seconds25.toString();
        org.joda.time.Period period27 = seconds25.toPeriod();
        org.joda.time.ReadableInterval readableInterval28 = null;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.secondsIn(readableInterval28);
        org.joda.time.Seconds seconds30 = seconds29.negated();
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = seconds29.get(durationFieldType31);
        boolean boolean33 = seconds25.isLessThan(seconds29);
        org.joda.time.Seconds seconds34 = seconds9.minus(seconds25);
        org.joda.time.Period period35 = seconds25.toPeriod();
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = seconds36.get(durationFieldType37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds40 = seconds36.minus(seconds39);
        org.joda.time.Seconds seconds42 = seconds39.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.secondsIn(readableInterval43);
        org.joda.time.DurationFieldType durationFieldType45 = seconds44.getFieldType();
        org.joda.time.Seconds seconds47 = seconds44.dividedBy((-1));
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds44);
        int int49 = seconds44.size();
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.secondsIn(readableInterval50);
        org.joda.time.DurationFieldType durationFieldType52 = seconds51.getFieldType();
        org.joda.time.Seconds seconds54 = seconds51.dividedBy((-1));
        int int55 = seconds51.getSeconds();
        org.joda.time.Seconds seconds56 = seconds44.minus(seconds51);
        boolean boolean57 = seconds42.isGreaterThan(seconds56);
        org.joda.time.ReadableInterval readableInterval58 = null;
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.secondsIn(readableInterval58);
        org.joda.time.Seconds seconds60 = seconds59.negated();
        org.joda.time.MutablePeriod mutablePeriod61 = seconds60.toMutablePeriod();
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = seconds62.get(durationFieldType63);
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds66 = seconds62.minus(seconds65);
        org.joda.time.DurationFieldType durationFieldType67 = seconds62.getFieldType();
        int int68 = seconds60.get(durationFieldType67);
        boolean boolean69 = seconds56.isSupported(durationFieldType67);
        org.joda.time.Seconds seconds70 = seconds25.minus(seconds56);
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = seconds71.get(durationFieldType72);
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds75 = seconds71.minus(seconds74);
        org.joda.time.DurationFieldType durationFieldType76 = seconds71.getFieldType();
        boolean boolean77 = seconds70.isGreaterThan(seconds71);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483644S" + "'", str26, "PT2147483644S");
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        int int2 = seconds1.size();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        boolean boolean8 = seconds4.isSupported(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = seconds9.get(durationFieldType10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds13 = seconds9.minus(seconds12);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds18.dividedBy((int) '4');
        int int21 = seconds18.size();
        int int22 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds18);
        org.joda.time.Seconds seconds24 = seconds18.plus(0);
        java.lang.String str25 = seconds24.toString();
        org.joda.time.Period period26 = seconds24.toPeriod();
        org.joda.time.Seconds seconds27 = seconds4.minus(seconds24);
        org.joda.time.Duration duration28 = seconds4.toStandardDuration();
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds32.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds37 = seconds35.plus((int) (byte) 10);
        org.joda.time.Seconds seconds38 = seconds35.negated();
        org.joda.time.DurationFieldType durationFieldType40 = seconds38.getFieldType((int) (byte) 0);
        java.lang.String str41 = seconds38.toString();
        org.joda.time.Seconds seconds42 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = seconds43.get(durationFieldType44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds47 = seconds43.minus(seconds46);
        org.joda.time.Seconds seconds48 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = seconds48.get(durationFieldType49);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds52 = seconds48.minus(seconds51);
        org.joda.time.Seconds seconds54 = seconds52.dividedBy((int) '4');
        int int55 = seconds52.size();
        int int56 = seconds47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds52);
        boolean boolean57 = seconds42.isLessThan(seconds52);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = seconds58.get(durationFieldType59);
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds62 = seconds58.minus(seconds61);
        org.joda.time.ReadableInterval readableInterval63 = null;
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.secondsIn(readableInterval63);
        org.joda.time.Seconds seconds65 = seconds64.negated();
        org.joda.time.MutablePeriod mutablePeriod66 = seconds64.toMutablePeriod();
        org.joda.time.Duration duration67 = seconds64.toStandardDuration();
        boolean boolean68 = seconds58.equals((java.lang.Object) seconds64);
        org.joda.time.MutablePeriod mutablePeriod69 = seconds58.toMutablePeriod();
        org.joda.time.Seconds seconds70 = seconds42.plus(seconds58);
        org.joda.time.DurationFieldType durationFieldType71 = seconds42.getFieldType();
        boolean boolean72 = seconds38.isSupported(durationFieldType71);
        boolean boolean73 = seconds4.isSupported(durationFieldType71);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT2147483644S" + "'", str25, "PT2147483644S");
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT0S" + "'", str41, "PT0S");
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Duration duration2 = seconds1.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        int int8 = seconds7.size();
        boolean boolean9 = seconds5.isLessThan(seconds7);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.secondsIn(readableInterval10);
        int int12 = seconds11.size();
        org.joda.time.Seconds seconds14 = seconds11.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.secondsIn(readableInterval15);
        org.joda.time.DurationFieldType durationFieldType17 = seconds16.getFieldType();
        boolean boolean18 = seconds14.isSupported(durationFieldType17);
        boolean boolean19 = seconds7.isSupported(durationFieldType17);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds7);
        boolean boolean21 = seconds1.isLessThan(seconds7);
        java.lang.String str22 = seconds1.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT0S" + "'", str22, "PT0S");
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        int int10 = seconds9.size();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy(100);
        org.joda.time.PeriodType periodType13 = seconds12.getPeriodType();
        org.joda.time.Seconds seconds15 = seconds12.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds17 = seconds15.minus((-1));
        org.joda.time.DurationFieldType durationFieldType19 = seconds15.getFieldType((int) (byte) 0);
        boolean boolean20 = seconds5.isSupported(durationFieldType19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        int int26 = seconds22.getSeconds();
        java.lang.String str27 = seconds22.toString();
        org.joda.time.Seconds seconds29 = seconds22.minus((int) (short) 10);
        org.joda.time.Seconds seconds30 = seconds5.minus(seconds22);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Seconds seconds33 = seconds30.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds33);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType37 = seconds36.getPeriodType();
        org.joda.time.ReadableInterval readableInterval38 = null;
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.secondsIn(readableInterval38);
        org.joda.time.Seconds seconds40 = seconds39.negated();
        org.joda.time.MutablePeriod mutablePeriod41 = seconds39.toMutablePeriod();
        int int42 = seconds36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds39);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType45 = seconds44.getPeriodType();
        org.joda.time.Duration duration46 = seconds44.toStandardDuration();
        org.joda.time.Seconds seconds48 = seconds44.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds50 = seconds44.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds52 = seconds44.minus(seconds51);
        org.joda.time.DurationFieldType durationFieldType53 = seconds52.getFieldType();
        boolean boolean54 = seconds36.isSupported(durationFieldType53);
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType57 = seconds56.getPeriodType();
        org.joda.time.Period period58 = seconds56.toPeriod();
        org.joda.time.Duration duration59 = seconds56.toStandardDuration();
        boolean boolean60 = seconds36.equals((java.lang.Object) seconds56);
        org.joda.time.Duration duration61 = seconds56.toStandardDuration();
        org.joda.time.Seconds seconds62 = seconds56.negated();
        org.joda.time.Seconds seconds63 = seconds34.minus(seconds56);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT0S" + "'", str27, "PT0S");
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.DurationFieldType durationFieldType14 = seconds4.getFieldType();
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Period period51 = seconds41.toPeriod();
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType53 = null;
        int int54 = seconds52.get(durationFieldType53);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds56 = seconds52.minus(seconds55);
        org.joda.time.Seconds seconds58 = seconds55.multipliedBy((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval59 = null;
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.secondsIn(readableInterval59);
        org.joda.time.DurationFieldType durationFieldType61 = seconds60.getFieldType();
        org.joda.time.Seconds seconds63 = seconds60.dividedBy((-1));
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds60);
        int int65 = seconds60.size();
        org.joda.time.ReadableInterval readableInterval66 = null;
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.secondsIn(readableInterval66);
        org.joda.time.DurationFieldType durationFieldType68 = seconds67.getFieldType();
        org.joda.time.Seconds seconds70 = seconds67.dividedBy((-1));
        int int71 = seconds67.getSeconds();
        org.joda.time.Seconds seconds72 = seconds60.minus(seconds67);
        boolean boolean73 = seconds58.isGreaterThan(seconds72);
        org.joda.time.ReadableInterval readableInterval74 = null;
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.secondsIn(readableInterval74);
        org.joda.time.Seconds seconds76 = seconds75.negated();
        org.joda.time.MutablePeriod mutablePeriod77 = seconds76.toMutablePeriod();
        org.joda.time.Seconds seconds78 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType79 = null;
        int int80 = seconds78.get(durationFieldType79);
        org.joda.time.Seconds seconds81 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds82 = seconds78.minus(seconds81);
        org.joda.time.DurationFieldType durationFieldType83 = seconds78.getFieldType();
        int int84 = seconds76.get(durationFieldType83);
        boolean boolean85 = seconds72.isSupported(durationFieldType83);
        org.joda.time.Seconds seconds86 = seconds41.minus(seconds72);
        org.joda.time.Seconds seconds88 = seconds86.dividedBy((int) (short) 100);
        int int89 = seconds15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds88);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(mutablePeriod77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(seconds81);
        org.junit.Assert.assertNotNull(seconds82);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = seconds19.get(durationFieldType21);
        boolean boolean23 = seconds15.isLessThan(seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        org.joda.time.DurationFieldType durationFieldType27 = seconds25.getFieldType(0);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = seconds28.get(durationFieldType29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = seconds28.minus(seconds31);
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds33.get(durationFieldType34);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds37 = seconds33.minus(seconds36);
        org.joda.time.Seconds seconds39 = seconds37.dividedBy((int) '4');
        int int40 = seconds37.size();
        int int41 = seconds32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds37);
        org.joda.time.Seconds seconds43 = seconds37.plus(0);
        java.lang.String str44 = seconds43.toString();
        org.joda.time.Period period45 = seconds43.toPeriod();
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        org.joda.time.DurationFieldType durationFieldType48 = seconds47.getFieldType();
        org.joda.time.Seconds seconds50 = seconds47.dividedBy((-1));
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds50);
        org.joda.time.DurationFieldType durationFieldType52 = seconds51.getFieldType();
        int int53 = seconds43.get(durationFieldType52);
        org.joda.time.Seconds seconds54 = seconds25.minus(seconds43);
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.secondsIn(readableInterval55);
        org.joda.time.DurationFieldType durationFieldType57 = seconds56.getFieldType();
        org.joda.time.Seconds seconds59 = seconds56.dividedBy((-1));
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds56);
        org.joda.time.DurationFieldType durationFieldType61 = null;
        boolean boolean62 = seconds60.isSupported(durationFieldType61);
        org.joda.time.ReadableInterval readableInterval63 = null;
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.secondsIn(readableInterval63);
        int int65 = seconds64.size();
        org.joda.time.Seconds seconds67 = seconds64.dividedBy(100);
        org.joda.time.PeriodType periodType68 = seconds67.getPeriodType();
        org.joda.time.Seconds seconds70 = seconds67.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds72 = seconds70.minus((-1));
        org.joda.time.DurationFieldType durationFieldType74 = seconds70.getFieldType((int) (byte) 0);
        boolean boolean75 = seconds60.isSupported(durationFieldType74);
        org.joda.time.ReadableInterval readableInterval76 = null;
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.secondsIn(readableInterval76);
        org.joda.time.Seconds seconds78 = seconds77.negated();
        org.joda.time.MutablePeriod mutablePeriod79 = seconds77.toMutablePeriod();
        org.joda.time.Duration duration80 = seconds77.toStandardDuration();
        int int81 = seconds77.getSeconds();
        java.lang.String str82 = seconds77.toString();
        org.joda.time.Seconds seconds84 = seconds77.minus((int) (short) 10);
        org.joda.time.Seconds seconds85 = seconds60.minus(seconds77);
        org.joda.time.DurationFieldType durationFieldType86 = seconds85.getFieldType();
        org.joda.time.Seconds seconds88 = seconds85.dividedBy((int) (short) 1);
        int int89 = seconds85.getSeconds();
        org.joda.time.Period period90 = seconds85.toPeriod();
        boolean boolean91 = seconds43.isLessThan(seconds85);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType93 = seconds43.getFieldType(41297762);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 41297762");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2147483644S" + "'", str44, "PT2147483644S");
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2147483644 + "'", int53 == 2147483644);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(mutablePeriod79);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "PT0S" + "'", str82, "PT0S");
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.DurationFieldType durationFieldType13 = seconds8.getFieldType();
        org.joda.time.Seconds seconds15 = seconds8.dividedBy((int) ' ');
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        org.joda.time.Seconds seconds17 = seconds8.negated();
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = seconds23.get(durationFieldType24);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds27 = seconds23.minus(seconds26);
        org.joda.time.Seconds seconds29 = seconds27.dividedBy((int) '4');
        int int30 = seconds27.size();
        int int31 = seconds22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds27);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        boolean boolean35 = seconds27.isLessThan(seconds32);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = seconds36.get(durationFieldType37);
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds40 = seconds36.minus(seconds39);
        org.joda.time.Seconds seconds41 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = seconds41.get(durationFieldType42);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds45 = seconds41.minus(seconds44);
        org.joda.time.Seconds seconds47 = seconds45.dividedBy((int) '4');
        int int48 = seconds45.size();
        int int49 = seconds40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds45);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = seconds50.get(durationFieldType51);
        boolean boolean53 = seconds45.isLessThan(seconds50);
        boolean boolean54 = seconds32.isLessThan(seconds45);
        org.joda.time.DurationFieldType durationFieldType55 = seconds45.getFieldType();
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds45);
        org.joda.time.DurationFieldType durationFieldType57 = seconds45.getFieldType();
        int int58 = seconds17.get(durationFieldType57);
        boolean boolean59 = seconds4.isGreaterThan(seconds17);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-2147483647) + "'", int58 == (-2147483647));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds7 = seconds1.multipliedBy(1);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Duration duration11 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds9.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds14 = seconds13.negated();
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = seconds16.get(durationFieldType17);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds16.minus(seconds19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = seconds21.get(durationFieldType22);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds25 = seconds21.minus(seconds24);
        org.joda.time.Seconds seconds27 = seconds25.dividedBy((int) '4');
        int int28 = seconds25.size();
        int int29 = seconds20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds25);
        boolean boolean30 = seconds15.isLessThan(seconds25);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.ReadableInterval readableInterval36 = null;
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.secondsIn(readableInterval36);
        org.joda.time.Seconds seconds38 = seconds37.negated();
        org.joda.time.MutablePeriod mutablePeriod39 = seconds37.toMutablePeriod();
        org.joda.time.Duration duration40 = seconds37.toStandardDuration();
        boolean boolean41 = seconds31.equals((java.lang.Object) seconds37);
        org.joda.time.MutablePeriod mutablePeriod42 = seconds31.toMutablePeriod();
        org.joda.time.Seconds seconds43 = seconds15.plus(seconds31);
        org.joda.time.PeriodType periodType44 = seconds31.getPeriodType();
        boolean boolean45 = seconds14.isGreaterThan(seconds31);
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        int int48 = seconds47.size();
        org.joda.time.Seconds seconds50 = seconds47.dividedBy(100);
        org.joda.time.PeriodType periodType51 = seconds50.getPeriodType();
        org.joda.time.Seconds seconds53 = seconds50.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds55 = seconds53.minus((-1));
        org.joda.time.DurationFieldType durationFieldType56 = seconds55.getFieldType();
        int int57 = seconds55.getSeconds();
        org.joda.time.Seconds seconds59 = seconds55.minus((int) 'a');
        boolean boolean60 = seconds14.isLessThan(seconds59);
        boolean boolean61 = seconds1.equals((java.lang.Object) seconds14);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        boolean boolean9 = seconds1.isGreaterThan(seconds7);
        org.joda.time.Seconds seconds11 = seconds7.multipliedBy((int) ' ');
        org.joda.time.Seconds seconds13 = seconds11.dividedBy(35);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = seconds21.isSupported(durationFieldType22);
        org.joda.time.Seconds seconds25 = seconds21.plus((int) (byte) 1);
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        java.lang.String str42 = seconds41.toString();
        org.joda.time.Period period43 = seconds41.toPeriod();
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.secondsIn(readableInterval44);
        org.joda.time.Seconds seconds46 = seconds45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = seconds45.get(durationFieldType47);
        boolean boolean49 = seconds41.isLessThan(seconds45);
        org.joda.time.Seconds seconds50 = seconds25.minus(seconds41);
        org.joda.time.Seconds seconds52 = seconds50.dividedBy((int) 'a');
        org.joda.time.Seconds seconds53 = seconds9.plus(seconds50);
        org.joda.time.DurationFieldType durationFieldType54 = seconds9.getFieldType();
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.secondsIn(readableInterval55);
        org.joda.time.DurationFieldType durationFieldType57 = seconds56.getFieldType();
        org.joda.time.Seconds seconds59 = seconds56.dividedBy((-1));
        org.joda.time.ReadableInterval readableInterval60 = null;
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.secondsIn(readableInterval60);
        int int62 = seconds61.size();
        org.joda.time.Seconds seconds64 = seconds61.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval65 = null;
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.secondsIn(readableInterval65);
        org.joda.time.DurationFieldType durationFieldType67 = seconds66.getFieldType();
        boolean boolean68 = seconds64.isSupported(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = seconds69.get(durationFieldType70);
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds73 = seconds69.minus(seconds72);
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType75 = null;
        int int76 = seconds74.get(durationFieldType75);
        org.joda.time.Seconds seconds77 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds78 = seconds74.minus(seconds77);
        org.joda.time.Seconds seconds80 = seconds78.dividedBy((int) '4');
        int int81 = seconds78.size();
        int int82 = seconds73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds78);
        org.joda.time.Seconds seconds84 = seconds78.plus(0);
        org.joda.time.Seconds seconds85 = seconds64.minus(seconds78);
        org.joda.time.DurationFieldType durationFieldType86 = seconds64.getFieldType();
        boolean boolean87 = seconds56.isSupported(durationFieldType86);
        boolean boolean88 = seconds9.isGreaterThan(seconds56);
        org.joda.time.Seconds seconds90 = seconds56.plus(100);
        org.joda.time.Seconds seconds92 = seconds90.plus((int) '#');
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483644S" + "'", str42, "PT2147483644S");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds85);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(seconds90);
        org.junit.Assert.assertNotNull(seconds92);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 100);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.Duration duration5 = seconds3.toStandardDuration();
        org.joda.time.Seconds seconds7 = seconds3.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        boolean boolean9 = seconds1.isGreaterThan(seconds7);
        org.joda.time.Seconds seconds11 = seconds7.multipliedBy((int) ' ');
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        org.joda.time.Duration duration14 = seconds13.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.secondsIn(readableInterval15);
        org.joda.time.Seconds seconds17 = seconds16.negated();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        int int20 = seconds19.size();
        boolean boolean21 = seconds17.isLessThan(seconds19);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.secondsIn(readableInterval22);
        int int24 = seconds23.size();
        org.joda.time.Seconds seconds26 = seconds23.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.DurationFieldType durationFieldType29 = seconds28.getFieldType();
        boolean boolean30 = seconds26.isSupported(durationFieldType29);
        boolean boolean31 = seconds19.isSupported(durationFieldType29);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds19);
        boolean boolean33 = seconds13.isLessThan(seconds19);
        boolean boolean34 = seconds7.isGreaterThan(seconds19);
        org.joda.time.Seconds seconds36 = seconds19.multipliedBy(1);
        org.joda.time.MutablePeriod mutablePeriod37 = seconds19.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        int int5 = seconds1.getSeconds();
        org.joda.time.Seconds seconds6 = null;
        boolean boolean7 = seconds1.isLessThan(seconds6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = seconds8.get(durationFieldType9);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = seconds8.minus(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds19 = seconds17.dividedBy((int) '4');
        int int20 = seconds17.size();
        int int21 = seconds12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds17);
        org.joda.time.Seconds seconds23 = seconds17.plus(0);
        java.lang.String str24 = seconds23.toString();
        org.joda.time.Period period25 = seconds23.toPeriod();
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.secondsIn(readableInterval26);
        org.joda.time.Seconds seconds28 = seconds27.negated();
        org.joda.time.MutablePeriod mutablePeriod29 = seconds27.toMutablePeriod();
        org.joda.time.Duration duration30 = seconds27.toStandardDuration();
        boolean boolean31 = seconds23.equals((java.lang.Object) seconds27);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = seconds32.get(durationFieldType33);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds36 = seconds32.minus(seconds35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds43 = seconds41.dividedBy((int) '4');
        int int44 = seconds41.size();
        int int45 = seconds36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds41);
        org.joda.time.Seconds seconds47 = seconds41.plus(0);
        org.joda.time.Seconds seconds48 = seconds27.plus(seconds47);
        org.joda.time.MutablePeriod mutablePeriod49 = seconds48.toMutablePeriod();
        org.joda.time.Seconds seconds50 = seconds1.minus(seconds48);
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int52 = seconds51.size();
        org.joda.time.Seconds seconds54 = seconds51.plus(0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2147483644S" + "'", str24, "PT2147483644S");
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(seconds54);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds3 = seconds1.minus((int) (byte) 0);
        boolean boolean4 = seconds0.isLessThan(seconds3);
        org.joda.time.Seconds seconds6 = seconds3.dividedBy(2147483647);
        org.joda.time.MutablePeriod mutablePeriod7 = seconds6.toMutablePeriod();
        org.joda.time.Period period8 = seconds6.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds2.toMutablePeriod();
        org.joda.time.Period period4 = seconds2.toPeriod();
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        int int10 = seconds9.size();
        boolean boolean11 = seconds7.isLessThan(seconds9);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.secondsIn(readableInterval12);
        int int14 = seconds13.size();
        org.joda.time.Seconds seconds16 = seconds13.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.secondsIn(readableInterval17);
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        boolean boolean20 = seconds16.isSupported(durationFieldType19);
        boolean boolean21 = seconds9.isSupported(durationFieldType19);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds9);
        org.joda.time.PeriodType periodType23 = seconds22.getPeriodType();
        org.joda.time.PeriodType periodType24 = seconds22.getPeriodType();
        org.joda.time.Seconds seconds26 = seconds22.dividedBy(100);
        org.joda.time.Seconds seconds28 = seconds26.multipliedBy(100);
        org.joda.time.Seconds seconds30 = seconds28.minus(41297762);
        org.joda.time.Seconds seconds31 = seconds2.plus(seconds30);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.secondsIn(readableInterval3);
        org.joda.time.Seconds seconds5 = seconds4.negated();
        org.joda.time.MutablePeriod mutablePeriod6 = seconds4.toMutablePeriod();
        int int7 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds4);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Duration duration11 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds9.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds15 = seconds9.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds17 = seconds9.minus(seconds16);
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        boolean boolean19 = seconds1.isSupported(durationFieldType18);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        org.joda.time.Period period23 = seconds21.toPeriod();
        org.joda.time.Duration duration24 = seconds21.toStandardDuration();
        boolean boolean25 = seconds1.equals((java.lang.Object) seconds21);
        org.joda.time.Seconds seconds27 = seconds21.multipliedBy(100);
        org.joda.time.PeriodType periodType28 = seconds21.getPeriodType();
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int31 = seconds30.getSeconds();
        org.joda.time.Duration duration32 = seconds30.toStandardDuration();
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.secondsIn(readableInterval33);
        org.joda.time.Seconds seconds35 = seconds34.negated();
        int int36 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Duration duration37 = seconds30.toStandardDuration();
        org.joda.time.Seconds seconds39 = seconds30.dividedBy((int) (short) -1);
        int int40 = seconds21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds39);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Minutes minutes3 = seconds1.toStandardMinutes();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(minutes3);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = seconds1.get(durationFieldType2);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds1.minus(seconds4);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = seconds6.get(durationFieldType7);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = seconds6.minus(seconds9);
        org.joda.time.Seconds seconds12 = seconds10.dividedBy((int) '4');
        int int13 = seconds10.size();
        int int14 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds10);
        boolean boolean15 = seconds0.isLessThan(seconds10);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.secondsIn(readableInterval16);
        int int18 = seconds17.size();
        org.joda.time.Seconds seconds20 = seconds17.dividedBy(100);
        org.joda.time.PeriodType periodType21 = seconds20.getPeriodType();
        org.joda.time.Seconds seconds23 = seconds20.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds25 = seconds23.minus((-1));
        org.joda.time.Seconds seconds26 = seconds10.plus(seconds23);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType29 = seconds28.getPeriodType();
        org.joda.time.Duration duration30 = seconds28.toStandardDuration();
        org.joda.time.Seconds seconds32 = seconds28.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds34 = seconds28.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds35 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds36 = seconds28.minus(seconds35);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = seconds37.get(durationFieldType38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds41 = seconds37.minus(seconds40);
        org.joda.time.Seconds seconds43 = seconds40.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = seconds44.get(durationFieldType45);
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds48 = seconds44.minus(seconds47);
        org.joda.time.Seconds seconds49 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = seconds49.get(durationFieldType50);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds53 = seconds49.minus(seconds52);
        org.joda.time.Seconds seconds55 = seconds53.dividedBy((int) '4');
        int int56 = seconds53.size();
        int int57 = seconds48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds53);
        org.joda.time.Seconds seconds59 = seconds53.plus(0);
        org.joda.time.MutablePeriod mutablePeriod60 = seconds53.toMutablePeriod();
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = seconds61.get(durationFieldType62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds65 = seconds61.minus(seconds64);
        org.joda.time.Seconds seconds66 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = seconds66.get(durationFieldType67);
        org.joda.time.Seconds seconds69 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds70 = seconds66.minus(seconds69);
        org.joda.time.Seconds seconds72 = seconds70.dividedBy((int) '4');
        int int73 = seconds70.size();
        int int74 = seconds65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds70);
        org.joda.time.DurationFieldType durationFieldType75 = seconds65.getFieldType();
        int int76 = seconds53.get(durationFieldType75);
        boolean boolean77 = seconds40.isSupported(durationFieldType75);
        boolean boolean78 = seconds36.isSupported(durationFieldType75);
        boolean boolean79 = seconds10.isGreaterThan(seconds36);
        org.joda.time.Seconds seconds80 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType81 = null;
        int int82 = seconds80.get(durationFieldType81);
        org.joda.time.Seconds seconds83 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds84 = seconds80.minus(seconds83);
        org.joda.time.Seconds seconds86 = seconds83.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds88 = seconds86.plus((int) (byte) 10);
        org.joda.time.Seconds seconds89 = seconds86.negated();
        int int90 = seconds86.getSeconds();
        int int91 = seconds36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds86);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483644 + "'", int76 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertNotNull(seconds89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = seconds2.get(durationFieldType3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = seconds2.minus(seconds5);
        org.joda.time.Seconds seconds8 = seconds6.dividedBy((int) '4');
        org.joda.time.Seconds seconds9 = seconds1.minus(seconds8);
        org.joda.time.MutablePeriod mutablePeriod10 = seconds9.toMutablePeriod();
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.secondsIn(readableInterval11);
        org.joda.time.PeriodType periodType13 = seconds12.getPeriodType();
        org.joda.time.Seconds seconds15 = seconds12.dividedBy(100);
        int int16 = seconds9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds12);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds6 = seconds1.multipliedBy((int) (short) 1);
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = seconds12.get(durationFieldType13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds16 = seconds12.minus(seconds15);
        org.joda.time.Seconds seconds18 = seconds16.dividedBy((int) '4');
        int int19 = seconds16.size();
        int int20 = seconds11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds16);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.seconds((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType23 = seconds22.getFieldType();
        int int24 = seconds11.get(durationFieldType23);
        boolean boolean25 = seconds1.isSupported(durationFieldType23);
        org.joda.time.Period period26 = seconds1.toPeriod();
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.secondsIn(readableInterval27);
        org.joda.time.Seconds seconds29 = seconds28.negated();
        org.joda.time.MutablePeriod mutablePeriod30 = seconds28.toMutablePeriod();
        boolean boolean31 = seconds1.equals((java.lang.Object) seconds28);
        int int32 = seconds1.getSeconds();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483644 + "'", int24 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.secondsIn(readableInterval5);
        org.joda.time.Seconds seconds7 = seconds6.negated();
        org.joda.time.MutablePeriod mutablePeriod8 = seconds6.toMutablePeriod();
        org.joda.time.Duration duration9 = seconds6.toStandardDuration();
        boolean boolean10 = seconds0.equals((java.lang.Object) seconds6);
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        org.joda.time.DurationFieldType durationFieldType12 = seconds6.getFieldType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds6 = seconds1.negated();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = seconds7.get(durationFieldType8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds7.minus(seconds10);
        boolean boolean12 = seconds6.isGreaterThan(seconds11);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds6);
        org.joda.time.PeriodType periodType14 = seconds6.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod15 = seconds6.toMutablePeriod();
        org.joda.time.Seconds seconds16 = seconds6.negated();
        org.joda.time.Seconds seconds18 = seconds6.plus(0);
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod20 = seconds18.toMutablePeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds0.getFieldType();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((int) ' ');
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds13 = seconds11.minus((int) (byte) 0);
        boolean boolean14 = seconds10.isLessThan(seconds13);
        boolean boolean15 = seconds9.isLessThan(seconds10);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType20 = seconds19.getPeriodType();
        org.joda.time.Duration duration21 = seconds19.toStandardDuration();
        org.joda.time.Seconds seconds23 = seconds19.multipliedBy(0);
        org.joda.time.Seconds seconds24 = seconds19.negated();
        org.joda.time.Seconds seconds25 = seconds17.plus(seconds19);
        int int26 = seconds9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds25);
        int int27 = seconds9.size();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds29 = seconds9.multipliedBy((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 10");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds6 = seconds1.multipliedBy((int) (short) 1);
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds8);
        int int13 = seconds8.size();
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.secondsIn(readableInterval14);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        org.joda.time.Seconds seconds18 = seconds15.dividedBy((-1));
        int int19 = seconds15.getSeconds();
        org.joda.time.Seconds seconds20 = seconds8.minus(seconds15);
        boolean boolean21 = seconds6.isGreaterThan(seconds8);
        org.joda.time.DurationFieldType durationFieldType22 = seconds8.getFieldType();
        org.joda.time.DurationFieldType durationFieldType23 = seconds8.getFieldType();
        org.joda.time.DurationFieldType durationFieldType24 = seconds8.getFieldType();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(durationFieldType24);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.DurationFieldType durationFieldType5 = seconds0.getFieldType();
        org.joda.time.Seconds seconds7 = seconds0.dividedBy((int) ' ');
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.Seconds seconds10 = seconds8.plus((int) (short) 0);
        org.joda.time.Seconds seconds12 = seconds8.plus((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds14 = seconds12.plus(2147483644);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483646 + 2147483644");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds12);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.dividedBy((-1));
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds22);
        org.joda.time.DurationFieldType durationFieldType24 = seconds23.getFieldType();
        int int25 = seconds15.get(durationFieldType24);
        org.joda.time.PeriodType periodType26 = seconds15.getPeriodType();
        int int27 = seconds15.getSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2147483644 + "'", int25 == 2147483644);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483644 + "'", int27 == 2147483644);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.Seconds seconds40 = seconds19.plus(seconds39);
        int int42 = seconds19.getValue((int) (short) 0);
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = seconds43.get(durationFieldType44);
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds47 = seconds43.minus(seconds46);
        org.joda.time.Seconds seconds49 = seconds46.multipliedBy((int) (short) 0);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = seconds50.get(durationFieldType51);
        org.joda.time.Seconds seconds53 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds54 = seconds50.minus(seconds53);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = seconds55.get(durationFieldType56);
        org.joda.time.Seconds seconds58 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds59 = seconds55.minus(seconds58);
        org.joda.time.Seconds seconds61 = seconds59.dividedBy((int) '4');
        int int62 = seconds59.size();
        int int63 = seconds54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds59);
        org.joda.time.Seconds seconds65 = seconds59.plus(0);
        org.joda.time.MutablePeriod mutablePeriod66 = seconds59.toMutablePeriod();
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = seconds67.get(durationFieldType68);
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds71 = seconds67.minus(seconds70);
        org.joda.time.Seconds seconds72 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType73 = null;
        int int74 = seconds72.get(durationFieldType73);
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds76 = seconds72.minus(seconds75);
        org.joda.time.Seconds seconds78 = seconds76.dividedBy((int) '4');
        int int79 = seconds76.size();
        int int80 = seconds71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds76);
        org.joda.time.DurationFieldType durationFieldType81 = seconds71.getFieldType();
        int int82 = seconds59.get(durationFieldType81);
        boolean boolean83 = seconds46.isSupported(durationFieldType81);
        int int84 = seconds19.get(durationFieldType81);
        org.joda.time.Seconds seconds86 = seconds19.plus(0);
        org.joda.time.Seconds seconds87 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds86);
        org.joda.time.Seconds seconds89 = seconds86.multipliedBy((int) (short) 0);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(seconds76);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2147483644 + "'", int82 == 2147483644);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertNotNull(seconds87);
        org.junit.Assert.assertNotNull(seconds89);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        org.joda.time.MutablePeriod mutablePeriod16 = seconds9.toMutablePeriod();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = seconds17.get(durationFieldType18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds21 = seconds17.minus(seconds20);
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = seconds22.get(durationFieldType23);
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds26 = seconds22.minus(seconds25);
        org.joda.time.Seconds seconds28 = seconds26.dividedBy((int) '4');
        int int29 = seconds26.size();
        int int30 = seconds21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds26);
        org.joda.time.DurationFieldType durationFieldType31 = seconds21.getFieldType();
        int int32 = seconds9.get(durationFieldType31);
        org.joda.time.Seconds seconds33 = seconds9.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType35 = seconds33.getFieldType((-7));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483644 + "'", int32 == 2147483644);
        org.junit.Assert.assertNotNull(seconds33);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        int int6 = seconds1.size();
        org.joda.time.ReadableInterval readableInterval7 = null;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.secondsIn(readableInterval7);
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.dividedBy((-1));
        int int12 = seconds8.getSeconds();
        org.joda.time.Seconds seconds13 = seconds1.minus(seconds8);
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = seconds14.get(durationFieldType15);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds14.minus(seconds17);
        org.joda.time.Seconds seconds20 = seconds17.multipliedBy((int) (short) 0);
        int int21 = seconds13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds20);
        org.joda.time.DurationFieldType durationFieldType22 = seconds13.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod23 = seconds13.toMutablePeriod();
        org.joda.time.Duration duration24 = seconds13.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(duration24);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds4);
        org.joda.time.DurationFieldType durationFieldType6 = seconds5.getFieldType();
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int9 = seconds8.getSeconds();
        org.joda.time.Duration duration10 = seconds8.toStandardDuration();
        org.joda.time.Seconds seconds11 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.seconds((int) (short) -1);
        int int14 = seconds13.getSeconds();
        org.joda.time.Duration duration15 = seconds13.toStandardDuration();
        int int16 = seconds13.size();
        org.joda.time.Duration duration17 = seconds13.toStandardDuration();
        org.joda.time.Seconds seconds18 = seconds13.negated();
        org.joda.time.Seconds seconds20 = seconds13.minus((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        org.joda.time.Seconds seconds26 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = seconds26.get(durationFieldType27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds30 = seconds26.minus(seconds29);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = seconds31.get(durationFieldType32);
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds35 = seconds31.minus(seconds34);
        org.joda.time.Seconds seconds37 = seconds35.dividedBy((int) '4');
        int int38 = seconds35.size();
        int int39 = seconds30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds35);
        org.joda.time.Seconds seconds41 = seconds35.plus(0);
        boolean boolean42 = seconds22.isLessThan(seconds35);
        org.joda.time.DurationFieldType durationFieldType43 = seconds22.getFieldType();
        boolean boolean44 = seconds13.isSupported(durationFieldType43);
        int int45 = seconds8.get(durationFieldType43);
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        org.joda.time.Period period48 = seconds47.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod49 = seconds47.toMutablePeriod();
        org.joda.time.Period period50 = seconds47.toPeriod();
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.TWO;
        org.joda.time.PeriodType periodType52 = seconds51.getPeriodType();
        boolean boolean53 = seconds47.isLessThan(seconds51);
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.parseSeconds("PT2147483644S");
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = seconds56.get(durationFieldType57);
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds60 = seconds56.minus(seconds59);
        org.joda.time.Seconds seconds61 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = seconds61.get(durationFieldType62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds65 = seconds61.minus(seconds64);
        org.joda.time.Seconds seconds67 = seconds65.dividedBy((int) '4');
        int int68 = seconds65.size();
        int int69 = seconds60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds65);
        org.joda.time.Seconds seconds71 = seconds65.plus(0);
        java.lang.String str72 = seconds71.toString();
        org.joda.time.Period period73 = seconds71.toPeriod();
        org.joda.time.ReadableInterval readableInterval74 = null;
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.secondsIn(readableInterval74);
        org.joda.time.DurationFieldType durationFieldType76 = seconds75.getFieldType();
        org.joda.time.Seconds seconds78 = seconds75.dividedBy((-1));
        org.joda.time.Seconds seconds79 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds78);
        org.joda.time.DurationFieldType durationFieldType80 = seconds79.getFieldType();
        int int81 = seconds71.get(durationFieldType80);
        int int82 = seconds71.size();
        int int83 = seconds71.getSeconds();
        int int84 = seconds55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds71);
        org.joda.time.Duration duration85 = seconds55.toStandardDuration();
        boolean boolean86 = seconds47.isLessThan(seconds55);
        boolean boolean87 = seconds8.equals((java.lang.Object) seconds47);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "PT2147483644S" + "'", str72, "PT2147483644S");
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2147483644 + "'", int81 == 2147483644);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2147483644 + "'", int83 == 2147483644);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.Seconds seconds2 = seconds1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = seconds1.toMutablePeriod();
        org.joda.time.Seconds seconds5 = seconds1.minus((int) (byte) -1);
        org.joda.time.Seconds seconds7 = seconds5.minus(3);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.secondsIn(readableInterval11);
        org.joda.time.Seconds seconds13 = seconds12.negated();
        org.joda.time.MutablePeriod mutablePeriod14 = seconds12.toMutablePeriod();
        int int15 = seconds9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds12);
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType18 = seconds17.getPeriodType();
        org.joda.time.Duration duration19 = seconds17.toStandardDuration();
        org.joda.time.Seconds seconds21 = seconds17.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds23 = seconds17.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds25 = seconds17.minus(seconds24);
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        boolean boolean27 = seconds9.isSupported(durationFieldType26);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType30 = seconds29.getPeriodType();
        org.joda.time.Period period31 = seconds29.toPeriod();
        org.joda.time.Duration duration32 = seconds29.toStandardDuration();
        boolean boolean33 = seconds9.equals((java.lang.Object) seconds29);
        org.joda.time.Duration duration34 = seconds29.toStandardDuration();
        int int35 = seconds5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds29);
        org.joda.time.Period period36 = seconds29.toPeriod();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(period36);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.ReadableInterval readableInterval6 = null;
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.secondsIn(readableInterval6);
        org.joda.time.Seconds seconds8 = seconds7.negated();
        org.joda.time.MutablePeriod mutablePeriod9 = seconds7.toMutablePeriod();
        org.joda.time.Duration duration10 = seconds7.toStandardDuration();
        int int11 = seconds7.getSeconds();
        boolean boolean12 = seconds1.isLessThan(seconds7);
        org.joda.time.Seconds seconds13 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = seconds13.get(durationFieldType14);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds13.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = seconds22.dividedBy((int) '4');
        int int25 = seconds22.size();
        int int26 = seconds17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds22);
        org.joda.time.Seconds seconds28 = seconds22.plus(0);
        java.lang.String str29 = seconds28.toString();
        org.joda.time.Period period30 = seconds28.toPeriod();
        org.joda.time.ReadableInterval readableInterval31 = null;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn(readableInterval31);
        org.joda.time.Seconds seconds33 = seconds32.negated();
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = seconds32.get(durationFieldType34);
        boolean boolean36 = seconds28.isLessThan(seconds32);
        org.joda.time.Seconds seconds37 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds32);
        org.joda.time.Seconds seconds38 = seconds1.plus(seconds32);
        org.joda.time.DurationFieldType durationFieldType39 = seconds1.getFieldType();
        org.joda.time.Seconds seconds41 = seconds1.minus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType42 = seconds41.getFieldType();
        org.joda.time.ReadableInterval readableInterval43 = null;
        org.joda.time.Seconds seconds44 = org.joda.time.Seconds.secondsIn(readableInterval43);
        org.joda.time.Seconds seconds45 = seconds44.negated();
        org.joda.time.ReadableInterval readableInterval46 = null;
        org.joda.time.Seconds seconds47 = org.joda.time.Seconds.secondsIn(readableInterval46);
        int int48 = seconds47.size();
        boolean boolean49 = seconds45.isLessThan(seconds47);
        org.joda.time.ReadableInterval readableInterval50 = null;
        org.joda.time.Seconds seconds51 = org.joda.time.Seconds.secondsIn(readableInterval50);
        int int52 = seconds51.size();
        org.joda.time.Seconds seconds54 = seconds51.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Seconds seconds56 = org.joda.time.Seconds.secondsIn(readableInterval55);
        org.joda.time.DurationFieldType durationFieldType57 = seconds56.getFieldType();
        boolean boolean58 = seconds54.isSupported(durationFieldType57);
        boolean boolean59 = seconds47.isSupported(durationFieldType57);
        org.joda.time.Seconds seconds60 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds47);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType63 = seconds62.getPeriodType();
        org.joda.time.Duration duration64 = seconds62.toStandardDuration();
        org.joda.time.Seconds seconds65 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds62);
        boolean boolean66 = seconds60.equals((java.lang.Object) seconds62);
        int int67 = seconds60.size();
        org.joda.time.Seconds seconds69 = seconds60.plus(0);
        org.joda.time.Seconds seconds70 = seconds41.plus(seconds60);
        java.lang.String str71 = seconds41.toString();
        org.joda.time.Seconds seconds73 = seconds41.plus((-2147483648));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds75 = seconds73.minus((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483647 + -35");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2147483644S" + "'", str29, "PT2147483644S");
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(seconds51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(seconds60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(seconds65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "PT1S" + "'", str71, "PT1S");
        org.junit.Assert.assertNotNull(seconds73);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType2 = seconds1.getPeriodType();
        org.joda.time.Duration duration3 = seconds1.toStandardDuration();
        org.joda.time.Seconds seconds5 = seconds1.multipliedBy(0);
        org.joda.time.Seconds seconds7 = seconds1.multipliedBy(1);
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Duration duration11 = seconds9.toStandardDuration();
        org.joda.time.Seconds seconds13 = seconds9.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds15 = seconds9.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds17 = seconds9.minus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = seconds18.get(durationFieldType19);
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds18.minus(seconds21);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType25 = seconds24.getPeriodType();
        org.joda.time.Duration duration26 = seconds24.toStandardDuration();
        org.joda.time.Seconds seconds28 = seconds24.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds29 = seconds28.negated();
        org.joda.time.ReadableInterval readableInterval30 = null;
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.secondsIn(readableInterval30);
        org.joda.time.Seconds seconds32 = seconds31.negated();
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Seconds seconds34 = org.joda.time.Seconds.secondsIn(readableInterval33);
        int int35 = seconds34.size();
        boolean boolean36 = seconds32.isLessThan(seconds34);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Seconds seconds38 = org.joda.time.Seconds.secondsIn(readableInterval37);
        int int39 = seconds38.size();
        org.joda.time.Seconds seconds41 = seconds38.dividedBy(100);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Seconds seconds43 = org.joda.time.Seconds.secondsIn(readableInterval42);
        org.joda.time.DurationFieldType durationFieldType44 = seconds43.getFieldType();
        boolean boolean45 = seconds41.isSupported(durationFieldType44);
        boolean boolean46 = seconds34.isSupported(durationFieldType44);
        boolean boolean47 = seconds28.isSupported(durationFieldType44);
        boolean boolean48 = seconds21.isSupported(durationFieldType44);
        org.joda.time.Seconds seconds49 = seconds17.plus(seconds21);
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds17);
        org.joda.time.Seconds seconds52 = org.joda.time.Seconds.seconds((int) (byte) 1);
        org.joda.time.PeriodType periodType53 = seconds52.getPeriodType();
        org.joda.time.Duration duration54 = seconds52.toStandardDuration();
        org.joda.time.Seconds seconds56 = seconds52.dividedBy((int) (byte) 10);
        org.joda.time.Seconds seconds58 = seconds52.dividedBy((int) (short) 1);
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = seconds59.get(durationFieldType60);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds63 = seconds59.minus(seconds62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = seconds64.get(durationFieldType65);
        org.joda.time.Seconds seconds67 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds68 = seconds64.minus(seconds67);
        org.joda.time.Seconds seconds70 = seconds68.dividedBy((int) '4');
        int int71 = seconds68.size();
        int int72 = seconds63.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds68);
        org.joda.time.Seconds seconds74 = seconds68.plus(0);
        java.lang.String str75 = seconds74.toString();
        org.joda.time.Period period76 = seconds74.toPeriod();
        org.joda.time.ReadableInterval readableInterval77 = null;
        org.joda.time.Seconds seconds78 = org.joda.time.Seconds.secondsIn(readableInterval77);
        org.joda.time.Seconds seconds79 = seconds78.negated();
        org.joda.time.MutablePeriod mutablePeriod80 = seconds78.toMutablePeriod();
        org.joda.time.Duration duration81 = seconds78.toStandardDuration();
        boolean boolean82 = seconds74.equals((java.lang.Object) seconds78);
        org.joda.time.Seconds seconds83 = seconds52.minus(seconds78);
        boolean boolean84 = seconds50.isLessThan(seconds78);
        org.joda.time.DurationFieldType durationFieldType85 = seconds50.getFieldType();
        int int86 = seconds1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds50);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(seconds56);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(seconds63);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(seconds67);
        org.junit.Assert.assertNotNull(seconds68);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "PT2147483644S" + "'", str75, "PT2147483644S");
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(mutablePeriod80);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.secondsIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.dividedBy((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds1);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = seconds5.isSupported(durationFieldType6);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.secondsIn(readableInterval8);
        int int10 = seconds9.size();
        org.joda.time.Seconds seconds12 = seconds9.dividedBy(100);
        org.joda.time.PeriodType periodType13 = seconds12.getPeriodType();
        org.joda.time.Seconds seconds15 = seconds12.multipliedBy((int) (byte) 0);
        org.joda.time.Seconds seconds17 = seconds15.minus((-1));
        org.joda.time.DurationFieldType durationFieldType19 = seconds15.getFieldType((int) (byte) 0);
        boolean boolean20 = seconds5.isSupported(durationFieldType19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.secondsIn(readableInterval21);
        org.joda.time.Seconds seconds23 = seconds22.negated();
        org.joda.time.MutablePeriod mutablePeriod24 = seconds22.toMutablePeriod();
        org.joda.time.Duration duration25 = seconds22.toStandardDuration();
        int int26 = seconds22.getSeconds();
        java.lang.String str27 = seconds22.toString();
        org.joda.time.Seconds seconds29 = seconds22.minus((int) (short) 10);
        org.joda.time.Seconds seconds30 = seconds5.minus(seconds22);
        org.joda.time.DurationFieldType durationFieldType31 = seconds30.getFieldType();
        org.joda.time.Seconds seconds33 = seconds30.dividedBy((int) (short) 1);
        int int34 = seconds30.getSeconds();
        java.lang.String str35 = seconds30.toString();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT0S" + "'", str27, "PT0S");
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "PT0S" + "'", str35, "PT0S");
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = seconds0.get(durationFieldType1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds4 = seconds0.minus(seconds3);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = seconds5.get(durationFieldType6);
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds9 = seconds5.minus(seconds8);
        org.joda.time.Seconds seconds11 = seconds9.dividedBy((int) '4');
        int int12 = seconds9.size();
        int int13 = seconds4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds9);
        org.joda.time.Seconds seconds15 = seconds9.plus(0);
        java.lang.String str16 = seconds15.toString();
        org.joda.time.Period period17 = seconds15.toPeriod();
        org.joda.time.ReadableInterval readableInterval18 = null;
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.secondsIn(readableInterval18);
        org.joda.time.Seconds seconds20 = seconds19.negated();
        org.joda.time.MutablePeriod mutablePeriod21 = seconds19.toMutablePeriod();
        org.joda.time.Duration duration22 = seconds19.toStandardDuration();
        boolean boolean23 = seconds15.equals((java.lang.Object) seconds19);
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = seconds24.get(durationFieldType25);
        org.joda.time.Seconds seconds27 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds28 = seconds24.minus(seconds27);
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = seconds29.get(durationFieldType30);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds29.minus(seconds32);
        org.joda.time.Seconds seconds35 = seconds33.dividedBy((int) '4');
        int int36 = seconds33.size();
        int int37 = seconds28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) seconds33);
        org.joda.time.Seconds seconds39 = seconds33.plus(0);
        org.joda.time.Seconds seconds40 = seconds19.plus(seconds39);
        org.joda.time.PeriodType periodType41 = seconds40.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType43 = seconds40.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483644S" + "'", str16, "PT2147483644S");
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(periodType41);
    }
}

