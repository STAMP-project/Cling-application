import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test2501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2501");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        java.lang.Object[] objArray15 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray10);
        java.lang.String str16 = nativeArray10.getClassName();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray10.setAttributes("object", 101);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 101");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Array" + "'", str16, "Array");
    }

    @Test
    public void test2502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2502");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable20 = nativeArray19.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable21 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray19);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", true);
        boolean boolean30 = nativeArray23.hasPrototypeMap();
        int int31 = nativeArray23.size();
        boolean boolean32 = nativeArray23.isEmpty();
        nativeArray19.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        java.lang.Object obj34 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) nativeArray19);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = nativeArray19.getAttributes(4);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 4 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertNull(scriptable21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj34);
    }

    @Test
    public void test2503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2503");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable10 = null;
        java.lang.Object obj11 = nativeArray1.get((int) '#', scriptable10);
        nativeArray1.preventExtensions();
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        java.lang.Object[] objArray19 = nativeArray15.toArray();
        java.lang.reflect.Method method20 = null;
        java.lang.reflect.Method method21 = null;
        nativeArray1.defineProperty("Array", (java.lang.Object) nativeArray15, method20, method21, 13);
        java.lang.Object obj25 = null;
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "hi!", obj25);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        java.lang.Object[] objArray43 = nativeArray37.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray37.getParentScope();
        boolean boolean45 = nativeArray29.containsAll((java.util.Collection) nativeArray37);
        boolean boolean46 = nativeArray29.hasPrototypeMap();
        java.lang.Object obj48 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, 10);
        boolean boolean49 = nativeArray15.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.Scriptable scriptable50 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(scriptable50);
    }

    @Test
    public void test2504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2504");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "", true);
        boolean boolean27 = nativeArray20.hasPrototypeMap();
        java.lang.reflect.Method method30 = null;
        java.lang.reflect.Method method31 = null;
        nativeArray20.defineProperty("hi!", (java.lang.Object) (-1L), method30, method31, (int) (byte) 10);
        boolean boolean35 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "");
        nativeArray20.sealObject();
        boolean boolean37 = nativeArray20.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", (java.lang.Object) 100);
        java.lang.Object obj46 = nativeArray39.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray42);
        java.lang.Object[] objArray47 = nativeArray42.toArray();
        java.lang.Object[] objArray48 = nativeArray20.toArray(objArray47);
        java.lang.Integer[] intArray49 = nativeArray20.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray49);
        boolean boolean51 = nativeArray50.isExtensible();
        boolean boolean52 = nativeArray50.avoidObjectDetection();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "object", (java.lang.Object) nativeArray50);
        com.google.javascript.rhino.head.Scriptable scriptable54 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[null]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[null]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(scriptable54);
    }

    @Test
    public void test2505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2505");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        boolean boolean65 = nativeArray12.isEmpty();
        boolean boolean66 = nativeArray12.isEmpty();
        int int67 = nativeArray12.size();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
    }

    @Test
    public void test2506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2506");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", (java.lang.Object) 100);
        java.lang.Object obj18 = nativeArray11.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray14);
        java.lang.Object[] objArray19 = nativeArray14.toArray();
        nativeArray4.setAttributes((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray14, (int) (short) 0);
        boolean boolean22 = nativeArray14.isEmpty();
        nativeArray14.activatePrototypeMap(10);
        com.google.javascript.rhino.head.Scriptable scriptable26 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray14, "object");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(scriptable26);
    }

    @Test
    public void test2507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2507");
        com.google.javascript.rhino.head.Scriptable scriptable0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj2 = com.google.javascript.rhino.head.ScriptableObject.getProperty(scriptable0, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2508");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        boolean boolean65 = nativeArray12.isSealed();
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray12.getParentScope();
        boolean boolean68 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, (int) (short) 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test2509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2509");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.Context context37 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        nativeArray9.defineOwnProperties(context37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray39);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int61 = nativeArray59.lastIndexOf((java.lang.Object) (short) 10);
        long long62 = nativeArray59.getLength();
        nativeArray59.delete((int) (byte) 1);
        boolean boolean65 = nativeArray59.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable69 = nativeArray68.getParentScope();
        java.lang.Object[] objArray70 = nativeArray68.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "", (java.lang.Object) nativeArray68, 0);
        java.lang.Object[] objArray73 = nativeArray59.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator78 = nativeArray75.iterator();
        nativeArray9.putConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) iterator78);
        com.google.javascript.rhino.head.Scriptable scriptable80 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        nativeArray9.delete("object");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray83 = nativeArray9.getIds();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 24");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(scriptable69);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[null]");
        org.junit.Assert.assertNotNull(iterator78);
        org.junit.Assert.assertNull(scriptable80);
    }

    @Test
    public void test2510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2510");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        int int8 = nativeArray1.size();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        java.lang.Object[] objArray10 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean11 = nativeArray1.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        java.lang.Object[] objArray20 = nativeArray14.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable21 = nativeArray14.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray14.getParentScope();
        java.util.ListIterator listIterator23 = nativeArray14.listIterator();
        com.google.javascript.rhino.head.Scriptable scriptable25 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray14, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "", true);
        boolean boolean34 = nativeArray27.hasPrototypeMap();
        java.lang.reflect.Method method37 = null;
        java.lang.reflect.Method method38 = null;
        nativeArray27.defineProperty("hi!", (java.lang.Object) (-1L), method37, method38, (int) (byte) 10);
        boolean boolean42 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "");
        nativeArray27.sealObject();
        boolean boolean44 = nativeArray27.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "", (java.lang.Object) 100);
        java.lang.Object obj53 = nativeArray46.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray49);
        java.lang.Object[] objArray54 = nativeArray49.toArray();
        java.lang.Object[] objArray55 = nativeArray27.toArray(objArray54);
        java.lang.Integer[] intArray56 = nativeArray27.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray56);
        boolean boolean58 = nativeArray57.isExtensible();
        boolean boolean59 = nativeArray57.avoidObjectDetection();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.put("", scriptable25, (java.lang.Object) boolean59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
        org.junit.Assert.assertNull(scriptable21);
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNotNull(listIterator23);
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[null]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test2511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2511");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "", (java.lang.Object) 100);
        java.lang.Object obj34 = nativeArray27.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray30);
        int int35 = nativeArray13.indexOf(obj34);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.Callable callable52 = null;
        nativeArray41.setGetterOrSetter("hi!", 0, callable52, false);
        com.google.javascript.rhino.head.Scriptable scriptable55 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray41);
        nativeArray13.defineProperty("hi!", (java.lang.Object) scriptable55, 8);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "");
        java.lang.Object obj61 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray13.getParentScope();
        java.lang.Object obj64 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "object");
        java.lang.Object obj66 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test2512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2512");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        nativeArray11.activatePrototypeMap(8);
        nativeArray11.delete(8);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean36 = nativeArray27.hasPrototypeMap();
        java.lang.Object[] objArray37 = nativeArray27.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj54 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        com.google.javascript.rhino.head.Callable callable57 = null;
        nativeArray46.setGetterOrSetter("hi!", 0, callable57, false);
        nativeArray40.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray46, (int) (short) 10);
        java.lang.Object obj62 = null;
        int int63 = nativeArray40.lastIndexOf(obj62);
        boolean boolean64 = nativeArray27.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray40);
        nativeArray27.preventExtensions();
        java.lang.Object[] objArray66 = nativeArray27.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable70 = nativeArray69.getParentScope();
        java.lang.Object[] objArray71 = nativeArray69.getIds();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, 0, (java.lang.Object) objArray71);
        java.lang.String str73 = nativeArray27.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable77 = nativeArray76.getParentScope();
        java.lang.Object[] objArray78 = nativeArray76.getIds();
        boolean boolean79 = nativeArray76.isEmpty();
        java.lang.Object obj81 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, 8);
        com.google.javascript.rhino.head.Scriptable scriptable82 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object obj83 = nativeArray27.get(4, scriptable82);
        boolean boolean84 = nativeArray27.isExtensible();
        nativeArray11.defineConst("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!]");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNull(scriptable70);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Array" + "'", str73, "Array");
        org.junit.Assert.assertNull(scriptable77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNull(scriptable82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test2513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2513");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.isSealed();
        boolean boolean11 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        com.google.javascript.rhino.head.Callable callable34 = null;
        nativeArray23.setGetterOrSetter("hi!", 0, callable34, false);
        java.lang.Integer[] intArray37 = nativeArray23.getIndexIds();
        nativeArray16.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        java.lang.Object obj39 = nativeArray1.get((java.lang.Object) nativeArray23);
        java.lang.Object[] objArray40 = nativeArray1.toArray();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        nativeArray1.delete(10);
        boolean boolean45 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable48 = nativeArray47.getParentScope();
        java.lang.Object[] objArray49 = nativeArray47.getIds();
        boolean boolean50 = nativeArray47.isEmpty();
        boolean boolean51 = nativeArray1.containsAll((java.util.Collection) nativeArray47);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(scriptable48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test2514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2514");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean39 = nativeArray21.isSealed();
        boolean boolean40 = nativeArray21.hasPrototypeMap();
        java.lang.Object obj42 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable45 = nativeArray44.getParentScope();
        java.lang.Object[] objArray46 = nativeArray44.getIds();
        boolean boolean47 = nativeArray44.isEmpty();
        int int48 = nativeArray44.size();
        java.lang.Object[] objArray49 = nativeArray44.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 8);
        java.lang.Object obj52 = nativeArray21.associateValue((java.lang.Object) nativeArray44, (java.lang.Object) 8);
        boolean boolean54 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "object");
        java.lang.String str55 = nativeArray44.getClassName();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNull(scriptable45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 8 + "'", obj52, 8);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Array" + "'", str55, "Array");
    }

    @Test
    public void test2515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2515");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        nativeArray1.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        int int33 = nativeArray22.size();
        boolean boolean34 = nativeArray1.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean36 = nativeArray22.isConst("hi!");
        nativeArray22.delete("Array");
        int int39 = nativeArray22.size();
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
    }

    @Test
    public void test2516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2516");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Integer[] intArray34 = nativeArray24.getIndexIds();
        java.lang.Object obj36 = null;
        nativeArray24.defineProperty("", obj36, 10);
        com.google.javascript.rhino.head.Scriptable scriptable39 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Object[] objArray40 = nativeArray24.toArray();
        java.lang.Integer[] intArray41 = nativeArray24.getIndexIds();
        com.google.javascript.rhino.head.Scriptable scriptable42 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNull(scriptable42);
    }

    @Test
    public void test2517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2517");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "hi!");
        long long48 = nativeArray43.jsGet_length();
        boolean boolean49 = nativeArray4.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable58 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray52);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable66 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray60);
        nativeArray52.setPrototype(scriptable66);
        int int68 = nativeArray52.size();
        java.lang.Object obj70 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray52, "hi!");
        nativeArray43.defineConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        long long72 = nativeArray43.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray74.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray77, (java.lang.Object) (-1));
        java.lang.Object[] objArray80 = nativeArray74.getAllIds();
        java.lang.String str81 = nativeArray74.getTypeOf();
        int int82 = nativeArray74.size();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = nativeArray43.addAll((java.util.Collection) nativeArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[length]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "object" + "'", str81, "object");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
    }

    @Test
    public void test2518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2518");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        nativeArray11.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        nativeArray20.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, (int) (byte) -1, (java.lang.Object) nativeArray20);
        boolean boolean27 = nativeArray4.has(4, (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.Scriptable scriptable28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = nativeArray11.hasInstance(scriptable28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test2519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2519");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, (int) (short) 10);
        java.lang.Object obj19 = nativeArray4.get(0);
        com.google.javascript.rhino.head.Scriptable scriptable20 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        java.lang.Integer[] intArray21 = nativeArray4.getIndexIds();
        nativeArray4.delete(1);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertNotNull(intArray21);
    }

    @Test
    public void test2520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2520");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        java.util.ListIterator listIterator17 = nativeArray1.listIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(listIterator17);
    }

    @Test
    public void test2521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2521");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        boolean boolean22 = nativeArray15.hasPrototypeMap();
        java.util.ListIterator listIterator23 = nativeArray15.listIterator();
        boolean boolean24 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        int int26 = nativeArray1.indexOf((java.lang.Object) ' ');
        long long27 = nativeArray1.getLength();
        boolean boolean29 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.getAllIds();
        java.lang.String str39 = nativeArray32.getTypeOf();
        nativeArray1.defineConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(listIterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[length]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "object" + "'", str39, "object");
    }

    @Test
    public void test2522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2522");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        java.lang.Object[] objArray42 = nativeArray36.getAllIds();
        nativeArray36.delete("");
        java.lang.Object obj45 = nativeArray21.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable48 = nativeArray21.getPrototype();
        com.google.javascript.rhino.head.Context context49 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        java.lang.Object[] objArray65 = nativeArray59.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray59.getParentScope();
        boolean boolean67 = nativeArray51.containsAll((java.util.Collection) nativeArray59);
        nativeArray21.defineOwnProperties(context49, (com.google.javascript.rhino.head.ScriptableObject) nativeArray51);
        java.lang.Object obj69 = nativeArray1.get((int) ' ', (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray72.activatePrototypeMap((int) (short) 100);
        long long75 = nativeArray72.jsGet_length();
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray80 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray80, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray85.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj88 = nativeArray80.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray85);
        boolean boolean89 = nativeArray80.hasPrototypeMap();
        java.lang.Object[] objArray90 = nativeArray80.getIds();
        int int91 = nativeArray80.size();
        boolean boolean92 = nativeArray72.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray80);
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject94 = nativeArray51.exportAsJSClass(1, (com.google.javascript.rhino.head.Scriptable) nativeArray72, false);
        java.lang.Object obj96 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) idFunctionObject94, "object");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[length]");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(scriptable48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[null]");
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[hi!]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(idFunctionObject94);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test2523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2523");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Object[] objArray10 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean25 = nativeArray16.hasPrototypeMap();
        java.lang.Object[] objArray26 = nativeArray16.getIds();
        int int27 = nativeArray16.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray16.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray34.getParentScope();
        java.lang.Object[] objArray36 = nativeArray34.getIds();
        boolean boolean37 = nativeArray34.isEmpty();
        nativeArray1.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) boolean37);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        java.lang.Object[] objArray47 = nativeArray41.getAllIds();
        java.lang.String str48 = nativeArray41.getTypeOf();
        boolean boolean49 = nativeArray16.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        com.google.javascript.rhino.head.Scriptable scriptable50 = null;
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable50);
        java.lang.Class<?> wildcardClass52 = objArray51.getClass();
        java.lang.Object obj53 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) objArray51);
        nativeArray41.preventExtensions();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[length]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "object" + "'", str48, "object");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNull(obj53);
    }

    @Test
    public void test2524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2524");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        boolean boolean4 = nativeArray1.isEmpty();
        java.lang.Object obj6 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        com.google.javascript.rhino.head.Context context7 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        nativeArray9.delete((int) (byte) 1);
        java.lang.Integer[] intArray15 = nativeArray9.getIndexIds();
        nativeArray1.defineOwnProperties(context7, (com.google.javascript.rhino.head.ScriptableObject) nativeArray9);
        java.lang.Object obj20 = nativeArray9.getGetterOrSetter("", (int) (short) 0, true);
        boolean boolean22 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "object");
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test2525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2525");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int35 = nativeArray33.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray20.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray33);
        java.lang.Object obj37 = nativeArray1.get((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj42 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj55 = nativeArray47.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        boolean boolean56 = nativeArray47.hasPrototypeMap();
        java.lang.Object[] objArray57 = nativeArray47.getIds();
        int int58 = nativeArray47.size();
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray64, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj72 = nativeArray64.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray69);
        boolean boolean73 = nativeArray64.hasPrototypeMap();
        java.lang.Object[] objArray74 = nativeArray64.getIds();
        int int75 = nativeArray64.size();
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int79 = nativeArray77.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray64.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray77);
        java.lang.Object obj81 = nativeArray47.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.Object[] objArray82 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray47);
        boolean boolean84 = nativeArray47.isConst("hi!");
        int int85 = nativeArray40.indexOf((java.lang.Object) boolean84);
        nativeArray1.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray40, 4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = nativeArray1.remove((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[hi!]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test2526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2526");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        nativeArray1.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean16 = nativeArray1.isExtensible();
        nativeArray1.delete((int) (short) 0);
        java.lang.Object[] objArray19 = nativeArray1.toArray();
        java.lang.String str20 = nativeArray1.getClassName();
        boolean boolean22 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Array" + "'", str20, "Array");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test2527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2527");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        java.lang.String str8 = nativeArray1.getTypeOf();
        nativeArray1.delete("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable18 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        nativeArray20.delete((int) (byte) 1);
        boolean boolean26 = nativeArray20.isExtensible();
        java.lang.Object obj28 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, 4);
        java.lang.Object[] objArray29 = nativeArray20.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj43 = nativeArray35.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray40);
        boolean boolean44 = nativeArray35.hasPrototypeMap();
        java.lang.Object[] objArray45 = nativeArray35.getIds();
        int int46 = nativeArray35.size();
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray35.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray48);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray53.getParentScope();
        java.lang.Object[] objArray55 = nativeArray53.getIds();
        boolean boolean56 = nativeArray53.isEmpty();
        nativeArray20.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) boolean56);
        boolean boolean58 = nativeArray12.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray35);
        java.lang.Object obj60 = nativeArray1.associateValue((java.lang.Object) boolean58, (java.lang.Object) ' ');
        long long61 = nativeArray1.getLength();
        nativeArray1.delete((int) (short) -1);
        java.lang.Object obj65 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "object" + "'", str8, "object");
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + ' ' + "'", obj60, ' ');
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test2528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2528");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        java.lang.Object obj37 = nativeArray9.get((long) 0);
        boolean boolean39 = nativeArray9.isConst("object");
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        nativeArray42.delete((int) (byte) 1);
        boolean boolean49 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "");
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        java.lang.Object[] objArray65 = nativeArray59.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray59.getParentScope();
        boolean boolean67 = nativeArray51.containsAll((java.util.Collection) nativeArray59);
        boolean boolean68 = nativeArray42.containsAll((java.util.Collection) nativeArray51);
        java.lang.Object obj69 = nativeArray9.get(13, (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[null]");
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test2529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2529");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        boolean boolean3 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test2530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2530");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Object[] objArray10 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean25 = nativeArray16.hasPrototypeMap();
        java.lang.Object[] objArray26 = nativeArray16.getIds();
        int int27 = nativeArray16.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray16.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray34.getParentScope();
        java.lang.Object[] objArray36 = nativeArray34.getIds();
        boolean boolean37 = nativeArray34.isEmpty();
        nativeArray1.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) boolean37);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        long long40 = nativeArray1.jsGet_length();
        boolean boolean41 = nativeArray1.isSealed();
        int int42 = nativeArray1.size();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        long long47 = nativeArray44.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "", true);
        boolean boolean51 = nativeArray44.hasPrototypeMap();
        java.lang.reflect.Method method54 = null;
        java.lang.reflect.Method method55 = null;
        nativeArray44.defineProperty("hi!", (java.lang.Object) (-1L), method54, method55, (int) (byte) 10);
        boolean boolean59 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "");
        nativeArray44.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray63 = nativeArray44.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray69, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray74.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray77, (java.lang.Object) (-1));
        nativeArray66.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray74, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, 0, (java.lang.Object) nativeArray74);
        int int83 = nativeArray1.indexOf((java.lang.Object) nativeArray74);
        nativeArray74.sealObject();
        java.lang.String str85 = nativeArray74.getClassName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[hi!, length]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Array" + "'", str85, "Array");
    }

    @Test
    public void test2531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2531");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        boolean boolean4 = nativeArray1.avoidObjectDetection();
        java.lang.Object obj8 = nativeArray1.getGetterOrSetter("", 0, true);
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.avoidObjectDetection();
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test2532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2532");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        nativeArray12.sealObject();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray29, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj44 = nativeArray36.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        com.google.javascript.rhino.head.Callable callable47 = null;
        nativeArray36.setGetterOrSetter("hi!", 0, callable47, false);
        java.lang.Integer[] intArray50 = nativeArray36.getIndexIds();
        nativeArray29.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray36);
        java.lang.Object obj52 = nativeArray12.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        boolean boolean53 = nativeArray12.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable62 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray55);
        java.lang.Object[] objArray63 = nativeArray55.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int67 = nativeArray65.lastIndexOf((java.lang.Object) (short) 10);
        long long68 = nativeArray65.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray65, "", true);
        boolean boolean72 = nativeArray65.hasPrototypeMap();
        int int73 = nativeArray65.size();
        boolean boolean74 = nativeArray65.isEmpty();
        boolean boolean76 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray65, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int81 = nativeArray79.lastIndexOf((java.lang.Object) (short) 10);
        long long82 = nativeArray79.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray79, "", true);
        boolean boolean86 = nativeArray79.hasPrototypeMap();
        java.util.ListIterator listIterator87 = nativeArray79.listIterator();
        boolean boolean88 = nativeArray65.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray79);
        java.lang.Object[] objArray89 = nativeArray65.getAllIds();
        java.lang.Object[] objArray90 = nativeArray55.toArray(objArray89);
        long long91 = nativeArray55.getLength();
        boolean boolean92 = nativeArray12.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray55);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[length]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 1L + "'", long68 == 1L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 1L + "'", long82 == 1L);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(listIterator87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[null]");
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[null]");
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 1L + "'", long91 == 1L);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test2533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2533");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        nativeArray1.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        int int33 = nativeArray22.size();
        boolean boolean34 = nativeArray1.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        java.lang.Object[] objArray35 = nativeArray22.getIds();
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!]");
    }

    @Test
    public void test2534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2534");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable10 = null;
        java.lang.Object obj11 = nativeArray1.get((int) '#', scriptable10);
        nativeArray1.preventExtensions();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.activatePrototypeMap(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj11);
    }

    @Test
    public void test2535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2535");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        nativeArray4.delete(100);
        com.google.javascript.rhino.head.Scriptable scriptable29 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!", false);
        com.google.javascript.rhino.head.Scriptable scriptable33 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertNull(scriptable29);
        org.junit.Assert.assertNull(scriptable33);
    }

    @Test
    public void test2536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2536");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean11 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray1.getPrototype();
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        java.lang.Object[] objArray21 = nativeArray15.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray15.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray15.getParentScope();
        boolean boolean24 = nativeArray15.isSealed();
        boolean boolean25 = nativeArray15.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        java.lang.Object[] objArray34 = nativeArray28.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray28.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray28.getParentScope();
        boolean boolean37 = nativeArray28.isSealed();
        java.lang.Object obj39 = nativeArray28.get(0L);
        long long40 = nativeArray28.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        nativeArray42.delete((int) (byte) 1);
        boolean boolean48 = nativeArray42.isExtensible();
        com.google.javascript.rhino.head.Scriptable scriptable49 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray42);
        nativeArray15.putConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) nativeArray42);
        java.lang.Object obj51 = nativeArray1.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        java.lang.Object[] objArray52 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray28);
        boolean boolean54 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[null]");
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null]");
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(scriptable49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test2537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2537");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        java.lang.Object[] objArray44 = nativeArray38.getAllIds();
        nativeArray38.delete("");
        java.lang.Object obj47 = nativeArray23.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        java.lang.Integer[] intArray48 = nativeArray38.getIndexIds();
        nativeArray1.defineProperty("", (java.lang.Object) nativeArray38, 10);
        boolean boolean51 = nativeArray38.avoidObjectDetection();
        nativeArray38.delete("hi!");
        java.util.ListIterator listIterator54 = nativeArray38.listIterator();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[length]");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(listIterator54);
    }

    @Test
    public void test2538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2538");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int35 = nativeArray33.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray20.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray33);
        java.lang.Object obj37 = nativeArray1.get((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj42 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj55 = nativeArray47.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        boolean boolean56 = nativeArray47.hasPrototypeMap();
        java.lang.Object[] objArray57 = nativeArray47.getIds();
        int int58 = nativeArray47.size();
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray64, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj72 = nativeArray64.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray69);
        boolean boolean73 = nativeArray64.hasPrototypeMap();
        java.lang.Object[] objArray74 = nativeArray64.getIds();
        int int75 = nativeArray64.size();
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int79 = nativeArray77.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray64.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray77);
        java.lang.Object obj81 = nativeArray47.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.Object[] objArray82 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray47);
        boolean boolean84 = nativeArray47.isConst("hi!");
        int int85 = nativeArray40.indexOf((java.lang.Object) boolean84);
        nativeArray1.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray40, 4);
        boolean boolean89 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, 0);
        java.util.ListIterator listIterator91 = nativeArray40.listIterator((int) (short) 0);
        long long92 = nativeArray40.jsGet_length();
        boolean boolean94 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "object");
        com.google.javascript.rhino.head.Scriptable scriptable95 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray40);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[hi!]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(listIterator91);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 1L + "'", long92 == 1L);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(scriptable95);
    }

    @Test
    public void test2539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2539");
        com.google.javascript.rhino.head.Scriptable scriptable0 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = com.google.javascript.rhino.head.ScriptableObject.hasProperty(scriptable0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2540");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        long long21 = nativeArray17.getLength();
        long long22 = nativeArray17.jsGet_length();
        java.lang.String str23 = nativeArray17.getTypeOf();
        java.lang.String str24 = nativeArray17.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray29, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        nativeArray26.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj55 = nativeArray47.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        boolean boolean56 = nativeArray47.hasPrototypeMap();
        java.lang.Object[] objArray57 = nativeArray47.getIds();
        int int58 = nativeArray47.size();
        boolean boolean59 = nativeArray26.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray65, (java.lang.Object) (-1));
        java.lang.Object[] objArray68 = nativeArray62.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable69 = nativeArray62.getParentScope();
        com.google.javascript.rhino.head.Context context70 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray72.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray75, (java.lang.Object) (-1));
        java.lang.Object[] objArray78 = nativeArray72.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable79 = nativeArray72.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable80 = nativeArray72.getParentScope();
        java.util.ListIterator listIterator81 = nativeArray72.listIterator();
        nativeArray62.defineOwnProperties(context70, (com.google.javascript.rhino.head.ScriptableObject) nativeArray72);
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "hi!", (java.lang.Object) nativeArray72, 13);
        java.lang.Integer[] intArray85 = nativeArray72.getIndexIds();
        java.lang.Object[] objArray86 = nativeArray17.toArray((java.lang.Object[]) intArray85);
        java.lang.Object[] objArray87 = nativeArray17.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray88 = new com.google.javascript.rhino.head.NativeArray(objArray87);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "object" + "'", str23, "object");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "object" + "'", str24, "object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[null]");
        org.junit.Assert.assertNull(scriptable69);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[null]");
        org.junit.Assert.assertNull(scriptable79);
        org.junit.Assert.assertNull(scriptable80);
        org.junit.Assert.assertNotNull(listIterator81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[null]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[null]");
    }

    @Test
    public void test2541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2541");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator4 = nativeArray1.iterator();
        boolean boolean5 = nativeArray1.hasPrototypeMap();
        boolean boolean7 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        boolean boolean24 = nativeArray15.hasPrototypeMap();
        java.lang.Object[] objArray25 = nativeArray15.getIds();
        int int26 = nativeArray15.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        java.lang.Object obj49 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.Object[] objArray50 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        boolean boolean52 = nativeArray15.isConst("hi!");
        nativeArray10.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        java.lang.Object obj54 = nativeArray1.get((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        java.lang.Object[] objArray63 = nativeArray57.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray(objArray63);
        java.lang.Object obj65 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.String str66 = nativeArray64.getTypeOf();
        boolean boolean68 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = nativeArray64.get((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(iterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[null]");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "object" + "'", str66, "object");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test2542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2542");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        boolean boolean49 = nativeArray42.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        java.lang.Object[] objArray57 = nativeArray51.getAllIds();
        nativeArray51.delete("");
        boolean boolean60 = nativeArray42.contains((java.lang.Object) "");
        boolean boolean61 = nativeArray4.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean63 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, 4);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "object", false);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[length]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test2543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2543");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable10 = null;
        java.lang.Object obj11 = nativeArray1.get((int) '#', scriptable10);
        boolean boolean12 = nativeArray1.avoidObjectDetection();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2544");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        boolean boolean22 = nativeArray15.hasPrototypeMap();
        java.util.ListIterator listIterator23 = nativeArray15.listIterator();
        boolean boolean24 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        int int26 = nativeArray1.indexOf((java.lang.Object) ' ');
        long long27 = nativeArray1.getLength();
        boolean boolean29 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        java.lang.Object[] objArray30 = nativeArray1.getIds();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = nativeArray1.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(listIterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
    }

    @Test
    public void test2545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2545");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        nativeArray1.setAttributes("hi!", 10);
        boolean boolean18 = nativeArray1.hasPrototypeMap();
        long long19 = nativeArray1.jsGet_length();
        java.lang.Object[] objArray20 = nativeArray1.toArray();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
    }

    @Test
    public void test2546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2546");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.String str40 = nativeArray4.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        nativeArray42.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        nativeArray51.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, (int) (byte) -1, (java.lang.Object) nativeArray51);
        java.util.Iterator iterator58 = nativeArray42.iterator();
        java.lang.Object[] objArray59 = nativeArray42.toArray();
        boolean boolean60 = nativeArray4.containsAll((java.util.Collection) nativeArray42);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int64 = nativeArray62.lastIndexOf((java.lang.Object) (short) 10);
        long long65 = nativeArray62.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray62, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable69 = null;
        java.lang.Object[] objArray70 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable69);
        java.lang.Object[] objArray71 = nativeArray62.toArray(objArray70);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray(objArray71);
        java.lang.Integer[] intArray73 = nativeArray72.getIndexIds();
        java.lang.Object obj74 = nativeArray42.get((java.lang.Object) nativeArray72);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Array" + "'", str40, "Array");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(iterator58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[null]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[null]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertNull(obj74);
    }

    @Test
    public void test2547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2547");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Context context9 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        java.lang.Object[] objArray17 = nativeArray11.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray11.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable19 = nativeArray11.getParentScope();
        java.util.ListIterator listIterator20 = nativeArray11.listIterator();
        nativeArray1.defineOwnProperties(context9, (com.google.javascript.rhino.head.ScriptableObject) nativeArray11);
        com.google.javascript.rhino.head.Scriptable scriptable22 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        nativeArray11.preventExtensions();
        java.lang.Integer[] intArray24 = nativeArray11.getIndexIds();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null]");
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertNotNull(listIterator20);
        org.junit.Assert.assertNotNull(scriptable22);
        org.junit.Assert.assertNotNull(intArray24);
    }

    @Test
    public void test2548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2548");
        com.google.javascript.rhino.head.Scriptable scriptable0 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int5 = nativeArray3.lastIndexOf((java.lang.Object) (short) 10);
        long long6 = nativeArray3.getLength();
        nativeArray3.delete((int) (byte) 1);
        boolean boolean9 = nativeArray3.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable13 = nativeArray12.getParentScope();
        java.lang.Object[] objArray14 = nativeArray12.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray3, "", (java.lang.Object) nativeArray12, 0);
        nativeArray3.setAttributes("hi!", 10);
        java.lang.reflect.Method method22 = null;
        java.lang.reflect.Method method23 = null;
        nativeArray3.defineProperty("object", (java.lang.Object) 1L, method22, method23, 13);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.putProperty(scriptable0, "Array", (java.lang.Object) method22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(scriptable13);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
    }

    @Test
    public void test2549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2549");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable14 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        long long20 = nativeArray17.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "", true);
        boolean boolean24 = nativeArray17.hasPrototypeMap();
        java.lang.reflect.Method method27 = null;
        java.lang.reflect.Method method28 = null;
        nativeArray17.defineProperty("hi!", (java.lang.Object) (-1L), method27, method28, (int) (byte) 10);
        boolean boolean32 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "");
        com.google.javascript.rhino.head.Scriptable scriptable33 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        nativeArray17.setAttributes("", 4);
        nativeArray17.delete("");
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator43 = nativeArray40.iterator();
        com.google.javascript.rhino.head.Scriptable scriptable44 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray40);
        nativeArray1.put("object", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) nativeArray40);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        long long51 = nativeArray48.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        java.lang.Object[] objArray62 = nativeArray56.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable63 = nativeArray56.getParentScope();
        boolean boolean64 = nativeArray48.containsAll((java.util.Collection) nativeArray56);
        int int65 = nativeArray56.size();
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int70 = nativeArray68.lastIndexOf((java.lang.Object) (short) 10);
        long long71 = nativeArray68.getLength();
        nativeArray68.delete((int) (byte) 1);
        boolean boolean74 = nativeArray68.isExtensible();
        java.lang.Object obj76 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray68, 4);
        java.lang.Object[] objArray77 = nativeArray68.toArray();
        nativeArray68.delete((int) (short) 0);
        java.lang.Object obj81 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray68, "", obj81);
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray88 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray85.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray88, (java.lang.Object) (-1));
        java.lang.Object[] objArray91 = nativeArray85.getAllIds();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray68, "Array", (java.lang.Object) objArray91);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "Array", (java.lang.Object) objArray91);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) objArray91);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(scriptable14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(iterator43);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[null]");
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1L + "'", long71 == 1L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[null]");
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[length]");
    }

    @Test
    public void test2550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2550");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        java.util.ListIterator listIterator10 = nativeArray1.listIterator();
        nativeArray1.delete((int) (byte) 10);
        nativeArray1.setAttributes("hi!", (int) (byte) 10);
        com.google.javascript.rhino.head.Context context16 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        long long35 = nativeArray32.getLength();
        nativeArray32.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        java.lang.Object[] objArray47 = nativeArray41.getAllIds();
        nativeArray41.delete("");
        java.lang.Object obj50 = nativeArray26.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        nativeArray26.delete((int) (short) -1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable56 = nativeArray55.getParentScope();
        java.lang.Object[] objArray57 = nativeArray55.getIds();
        boolean boolean58 = nativeArray55.isEmpty();
        java.lang.Object obj60 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, 8);
        com.google.javascript.rhino.head.Scriptable scriptable61 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray55);
        nativeArray26.defineConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        nativeArray1.defineOwnProperties(context16, (com.google.javascript.rhino.head.ScriptableObject) nativeArray55);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertNotNull(listIterator10);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[length]");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNull(scriptable56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNull(scriptable61);
    }

    @Test
    public void test2551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2551");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        long long35 = nativeArray32.getLength();
        nativeArray32.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        java.lang.Object[] objArray47 = nativeArray41.getAllIds();
        nativeArray41.delete("");
        java.lang.Object obj50 = nativeArray26.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable53 = nativeArray26.getPrototype();
        com.google.javascript.rhino.head.Context context54 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        long long59 = nativeArray56.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray67, (java.lang.Object) (-1));
        java.lang.Object[] objArray70 = nativeArray64.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable71 = nativeArray64.getParentScope();
        boolean boolean72 = nativeArray56.containsAll((java.util.Collection) nativeArray64);
        nativeArray26.defineOwnProperties(context54, (com.google.javascript.rhino.head.ScriptableObject) nativeArray56);
        nativeArray10.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray26, (int) (short) 10);
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject77 = nativeArray1.exportAsJSClass((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray26, true);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Cannot modify a property of a sealed object: object.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[length]");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNull(scriptable53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[null]");
        org.junit.Assert.assertNull(scriptable71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(idFunctionObject77);
    }

    @Test
    public void test2552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2552");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        boolean boolean29 = nativeArray22.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray32.getParentScope();
        java.lang.Object[] objArray34 = nativeArray32.getIds();
        boolean boolean35 = nativeArray32.isEmpty();
        boolean boolean36 = nativeArray22.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean38 = nativeArray32.isConst("object");
        java.lang.Object obj40 = nativeArray32.get((java.lang.Object) (byte) 10);
        com.google.javascript.rhino.head.Scriptable scriptable41 = null;
        nativeArray32.setParentScope(scriptable41);
        nativeArray9.setAttributes((-1), (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        boolean boolean46 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, (int) (short) -1);
        java.lang.String str47 = nativeArray32.getTypeOf();
        boolean boolean49 = nativeArray32.isConst("hi!");
        com.google.javascript.rhino.head.Scriptable scriptable50 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray32);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "object" + "'", str47, "object");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(scriptable50);
    }

    @Test
    public void test2553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2553");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        nativeArray23.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.getAllIds();
        nativeArray32.delete("");
        java.lang.Object obj41 = nativeArray17.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray17.getPrototype();
        com.google.javascript.rhino.head.Context context45 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        nativeArray17.defineOwnProperties(context45, (com.google.javascript.rhino.head.ScriptableObject) nativeArray47);
        nativeArray1.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 10);
        java.lang.String str67 = nativeArray1.getTypeOf();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        java.lang.Object[] objArray70 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", true);
        nativeArray1.preventExtensions();
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[length]");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "object" + "'", str67, "object");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[object, 1, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[object, 1, length]");
    }

    @Test
    public void test2554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2554");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        nativeArray13.setAttributes("object", (int) (byte) 0);
        nativeArray13.preventExtensions();
        com.google.javascript.rhino.head.Scriptable scriptable31 = null;
        boolean boolean32 = nativeArray13.has("", scriptable31);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = nativeArray13.getAttributes("");
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property  not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test2555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2555");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        nativeArray9.delete("Array");
        boolean boolean38 = nativeArray9.isExtensible();
        java.lang.String str39 = nativeArray9.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        boolean boolean49 = nativeArray42.hasPrototypeMap();
        java.lang.reflect.Method method52 = null;
        java.lang.reflect.Method method53 = null;
        nativeArray42.defineProperty("hi!", (java.lang.Object) (-1L), method52, method53, (int) (byte) 10);
        java.lang.Object obj57 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, (int) (byte) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable60 = nativeArray59.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable61 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray59);
        nativeArray42.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray59);
        com.google.javascript.rhino.head.Scriptable scriptable63 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray59);
        nativeArray9.setAttributes(13, scriptable63, 10);
        nativeArray9.sealObject();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Array" + "'", str39, "Array");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNull(scriptable60);
        org.junit.Assert.assertNull(scriptable61);
        org.junit.Assert.assertNotNull(scriptable63);
    }

    @Test
    public void test2556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2556");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        java.lang.Object[] objArray24 = nativeArray18.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable25 = nativeArray18.getParentScope();
        boolean boolean26 = nativeArray10.containsAll((java.util.Collection) nativeArray18);
        boolean boolean27 = nativeArray1.containsAll((java.util.Collection) nativeArray10);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        java.lang.Object[] objArray43 = nativeArray37.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray37.getParentScope();
        boolean boolean45 = nativeArray29.containsAll((java.util.Collection) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray68, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj76 = nativeArray68.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray73);
        boolean boolean77 = nativeArray68.hasPrototypeMap();
        java.lang.Object[] objArray78 = nativeArray68.getIds();
        java.lang.Object[] objArray79 = nativeArray55.toArray(objArray78);
        java.lang.Object obj80 = nativeArray1.associateValue((java.lang.Object) boolean45, (java.lang.Object) nativeArray55);
        int int81 = nativeArray1.size();
        nativeArray1.delete("object");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[null]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[null]");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
    }

    @Test
    public void test2557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2557");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Integer[] intArray9 = nativeArray1.getIndexIds();
        nativeArray1.preventExtensions();
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        java.lang.Object[] objArray21 = nativeArray15.getAllIds();
        java.lang.String str22 = nativeArray15.getTypeOf();
        int int23 = nativeArray15.size();
        boolean boolean25 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "hi!");
        java.lang.Object obj27 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, 100);
        java.lang.Object obj28 = null;
        int int29 = nativeArray15.lastIndexOf(obj28);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.defineProperty("", (java.lang.Object) nativeArray15, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 100");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[length]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "object" + "'", str22, "object");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test2558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2558");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", false);
        java.lang.Object[] objArray19 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "hi!", false);
        nativeArray11.activatePrototypeMap(10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
    }

    @Test
    public void test2559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2559");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray6.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) (-1));
        java.lang.Object[] objArray12 = nativeArray6.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable13 = nativeArray6.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable14 = nativeArray6.getParentScope();
        boolean boolean15 = nativeArray6.isSealed();
        boolean boolean16 = nativeArray6.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        com.google.javascript.rhino.head.Callable callable39 = null;
        nativeArray28.setGetterOrSetter("hi!", 0, callable39, false);
        java.lang.Integer[] intArray42 = nativeArray28.getIndexIds();
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray28);
        java.lang.Object obj44 = nativeArray6.get((java.lang.Object) nativeArray28);
        java.lang.Object[] objArray45 = nativeArray6.toArray();
        boolean boolean46 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray6);
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[null]");
        org.junit.Assert.assertNull(scriptable13);
        org.junit.Assert.assertNull(scriptable14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[null]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test2560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2560");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        nativeArray1.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        int int33 = nativeArray22.size();
        boolean boolean34 = nativeArray1.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean35 = nativeArray22.avoidObjectDetection();
        java.util.Iterator iterator36 = nativeArray22.iterator();
        com.google.javascript.rhino.head.Scriptable scriptable37 = null;
        nativeArray22.setPrototype(scriptable37);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(iterator36);
    }

    @Test
    public void test2561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2561");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        nativeArray9.delete((int) (short) -1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray38.getParentScope();
        java.lang.Object[] objArray40 = nativeArray38.getIds();
        boolean boolean41 = nativeArray38.isEmpty();
        java.lang.Object obj43 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, 8);
        com.google.javascript.rhino.head.Scriptable scriptable44 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray38);
        nativeArray9.defineConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        com.google.javascript.rhino.head.Context context46 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        long long51 = nativeArray48.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        java.lang.Object[] objArray62 = nativeArray56.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable63 = nativeArray56.getParentScope();
        boolean boolean64 = nativeArray48.containsAll((java.util.Collection) nativeArray56);
        nativeArray56.delete("Array");
        boolean boolean68 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, (int) 'a');
        boolean boolean69 = nativeArray56.hasPrototypeMap();
        boolean boolean70 = nativeArray56.isExtensible();
        nativeArray9.defineOwnProperties(context46, (com.google.javascript.rhino.head.ScriptableObject) nativeArray56);
        java.lang.String str72 = nativeArray56.getTypeOf();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[null]");
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "object" + "'", str72, "object");
    }

    @Test
    public void test2562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2562");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Integer[] intArray26 = nativeArray13.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray26);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        java.lang.Integer[] intArray35 = nativeArray29.getIndexIds();
        java.lang.Object obj37 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "hi!", obj37);
        java.lang.Object obj40 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray29, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable49 = null;
        java.lang.Object[] objArray50 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable49);
        java.lang.Object[] objArray51 = nativeArray42.toArray(objArray50);
        com.google.javascript.rhino.head.Scriptable scriptable52 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean53 = nativeArray29.contains((java.lang.Object) nativeArray42);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray66, (java.lang.Object) (-1));
        nativeArray55.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray76, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray81.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj84 = nativeArray76.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray81);
        boolean boolean85 = nativeArray76.hasPrototypeMap();
        java.lang.Object[] objArray86 = nativeArray76.getIds();
        int int87 = nativeArray76.size();
        boolean boolean88 = nativeArray55.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        boolean boolean89 = nativeArray76.avoidObjectDetection();
        java.util.Iterator iterator90 = nativeArray76.iterator();
        boolean boolean91 = nativeArray29.contains((java.lang.Object) iterator90);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "");
        nativeArray29.delete((int) ' ');
        long long96 = nativeArray29.getLength();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = nativeArray27.removeAll((java.util.Collection) nativeArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[null]");
        org.junit.Assert.assertNotNull(scriptable52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(iterator90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 1L + "'", long96 == 1L);
    }

    @Test
    public void test2563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2563");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        java.lang.Object[] objArray24 = nativeArray18.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable25 = nativeArray18.getParentScope();
        boolean boolean26 = nativeArray10.containsAll((java.util.Collection) nativeArray18);
        boolean boolean27 = nativeArray1.containsAll((java.util.Collection) nativeArray10);
        nativeArray1.setAttributes("", 8);
        nativeArray1.delete(100);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = nativeArray1.getAttributes((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 0 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test2564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2564");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        java.lang.Object[] objArray24 = nativeArray18.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable25 = nativeArray18.getParentScope();
        boolean boolean26 = nativeArray10.containsAll((java.util.Collection) nativeArray18);
        boolean boolean27 = nativeArray1.containsAll((java.util.Collection) nativeArray10);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        java.lang.Object[] objArray43 = nativeArray37.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray37.getParentScope();
        boolean boolean45 = nativeArray29.containsAll((java.util.Collection) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray68, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj76 = nativeArray68.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray73);
        boolean boolean77 = nativeArray68.hasPrototypeMap();
        java.lang.Object[] objArray78 = nativeArray68.getIds();
        java.lang.Object[] objArray79 = nativeArray55.toArray(objArray78);
        java.lang.Object obj80 = nativeArray1.associateValue((java.lang.Object) boolean45, (java.lang.Object) nativeArray55);
        com.google.javascript.rhino.head.Scriptable scriptable81 = nativeArray55.getPrototype();
        nativeArray55.delete("hi!");
        java.lang.Integer[] intArray84 = nativeArray55.getIndexIds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[null]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[null]");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNull(scriptable81);
        org.junit.Assert.assertNotNull(intArray84);
    }

    @Test
    public void test2565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2565");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable21 = null;
        java.lang.Object[] objArray22 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable21);
        java.lang.Object[] objArray23 = nativeArray14.toArray(objArray22);
        com.google.javascript.rhino.head.Scriptable scriptable24 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray14);
        boolean boolean25 = nativeArray1.contains((java.lang.Object) nativeArray14);
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray1.getPrototype();
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        boolean boolean40 = nativeArray31.hasPrototypeMap();
        java.lang.Object[] objArray41 = nativeArray31.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj58 = nativeArray50.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        com.google.javascript.rhino.head.Callable callable61 = null;
        nativeArray50.setGetterOrSetter("hi!", 0, callable61, false);
        nativeArray44.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray50, (int) (short) 10);
        java.lang.Object obj66 = null;
        int int67 = nativeArray44.lastIndexOf(obj66);
        boolean boolean68 = nativeArray31.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        boolean boolean70 = nativeArray44.isConst("");
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int73 = nativeArray44.getAttributes((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 10 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNotNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test2566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2566");
        com.google.javascript.rhino.head.Scriptable scriptable0 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.redefineProperty(scriptable0, "hi!", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2567");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Scriptable scriptable66 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int67 = nativeArray12.getAttributes((int) (short) 1, scriptable66);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 1 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test2568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2568");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        java.lang.Object[] objArray21 = nativeArray17.getAllIds();
        java.lang.Object obj23 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "");
        boolean boolean24 = nativeArray17.avoidObjectDetection();
        // The following exception was thrown during execution in test generation
        try {
            int int26 = nativeArray17.getAttributes("Array");
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property Array not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[length]");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test2569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2569");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        long long4 = nativeArray1.jsGet_length();
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray6.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj17 = nativeArray9.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray14);
        boolean boolean18 = nativeArray9.hasPrototypeMap();
        java.lang.Object[] objArray19 = nativeArray9.getIds();
        int int20 = nativeArray9.size();
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", true);
        boolean boolean30 = nativeArray23.hasPrototypeMap();
        int int31 = nativeArray23.size();
        boolean boolean32 = nativeArray23.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable33 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable37 = nativeArray23.getParentScope();
        java.lang.Object obj39 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) 0.0f);
        nativeArray9.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(scriptable33);
        org.junit.Assert.assertNull(scriptable37);
        org.junit.Assert.assertNull(obj39);
    }

    @Test
    public void test2570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2570");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean39 = nativeArray21.isSealed();
        boolean boolean40 = nativeArray21.hasPrototypeMap();
        java.lang.Object obj42 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable45 = nativeArray44.getParentScope();
        java.lang.Object[] objArray46 = nativeArray44.getIds();
        boolean boolean47 = nativeArray44.isEmpty();
        int int48 = nativeArray44.size();
        java.lang.Object[] objArray49 = nativeArray44.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 8);
        java.lang.Object obj52 = nativeArray21.associateValue((java.lang.Object) nativeArray44, (java.lang.Object) 8);
        java.lang.Class<?> wildcardClass53 = nativeArray21.getClass();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNull(scriptable45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 8 + "'", obj52, 8);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2571");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        boolean boolean18 = nativeArray1.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.Callable callable38 = null;
        nativeArray27.setGetterOrSetter("hi!", 0, callable38, false);
        nativeArray21.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray27, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        long long48 = nativeArray45.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable52 = null;
        java.lang.Object[] objArray53 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable52);
        java.lang.Object[] objArray54 = nativeArray45.toArray(objArray53);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        long long60 = nativeArray57.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray57, "", true);
        boolean boolean64 = nativeArray57.hasPrototypeMap();
        int int65 = nativeArray57.size();
        boolean boolean66 = nativeArray57.isEmpty();
        boolean boolean68 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray57, "Array");
        java.lang.Object obj69 = nativeArray45.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray57);
        java.lang.Object obj70 = nativeArray21.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        nativeArray45.preventExtensions();
        java.lang.Object obj72 = nativeArray1.get((-1), (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean73 = nativeArray45.isSealed();
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test2572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2572");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        com.google.javascript.rhino.head.Scriptable scriptable18 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        nativeArray1.delete("hi!");
        com.google.javascript.rhino.head.Scriptable scriptable22 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj47 = nativeArray39.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        com.google.javascript.rhino.head.Callable callable50 = null;
        nativeArray39.setGetterOrSetter("hi!", 0, callable50, false);
        java.lang.Integer[] intArray53 = nativeArray39.getIndexIds();
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray39);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        long long59 = nativeArray56.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray67, (java.lang.Object) (-1));
        java.lang.Object[] objArray70 = nativeArray64.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable71 = nativeArray64.getParentScope();
        boolean boolean72 = nativeArray56.containsAll((java.util.Collection) nativeArray64);
        nativeArray64.delete("Array");
        java.lang.Object obj75 = nativeArray32.getAssociatedValue((java.lang.Object) nativeArray64);
        boolean boolean76 = nativeArray25.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean77 = nativeArray32.isExtensible();
        boolean boolean79 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, (int) (short) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int83 = nativeArray81.lastIndexOf((java.lang.Object) (short) 10);
        long long84 = nativeArray81.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray81, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable88 = null;
        java.lang.Object[] objArray89 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable88);
        java.lang.Object[] objArray90 = nativeArray81.toArray(objArray89);
        com.google.javascript.rhino.head.Scriptable scriptable91 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray81);
        int int92 = nativeArray32.indexOf((java.lang.Object) nativeArray81);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj93 = nativeArray1.set((int) ' ', (java.lang.Object) int92);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[null]");
        org.junit.Assert.assertNull(scriptable71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 1L + "'", long84 == 1L);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[null]");
        org.junit.Assert.assertNotNull(scriptable91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test2573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2573");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean7 = nativeArray4.isEmpty();
        nativeArray4.activatePrototypeMap(2);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable18 = null;
        java.lang.Object[] objArray19 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable18);
        java.lang.Object[] objArray20 = nativeArray11.toArray(objArray19);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", true);
        boolean boolean30 = nativeArray23.hasPrototypeMap();
        int int31 = nativeArray23.size();
        boolean boolean32 = nativeArray23.isEmpty();
        boolean boolean34 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "Array");
        java.lang.Object obj35 = nativeArray11.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        java.lang.Object[] objArray52 = nativeArray46.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable53 = nativeArray46.getParentScope();
        boolean boolean54 = nativeArray38.containsAll((java.util.Collection) nativeArray46);
        java.lang.Object obj55 = nativeArray23.get((int) (byte) -1, (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        long long60 = nativeArray57.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray57, "", true);
        boolean boolean64 = nativeArray57.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable68 = nativeArray67.getParentScope();
        java.lang.Object[] objArray69 = nativeArray67.getIds();
        boolean boolean70 = nativeArray67.isEmpty();
        boolean boolean71 = nativeArray57.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        boolean boolean73 = nativeArray67.isConst("object");
        nativeArray46.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray67);
        java.lang.Object[] objArray75 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray46);
        java.lang.Object[] objArray76 = nativeArray4.toArray(objArray75);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator listIterator78 = nativeArray4.listIterator(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[null]");
        org.junit.Assert.assertNull(scriptable53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(scriptable68);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[null]");
    }

    @Test
    public void test2574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2574");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        nativeArray13.setAttributes("object", (int) (byte) 0);
        nativeArray13.preventExtensions();
        com.google.javascript.rhino.head.Scriptable scriptable31 = null;
        boolean boolean32 = nativeArray13.has("", scriptable31);
        java.lang.String str33 = nativeArray13.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int38 = nativeArray36.lastIndexOf((java.lang.Object) (short) 10);
        long long39 = nativeArray36.getLength();
        nativeArray36.delete((int) (byte) 1);
        boolean boolean42 = nativeArray36.isExtensible();
        java.lang.Object obj44 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, 4);
        java.lang.Object[] objArray45 = nativeArray36.toArray();
        nativeArray36.delete((int) (short) 0);
        java.lang.Object obj48 = nativeArray13.get(0, (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        boolean boolean58 = nativeArray51.hasPrototypeMap();
        int int59 = nativeArray51.size();
        boolean boolean60 = nativeArray51.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray65, (java.lang.Object) (-1));
        java.lang.Object[] objArray68 = nativeArray62.getAllIds();
        nativeArray62.delete("");
        long long71 = nativeArray62.getLength();
        boolean boolean72 = nativeArray51.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        java.lang.Object[] objArray73 = nativeArray62.getAllIds();
        nativeArray13.setAttributes((int) (byte) -1, (com.google.javascript.rhino.head.Scriptable) nativeArray62, 1);
        java.lang.Integer[] intArray76 = nativeArray13.getIndexIds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "object" + "'", str33, "object");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[null]");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[length]");
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1L + "'", long71 == 1L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[length]");
        org.junit.Assert.assertNotNull(intArray76);
    }

    @Test
    public void test2575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2575");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        java.lang.Object[] objArray13 = nativeArray1.getAllIds();
        boolean boolean15 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 101);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, length]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2576");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        nativeArray9.delete((int) (byte) 1);
        boolean boolean15 = nativeArray9.isExtensible();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 4);
        java.lang.Object[] objArray18 = nativeArray9.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray24.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray42.getParentScope();
        java.lang.Object[] objArray44 = nativeArray42.getIds();
        boolean boolean45 = nativeArray42.isEmpty();
        nativeArray9.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) boolean45);
        boolean boolean47 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        long long48 = nativeArray24.jsGet_length();
        com.google.javascript.rhino.head.Scriptable scriptable49 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[null]");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 2L + "'", long48 == 2L);
        org.junit.Assert.assertNotNull(scriptable49);
    }

    @Test
    public void test2577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2577");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        boolean boolean50 = nativeArray43.hasPrototypeMap();
        java.lang.reflect.Method method53 = null;
        java.lang.reflect.Method method54 = null;
        nativeArray43.defineProperty("hi!", (java.lang.Object) (-1L), method53, method54, (int) (byte) 10);
        java.lang.Object obj58 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, (int) (byte) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        java.lang.Object obj63 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, 8);
        nativeArray43.defineConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        com.google.javascript.rhino.head.Scriptable scriptable66 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray61, "hi!");
        java.lang.Object obj68 = nativeArray61.get(4);
        int int69 = nativeArray4.lastIndexOf((java.lang.Object) 4);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "Array");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj73 = nativeArray4.get((long) 5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test2578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2578");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable4 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", false);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        java.lang.Object[] objArray16 = nativeArray10.getAllIds();
        nativeArray10.delete("");
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj34 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        boolean boolean35 = nativeArray26.hasPrototypeMap();
        java.lang.Object[] objArray36 = nativeArray26.getIds();
        int int37 = nativeArray26.size();
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean52 = nativeArray43.hasPrototypeMap();
        java.lang.Object[] objArray53 = nativeArray43.getIds();
        int int54 = nativeArray43.size();
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray43.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray56);
        java.lang.Object obj60 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        java.lang.Object[] objArray61 = nativeArray26.getIds();
        java.lang.String str62 = nativeArray26.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        long long67 = nativeArray64.getLength();
        nativeArray64.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int75 = nativeArray73.lastIndexOf((java.lang.Object) (short) 10);
        long long76 = nativeArray73.getLength();
        nativeArray73.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, (int) (byte) -1, (java.lang.Object) nativeArray73);
        java.util.Iterator iterator80 = nativeArray64.iterator();
        java.lang.Object[] objArray81 = nativeArray64.toArray();
        boolean boolean82 = nativeArray26.containsAll((java.util.Collection) nativeArray64);
        java.lang.Object obj83 = nativeArray10.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) nativeArray10);
        org.junit.Assert.assertNull(scriptable4);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[length]");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[hi!]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Array" + "'", str62, "Array");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertNotNull(iterator80);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[null]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test2579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2579");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable4 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object obj6 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 2);
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean9 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        java.lang.Object[] objArray25 = nativeArray19.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray19.getParentScope();
        boolean boolean27 = nativeArray11.containsAll((java.util.Collection) nativeArray19);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        java.lang.Object[] objArray43 = nativeArray19.toArray(objArray42);
        int int44 = nativeArray1.lastIndexOf((java.lang.Object) objArray42);
        nativeArray1.delete(8);
        nativeArray1.delete("");
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", false);
        org.junit.Assert.assertNull(scriptable4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(scriptable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[null]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test2580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2580");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj10 = nativeArray4.getGetterOrSetter("object", (int) (short) 0, true);
        nativeArray4.setAttributes((int) (short) -1, 4);
        boolean boolean14 = nativeArray4.avoidObjectDetection();
        boolean boolean16 = nativeArray4.isConst("Array");
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable19 = nativeArray18.getParentScope();
        java.lang.Object[] objArray20 = nativeArray18.getIds();
        boolean boolean21 = nativeArray18.avoidObjectDetection();
        java.lang.Object obj25 = nativeArray18.getGetterOrSetter("", 0, true);
        long long26 = nativeArray18.jsGet_length();
        int int27 = nativeArray4.indexOf((java.lang.Object) long26);
        nativeArray4.preventExtensions();
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test2581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2581");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Scriptable scriptable65 = nativeArray1.getParentScope();
        java.util.ListIterator listIterator66 = nativeArray1.listIterator();
        java.lang.Object obj68 = null;
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", obj68);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(scriptable65);
        org.junit.Assert.assertNotNull(listIterator66);
    }

    @Test
    public void test2582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2582");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        nativeArray23.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.getAllIds();
        nativeArray32.delete("");
        java.lang.Object obj41 = nativeArray17.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray17.getPrototype();
        com.google.javascript.rhino.head.Context context45 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        nativeArray17.defineOwnProperties(context45, (com.google.javascript.rhino.head.ScriptableObject) nativeArray47);
        nativeArray1.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 10);
        boolean boolean68 = nativeArray1.isConst("");
        java.util.ListIterator listIterator69 = nativeArray1.listIterator();
        nativeArray1.preventExtensions();
        com.google.javascript.rhino.head.Scriptable scriptable71 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        long long72 = nativeArray1.getLength();
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[length]");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(listIterator69);
        org.junit.Assert.assertNotNull(scriptable71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
    }

    @Test
    public void test2583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2583");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.Context context37 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        nativeArray9.defineOwnProperties(context37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray39);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int61 = nativeArray59.lastIndexOf((java.lang.Object) (short) 10);
        long long62 = nativeArray59.getLength();
        nativeArray59.delete((int) (byte) 1);
        boolean boolean65 = nativeArray59.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable69 = nativeArray68.getParentScope();
        java.lang.Object[] objArray70 = nativeArray68.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "", (java.lang.Object) nativeArray68, 0);
        java.lang.Object[] objArray73 = nativeArray59.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator78 = nativeArray75.iterator();
        nativeArray9.putConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) iterator78);
        boolean boolean81 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int85 = nativeArray83.lastIndexOf((java.lang.Object) (short) 10);
        long long86 = nativeArray83.getLength();
        nativeArray83.delete((int) (byte) 1);
        java.lang.Integer[] intArray89 = nativeArray83.getIndexIds();
        java.lang.Object obj91 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray83, "hi!", obj91);
        boolean boolean94 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray83, 8);
        java.lang.Object[] objArray95 = nativeArray83.getAllIds();
        java.lang.String str96 = nativeArray83.getClassName();
        java.lang.Object obj97 = nativeArray9.getAssociatedValue((java.lang.Object) nativeArray83);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Integer[] intArray98 = nativeArray9.getIndexIds();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 24");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(scriptable69);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[null]");
        org.junit.Assert.assertNotNull(iterator78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 1L + "'", long86 == 1L);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[hi!, length]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Array" + "'", str96, "Array");
        org.junit.Assert.assertNull(obj97);
    }

    @Test
    public void test2584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2584");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        nativeArray1.setAttributes("Array", 1);
        boolean boolean29 = nativeArray1.hasPrototypeMap();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test2585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2585");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        java.lang.Object[] objArray36 = nativeArray30.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable37 = nativeArray30.getParentScope();
        boolean boolean38 = nativeArray22.containsAll((java.util.Collection) nativeArray30);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean52 = nativeArray43.hasPrototypeMap();
        java.lang.Object[] objArray53 = nativeArray43.getIds();
        java.lang.Object[] objArray54 = nativeArray30.toArray(objArray53);
        boolean boolean56 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "Array");
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject58 = nativeArray9.exportAsJSClass((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray30, true);
        boolean boolean59 = nativeArray9.isSealed();
        java.lang.Object obj60 = null;
        java.lang.Object obj61 = nativeArray9.getAssociatedValue(obj60);
        com.google.javascript.rhino.head.Scriptable scriptable62 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[null]");
        org.junit.Assert.assertNull(scriptable37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(idFunctionObject58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(scriptable62);
    }

    @Test
    public void test2586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2586");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean39 = nativeArray21.isSealed();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list42 = nativeArray21.subList((int) (byte) 1, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test2587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2587");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj10 = nativeArray4.getGetterOrSetter("object", (int) (short) 0, true);
        nativeArray4.setAttributes((int) (short) -1, 4);
        boolean boolean14 = nativeArray4.avoidObjectDetection();
        boolean boolean15 = nativeArray4.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = nativeArray4.getGetterOrSetter("Array", (-1), true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2588");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        boolean boolean49 = nativeArray42.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        java.lang.Object[] objArray57 = nativeArray51.getAllIds();
        nativeArray51.delete("");
        boolean boolean60 = nativeArray42.contains((java.lang.Object) "");
        boolean boolean61 = nativeArray4.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int65 = nativeArray63.lastIndexOf((java.lang.Object) (short) 10);
        long long66 = nativeArray63.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray63, "", true);
        boolean boolean70 = nativeArray63.hasPrototypeMap();
        java.util.ListIterator listIterator71 = nativeArray63.listIterator();
        nativeArray4.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray63);
        com.google.javascript.rhino.head.Scriptable scriptable73 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray63);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[length]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 1L + "'", long66 == 1L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(listIterator71);
        org.junit.Assert.assertNotNull(scriptable73);
    }

    @Test
    public void test2589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2589");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        com.google.javascript.rhino.head.Scriptable scriptable18 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        nativeArray1.delete(2);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        nativeArray1.sealObject();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        nativeArray26.delete((int) (byte) 1);
        java.lang.Integer[] intArray32 = nativeArray26.getIndexIds();
        java.lang.Object obj34 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "hi!", obj34);
        boolean boolean37 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray42, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj57 = nativeArray49.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray54);
        com.google.javascript.rhino.head.Callable callable60 = null;
        nativeArray49.setGetterOrSetter("hi!", 0, callable60, false);
        java.lang.Integer[] intArray63 = nativeArray49.getIndexIds();
        nativeArray42.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray49);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int69 = nativeArray67.lastIndexOf((java.lang.Object) (short) 10);
        long long70 = nativeArray67.getLength();
        nativeArray67.delete((int) (byte) 1);
        boolean boolean74 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray67, "");
        nativeArray49.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray67, 13);
        nativeArray26.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray67);
        java.util.Iterator iterator78 = nativeArray67.iterator();
        nativeArray1.defineConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(iterator78);
    }

    @Test
    public void test2590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2590");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        java.lang.Object[] objArray23 = nativeArray17.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray17.getParentScope();
        boolean boolean25 = nativeArray9.containsAll((java.util.Collection) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int30 = nativeArray28.lastIndexOf((java.lang.Object) (short) 10);
        long long31 = nativeArray28.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable35 = null;
        java.lang.Object[] objArray36 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable35);
        java.lang.Object[] objArray37 = nativeArray28.toArray(objArray36);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) objArray36);
        nativeArray9.activatePrototypeMap((int) (byte) 10);
        boolean boolean41 = nativeArray1.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        nativeArray1.setAttributes((int) (byte) 1, 10);
        java.util.ListIterator listIterator45 = nativeArray1.listIterator();
        nativeArray1.delete(4);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[null]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(listIterator45);
    }

    @Test
    public void test2591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2591");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        int int17 = nativeArray1.size();
        com.google.javascript.rhino.head.Scriptable scriptable19 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.activatePrototypeMap((int) ' ');
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", true);
        boolean boolean30 = nativeArray23.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable31 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        java.lang.Object[] objArray40 = nativeArray34.getAllIds();
        nativeArray34.delete("");
        long long43 = nativeArray34.getLength();
        boolean boolean45 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, (int) (short) 10);
        nativeArray34.delete(2);
        boolean boolean48 = nativeArray23.has(13, (com.google.javascript.rhino.head.Scriptable) nativeArray34);
        int int49 = nativeArray1.lastIndexOf((java.lang.Object) nativeArray34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray50 = nativeArray1.getIds();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 24");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(scriptable31);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[length]");
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test2592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2592");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Integer[] intArray26 = nativeArray13.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        long long31 = nativeArray28.jsGet_length();
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj44 = nativeArray36.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        boolean boolean45 = nativeArray36.hasPrototypeMap();
        java.lang.Object[] objArray46 = nativeArray36.getIds();
        int int47 = nativeArray36.size();
        boolean boolean48 = nativeArray28.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray36);
        int int50 = nativeArray28.indexOf((java.lang.Object) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = nativeArray13.add((java.lang.Object) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[hi!]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test2593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2593");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray5, "");
        boolean boolean10 = nativeArray1.has(100, scriptable9);
        java.lang.String str11 = nativeArray1.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, "", (java.lang.Object) 100);
        java.lang.Object obj20 = nativeArray13.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray16);
        java.lang.Object obj21 = nativeArray1.getAssociatedValue(obj20);
        boolean boolean22 = nativeArray1.isExtensible();
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Array" + "'", str11, "Array");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test2594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2594");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        boolean boolean23 = nativeArray7.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray29, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj37 = nativeArray29.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray34);
        boolean boolean38 = nativeArray29.hasPrototypeMap();
        java.lang.Object[] objArray39 = nativeArray29.getIds();
        int int40 = nativeArray29.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj70 = nativeArray62.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        boolean boolean71 = nativeArray62.hasPrototypeMap();
        java.lang.Object[] objArray72 = nativeArray62.getIds();
        int int73 = nativeArray62.size();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int77 = nativeArray75.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray62.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray75);
        java.lang.Object obj79 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        boolean boolean80 = nativeArray29.containsAll((java.util.Collection) nativeArray62);
        java.util.ListIterator listIterator81 = nativeArray62.listIterator();
        com.google.javascript.rhino.head.Context context82 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray84 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray84.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray87, (java.lang.Object) (-1));
        java.lang.Object[] objArray90 = nativeArray84.getAllIds();
        java.lang.String str91 = nativeArray84.getTypeOf();
        int int92 = nativeArray84.size();
        nativeArray62.defineOwnProperties(context82, (com.google.javascript.rhino.head.ScriptableObject) nativeArray84);
        boolean boolean95 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray62, (-1));
        nativeArray62.delete("hi!");
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray7, "hi!", (java.lang.Object) nativeArray62);
        java.lang.String str99 = nativeArray62.getClassName();
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[hi!]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(listIterator81);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[length]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "object" + "'", str91, "object");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "Array" + "'", str99, "Array");
    }

    @Test
    public void test2595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2595");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        java.lang.Object obj3 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray6.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.Callable callable27 = null;
        nativeArray16.setGetterOrSetter("hi!", 0, callable27, false);
        java.lang.Integer[] intArray30 = nativeArray16.getIndexIds();
        nativeArray9.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        nativeArray34.delete((int) (byte) 1);
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "");
        nativeArray16.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray34, 13);
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray34.getParentScope();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", (java.lang.Object) scriptable44);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        long long51 = nativeArray48.getLength();
        nativeArray48.delete((int) (byte) 1);
        boolean boolean54 = nativeArray48.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray57.getParentScope();
        java.lang.Object[] objArray59 = nativeArray57.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "", (java.lang.Object) nativeArray57, 0);
        java.lang.Object[] objArray62 = nativeArray48.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable63 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean64 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        com.google.javascript.rhino.head.Scriptable scriptable65 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean66 = nativeArray1.avoidObjectDetection();
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[null]");
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(scriptable65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test2596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2596");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable4 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object obj6 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 2);
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean9 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        java.lang.Object[] objArray25 = nativeArray19.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray19.getParentScope();
        boolean boolean27 = nativeArray11.containsAll((java.util.Collection) nativeArray19);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        java.lang.Object[] objArray43 = nativeArray19.toArray(objArray42);
        int int44 = nativeArray1.lastIndexOf((java.lang.Object) objArray42);
        boolean boolean45 = nativeArray1.isEmpty();
        org.junit.Assert.assertNull(scriptable4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(scriptable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[null]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test2597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2597");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable15 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method19 = null;
        java.lang.reflect.Method method20 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) nativeArray18, method19, method20, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        java.lang.Object[] objArray31 = nativeArray25.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable32 = nativeArray25.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray25.getParentScope();
        java.util.ListIterator listIterator34 = nativeArray25.listIterator();
        nativeArray25.delete((int) (byte) 10);
        nativeArray25.setAttributes("hi!", (int) (byte) 10);
        boolean boolean40 = nativeArray18.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[null]");
        org.junit.Assert.assertNull(scriptable32);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(listIterator34);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test2598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2598");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        boolean boolean22 = nativeArray15.hasPrototypeMap();
        java.util.ListIterator listIterator23 = nativeArray15.listIterator();
        boolean boolean24 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        java.lang.Object[] objArray25 = nativeArray1.getAllIds();
        nativeArray1.activatePrototypeMap((int) (byte) 100);
        java.lang.Object obj29 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) -1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(listIterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[length]");
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test2599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2599");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        nativeArray1.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean16 = nativeArray1.avoidObjectDetection();
        boolean boolean18 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 100);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int23 = nativeArray21.lastIndexOf((java.lang.Object) (short) 10);
        long long24 = nativeArray21.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "", true);
        boolean boolean28 = nativeArray21.hasPrototypeMap();
        java.lang.reflect.Method method31 = null;
        java.lang.reflect.Method method32 = null;
        nativeArray21.defineProperty("hi!", (java.lang.Object) (-1L), method31, method32, (int) (byte) 10);
        boolean boolean36 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "");
        com.google.javascript.rhino.head.Scriptable scriptable37 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray21);
        nativeArray21.setAttributes("", 4);
        nativeArray21.delete(10);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", (java.lang.Object) 10);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(scriptable37);
    }

    @Test
    public void test2600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2600");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        long long4 = nativeArray1.jsGet_length();
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray6.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj17 = nativeArray9.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray14);
        boolean boolean18 = nativeArray9.hasPrototypeMap();
        java.lang.Object[] objArray19 = nativeArray9.getIds();
        int int20 = nativeArray9.size();
        boolean boolean21 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        java.util.Iterator iterator22 = nativeArray9.iterator();
        boolean boolean23 = nativeArray9.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "", true);
        boolean boolean33 = nativeArray26.hasPrototypeMap();
        java.lang.reflect.Method method36 = null;
        java.lang.reflect.Method method37 = null;
        nativeArray26.defineProperty("hi!", (java.lang.Object) (-1L), method36, method37, (int) (byte) 10);
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "");
        nativeArray26.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray45 = nativeArray26.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray(objArray45);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray9.defineProperty("", (java.lang.Object) objArray45, 101);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 101");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(iterator22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!, length]");
    }

    @Test
    public void test2601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2601");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        boolean boolean4 = nativeArray1.avoidObjectDetection();
        java.lang.Object obj8 = nativeArray1.getGetterOrSetter("", 0, true);
        long long9 = nativeArray1.jsGet_length();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator15 = nativeArray12.iterator();
        boolean boolean16 = nativeArray12.hasPrototypeMap();
        boolean boolean18 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "");
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj34 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        boolean boolean35 = nativeArray26.hasPrototypeMap();
        java.lang.Object[] objArray36 = nativeArray26.getIds();
        int int37 = nativeArray26.size();
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean52 = nativeArray43.hasPrototypeMap();
        java.lang.Object[] objArray53 = nativeArray43.getIds();
        int int54 = nativeArray43.size();
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray43.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray56);
        java.lang.Object obj60 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        java.lang.Object[] objArray61 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean63 = nativeArray26.isConst("hi!");
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        java.lang.Object obj65 = nativeArray12.get((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray71, (java.lang.Object) (-1));
        java.lang.Object[] objArray74 = nativeArray68.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray(objArray74);
        java.lang.Object obj76 = nativeArray12.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray75);
        nativeArray1.defineConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertNotNull(iterator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[null]");
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test2602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2602");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        boolean boolean4 = nativeArray1.isEmpty();
        nativeArray1.activatePrototypeMap(13);
        java.util.Iterator iterator7 = nativeArray1.iterator();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj21 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean22 = nativeArray13.hasPrototypeMap();
        java.lang.Object[] objArray23 = nativeArray13.getIds();
        int int24 = nativeArray13.size();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        int int41 = nativeArray30.size();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray30.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        java.lang.Object obj47 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        java.lang.Object[] objArray48 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray13);
        boolean boolean50 = nativeArray13.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int55 = nativeArray53.lastIndexOf((java.lang.Object) (short) 10);
        long long56 = nativeArray53.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray53, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable60 = null;
        java.lang.Object[] objArray61 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable60);
        java.lang.Object[] objArray62 = nativeArray53.toArray(objArray61);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int67 = nativeArray65.lastIndexOf((java.lang.Object) (short) 10);
        long long68 = nativeArray65.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray65, "", true);
        boolean boolean72 = nativeArray65.hasPrototypeMap();
        int int73 = nativeArray65.size();
        boolean boolean74 = nativeArray65.isEmpty();
        boolean boolean76 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray65, "Array");
        java.lang.Object obj77 = nativeArray53.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray65);
        java.lang.Object obj78 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray65);
        boolean boolean79 = nativeArray65.isExtensible();
        nativeArray1.setAttributes((-1), (com.google.javascript.rhino.head.Scriptable) nativeArray65, (int) (short) 0);
        java.lang.Object obj83 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray65, (int) (short) 100);
        java.lang.Object obj87 = nativeArray65.getGetterOrSetter("object", (int) (byte) 0, true);
        java.lang.Object obj89 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray65, "Array");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj91 = nativeArray65.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(iterator7);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[null]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 1L + "'", long68 == 1L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test2603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2603");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.Scriptable scriptable34 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray24.getPrototype();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.defineConstProperty(scriptable35, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(scriptable34);
        org.junit.Assert.assertNull(scriptable35);
    }

    @Test
    public void test2604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2604");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        com.google.javascript.rhino.head.Scriptable scriptable18 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int23 = nativeArray21.lastIndexOf((java.lang.Object) (short) 10);
        long long24 = nativeArray21.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        java.lang.Object[] objArray35 = nativeArray29.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray29.getParentScope();
        boolean boolean37 = nativeArray21.containsAll((java.util.Collection) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        long long43 = nativeArray40.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable47 = null;
        java.lang.Object[] objArray48 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable47);
        java.lang.Object[] objArray49 = nativeArray40.toArray(objArray48);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!", (java.lang.Object) objArray48);
        int int51 = nativeArray21.size();
        nativeArray21.activatePrototypeMap((int) (byte) 10);
        java.lang.Object obj55 = null;
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "Array", obj55, 8);
        boolean boolean59 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, 10);
        boolean boolean60 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable65 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        java.lang.Object obj67 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray62, 2);
        com.google.javascript.rhino.head.Scriptable scriptable68 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        java.lang.Object obj69 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) nativeArray62);
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[null]");
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(scriptable65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(scriptable68);
        org.junit.Assert.assertNull(obj69);
    }

    @Test
    public void test2605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2605");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        boolean boolean19 = nativeArray9.isConst("");
        com.google.javascript.rhino.head.Context context20 = null;
        java.lang.Object obj21 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj34 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        boolean boolean35 = nativeArray26.hasPrototypeMap();
        java.lang.Object[] objArray36 = nativeArray26.getIds();
        int int37 = nativeArray26.size();
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean52 = nativeArray43.hasPrototypeMap();
        java.lang.Object[] objArray53 = nativeArray43.getIds();
        int int54 = nativeArray43.size();
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray43.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray56);
        java.lang.Object obj60 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        java.lang.Object[] objArray61 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean63 = nativeArray26.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int68 = nativeArray66.lastIndexOf((java.lang.Object) (short) 10);
        long long69 = nativeArray66.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray66, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable73 = null;
        java.lang.Object[] objArray74 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable73);
        java.lang.Object[] objArray75 = nativeArray66.toArray(objArray74);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int80 = nativeArray78.lastIndexOf((java.lang.Object) (short) 10);
        long long81 = nativeArray78.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray78, "", true);
        boolean boolean85 = nativeArray78.hasPrototypeMap();
        int int86 = nativeArray78.size();
        boolean boolean87 = nativeArray78.isEmpty();
        boolean boolean89 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray78, "Array");
        java.lang.Object obj90 = nativeArray66.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        java.lang.Object obj91 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        nativeArray9.defineOwnProperty(context20, obj21, (com.google.javascript.rhino.head.ScriptableObject) nativeArray78);
        nativeArray9.delete("hi!");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1L + "'", long69 == 1L);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[null]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 1L + "'", long81 == 1L);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
    }

    @Test
    public void test2606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2606");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "hi!");
        long long48 = nativeArray43.jsGet_length();
        boolean boolean49 = nativeArray4.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray4.setAttributes("hi!", 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable55 = nativeArray54.getParentScope();
        java.lang.Object[] objArray56 = nativeArray54.getIds();
        boolean boolean57 = nativeArray54.avoidObjectDetection();
        java.lang.Object obj61 = nativeArray54.getGetterOrSetter("", 0, true);
        boolean boolean62 = nativeArray54.avoidObjectDetection();
        boolean boolean63 = nativeArray4.contains((java.lang.Object) nativeArray54);
        java.lang.String str64 = nativeArray4.getClassName();
        nativeArray4.sealObject();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Array" + "'", str64, "Array");
    }

    @Test
    public void test2607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2607");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        java.lang.Object[] objArray33 = nativeArray9.toArray(objArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        boolean boolean40 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, "hi!");
        long long41 = nativeArray36.jsGet_length();
        nativeArray9.setAttributes("object", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (int) (byte) 10);
        long long44 = nativeArray9.getLength();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[null]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[null]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
    }

    @Test
    public void test2608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2608");
        com.google.javascript.rhino.head.Scriptable scriptable0 = null;
        java.lang.Object obj2 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.putProperty(scriptable0, 0, obj2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2609");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        nativeArray9.delete((int) (byte) 1);
        boolean boolean15 = nativeArray9.isExtensible();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 4);
        java.lang.Object[] objArray18 = nativeArray9.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray24.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray42.getParentScope();
        java.lang.Object[] objArray44 = nativeArray42.getIds();
        boolean boolean45 = nativeArray42.isEmpty();
        nativeArray9.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) boolean45);
        boolean boolean47 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        long long53 = nativeArray50.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "", true);
        boolean boolean57 = nativeArray50.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable61 = nativeArray60.getParentScope();
        java.lang.Object[] objArray62 = nativeArray60.getIds();
        boolean boolean63 = nativeArray60.isEmpty();
        boolean boolean64 = nativeArray50.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        java.lang.Object obj66 = nativeArray50.get((long) (byte) 0);
        boolean boolean67 = nativeArray1.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        nativeArray50.preventExtensions();
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[null]");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(scriptable61);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test2610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2610");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean11 = nativeArray1.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        nativeArray39.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray33, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        java.lang.Object[] objArray54 = nativeArray48.getAllIds();
        nativeArray48.delete("");
        java.lang.Object obj57 = nativeArray33.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray33, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable60 = nativeArray33.getPrototype();
        com.google.javascript.rhino.head.Context context61 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int65 = nativeArray63.lastIndexOf((java.lang.Object) (short) 10);
        long long66 = nativeArray63.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray63, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray71.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray74, (java.lang.Object) (-1));
        java.lang.Object[] objArray77 = nativeArray71.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable78 = nativeArray71.getParentScope();
        boolean boolean79 = nativeArray63.containsAll((java.util.Collection) nativeArray71);
        nativeArray33.defineOwnProperties(context61, (com.google.javascript.rhino.head.ScriptableObject) nativeArray63);
        java.lang.Object obj81 = nativeArray13.get((int) ' ', (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.Integer[] intArray82 = nativeArray13.getIndexIds();
        nativeArray13.activatePrototypeMap((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean85 = nativeArray1.addAll((java.util.Collection) nativeArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[length]");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNull(scriptable60);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 1L + "'", long66 == 1L);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[null]");
        org.junit.Assert.assertNull(scriptable78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(intArray82);
    }

    @Test
    public void test2611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2611");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", false);
        boolean boolean68 = nativeArray1.avoidObjectDetection();
        java.lang.String str69 = nativeArray1.getTypeOf();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator listIterator71 = nativeArray1.listIterator(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "object" + "'", str69, "object");
    }

    @Test
    public void test2612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2612");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        int int8 = nativeArray1.size();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        boolean boolean24 = nativeArray15.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray27.getParentScope();
        java.lang.Object[] objArray29 = nativeArray27.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj42 = nativeArray34.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray39);
        java.lang.Object obj43 = nativeArray27.getAssociatedValue((java.lang.Object) nativeArray34);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable46 = nativeArray45.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable47 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int51 = nativeArray49.lastIndexOf((java.lang.Object) (short) 10);
        long long52 = nativeArray49.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "", true);
        boolean boolean56 = nativeArray49.hasPrototypeMap();
        int int57 = nativeArray49.size();
        boolean boolean58 = nativeArray49.isEmpty();
        nativeArray45.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray49);
        java.lang.Object obj60 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray65, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable68 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        int int69 = nativeArray45.lastIndexOf((java.lang.Object) scriptable68);
        boolean boolean70 = nativeArray15.has((int) ' ', (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean71 = nativeArray1.addAll((int) (byte) 1, (java.util.Collection) nativeArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[length]");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(scriptable46);
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(scriptable68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test2613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2613");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        java.util.Iterator iterator16 = nativeArray4.iterator();
        com.google.javascript.rhino.head.Scriptable scriptable17 = nativeArray4.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray4.getPrototype();
        java.lang.Object[] objArray19 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        java.lang.Object[] objArray20 = nativeArray4.getAllIds();
        java.lang.Object[] objArray21 = nativeArray4.getAllIds();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(iterator16);
        org.junit.Assert.assertNull(scriptable17);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, length]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, length]");
    }

    @Test
    public void test2614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2614");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        boolean boolean68 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 0);
        com.google.javascript.rhino.head.Scriptable scriptable69 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean70 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable72 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        nativeArray1.preventExtensions();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(scriptable69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(scriptable72);
    }

    @Test
    public void test2615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2615");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.setAttributes("hi!", (int) (byte) 0);
        nativeArray1.delete((int) (short) -1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = null;
        boolean boolean24 = nativeArray1.has("object", scriptable23);
        long long25 = nativeArray1.getLength();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
    }

    @Test
    public void test2616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2616");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator4 = nativeArray1.iterator();
        boolean boolean5 = nativeArray1.hasPrototypeMap();
        int int6 = nativeArray1.size();
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        java.lang.Object obj10 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        nativeArray1.preventExtensions();
        org.junit.Assert.assertNotNull(iterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(obj10);
    }

    @Test
    public void test2617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2617");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean56 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, (int) (byte) 1);
        boolean boolean57 = nativeArray37.isExtensible();
        java.lang.Object obj58 = nativeArray10.get("object", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        java.lang.Object[] objArray59 = nativeArray10.getAllIds();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = nativeArray10.remove((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[length]");
    }

    @Test
    public void test2618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2618");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray5, "");
        boolean boolean10 = nativeArray1.has(100, scriptable9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean25 = nativeArray16.hasPrototypeMap();
        java.lang.Object[] objArray26 = nativeArray16.getIds();
        int int27 = nativeArray16.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj57 = nativeArray49.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray54);
        boolean boolean58 = nativeArray49.hasPrototypeMap();
        java.lang.Object[] objArray59 = nativeArray49.getIds();
        int int60 = nativeArray49.size();
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int64 = nativeArray62.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray49.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        java.lang.Object obj66 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        boolean boolean67 = nativeArray16.containsAll((java.util.Collection) nativeArray49);
        java.lang.Object obj68 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int72 = nativeArray70.lastIndexOf((java.lang.Object) (short) 10);
        long long73 = nativeArray70.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray70, "", true);
        boolean boolean77 = nativeArray70.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray79.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray82, (java.lang.Object) (-1));
        java.lang.Object[] objArray85 = nativeArray79.getAllIds();
        nativeArray79.delete("");
        boolean boolean88 = nativeArray70.contains((java.lang.Object) "");
        boolean boolean89 = nativeArray49.contains((java.lang.Object) nativeArray70);
        com.google.javascript.rhino.head.Scriptable scriptable90 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray70);
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1L + "'", long73 == 1L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[length]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(scriptable90);
    }

    @Test
    public void test2619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2619");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        nativeArray1.setAttributes("hi!", 10);
        java.lang.reflect.Method method20 = null;
        java.lang.reflect.Method method21 = null;
        nativeArray1.defineProperty("object", (java.lang.Object) 1L, method20, method21, 13);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray27.getParentScope();
        java.lang.Object[] objArray29 = nativeArray27.getIds();
        boolean boolean30 = nativeArray27.isEmpty();
        nativeArray27.activatePrototypeMap(13);
        java.util.Iterator iterator33 = nativeArray27.iterator();
        nativeArray27.delete((int) (byte) 100);
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray27.getPrototype();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "object");
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.initPrototypeValue((int) '#', "Array", (java.lang.Object) nativeArray27, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(iterator33);
        org.junit.Assert.assertNull(scriptable36);
    }

    @Test
    public void test2620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2620");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.isSealed();
        java.lang.Object obj12 = nativeArray1.get(0L);
        long long13 = nativeArray1.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int18 = nativeArray16.lastIndexOf((java.lang.Object) (short) 10);
        long long19 = nativeArray16.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, "", true);
        boolean boolean23 = nativeArray16.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable27 = nativeArray26.getParentScope();
        java.lang.Object[] objArray28 = nativeArray26.getIds();
        boolean boolean29 = nativeArray26.isEmpty();
        boolean boolean30 = nativeArray16.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean32 = nativeArray26.isConst("object");
        java.lang.Object obj34 = nativeArray26.get((java.lang.Object) (byte) 10);
        nativeArray26.preventExtensions();
        boolean boolean36 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean50 = nativeArray41.hasPrototypeMap();
        java.lang.Object[] objArray51 = nativeArray41.getIds();
        int int52 = nativeArray41.size();
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray57, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj65 = nativeArray57.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        boolean boolean66 = nativeArray57.hasPrototypeMap();
        java.lang.Object[] objArray67 = nativeArray57.getIds();
        int int68 = nativeArray57.size();
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray71.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray74, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray79.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj82 = nativeArray74.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray79);
        boolean boolean83 = nativeArray74.hasPrototypeMap();
        java.lang.Object[] objArray84 = nativeArray74.getIds();
        int int85 = nativeArray74.size();
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int89 = nativeArray87.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray74.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray87);
        java.lang.Object obj91 = nativeArray57.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray74);
        boolean boolean92 = nativeArray41.containsAll((java.util.Collection) nativeArray74);
        int int94 = nativeArray74.getAttributes("hi!");
        boolean boolean96 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray74, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable97 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray74);
        boolean boolean98 = nativeArray26.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray74);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(scriptable27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[hi!]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[hi!]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(scriptable97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test2621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2621");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        nativeArray10.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) -1, (java.lang.Object) nativeArray10);
        boolean boolean17 = nativeArray1.isSealed();
        nativeArray1.setAttributes((int) (byte) 10, 0);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        boolean boolean24 = nativeArray1.isConst("object");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test2622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2622");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray17.avoidObjectDetection();
        nativeArray17.sealObject();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test2623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2623");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        nativeArray9.delete((int) (byte) 1);
        boolean boolean15 = nativeArray9.isExtensible();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 4);
        java.lang.Object[] objArray18 = nativeArray9.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray24.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray42.getParentScope();
        java.lang.Object[] objArray44 = nativeArray42.getIds();
        boolean boolean45 = nativeArray42.isEmpty();
        nativeArray9.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) boolean45);
        boolean boolean47 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray53, (java.lang.Object) (-1));
        java.lang.Object[] objArray56 = nativeArray50.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable57 = nativeArray50.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray50.getParentScope();
        boolean boolean59 = nativeArray50.isSealed();
        boolean boolean60 = nativeArray50.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray65, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj80 = nativeArray72.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray77);
        com.google.javascript.rhino.head.Callable callable83 = null;
        nativeArray72.setGetterOrSetter("hi!", 0, callable83, false);
        java.lang.Integer[] intArray86 = nativeArray72.getIndexIds();
        nativeArray65.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        java.lang.Object obj88 = nativeArray50.get((java.lang.Object) nativeArray72);
        java.lang.Object obj89 = nativeArray1.get(13, (com.google.javascript.rhino.head.Scriptable) nativeArray72);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[null]");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[null]");
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test2624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2624");
        com.google.javascript.rhino.head.Scriptable scriptable0 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray3.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray6, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj21 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        com.google.javascript.rhino.head.Callable callable24 = null;
        nativeArray13.setGetterOrSetter("hi!", 0, callable24, false);
        java.lang.Integer[] intArray27 = nativeArray13.getIndexIds();
        nativeArray6.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray13);
        boolean boolean30 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, "hi!");
        boolean boolean31 = nativeArray6.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int35 = nativeArray33.lastIndexOf((java.lang.Object) (short) 10);
        long long36 = nativeArray33.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray33, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable40 = null;
        java.lang.Object[] objArray41 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable40);
        java.lang.Object[] objArray42 = nativeArray33.toArray(objArray41);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        long long48 = nativeArray45.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, "", true);
        boolean boolean52 = nativeArray45.hasPrototypeMap();
        int int53 = nativeArray45.size();
        boolean boolean54 = nativeArray45.isEmpty();
        boolean boolean56 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, "Array");
        java.lang.Object obj57 = nativeArray33.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int62 = nativeArray60.lastIndexOf((java.lang.Object) (short) 10);
        long long63 = nativeArray60.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray60, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray71, (java.lang.Object) (-1));
        java.lang.Object[] objArray74 = nativeArray68.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable75 = nativeArray68.getParentScope();
        boolean boolean76 = nativeArray60.containsAll((java.util.Collection) nativeArray68);
        java.lang.Object obj77 = nativeArray45.get((int) (byte) -1, (com.google.javascript.rhino.head.Scriptable) nativeArray68);
        java.lang.Object obj78 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray6, (java.lang.Object) nativeArray45);
        java.lang.Object obj80 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, 0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.defineProperty(scriptable0, "object", (java.lang.Object) nativeArray45, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[null]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1L + "'", long63 == 1L);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[null]");
        org.junit.Assert.assertNull(scriptable75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
    }

    @Test
    public void test2625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2625");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        boolean boolean18 = nativeArray11.avoidObjectDetection();
        com.google.javascript.rhino.head.Scriptable scriptable19 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getIds();
        boolean boolean25 = nativeArray22.isEmpty();
        nativeArray22.delete((int) 'a');
        nativeArray11.defineProperty("", (java.lang.Object) nativeArray22, (int) (short) 1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", false);
        nativeArray22.sealObject();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test2626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2626");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        nativeArray1.setAttributes("Array", 1);
        int int29 = nativeArray1.size();
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int33 = nativeArray31.lastIndexOf((java.lang.Object) (short) 10);
        long long34 = nativeArray31.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray31, "", true);
        boolean boolean38 = nativeArray31.hasPrototypeMap();
        int int39 = nativeArray31.size();
        boolean boolean40 = nativeArray31.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable41 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray31);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray31, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable45 = nativeArray31.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method49 = null;
        java.lang.reflect.Method method50 = null;
        nativeArray31.defineProperty("hi!", (java.lang.Object) nativeArray48, method49, method50, 0);
        boolean boolean53 = nativeArray48.isSealed();
        boolean boolean54 = nativeArray1.contains((java.lang.Object) nativeArray48);
        com.google.javascript.rhino.head.Scriptable scriptable55 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray48);
        java.lang.Object obj57 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, (int) (byte) 0);
        java.lang.Object obj59 = nativeArray48.get((long) 4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(scriptable41);
        org.junit.Assert.assertNull(scriptable45);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNull(obj59);
    }

    @Test
    public void test2627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2627");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        long long4 = nativeArray1.jsGet_length();
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray6.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj17 = nativeArray9.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray14);
        boolean boolean18 = nativeArray9.hasPrototypeMap();
        java.lang.Object[] objArray19 = nativeArray9.getIds();
        int int20 = nativeArray9.size();
        boolean boolean21 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean23 = nativeArray1.isConst("Array");
        com.google.javascript.rhino.head.Scriptable scriptable24 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Integer[] intArray25 = nativeArray1.getIndexIds();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 24");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(scriptable24);
    }

    @Test
    public void test2628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2628");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        nativeArray38.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.getAllIds();
        nativeArray47.delete("");
        java.lang.Object obj56 = nativeArray32.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        java.lang.Integer[] intArray57 = nativeArray47.getIndexIds();
        java.lang.Object obj58 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) intArray57);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable64 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray61);
        java.lang.Object obj66 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, 2);
        com.google.javascript.rhino.head.Scriptable scriptable67 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray61);
        nativeArray1.defineProperty("object", (java.lang.Object) nativeArray61, (int) (short) 0);
        com.google.javascript.rhino.head.Scriptable scriptable70 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray61);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[length]");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(scriptable67);
        org.junit.Assert.assertNull(scriptable70);
    }

    @Test
    public void test2629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2629");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        com.google.javascript.rhino.head.Callable callable26 = null;
        nativeArray15.setGetterOrSetter("hi!", 0, callable26, false);
        java.lang.Integer[] intArray29 = nativeArray15.getIndexIds();
        nativeArray8.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        long long35 = nativeArray32.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        java.lang.Object[] objArray46 = nativeArray40.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray40.getParentScope();
        boolean boolean48 = nativeArray32.containsAll((java.util.Collection) nativeArray40);
        nativeArray40.delete("Array");
        java.lang.Object obj51 = nativeArray8.getAssociatedValue((java.lang.Object) nativeArray40);
        boolean boolean52 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        com.google.javascript.rhino.head.Scriptable scriptable53 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        long long59 = nativeArray56.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray67, (java.lang.Object) (-1));
        java.lang.Object[] objArray70 = nativeArray64.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable71 = nativeArray64.getParentScope();
        boolean boolean72 = nativeArray56.containsAll((java.util.Collection) nativeArray64);
        nativeArray64.delete("Array");
        java.lang.Object[] objArray75 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray64);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray(objArray75);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, 13, (java.lang.Object) nativeArray76);
        boolean boolean79 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, "");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[null]");
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(scriptable53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[null]");
        org.junit.Assert.assertNull(scriptable71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test2630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2630");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", false);
        boolean boolean68 = nativeArray1.avoidObjectDetection();
        java.lang.String str69 = nativeArray1.getTypeOf();
        java.lang.Object obj71 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        com.google.javascript.rhino.head.Context context72 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable75 = nativeArray74.getParentScope();
        java.lang.Object[] objArray76 = nativeArray74.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray81, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray86 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray86.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj89 = nativeArray81.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray86);
        java.lang.Object obj90 = nativeArray74.getAssociatedValue((java.lang.Object) nativeArray81);
        com.google.javascript.rhino.head.Scriptable scriptable91 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray74);
        nativeArray74.delete(2);
        int int94 = nativeArray74.size();
        nativeArray1.defineOwnProperties(context72, (com.google.javascript.rhino.head.ScriptableObject) nativeArray74);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "object" + "'", str69, "object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNull(scriptable75);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[length]");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNull(scriptable91);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
    }

    @Test
    public void test2631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2631");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Object[] objArray10 = nativeArray1.toArray();
        java.lang.Object obj12 = nativeArray1.get(0);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable15 = nativeArray14.getParentScope();
        java.lang.Object[] objArray16 = nativeArray14.getIds();
        boolean boolean17 = nativeArray14.isEmpty();
        java.lang.Object obj19 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, 8);
        com.google.javascript.rhino.head.Context context20 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        nativeArray22.delete((int) (byte) 1);
        java.lang.Integer[] intArray28 = nativeArray22.getIndexIds();
        nativeArray14.defineOwnProperties(context20, (com.google.javascript.rhino.head.ScriptableObject) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        long long35 = nativeArray32.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "", true);
        boolean boolean39 = nativeArray32.hasPrototypeMap();
        int int40 = nativeArray32.size();
        boolean boolean41 = nativeArray32.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.getAllIds();
        nativeArray43.delete("");
        long long52 = nativeArray43.getLength();
        boolean boolean53 = nativeArray32.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        long long59 = nativeArray56.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray67, (java.lang.Object) (-1));
        java.lang.Object[] objArray70 = nativeArray64.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable71 = nativeArray64.getParentScope();
        boolean boolean72 = nativeArray56.containsAll((java.util.Collection) nativeArray64);
        com.google.javascript.rhino.head.Scriptable scriptable73 = nativeArray64.getParentScope();
        boolean boolean74 = nativeArray64.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable78 = nativeArray77.getParentScope();
        java.lang.Object[] objArray79 = nativeArray77.getIds();
        boolean boolean80 = nativeArray64.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray77);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "object", (java.lang.Object) nativeArray64);
        boolean boolean83 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "");
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject85 = nativeArray14.exportAsJSClass(10, (com.google.javascript.rhino.head.Scriptable) nativeArray43, false);
        boolean boolean86 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray14);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[length]");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[null]");
        org.junit.Assert.assertNull(scriptable71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(scriptable73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(scriptable78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(idFunctionObject85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test2632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2632");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.Object[] objArray2 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray(objArray2);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray6.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) (-1));
        java.lang.Object[] objArray12 = nativeArray6.getAllIds();
        nativeArray6.delete("");
        long long15 = nativeArray6.getLength();
        boolean boolean17 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        nativeArray34.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.getAllIds();
        nativeArray43.delete("");
        java.lang.Object obj52 = nativeArray28.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        java.lang.Integer[] intArray53 = nativeArray43.getIndexIds();
        nativeArray6.defineProperty("", (java.lang.Object) nativeArray43, 10);
        java.lang.Object[] objArray56 = nativeArray43.getIds();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray3, "Array", (java.lang.Object) objArray56, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 35");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[length]");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[length]");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
    }

    @Test
    public void test2633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2633");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj21 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean22 = nativeArray13.hasPrototypeMap();
        java.lang.Object[] objArray23 = nativeArray13.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        boolean boolean32 = nativeArray25.hasPrototypeMap();
        java.lang.reflect.Method method35 = null;
        java.lang.reflect.Method method36 = null;
        nativeArray25.defineProperty("hi!", (java.lang.Object) (-1L), method35, method36, (int) (byte) 10);
        boolean boolean40 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "");
        com.google.javascript.rhino.head.Scriptable scriptable41 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray25);
        nativeArray25.setAttributes("", 4);
        nativeArray25.delete(10);
        java.lang.Object obj47 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) nativeArray25);
        boolean boolean48 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        nativeArray25.setAttributes("hi!", (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test2634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2634");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        long long21 = nativeArray17.getLength();
        long long22 = nativeArray17.jsGet_length();
        java.lang.String str23 = nativeArray17.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj28 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "Array");
        nativeArray17.defineProperty("Array", (java.lang.Object) nativeArray26, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator36 = nativeArray33.iterator();
        boolean boolean37 = nativeArray33.isSealed();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!", (java.lang.Object) nativeArray33, 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray49.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj52 = nativeArray44.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        boolean boolean53 = nativeArray44.hasPrototypeMap();
        java.lang.Object[] objArray54 = nativeArray44.getIds();
        int int55 = nativeArray44.size();
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray44.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray57);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int64 = nativeArray62.lastIndexOf((java.lang.Object) (short) 10);
        long long65 = nativeArray62.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray62, "", true);
        boolean boolean69 = nativeArray62.hasPrototypeMap();
        int int70 = nativeArray62.size();
        boolean boolean71 = nativeArray62.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable72 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray62, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable76 = nativeArray62.getParentScope();
        java.lang.Object obj78 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) 0.0f);
        boolean boolean79 = nativeArray44.contains((java.lang.Object) 0.0f);
        boolean boolean80 = nativeArray44.isSealed();
        java.lang.Object obj81 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) boolean80);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "object" + "'", str23, "object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(iterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(scriptable72);
        org.junit.Assert.assertNull(scriptable76);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(obj81);
    }

    @Test
    public void test2635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2635");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "hi!");
        long long48 = nativeArray43.jsGet_length();
        boolean boolean49 = nativeArray4.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.Scriptable scriptable50 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass51 = scriptable50.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(scriptable50);
    }

    @Test
    public void test2636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2636");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        boolean boolean27 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "hi!");
        nativeArray4.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray23, 8);
        boolean boolean31 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "");
        boolean boolean32 = nativeArray23.hasPrototypeMap();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test2637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2637");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        java.lang.String str56 = nativeArray37.getClassName();
        nativeArray37.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable59 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Array" + "'", str56, "Array");
        org.junit.Assert.assertNull(scriptable59);
    }

    @Test
    public void test2638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2638");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable10 = null;
        java.lang.Object obj11 = nativeArray1.get((int) '#', scriptable10);
        nativeArray1.preventExtensions();
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        java.lang.Object[] objArray19 = nativeArray15.toArray();
        java.lang.reflect.Method method20 = null;
        java.lang.reflect.Method method21 = null;
        nativeArray1.defineProperty("Array", (java.lang.Object) nativeArray15, method20, method21, 13);
        java.lang.Object obj25 = null;
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "hi!", obj25);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        java.lang.Object[] objArray43 = nativeArray37.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray37.getParentScope();
        boolean boolean45 = nativeArray29.containsAll((java.util.Collection) nativeArray37);
        boolean boolean46 = nativeArray29.hasPrototypeMap();
        java.lang.Object obj48 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, 10);
        boolean boolean49 = nativeArray15.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        java.lang.String str50 = nativeArray15.getClassName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Array" + "'", str50, "Array");
    }

    @Test
    public void test2639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2639");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) ' ');
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int6 = nativeArray4.lastIndexOf((java.lang.Object) (short) 10);
        long long7 = nativeArray4.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "", true);
        boolean boolean11 = nativeArray4.hasPrototypeMap();
        java.util.ListIterator listIterator12 = nativeArray4.listIterator();
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        boolean boolean22 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray18, "");
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "", (java.lang.Object) 100);
        java.lang.Object obj32 = nativeArray25.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray28);
        java.lang.Object[] objArray33 = nativeArray28.toArray();
        nativeArray18.setAttributes((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray28, (int) (short) 0);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean50 = nativeArray41.hasPrototypeMap();
        java.lang.Object[] objArray51 = nativeArray41.getIds();
        int int52 = nativeArray41.size();
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj66 = nativeArray58.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        boolean boolean67 = nativeArray58.hasPrototypeMap();
        java.lang.Object[] objArray68 = nativeArray58.getIds();
        int int69 = nativeArray58.size();
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int73 = nativeArray71.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray58.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray71);
        java.lang.Object obj75 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object[] objArray76 = nativeArray41.getIds();
        java.lang.Integer[] intArray77 = nativeArray41.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray80 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray80.activatePrototypeMap((int) (short) 100);
        boolean boolean84 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray80, "hi!");
        long long85 = nativeArray80.jsGet_length();
        boolean boolean86 = nativeArray41.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray80);
        nativeArray41.setAttributes("hi!", 1);
        com.google.javascript.rhino.head.Scriptable scriptable91 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray41, "hi!");
        boolean boolean92 = nativeArray18.has((int) (byte) -1, (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        java.lang.reflect.Method method93 = null;
        java.lang.reflect.Method method94 = null;
        nativeArray4.defineProperty("Array", (java.lang.Object) nativeArray18, method93, method94, 4);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = nativeArray1.addAll(100, (java.util.Collection) nativeArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(listIterator12);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[null]");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[hi!]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[hi!]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 1L + "'", long85 == 1L);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(scriptable91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test2640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2640");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        nativeArray1.setAttributes("hi!", 10);
        boolean boolean18 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int23 = nativeArray21.lastIndexOf((java.lang.Object) (short) 10);
        long long24 = nativeArray21.getLength();
        nativeArray21.delete((int) (byte) 1);
        boolean boolean27 = nativeArray21.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable31 = nativeArray30.getParentScope();
        java.lang.Object[] objArray32 = nativeArray30.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "", (java.lang.Object) nativeArray30, 0);
        java.lang.Object[] objArray35 = nativeArray21.toArray();
        nativeArray21.preventExtensions();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", (java.lang.Object) nativeArray21);
        nativeArray21.setAttributes("object", (int) (short) 0);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        boolean boolean49 = nativeArray42.hasPrototypeMap();
        java.lang.reflect.Method method52 = null;
        java.lang.reflect.Method method53 = null;
        nativeArray42.defineProperty("hi!", (java.lang.Object) (-1L), method52, method53, (int) (byte) 10);
        boolean boolean57 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "");
        nativeArray42.sealObject();
        boolean boolean59 = nativeArray42.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "", (java.lang.Object) 100);
        java.lang.Object obj68 = nativeArray61.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray64);
        java.lang.Object[] objArray69 = nativeArray64.toArray();
        java.lang.Object[] objArray70 = nativeArray42.toArray(objArray69);
        java.lang.Integer[] intArray71 = nativeArray42.getIndexIds();
        boolean boolean72 = nativeArray21.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray42);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(scriptable31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[null]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[null]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[null]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test2641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2641");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        java.lang.Object[] objArray24 = nativeArray18.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable25 = nativeArray18.getParentScope();
        boolean boolean26 = nativeArray10.containsAll((java.util.Collection) nativeArray18);
        boolean boolean27 = nativeArray1.containsAll((java.util.Collection) nativeArray10);
        nativeArray1.setAttributes("", 8);
        nativeArray1.setAttributes((int) 'a', (int) (byte) 10);
        boolean boolean34 = nativeArray1.isExtensible();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test2642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2642");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        nativeArray1.setAttributes("Array", 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int32 = nativeArray30.lastIndexOf((java.lang.Object) (short) 10);
        long long33 = nativeArray30.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "", true);
        boolean boolean37 = nativeArray30.hasPrototypeMap();
        int int38 = nativeArray30.size();
        boolean boolean39 = nativeArray30.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable40 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray30);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray30.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method48 = null;
        java.lang.reflect.Method method49 = null;
        nativeArray30.defineProperty("hi!", (java.lang.Object) nativeArray47, method48, method49, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.activatePrototypeMap((int) (short) 100);
        boolean boolean58 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray54, "hi!");
        boolean boolean59 = nativeArray54.isExtensible();
        nativeArray47.putConst("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) 100);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray47);
        com.google.javascript.rhino.head.Scriptable scriptable63 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray68, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj76 = nativeArray68.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray73);
        com.google.javascript.rhino.head.Callable callable79 = null;
        nativeArray68.setGetterOrSetter("hi!", 0, callable79, false);
        java.lang.Integer[] intArray82 = nativeArray68.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray82);
        com.google.javascript.rhino.head.Scriptable scriptable84 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray83);
        java.lang.Object[] objArray85 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray83);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = nativeArray1.removeAll((java.util.Collection) nativeArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(scriptable40);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(scriptable63);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertNull(scriptable84);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
    }

    @Test
    public void test2643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2643");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        long long35 = nativeArray32.getLength();
        nativeArray32.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        java.lang.Object[] objArray47 = nativeArray41.getAllIds();
        nativeArray41.delete("");
        java.lang.Object obj50 = nativeArray26.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable53 = nativeArray26.getPrototype();
        com.google.javascript.rhino.head.Context context54 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        long long59 = nativeArray56.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray67, (java.lang.Object) (-1));
        java.lang.Object[] objArray70 = nativeArray64.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable71 = nativeArray64.getParentScope();
        boolean boolean72 = nativeArray56.containsAll((java.util.Collection) nativeArray64);
        nativeArray26.defineOwnProperties(context54, (com.google.javascript.rhino.head.ScriptableObject) nativeArray56);
        nativeArray10.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray26, (int) (short) 10);
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject77 = nativeArray1.exportAsJSClass((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray26, true);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray79.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray82, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray87.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj90 = nativeArray82.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray87);
        com.google.javascript.rhino.head.Callable callable93 = null;
        nativeArray82.setGetterOrSetter("hi!", 0, callable93, false);
        java.lang.Integer[] intArray96 = nativeArray82.getIndexIds();
        nativeArray26.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray82);
        nativeArray82.delete("Array");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[length]");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNull(scriptable53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[null]");
        org.junit.Assert.assertNull(scriptable71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(idFunctionObject77);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(intArray96);
    }

    @Test
    public void test2644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2644");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean50 = nativeArray41.hasPrototypeMap();
        java.lang.Object[] objArray51 = nativeArray41.getIds();
        int int52 = nativeArray41.size();
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int56 = nativeArray54.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray41.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray54);
        java.lang.Object obj58 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        java.lang.Object[] objArray59 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        boolean boolean61 = nativeArray24.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        long long67 = nativeArray64.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable71 = null;
        java.lang.Object[] objArray72 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable71);
        java.lang.Object[] objArray73 = nativeArray64.toArray(objArray72);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        long long79 = nativeArray76.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, "", true);
        boolean boolean83 = nativeArray76.hasPrototypeMap();
        int int84 = nativeArray76.size();
        boolean boolean85 = nativeArray76.isEmpty();
        boolean boolean87 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, "Array");
        java.lang.Object obj88 = nativeArray64.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object obj89 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        boolean boolean90 = nativeArray9.contains((java.lang.Object) "");
        nativeArray9.delete(1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = nativeArray9.remove((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[null]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1L + "'", long79 == 1L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test2645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2645");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        boolean boolean5 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        boolean boolean6 = nativeArray1.isExtensible();
        java.lang.String str7 = nativeArray1.getTypeOf();
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        com.google.javascript.rhino.head.Scriptable scriptable10 = nativeArray1.getPrototype();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "object" + "'", str7, "object");
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertNull(scriptable10);
    }

    @Test
    public void test2646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2646");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable4 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray7.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray10, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        java.lang.Object[] objArray29 = nativeArray23.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable30 = nativeArray23.getParentScope();
        boolean boolean31 = nativeArray15.containsAll((java.util.Collection) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable41 = null;
        java.lang.Object[] objArray42 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable41);
        java.lang.Object[] objArray43 = nativeArray34.toArray(objArray42);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "hi!", (java.lang.Object) objArray42);
        nativeArray15.activatePrototypeMap((int) (byte) 10);
        boolean boolean47 = nativeArray7.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        nativeArray7.setAttributes((int) (byte) 1, 10);
        java.util.ListIterator listIterator51 = nativeArray7.listIterator();
        nativeArray1.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        java.lang.Object[] objArray54 = nativeArray7.getAllIds();
        java.util.ListIterator listIterator55 = nativeArray7.listIterator();
        org.junit.Assert.assertNull(scriptable4);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertNull(scriptable30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(listIterator51);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[1, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[1, length]");
        org.junit.Assert.assertNotNull(listIterator55);
    }

    @Test
    public void test2647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2647");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.isSealed();
        boolean boolean11 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        com.google.javascript.rhino.head.Callable callable34 = null;
        nativeArray23.setGetterOrSetter("hi!", 0, callable34, false);
        java.lang.Integer[] intArray37 = nativeArray23.getIndexIds();
        nativeArray16.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        java.lang.Object obj39 = nativeArray1.get((java.lang.Object) nativeArray23);
        java.lang.Object[] objArray40 = nativeArray1.toArray();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        nativeArray1.delete(10);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int51 = nativeArray49.lastIndexOf((java.lang.Object) (short) 10);
        long long52 = nativeArray49.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        java.lang.Object[] objArray63 = nativeArray57.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray57.getParentScope();
        boolean boolean65 = nativeArray49.containsAll((java.util.Collection) nativeArray57);
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray57.getParentScope();
        boolean boolean67 = nativeArray47.containsAll((java.util.Collection) nativeArray57);
        boolean boolean69 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "");
        nativeArray1.defineConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[null]");
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test2648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2648");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        nativeArray9.delete((int) (byte) 1);
        boolean boolean15 = nativeArray9.isExtensible();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 4);
        java.lang.Object[] objArray18 = nativeArray9.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray24.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray42.getParentScope();
        java.lang.Object[] objArray44 = nativeArray42.getIds();
        boolean boolean45 = nativeArray42.isEmpty();
        nativeArray9.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) boolean45);
        boolean boolean47 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        long long53 = nativeArray50.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "", true);
        boolean boolean57 = nativeArray50.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable61 = nativeArray60.getParentScope();
        java.lang.Object[] objArray62 = nativeArray60.getIds();
        boolean boolean63 = nativeArray60.isEmpty();
        boolean boolean64 = nativeArray50.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        java.lang.Object obj66 = nativeArray50.get((long) (byte) 0);
        boolean boolean67 = nativeArray1.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object[] objArray68 = nativeArray50.getIds();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "Array", true);
        com.google.javascript.rhino.head.Scriptable scriptable72 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[null]");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(scriptable61);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNull(scriptable72);
    }

    @Test
    public void test2649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2649");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        boolean boolean21 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (int) 'a');
        int int22 = nativeArray9.size();
        java.lang.Object obj24 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test2650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2650");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj3 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int8 = nativeArray6.lastIndexOf((java.lang.Object) (short) 10);
        long long9 = nativeArray6.getLength();
        nativeArray6.delete((int) (byte) 1);
        boolean boolean13 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, "");
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        java.lang.Object[] objArray29 = nativeArray23.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable30 = nativeArray23.getParentScope();
        boolean boolean31 = nativeArray15.containsAll((java.util.Collection) nativeArray23);
        boolean boolean32 = nativeArray6.containsAll((java.util.Collection) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        java.lang.Object[] objArray48 = nativeArray42.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable49 = nativeArray42.getParentScope();
        boolean boolean50 = nativeArray34.containsAll((java.util.Collection) nativeArray42);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int54 = nativeArray52.lastIndexOf((java.lang.Object) (short) 10);
        long long55 = nativeArray52.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray52, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        java.lang.Object[] objArray66 = nativeArray60.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable67 = nativeArray60.getParentScope();
        boolean boolean68 = nativeArray52.containsAll((java.util.Collection) nativeArray60);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj81 = nativeArray73.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        boolean boolean82 = nativeArray73.hasPrototypeMap();
        java.lang.Object[] objArray83 = nativeArray73.getIds();
        java.lang.Object[] objArray84 = nativeArray60.toArray(objArray83);
        java.lang.Object obj85 = nativeArray6.associateValue((java.lang.Object) boolean50, (java.lang.Object) nativeArray60);
        com.google.javascript.rhino.head.Scriptable scriptable86 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray60);
        boolean boolean87 = nativeArray1.has("hi!", scriptable86);
        boolean boolean88 = nativeArray1.avoidObjectDetection();
        java.lang.Object[] objArray89 = nativeArray1.getAllIds();
        java.lang.Object[] objArray90 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray91 = new com.google.javascript.rhino.head.NativeArray(objArray90);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertNull(scriptable30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[null]");
        org.junit.Assert.assertNull(scriptable49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNull(scriptable67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[null]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(scriptable86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[length]");
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[]");
    }

    @Test
    public void test2651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2651");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        boolean boolean10 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) ' ');
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test2652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2652");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        nativeArray4.setAttributes("hi!", 2);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "", true);
        boolean boolean33 = nativeArray26.hasPrototypeMap();
        int int34 = nativeArray26.size();
        boolean boolean35 = nativeArray26.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable36 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        java.lang.Object obj37 = null;
        nativeArray4.putConst("Array", scriptable36, obj37);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(scriptable36);
    }

    @Test
    public void test2653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2653");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        nativeArray23.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.getAllIds();
        nativeArray32.delete("");
        java.lang.Object obj41 = nativeArray17.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray17.getPrototype();
        com.google.javascript.rhino.head.Context context45 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        nativeArray17.defineOwnProperties(context45, (com.google.javascript.rhino.head.ScriptableObject) nativeArray47);
        nativeArray1.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 10);
        java.lang.String str67 = nativeArray1.getTypeOf();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        java.lang.Object obj71 = null;
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", obj71);
        java.lang.Object obj76 = nativeArray1.getGetterOrSetter("object", 0, true);
        nativeArray1.sealObject();
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[length]");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "object" + "'", str67, "object");
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test2654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2654");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        long long61 = nativeArray58.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray58, "", true);
        boolean boolean65 = nativeArray58.hasPrototypeMap();
        int int66 = nativeArray58.size();
        boolean boolean67 = nativeArray58.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable68 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray58, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable72 = nativeArray58.getParentScope();
        java.lang.Object obj73 = nativeArray4.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58);
        com.google.javascript.rhino.head.Scriptable scriptable74 = nativeArray4.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable75 = nativeArray4.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable76 = nativeArray4.getParentScope();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(scriptable68);
        org.junit.Assert.assertNull(scriptable72);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (-1) + "'", obj73, (-1));
        org.junit.Assert.assertNull(scriptable74);
        org.junit.Assert.assertNull(scriptable75);
        org.junit.Assert.assertNull(scriptable76);
    }

    @Test
    public void test2655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2655");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        java.lang.Object[] objArray15 = nativeArray1.toArray();
        nativeArray1.preventExtensions();
        com.google.javascript.rhino.head.Context context17 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int21 = nativeArray19.lastIndexOf((java.lang.Object) (short) 10);
        long long22 = nativeArray19.getLength();
        nativeArray19.delete((int) (byte) 1);
        boolean boolean25 = nativeArray19.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        int int41 = nativeArray30.size();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj54 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean55 = nativeArray46.hasPrototypeMap();
        java.lang.Object[] objArray56 = nativeArray46.getIds();
        int int57 = nativeArray46.size();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj71 = nativeArray63.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray68);
        boolean boolean72 = nativeArray63.hasPrototypeMap();
        java.lang.Object[] objArray73 = nativeArray63.getIds();
        int int74 = nativeArray63.size();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray63.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object obj80 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        boolean boolean81 = nativeArray30.containsAll((java.util.Collection) nativeArray63);
        nativeArray19.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray30);
        java.lang.Integer[] intArray83 = nativeArray19.getIndexIds();
        nativeArray1.defineOwnProperties(context17, (com.google.javascript.rhino.head.ScriptableObject) nativeArray19);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = nativeArray1.getAttributes((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 100 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[hi!]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray83);
    }

    @Test
    public void test2656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2656");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Object[] objArray10 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.Callable callable29 = null;
        nativeArray18.setGetterOrSetter("hi!", 0, callable29, false);
        nativeArray12.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray18, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int38 = nativeArray36.lastIndexOf((java.lang.Object) (short) 10);
        long long39 = nativeArray36.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable43 = null;
        java.lang.Object[] objArray44 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable43);
        java.lang.Object[] objArray45 = nativeArray36.toArray(objArray44);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        long long51 = nativeArray48.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "", true);
        boolean boolean55 = nativeArray48.hasPrototypeMap();
        int int56 = nativeArray48.size();
        boolean boolean57 = nativeArray48.isEmpty();
        boolean boolean59 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "Array");
        java.lang.Object obj60 = nativeArray36.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        java.lang.Object obj61 = nativeArray12.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray63.getParentScope();
        java.lang.Object[] objArray65 = nativeArray63.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray70, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj78 = nativeArray70.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray75);
        java.lang.Object obj79 = nativeArray63.getAssociatedValue((java.lang.Object) nativeArray70);
        java.lang.Object obj80 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) nativeArray63);
        nativeArray36.preventExtensions();
        java.lang.Object[] objArray82 = nativeArray36.getIds();
        java.lang.Object[] objArray83 = nativeArray1.toArray(objArray82);
        long long84 = nativeArray1.jsGet_length();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[null]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[length]");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[null]");
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 1L + "'", long84 == 1L);
    }

    @Test
    public void test2657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2657");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator4 = nativeArray1.iterator();
        boolean boolean5 = nativeArray1.hasPrototypeMap();
        int int6 = nativeArray1.size();
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) ' ');
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int35 = nativeArray33.lastIndexOf((java.lang.Object) (short) 10);
        long long36 = nativeArray33.getLength();
        nativeArray33.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        java.lang.Object[] objArray48 = nativeArray42.getAllIds();
        nativeArray42.delete("");
        java.lang.Object obj51 = nativeArray27.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray27.getPrototype();
        com.google.javascript.rhino.head.Context context55 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        long long60 = nativeArray57.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray57, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray68, (java.lang.Object) (-1));
        java.lang.Object[] objArray71 = nativeArray65.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable72 = nativeArray65.getParentScope();
        boolean boolean73 = nativeArray57.containsAll((java.util.Collection) nativeArray65);
        nativeArray27.defineOwnProperties(context55, (com.google.javascript.rhino.head.ScriptableObject) nativeArray57);
        nativeArray11.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray27, (int) (short) 10);
        java.lang.String str77 = nativeArray11.getTypeOf();
        java.lang.Object obj79 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, (int) (short) -1);
        nativeArray11.delete((int) ' ');
        nativeArray1.defineConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        int int84 = nativeArray11.getAttributes("");
        org.junit.Assert.assertNotNull(iterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[length]");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[null]");
        org.junit.Assert.assertNull(scriptable72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "object" + "'", str77, "object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 13 + "'", int84 == 13);
    }

    @Test
    public void test2658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2658");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj33 = nativeArray25.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        com.google.javascript.rhino.head.Callable callable36 = null;
        nativeArray25.setGetterOrSetter("hi!", 0, callable36, false);
        nativeArray19.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray25, (int) (short) 10);
        boolean boolean42 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "object");
        int int43 = nativeArray8.lastIndexOf((java.lang.Object) nativeArray25);
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray8.getPrototype();
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(scriptable44);
    }

    @Test
    public void test2659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2659");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        int int40 = nativeArray4.indexOf((java.lang.Object) 100.0f);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable50 = null;
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable50);
        java.lang.Object[] objArray52 = nativeArray43.toArray(objArray51);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "", true);
        boolean boolean62 = nativeArray55.hasPrototypeMap();
        int int63 = nativeArray55.size();
        boolean boolean64 = nativeArray55.isEmpty();
        boolean boolean66 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "Array");
        java.lang.Object obj67 = nativeArray43.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        nativeArray55.setAttributes("object", (int) (byte) 0);
        boolean boolean71 = nativeArray4.has((int) (byte) 0, (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        java.lang.Object obj72 = null;
        java.lang.Object obj73 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray55, obj72);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[null]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test2660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2660");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        java.lang.Object[] objArray42 = nativeArray36.getAllIds();
        nativeArray36.delete("");
        java.lang.Object obj45 = nativeArray21.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable48 = nativeArray21.getPrototype();
        com.google.javascript.rhino.head.Context context49 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        java.lang.Object[] objArray65 = nativeArray59.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray59.getParentScope();
        boolean boolean67 = nativeArray51.containsAll((java.util.Collection) nativeArray59);
        nativeArray21.defineOwnProperties(context49, (com.google.javascript.rhino.head.ScriptableObject) nativeArray51);
        java.lang.Object obj69 = nativeArray1.get((int) ' ', (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        java.lang.Integer[] intArray70 = nativeArray1.getIndexIds();
        nativeArray1.activatePrototypeMap((int) 'a');
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int77 = nativeArray75.lastIndexOf((java.lang.Object) (short) 10);
        long long78 = nativeArray75.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray75, "", true);
        boolean boolean82 = nativeArray75.hasPrototypeMap();
        java.lang.reflect.Method method85 = null;
        java.lang.reflect.Method method86 = null;
        nativeArray75.defineProperty("hi!", (java.lang.Object) (-1L), method85, method86, (int) (byte) 10);
        boolean boolean90 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray75, "");
        com.google.javascript.rhino.head.Scriptable scriptable91 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray75);
        java.lang.Object[] objArray92 = nativeArray75.getIds();
        java.lang.Object[] objArray93 = nativeArray75.toArray();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) objArray93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator listIterator96 = nativeArray1.listIterator((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[length]");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(scriptable48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[null]");
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 1L + "'", long78 == 1L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(scriptable91);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[null]");
    }

    @Test
    public void test2661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2661");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean16 = nativeArray1.isSealed();
        java.lang.Object[] objArray17 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int35 = nativeArray33.lastIndexOf((java.lang.Object) (short) 10);
        long long36 = nativeArray33.getLength();
        nativeArray33.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        java.lang.Object[] objArray48 = nativeArray42.getAllIds();
        nativeArray42.delete("");
        java.lang.Object obj51 = nativeArray27.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        java.lang.String str52 = nativeArray42.getTypeOf();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = nativeArray1.removeAll((java.util.Collection) nativeArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[length]");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "object" + "'", str52, "object");
    }

    @Test
    public void test2662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2662");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        boolean boolean13 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        long long14 = nativeArray9.jsGet_length();
        boolean boolean15 = nativeArray1.contains((java.lang.Object) long14);
        boolean boolean16 = nativeArray1.isSealed();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test2663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2663");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.Context context37 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        nativeArray9.defineOwnProperties(context37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray39);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray39);
        com.google.javascript.rhino.head.Context context58 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray63, "", (java.lang.Object) 100);
        java.lang.Object obj67 = nativeArray60.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray63);
        java.lang.Object[] objArray68 = nativeArray63.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int72 = nativeArray70.lastIndexOf((java.lang.Object) (short) 10);
        long long73 = nativeArray70.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray70, "", true);
        boolean boolean77 = nativeArray70.hasPrototypeMap();
        int int78 = nativeArray70.size();
        boolean boolean79 = nativeArray70.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable80 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray70);
        nativeArray70.setAttributes(1, (int) (short) 1);
        java.lang.Object[] objArray84 = nativeArray70.toArray();
        nativeArray39.defineOwnProperty(context58, (java.lang.Object) objArray68, (com.google.javascript.rhino.head.ScriptableObject) nativeArray70);
        java.lang.Object obj87 = null;
        nativeArray39.defineProperty("object", obj87, 2);
        boolean boolean90 = nativeArray39.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray93 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable94 = nativeArray93.getParentScope();
        java.lang.Object[] objArray95 = nativeArray93.getIds();
        boolean boolean96 = nativeArray93.isEmpty();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "Array", (java.lang.Object) nativeArray93);
        boolean boolean98 = nativeArray39.hasPrototypeMap();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[null]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1L + "'", long73 == 1L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(scriptable80);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(scriptable94);
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test2664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2664");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Context context15 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        long long20 = nativeArray17.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "", true);
        boolean boolean24 = nativeArray17.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray27.getParentScope();
        java.lang.Object[] objArray29 = nativeArray27.getIds();
        boolean boolean30 = nativeArray27.isEmpty();
        boolean boolean31 = nativeArray17.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean33 = nativeArray27.isConst("object");
        nativeArray1.defineOwnProperties(context15, (com.google.javascript.rhino.head.ScriptableObject) nativeArray27);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int38 = nativeArray36.lastIndexOf((java.lang.Object) (short) 10);
        long long39 = nativeArray36.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, "", true);
        boolean boolean43 = nativeArray36.hasPrototypeMap();
        int int44 = nativeArray36.size();
        boolean boolean45 = nativeArray36.isEmpty();
        boolean boolean46 = nativeArray36.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj62 = nativeArray54.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray59);
        com.google.javascript.rhino.head.Callable callable65 = null;
        nativeArray54.setGetterOrSetter("hi!", 0, callable65, false);
        nativeArray48.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray54, (int) (short) 10);
        java.lang.Object obj70 = null;
        int int71 = nativeArray48.lastIndexOf(obj70);
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray74.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray77, (java.lang.Object) (-1));
        java.lang.Object[] objArray80 = nativeArray74.getAllIds();
        nativeArray74.delete("");
        long long83 = nativeArray74.getLength();
        boolean boolean85 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray74, (int) (short) 10);
        nativeArray74.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable88 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray74);
        java.lang.reflect.Method method89 = null;
        java.lang.reflect.Method method90 = null;
        nativeArray48.defineProperty("object", (java.lang.Object) scriptable88, method89, method90, (int) (short) 0);
        java.lang.Object[] objArray93 = nativeArray48.getAllIds();
        boolean boolean94 = nativeArray48.isEmpty();
        nativeArray36.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray48);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = nativeArray1.remove((java.lang.Object) nativeArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[length]");
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 1L + "'", long83 == 1L);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(scriptable88);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[object, 1, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[object, 1, length]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test2665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2665");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        nativeArray10.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) -1, (java.lang.Object) nativeArray10);
        java.util.Iterator iterator17 = nativeArray1.iterator();
        java.lang.Object[] objArray18 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int23 = nativeArray21.lastIndexOf((java.lang.Object) (short) 10);
        long long24 = nativeArray21.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        java.lang.Object[] objArray35 = nativeArray29.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray29.getParentScope();
        boolean boolean37 = nativeArray21.containsAll((java.util.Collection) nativeArray29);
        com.google.javascript.rhino.head.Scriptable scriptable38 = nativeArray29.getParentScope();
        boolean boolean39 = nativeArray29.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray42.getParentScope();
        java.lang.Object[] objArray44 = nativeArray42.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        nativeArray47.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray66, (java.lang.Object) (-1));
        java.lang.Object[] objArray69 = nativeArray63.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable70 = nativeArray63.getParentScope();
        boolean boolean71 = nativeArray55.containsAll((java.util.Collection) nativeArray63);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray76, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray81.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj84 = nativeArray76.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray81);
        boolean boolean85 = nativeArray76.hasPrototypeMap();
        java.lang.Object[] objArray86 = nativeArray76.getIds();
        java.lang.Object[] objArray87 = nativeArray63.toArray(objArray86);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "Array", (java.lang.Object) nativeArray63);
        boolean boolean89 = nativeArray42.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        boolean boolean90 = nativeArray29.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        java.lang.reflect.Method method91 = null;
        java.lang.reflect.Method method92 = null;
        nativeArray1.defineProperty("Array", (java.lang.Object) nativeArray29, method91, method92, 5);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", false);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: TypeError: redeclaration of const Array.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(iterator17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[null]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[null]");
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(scriptable38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[length]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[null]");
        org.junit.Assert.assertNull(scriptable70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[null]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[null]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test2666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2666");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        java.lang.Object[] objArray5 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray7.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray10, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj18 = nativeArray10.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        boolean boolean19 = nativeArray10.hasPrototypeMap();
        java.lang.Object[] objArray20 = nativeArray10.getIds();
        int int21 = nativeArray10.size();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean36 = nativeArray27.hasPrototypeMap();
        java.lang.Object[] objArray37 = nativeArray27.getIds();
        int int38 = nativeArray27.size();
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray27.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray40);
        java.lang.Object obj44 = nativeArray10.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        java.lang.Object[] objArray45 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray27);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray68, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj76 = nativeArray68.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray73);
        boolean boolean77 = nativeArray68.hasPrototypeMap();
        java.lang.Object[] objArray78 = nativeArray68.getIds();
        java.lang.Object[] objArray79 = nativeArray55.toArray(objArray78);
        java.lang.Object obj80 = nativeArray1.associateValue((java.lang.Object) objArray45, (java.lang.Object) objArray79);
        java.lang.Object[] objArray81 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean82 = nativeArray1.isSealed();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[null]");
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[null]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[null]");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test2667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2667");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, (int) (short) 10);
        java.lang.Object obj19 = nativeArray4.get(0);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        java.lang.Object[] objArray28 = nativeArray22.getAllIds();
        nativeArray22.delete("");
        long long31 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "", (java.lang.Object) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        nativeArray34.delete((int) (byte) 1);
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "");
        boolean boolean42 = nativeArray34.hasPrototypeMap();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable54 = null;
        java.lang.Object[] objArray55 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable54);
        java.lang.Object[] objArray56 = nativeArray47.toArray(objArray55);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int61 = nativeArray59.lastIndexOf((java.lang.Object) (short) 10);
        long long62 = nativeArray59.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "", true);
        boolean boolean66 = nativeArray59.hasPrototypeMap();
        int int67 = nativeArray59.size();
        boolean boolean68 = nativeArray59.isEmpty();
        boolean boolean70 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "Array");
        java.lang.Object obj71 = nativeArray47.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray59);
        nativeArray59.setAttributes("object", (int) (byte) 0);
        nativeArray59.preventExtensions();
        com.google.javascript.rhino.head.Scriptable scriptable76 = nativeArray59.getParentScope();
        java.lang.Object obj77 = nativeArray34.get("object", (com.google.javascript.rhino.head.Scriptable) nativeArray59);
        boolean boolean78 = nativeArray4.contains(obj77);
        nativeArray4.sealObject();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[length]");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[null]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNull(scriptable76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test2668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2668");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        boolean boolean36 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "");
        nativeArray11.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray29, 13);
        boolean boolean39 = nativeArray29.avoidObjectDetection();
        java.lang.Object[] objArray40 = nativeArray29.getAllIds();
        java.lang.Object obj42 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "hi!");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[length]");
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test2669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2669");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        java.lang.Object[] objArray24 = nativeArray18.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable25 = nativeArray18.getParentScope();
        boolean boolean26 = nativeArray10.containsAll((java.util.Collection) nativeArray18);
        boolean boolean27 = nativeArray1.containsAll((java.util.Collection) nativeArray10);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj41 = nativeArray33.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        boolean boolean42 = nativeArray33.hasPrototypeMap();
        java.lang.Object[] objArray43 = nativeArray33.getIds();
        int int44 = nativeArray33.size();
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj58 = nativeArray50.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        boolean boolean59 = nativeArray50.hasPrototypeMap();
        java.lang.Object[] objArray60 = nativeArray50.getIds();
        int int61 = nativeArray50.size();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int65 = nativeArray63.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray50.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.Object obj67 = nativeArray33.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        int int69 = nativeArray33.indexOf((java.lang.Object) 100.0f);
        java.lang.Object obj70 = nativeArray10.get((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        nativeArray10.preventExtensions();
        java.lang.Object obj73 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj73);
    }

    @Test
    public void test2670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2670");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj21 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean22 = nativeArray13.hasPrototypeMap();
        java.lang.Object[] objArray23 = nativeArray13.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        boolean boolean32 = nativeArray25.hasPrototypeMap();
        java.lang.reflect.Method method35 = null;
        java.lang.reflect.Method method36 = null;
        nativeArray25.defineProperty("hi!", (java.lang.Object) (-1L), method35, method36, (int) (byte) 10);
        boolean boolean40 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "");
        com.google.javascript.rhino.head.Scriptable scriptable41 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray25);
        nativeArray25.setAttributes("", 4);
        nativeArray25.delete(10);
        java.lang.Object obj47 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) nativeArray25);
        boolean boolean48 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable52 = nativeArray51.getParentScope();
        java.lang.Object[] objArray53 = nativeArray51.getIds();
        boolean boolean54 = nativeArray51.isEmpty();
        java.lang.Object obj56 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, 8);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean59 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray64, (java.lang.Object) (-1));
        boolean boolean68 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "");
        java.lang.Object[] objArray69 = nativeArray64.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray71.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray74, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray79.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj82 = nativeArray74.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray79);
        boolean boolean83 = nativeArray74.hasPrototypeMap();
        java.lang.Object[] objArray84 = nativeArray74.getIds();
        boolean boolean85 = nativeArray74.isEmpty();
        nativeArray64.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray74);
        nativeArray1.put("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) nativeArray74);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = nativeArray74.get((long) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(scriptable52);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[null]");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test2671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2671");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.Callable callable15 = null;
        nativeArray4.setGetterOrSetter("hi!", 0, callable15, false);
        long long18 = nativeArray4.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "", false);
        java.util.ListIterator listIterator22 = nativeArray4.listIterator();
        long long23 = nativeArray4.getLength();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(listIterator22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
    }

    @Test
    public void test2672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2672");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean16 = nativeArray1.isSealed();
        java.lang.Object[] objArray17 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        java.lang.Object[] objArray26 = nativeArray20.getAllIds();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "Array", true);
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", (java.lang.Object) objArray30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[length]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
    }

    @Test
    public void test2673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2673");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        java.lang.Object[] objArray15 = nativeArray1.toArray();
        nativeArray1.preventExtensions();
        com.google.javascript.rhino.head.Context context17 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int21 = nativeArray19.lastIndexOf((java.lang.Object) (short) 10);
        long long22 = nativeArray19.getLength();
        nativeArray19.delete((int) (byte) 1);
        boolean boolean25 = nativeArray19.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        int int41 = nativeArray30.size();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj54 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean55 = nativeArray46.hasPrototypeMap();
        java.lang.Object[] objArray56 = nativeArray46.getIds();
        int int57 = nativeArray46.size();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj71 = nativeArray63.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray68);
        boolean boolean72 = nativeArray63.hasPrototypeMap();
        java.lang.Object[] objArray73 = nativeArray63.getIds();
        int int74 = nativeArray63.size();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray63.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object obj80 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        boolean boolean81 = nativeArray30.containsAll((java.util.Collection) nativeArray63);
        nativeArray19.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray30);
        java.lang.Integer[] intArray83 = nativeArray19.getIndexIds();
        nativeArray1.defineOwnProperties(context17, (com.google.javascript.rhino.head.ScriptableObject) nativeArray19);
        nativeArray1.preventExtensions();
        java.util.ListIterator listIterator86 = nativeArray1.listIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[hi!]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertNotNull(listIterator86);
    }

    @Test
    public void test2674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2674");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj3 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int8 = nativeArray6.lastIndexOf((java.lang.Object) (short) 10);
        long long9 = nativeArray6.getLength();
        nativeArray6.delete((int) (byte) 1);
        boolean boolean13 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, "");
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        java.lang.Object[] objArray29 = nativeArray23.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable30 = nativeArray23.getParentScope();
        boolean boolean31 = nativeArray15.containsAll((java.util.Collection) nativeArray23);
        boolean boolean32 = nativeArray6.containsAll((java.util.Collection) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        java.lang.Object[] objArray48 = nativeArray42.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable49 = nativeArray42.getParentScope();
        boolean boolean50 = nativeArray34.containsAll((java.util.Collection) nativeArray42);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int54 = nativeArray52.lastIndexOf((java.lang.Object) (short) 10);
        long long55 = nativeArray52.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray52, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        java.lang.Object[] objArray66 = nativeArray60.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable67 = nativeArray60.getParentScope();
        boolean boolean68 = nativeArray52.containsAll((java.util.Collection) nativeArray60);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj81 = nativeArray73.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        boolean boolean82 = nativeArray73.hasPrototypeMap();
        java.lang.Object[] objArray83 = nativeArray73.getIds();
        java.lang.Object[] objArray84 = nativeArray60.toArray(objArray83);
        java.lang.Object obj85 = nativeArray6.associateValue((java.lang.Object) boolean50, (java.lang.Object) nativeArray60);
        com.google.javascript.rhino.head.Scriptable scriptable86 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray60);
        boolean boolean87 = nativeArray1.has("hi!", scriptable86);
        boolean boolean88 = nativeArray1.avoidObjectDetection();
        boolean boolean89 = nativeArray1.isEmpty();
        nativeArray1.delete("");
        java.lang.Object[] objArray92 = nativeArray1.getIds();
        java.lang.String str93 = nativeArray1.getClassName();
        java.lang.Object[] objArray94 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertNull(scriptable30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[null]");
        org.junit.Assert.assertNull(scriptable49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNull(scriptable67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[null]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(scriptable86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Array" + "'", str93, "Array");
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[]");
    }

    @Test
    public void test2675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2675");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator4 = nativeArray1.iterator();
        boolean boolean5 = nativeArray1.hasPrototypeMap();
        int int6 = nativeArray1.size();
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) ' ');
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int35 = nativeArray33.lastIndexOf((java.lang.Object) (short) 10);
        long long36 = nativeArray33.getLength();
        nativeArray33.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        java.lang.Object[] objArray48 = nativeArray42.getAllIds();
        nativeArray42.delete("");
        java.lang.Object obj51 = nativeArray27.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray27.getPrototype();
        com.google.javascript.rhino.head.Context context55 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        long long60 = nativeArray57.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray57, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray68, (java.lang.Object) (-1));
        java.lang.Object[] objArray71 = nativeArray65.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable72 = nativeArray65.getParentScope();
        boolean boolean73 = nativeArray57.containsAll((java.util.Collection) nativeArray65);
        nativeArray27.defineOwnProperties(context55, (com.google.javascript.rhino.head.ScriptableObject) nativeArray57);
        nativeArray11.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray27, (int) (short) 10);
        java.lang.String str77 = nativeArray11.getTypeOf();
        java.lang.Object obj79 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, (int) (short) -1);
        nativeArray11.delete((int) ' ');
        nativeArray1.defineConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list85 = nativeArray11.subList(1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(iterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[length]");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[null]");
        org.junit.Assert.assertNull(scriptable72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "object" + "'", str77, "object");
        org.junit.Assert.assertNotNull(obj79);
    }

    @Test
    public void test2676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2676");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        boolean boolean12 = nativeArray1.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj25 = nativeArray17.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean26 = nativeArray17.hasPrototypeMap();
        java.lang.Object[] objArray27 = nativeArray17.getIds();
        int int28 = nativeArray17.size();
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int32 = nativeArray30.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray17.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray30);
        java.lang.String str34 = nativeArray17.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj47 = nativeArray39.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        boolean boolean48 = nativeArray39.hasPrototypeMap();
        java.lang.Object[] objArray49 = nativeArray39.getIds();
        int int50 = nativeArray39.size();
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj63 = nativeArray55.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        boolean boolean64 = nativeArray55.hasPrototypeMap();
        java.lang.Object[] objArray65 = nativeArray55.getIds();
        int int66 = nativeArray55.size();
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj80 = nativeArray72.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray77);
        boolean boolean81 = nativeArray72.hasPrototypeMap();
        java.lang.Object[] objArray82 = nativeArray72.getIds();
        int int83 = nativeArray72.size();
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int87 = nativeArray85.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray72.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray85);
        java.lang.Object obj89 = nativeArray55.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray72);
        boolean boolean90 = nativeArray39.containsAll((java.util.Collection) nativeArray72);
        com.google.javascript.rhino.head.Scriptable scriptable91 = nativeArray39.getParentScope();
        java.lang.Object[] objArray92 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray39);
        java.lang.Object[] objArray93 = nativeArray17.toArray(objArray92);
        com.google.javascript.rhino.head.NativeArray nativeArray94 = new com.google.javascript.rhino.head.NativeArray(objArray93);
        boolean boolean95 = nativeArray1.containsAll((java.util.Collection) nativeArray94);
        java.lang.Object obj97 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Integer[] intArray98 = nativeArray1.getIndexIds();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Array" + "'", str34, "Array");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[hi!]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[hi!]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[hi!]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(scriptable91);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[null]");
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[null]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(intArray98);
    }

    @Test
    public void test2677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2677");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray42, (java.lang.Object) (-1));
        java.lang.Object[] objArray45 = nativeArray39.getAllIds();
        nativeArray39.delete("");
        long long48 = nativeArray39.getLength();
        boolean boolean50 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj64 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int69 = nativeArray67.lastIndexOf((java.lang.Object) (short) 10);
        long long70 = nativeArray67.getLength();
        nativeArray67.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray76.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray79, (java.lang.Object) (-1));
        java.lang.Object[] objArray82 = nativeArray76.getAllIds();
        nativeArray76.delete("");
        java.lang.Object obj85 = nativeArray61.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Integer[] intArray86 = nativeArray76.getIndexIds();
        nativeArray39.defineProperty("", (java.lang.Object) nativeArray76, 10);
        nativeArray9.setAttributes(101, (com.google.javascript.rhino.head.Scriptable) nativeArray76, 0);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[length]");
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[length]");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(intArray86);
    }

    @Test
    public void test2678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2678");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Integer[] intArray9 = nativeArray1.getIndexIds();
        java.lang.Object[] objArray10 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.Context context11 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        long long33 = nativeArray24.getLength();
        boolean boolean34 = nativeArray13.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        long long40 = nativeArray37.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48, (java.lang.Object) (-1));
        java.lang.Object[] objArray51 = nativeArray45.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable52 = nativeArray45.getParentScope();
        boolean boolean53 = nativeArray37.containsAll((java.util.Collection) nativeArray45);
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray45.getParentScope();
        boolean boolean55 = nativeArray45.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable59 = nativeArray58.getParentScope();
        java.lang.Object[] objArray60 = nativeArray58.getIds();
        boolean boolean61 = nativeArray45.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray58);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "object", (java.lang.Object) nativeArray45);
        boolean boolean64 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "");
        java.lang.String str65 = nativeArray24.getTypeOf();
        nativeArray1.defineOwnProperties(context11, (com.google.javascript.rhino.head.ScriptableObject) nativeArray24);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[null]");
        org.junit.Assert.assertNull(scriptable52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "object" + "'", str65, "object");
    }

    @Test
    public void test2679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2679");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        nativeArray12.sealObject();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray29, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj44 = nativeArray36.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        com.google.javascript.rhino.head.Callable callable47 = null;
        nativeArray36.setGetterOrSetter("hi!", 0, callable47, false);
        java.lang.Integer[] intArray50 = nativeArray36.getIndexIds();
        nativeArray29.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray36);
        java.lang.Object obj52 = nativeArray12.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        boolean boolean53 = nativeArray12.isExtensible();
        nativeArray12.activatePrototypeMap((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test2680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2680");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        java.lang.Object[] objArray5 = nativeArray1.toArray();
        nativeArray1.setAttributes("Array", (int) (short) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj21 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean22 = nativeArray13.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        nativeArray24.delete((int) (byte) 1);
        boolean boolean30 = nativeArray24.isExtensible();
        java.lang.Object obj32 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, 4);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "hi!", (java.lang.Object) (short) 10);
        java.lang.Object obj36 = nativeArray1.associateValue((java.lang.Object) nativeArray13, (java.lang.Object) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = nativeArray1.get((long) 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[null]");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
    }

    @Test
    public void test2681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2681");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int5 = nativeArray3.lastIndexOf((java.lang.Object) (short) 10);
        long long6 = nativeArray3.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray3, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        java.lang.Object[] objArray17 = nativeArray11.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray11.getParentScope();
        boolean boolean19 = nativeArray3.containsAll((java.util.Collection) nativeArray11);
        com.google.javascript.rhino.head.Scriptable scriptable20 = nativeArray11.getParentScope();
        boolean boolean21 = nativeArray1.containsAll((java.util.Collection) nativeArray11);
        java.lang.Object obj23 = nativeArray1.get((long) '4');
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        java.lang.Object[] objArray39 = nativeArray33.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable40 = nativeArray33.getParentScope();
        boolean boolean41 = nativeArray25.containsAll((java.util.Collection) nativeArray33);
        boolean boolean43 = nativeArray33.isConst("");
        int int44 = nativeArray1.indexOf((java.lang.Object) nativeArray33);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null]");
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[null]");
        org.junit.Assert.assertNull(scriptable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test2682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2682");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        nativeArray1.setAttributes("Array", 1);
        int int29 = nativeArray1.size();
        boolean boolean31 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int35 = nativeArray33.lastIndexOf((java.lang.Object) (short) 10);
        long long36 = nativeArray33.getLength();
        nativeArray33.delete((int) (byte) 1);
        boolean boolean39 = nativeArray33.isExtensible();
        java.lang.Object obj41 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray33, 4);
        java.lang.Object[] objArray42 = nativeArray33.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj56 = nativeArray48.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        boolean boolean57 = nativeArray48.hasPrototypeMap();
        java.lang.Object[] objArray58 = nativeArray48.getIds();
        int int59 = nativeArray48.size();
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int63 = nativeArray61.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray48.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray61);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable67 = nativeArray66.getParentScope();
        java.lang.Object[] objArray68 = nativeArray66.getIds();
        boolean boolean69 = nativeArray66.isEmpty();
        nativeArray33.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray48, (java.lang.Object) boolean69);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray76, (java.lang.Object) (-1));
        java.lang.Object[] objArray79 = nativeArray73.getAllIds();
        java.lang.String str80 = nativeArray73.getTypeOf();
        boolean boolean81 = nativeArray48.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray73);
        boolean boolean82 = nativeArray73.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int87 = nativeArray85.lastIndexOf((java.lang.Object) (short) 10);
        long long88 = nativeArray85.getLength();
        nativeArray85.delete((int) (byte) 1);
        boolean boolean91 = nativeArray85.isExtensible();
        java.lang.Object obj93 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray85, 4);
        java.lang.Object[] objArray94 = nativeArray85.toArray();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray73, "hi!", (java.lang.Object) nativeArray85);
        nativeArray1.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray85);
        java.lang.Object obj98 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[null]");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(scriptable67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[length]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "object" + "'", str80, "object");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 1L + "'", long88 == 1L);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[null]");
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test2683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2683");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        nativeArray1.setAttributes("hi!", 10);
        java.lang.reflect.Method method20 = null;
        java.lang.reflect.Method method21 = null;
        nativeArray1.defineProperty("object", (java.lang.Object) 1L, method20, method21, 13);
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray1.getParentScope();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNull(scriptable24);
    }

    @Test
    public void test2684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2684");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        nativeArray1.delete(2);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test2685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2685");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable15 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method19 = null;
        java.lang.reflect.Method method20 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) nativeArray18, method19, method20, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        long long33 = nativeArray24.getLength();
        boolean boolean34 = nativeArray24.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray24.getPrototype();
        java.lang.Object[] objArray36 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Object obj37 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) objArray36);
        int int38 = nativeArray18.size();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
    }

    @Test
    public void test2686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2686");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        nativeArray1.delete((int) (byte) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        boolean boolean35 = nativeArray29.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj48 = nativeArray40.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean49 = nativeArray40.hasPrototypeMap();
        java.lang.Object[] objArray50 = nativeArray40.getIds();
        int int51 = nativeArray40.size();
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj64 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean65 = nativeArray56.hasPrototypeMap();
        java.lang.Object[] objArray66 = nativeArray56.getIds();
        int int67 = nativeArray56.size();
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj81 = nativeArray73.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        boolean boolean82 = nativeArray73.hasPrototypeMap();
        java.lang.Object[] objArray83 = nativeArray73.getIds();
        int int84 = nativeArray73.size();
        com.google.javascript.rhino.head.NativeArray nativeArray86 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int88 = nativeArray86.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray73.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray86);
        java.lang.Object obj90 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray73);
        boolean boolean91 = nativeArray40.containsAll((java.util.Collection) nativeArray73);
        nativeArray29.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray40);
        com.google.javascript.rhino.head.Scriptable scriptable93 = nativeArray29.getParentScope();
        boolean boolean94 = nativeArray29.avoidObjectDetection();
        java.lang.String str95 = nativeArray29.getClassName();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.add((-1), (java.lang.Object) nativeArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[hi!]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[hi!]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(scriptable93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Array" + "'", str95, "Array");
    }

    @Test
    public void test2687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2687");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        java.util.ListIterator listIterator23 = nativeArray7.listIterator();
        boolean boolean24 = nativeArray7.isEmpty();
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(listIterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test2688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2688");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        nativeArray1.setAttributes("Array", 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int32 = nativeArray30.lastIndexOf((java.lang.Object) (short) 10);
        long long33 = nativeArray30.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "", true);
        boolean boolean37 = nativeArray30.hasPrototypeMap();
        int int38 = nativeArray30.size();
        boolean boolean39 = nativeArray30.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable40 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray30);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray30.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method48 = null;
        java.lang.reflect.Method method49 = null;
        nativeArray30.defineProperty("hi!", (java.lang.Object) nativeArray47, method48, method49, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.activatePrototypeMap((int) (short) 100);
        boolean boolean58 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray54, "hi!");
        boolean boolean59 = nativeArray54.isExtensible();
        nativeArray47.putConst("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) 100);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray47);
        java.lang.Object[] objArray63 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable64 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(scriptable40);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[null]");
        org.junit.Assert.assertNull(scriptable64);
    }

    @Test
    public void test2689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2689");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        com.google.javascript.rhino.head.Callable callable34 = null;
        nativeArray23.setGetterOrSetter("hi!", 0, callable34, false);
        java.lang.Integer[] intArray37 = nativeArray23.getIndexIds();
        nativeArray16.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        long long43 = nativeArray40.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        java.lang.Object[] objArray54 = nativeArray48.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable55 = nativeArray48.getParentScope();
        boolean boolean56 = nativeArray40.containsAll((java.util.Collection) nativeArray48);
        nativeArray48.delete("Array");
        java.lang.Object obj59 = nativeArray16.getAssociatedValue((java.lang.Object) nativeArray48);
        boolean boolean60 = nativeArray9.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Scriptable scriptable61 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.activatePrototypeMap((int) (short) 100);
        long long66 = nativeArray63.jsGet_length();
        boolean boolean68 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray63, "");
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) (-1));
        java.lang.Object[] objArray76 = nativeArray70.toArray();
        java.lang.Object[] objArray77 = nativeArray63.toArray(objArray76);
        java.lang.Object[] objArray78 = nativeArray16.toArray(objArray76);
        int int79 = nativeArray1.lastIndexOf((java.lang.Object) nativeArray16);
        boolean boolean81 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(scriptable61);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 1L + "'", long66 == 1L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[null]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[null]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[null]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test2690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2690");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Integer[] intArray34 = nativeArray24.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "hi!");
        boolean boolean42 = nativeArray37.isExtensible();
        java.lang.String str43 = nativeArray37.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj57 = nativeArray49.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray54);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int62 = nativeArray60.lastIndexOf((java.lang.Object) (short) 10);
        long long63 = nativeArray60.getLength();
        nativeArray60.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray54, "hi!", (java.lang.Object) (byte) 1);
        nativeArray37.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray54, 4);
        nativeArray24.defineProperty("hi!", (java.lang.Object) nativeArray54, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray72.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray75, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray80 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray80.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj83 = nativeArray75.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray80);
        boolean boolean84 = nativeArray75.hasPrototypeMap();
        java.lang.Object[] objArray85 = nativeArray75.getIds();
        int int86 = nativeArray75.size();
        com.google.javascript.rhino.head.NativeArray nativeArray88 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int90 = nativeArray88.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray75.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray88);
        nativeArray75.setAttributes("hi!", 2);
        boolean boolean95 = nativeArray24.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray75);
        com.google.javascript.rhino.head.Scriptable scriptable96 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray75);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "object" + "'", str43, "object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1L + "'", long63 == 1L);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[hi!]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNull(scriptable96);
    }

    @Test
    public void test2691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2691");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray(objArray7);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable13 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray10);
        nativeArray8.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray10);
        boolean boolean15 = nativeArray8.isSealed();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(scriptable13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2692");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator4 = nativeArray1.iterator();
        boolean boolean5 = nativeArray1.hasPrototypeMap();
        boolean boolean7 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        boolean boolean24 = nativeArray15.hasPrototypeMap();
        java.lang.Object[] objArray25 = nativeArray15.getIds();
        int int26 = nativeArray15.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        java.lang.Object obj49 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.Object[] objArray50 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        boolean boolean52 = nativeArray15.isConst("hi!");
        nativeArray10.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        java.lang.Object obj54 = nativeArray1.get((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        java.lang.Object[] objArray63 = nativeArray57.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray(objArray63);
        java.lang.Object obj65 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.String str66 = nativeArray64.getTypeOf();
        java.lang.Object[] objArray67 = nativeArray64.getIds();
        java.lang.String str68 = nativeArray64.getClassName();
        org.junit.Assert.assertNotNull(iterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[null]");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "object" + "'", str66, "object");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Array" + "'", str68, "Array");
    }

    @Test
    public void test2693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2693");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.setAttributes("hi!", (int) (byte) 0);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable28 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray42, (java.lang.Object) (-1));
        nativeArray31.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray49.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray52, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj60 = nativeArray52.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray57);
        boolean boolean61 = nativeArray52.hasPrototypeMap();
        java.lang.Object[] objArray62 = nativeArray52.getIds();
        int int63 = nativeArray52.size();
        boolean boolean64 = nativeArray31.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject66 = nativeArray22.exportAsJSClass(10, (com.google.javascript.rhino.head.Scriptable) nativeArray52, false);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = nativeArray1.getAttributes(5);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 5 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[hi!]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(idFunctionObject66);
    }

    @Test
    public void test2694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2694");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "", (java.lang.Object) 100);
        java.lang.Object obj34 = nativeArray27.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray30);
        int int35 = nativeArray13.indexOf(obj34);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.Callable callable52 = null;
        nativeArray41.setGetterOrSetter("hi!", 0, callable52, false);
        com.google.javascript.rhino.head.Scriptable scriptable55 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray41);
        nativeArray13.defineProperty("hi!", (java.lang.Object) scriptable55, 8);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "");
        java.lang.Object obj61 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        boolean boolean62 = nativeArray13.avoidObjectDetection();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test2695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2695");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) 100);
        boolean boolean5 = nativeArray1.avoidObjectDetection();
        boolean boolean7 = nativeArray1.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        nativeArray1.setAttributes(0, (com.google.javascript.rhino.head.Scriptable) nativeArray13, (int) (byte) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        java.lang.Object[] objArray24 = nativeArray20.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable26 = null;
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject28 = nativeArray20.exportAsJSClass(2, scriptable26, false);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray13.setAttributes("", (com.google.javascript.rhino.head.Scriptable) idFunctionObject28, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 100");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNotNull(idFunctionObject28);
    }

    @Test
    public void test2696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2696");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        com.google.javascript.rhino.head.Callable callable34 = null;
        nativeArray23.setGetterOrSetter("hi!", 0, callable34, false);
        nativeArray17.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray23, (int) (short) 10);
        java.lang.Object obj39 = null;
        int int40 = nativeArray17.lastIndexOf(obj39);
        boolean boolean41 = nativeArray4.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        nativeArray4.preventExtensions();
        java.lang.Object[] objArray43 = nativeArray4.toArray();
        boolean boolean44 = nativeArray4.isSealed();
        java.lang.String str45 = nativeArray4.getClassName();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Array" + "'", str45, "Array");
    }

    @Test
    public void test2697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2697");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        nativeArray1.setPrototype(scriptable15);
        int int17 = nativeArray1.size();
        java.lang.Object obj19 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable20 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean21 = nativeArray1.avoidObjectDetection();
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(scriptable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test2698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2698");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray(10L);
        java.lang.String str2 = nativeArray1.getTypeOf();
        boolean boolean3 = nativeArray1.avoidObjectDetection();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "object" + "'", str2, "object");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test2699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2699");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj3 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable5 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray7.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray10, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj18 = nativeArray10.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        boolean boolean19 = nativeArray10.hasPrototypeMap();
        java.lang.Object[] objArray20 = nativeArray10.getIds();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.put("hi!", scriptable5, (java.lang.Object) nativeArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!]");
    }

    @Test
    public void test2700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2700");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.Object[] objArray2 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int6 = nativeArray4.lastIndexOf((java.lang.Object) (short) 10);
        long long7 = nativeArray4.getLength();
        nativeArray4.delete((int) (byte) 1);
        boolean boolean10 = nativeArray4.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable14 = nativeArray13.getParentScope();
        java.lang.Object[] objArray15 = nativeArray13.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "", (java.lang.Object) nativeArray13, 0);
        java.lang.Object[] objArray18 = nativeArray4.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        java.lang.Object[] objArray43 = nativeArray37.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray37.getParentScope();
        boolean boolean45 = nativeArray29.containsAll((java.util.Collection) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        long long51 = nativeArray48.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable55 = null;
        java.lang.Object[] objArray56 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable55);
        java.lang.Object[] objArray57 = nativeArray48.toArray(objArray56);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "hi!", (java.lang.Object) objArray56);
        nativeArray29.activatePrototypeMap((int) (byte) 10);
        boolean boolean61 = nativeArray21.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject63 = nativeArray4.exportAsJSClass(8, (com.google.javascript.rhino.head.Scriptable) nativeArray21, false);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.initPrototypeConstructor(idFunctionObject63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(scriptable14);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[null]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[null]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(idFunctionObject63);
    }

    @Test
    public void test2701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2701");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray(objArray10);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray(objArray10);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray(objArray10);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        java.lang.Object[] objArray21 = nativeArray15.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray15.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray15.getParentScope();
        java.util.ListIterator listIterator24 = nativeArray15.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = nativeArray13.retainAll((java.util.Collection) nativeArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[null]");
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(listIterator24);
    }

    @Test
    public void test2702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2702");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object[] objArray9 = nativeArray1.getAllIds();
        java.util.ListIterator listIterator10 = nativeArray1.listIterator();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int14 = nativeArray12.lastIndexOf((java.lang.Object) (short) 10);
        long long15 = nativeArray12.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable19 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        nativeArray12.activatePrototypeMap(100);
        int int22 = nativeArray1.lastIndexOf((java.lang.Object) nativeArray12);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean36 = nativeArray27.hasPrototypeMap();
        java.lang.Object[] objArray37 = nativeArray27.getIds();
        int int38 = nativeArray27.size();
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray49.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj52 = nativeArray44.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        boolean boolean53 = nativeArray44.hasPrototypeMap();
        java.lang.Object[] objArray54 = nativeArray44.getIds();
        int int55 = nativeArray44.size();
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray44.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray57);
        java.lang.Object obj61 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        java.lang.Object[] objArray62 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        boolean boolean63 = nativeArray44.isSealed();
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray44.getPrototype();
        nativeArray44.setAttributes("object", (int) (short) 10);
        java.lang.Object[] objArray68 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        java.lang.Object obj69 = nativeArray1.get((java.lang.Object) objArray68);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[length]");
        org.junit.Assert.assertNotNull(listIterator10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[hi!]");
        org.junit.Assert.assertNull(obj69);
    }

    @Test
    public void test2703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2703");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        nativeArray9.delete((int) (short) -1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray(100L);
        java.lang.Object obj38 = nativeArray9.get((java.lang.Object) nativeArray37);
        com.google.javascript.rhino.head.Scriptable scriptable39 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        long long40 = nativeArray9.jsGet_length();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = nativeArray9.remove((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
    }

    @Test
    public void test2704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2704");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getIds();
        boolean boolean25 = nativeArray9.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable28 = null;
        nativeArray22.setParentScope(scriptable28);
        long long30 = nativeArray22.jsGet_length();
        nativeArray22.sealObject();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
    }

    @Test
    public void test2705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2705");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) 100);
        boolean boolean5 = nativeArray1.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        boolean boolean20 = nativeArray11.hasPrototypeMap();
        java.lang.Object[] objArray21 = nativeArray11.getIds();
        int int22 = nativeArray11.size();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray11.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Object[] objArray28 = nativeArray24.getAllIds();
        com.google.javascript.rhino.head.Context context29 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        java.lang.Object[] objArray37 = nativeArray31.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable38 = nativeArray31.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable39 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray31);
        nativeArray24.defineOwnProperties(context29, (com.google.javascript.rhino.head.ScriptableObject) nativeArray31);
        boolean boolean41 = nativeArray1.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        java.lang.Object obj43 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 1.0d);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int48 = nativeArray46.lastIndexOf((java.lang.Object) (short) 10);
        long long49 = nativeArray46.getLength();
        nativeArray46.delete((int) (byte) 1);
        boolean boolean52 = nativeArray46.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable56 = nativeArray55.getParentScope();
        java.lang.Object[] objArray57 = nativeArray55.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, "", (java.lang.Object) nativeArray55, 0);
        nativeArray46.setAttributes("hi!", 10);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj68 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray66, "Array");
        boolean boolean70 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray66, "hi!");
        long long71 = nativeArray66.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray74.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray77, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray82.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray85, (java.lang.Object) (-1));
        nativeArray74.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray82, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray66, "hi!", (java.lang.Object) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.add(13, (java.lang.Object) nativeArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[length]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[null]");
        org.junit.Assert.assertNull(scriptable38);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 1L + "'", long49 == 1L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(scriptable56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1L + "'", long71 == 1L);
    }

    @Test
    public void test2706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2706");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable4 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object obj6 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 2);
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        nativeArray1.setAttributes(4, (int) (byte) 0);
        long long11 = nativeArray1.getLength();
        boolean boolean12 = nativeArray1.isSealed();
        org.junit.Assert.assertNull(scriptable4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(scriptable7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2707");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        boolean boolean19 = nativeArray9.isConst("");
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray23.getParentScope();
        java.lang.Object[] objArray25 = nativeArray23.getIds();
        boolean boolean26 = nativeArray23.isEmpty();
        java.lang.Object obj28 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, 8);
        com.google.javascript.rhino.head.Context context29 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int33 = nativeArray31.lastIndexOf((java.lang.Object) (short) 10);
        long long34 = nativeArray31.getLength();
        nativeArray31.delete((int) (byte) 1);
        java.lang.Integer[] intArray37 = nativeArray31.getIndexIds();
        nativeArray23.defineOwnProperties(context29, (com.google.javascript.rhino.head.ScriptableObject) nativeArray31);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int43 = nativeArray41.lastIndexOf((java.lang.Object) (short) 10);
        long long44 = nativeArray41.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray41, "", true);
        boolean boolean48 = nativeArray41.hasPrototypeMap();
        int int49 = nativeArray41.size();
        boolean boolean50 = nativeArray41.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55, (java.lang.Object) (-1));
        java.lang.Object[] objArray58 = nativeArray52.getAllIds();
        nativeArray52.delete("");
        long long61 = nativeArray52.getLength();
        boolean boolean62 = nativeArray41.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray52);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int67 = nativeArray65.lastIndexOf((java.lang.Object) (short) 10);
        long long68 = nativeArray65.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray65, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray76, (java.lang.Object) (-1));
        java.lang.Object[] objArray79 = nativeArray73.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable80 = nativeArray73.getParentScope();
        boolean boolean81 = nativeArray65.containsAll((java.util.Collection) nativeArray73);
        com.google.javascript.rhino.head.Scriptable scriptable82 = nativeArray73.getParentScope();
        boolean boolean83 = nativeArray73.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray86 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable87 = nativeArray86.getParentScope();
        java.lang.Object[] objArray88 = nativeArray86.getIds();
        boolean boolean89 = nativeArray73.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray86);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray52, "object", (java.lang.Object) nativeArray73);
        boolean boolean92 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray52, "");
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject94 = nativeArray23.exportAsJSClass(10, (com.google.javascript.rhino.head.Scriptable) nativeArray52, false);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray9.setGetterOrSetter("", (int) (byte) 1, (com.google.javascript.rhino.head.Callable) idFunctionObject94, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[length]");
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 1L + "'", long68 == 1L);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[null]");
        org.junit.Assert.assertNull(scriptable80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(scriptable82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(scriptable87);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(idFunctionObject94);
    }

    @Test
    public void test2708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2708");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        java.lang.Object[] objArray15 = nativeArray1.toArray();
        nativeArray1.preventExtensions();
        nativeArray1.delete((int) (short) -1);
        boolean boolean20 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2709");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        java.lang.Object[] objArray5 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray7.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray10, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj18 = nativeArray10.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        boolean boolean19 = nativeArray10.hasPrototypeMap();
        java.lang.Object[] objArray20 = nativeArray10.getIds();
        int int21 = nativeArray10.size();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean36 = nativeArray27.hasPrototypeMap();
        java.lang.Object[] objArray37 = nativeArray27.getIds();
        int int38 = nativeArray27.size();
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray27.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray40);
        java.lang.Object obj44 = nativeArray10.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        java.lang.Object[] objArray45 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray27);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray68, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj76 = nativeArray68.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray73);
        boolean boolean77 = nativeArray68.hasPrototypeMap();
        java.lang.Object[] objArray78 = nativeArray68.getIds();
        java.lang.Object[] objArray79 = nativeArray55.toArray(objArray78);
        java.lang.Object obj80 = nativeArray1.associateValue((java.lang.Object) objArray45, (java.lang.Object) objArray79);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray(objArray45);
        boolean boolean83 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray81, "");
        boolean boolean85 = nativeArray81.isConst("hi!");
        boolean boolean87 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray81, "Array");
        nativeArray81.setAttributes((int) (byte) 0, 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[null]");
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[null]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[null]");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test2710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2710");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        long long4 = nativeArray1.jsGet_length();
        java.lang.String str5 = nativeArray1.getTypeOf();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray6 = nativeArray1.getIds();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 24");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "object" + "'", str5, "object");
    }

    @Test
    public void test2711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2711");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        com.google.javascript.rhino.head.Callable callable34 = null;
        nativeArray23.setGetterOrSetter("hi!", 0, callable34, false);
        nativeArray17.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray23, (int) (short) 10);
        java.lang.Object obj39 = null;
        int int40 = nativeArray17.lastIndexOf(obj39);
        boolean boolean41 = nativeArray4.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        nativeArray4.preventExtensions();
        java.lang.Object[] objArray43 = nativeArray4.toArray();
        boolean boolean44 = nativeArray4.isSealed();
        long long45 = nativeArray4.getLength();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
    }

    @Test
    public void test2712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2712");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        com.google.javascript.rhino.head.Callable callable34 = null;
        nativeArray23.setGetterOrSetter("hi!", 0, callable34, false);
        java.lang.Integer[] intArray37 = nativeArray23.getIndexIds();
        nativeArray16.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        long long43 = nativeArray40.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        java.lang.Object[] objArray54 = nativeArray48.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable55 = nativeArray48.getParentScope();
        boolean boolean56 = nativeArray40.containsAll((java.util.Collection) nativeArray48);
        nativeArray48.delete("Array");
        java.lang.Object obj59 = nativeArray16.getAssociatedValue((java.lang.Object) nativeArray48);
        boolean boolean60 = nativeArray9.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Scriptable scriptable61 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.activatePrototypeMap((int) (short) 100);
        long long66 = nativeArray63.jsGet_length();
        boolean boolean68 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray63, "");
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) (-1));
        java.lang.Object[] objArray76 = nativeArray70.toArray();
        java.lang.Object[] objArray77 = nativeArray63.toArray(objArray76);
        java.lang.Object[] objArray78 = nativeArray16.toArray(objArray76);
        int int79 = nativeArray1.lastIndexOf((java.lang.Object) nativeArray16);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int83 = nativeArray81.lastIndexOf((java.lang.Object) (short) 10);
        long long84 = nativeArray81.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray81, "", true);
        boolean boolean88 = nativeArray81.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray91 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable92 = nativeArray91.getParentScope();
        java.lang.Object[] objArray93 = nativeArray91.getIds();
        boolean boolean94 = nativeArray91.isEmpty();
        boolean boolean95 = nativeArray81.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray91);
        java.lang.Object[] objArray96 = nativeArray81.getIds();
        boolean boolean97 = nativeArray1.containsAll((java.util.Collection) nativeArray81);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(scriptable61);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 1L + "'", long66 == 1L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[null]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[null]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[null]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 1L + "'", long84 == 1L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(scriptable92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test2713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2713");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        java.lang.Object[] objArray15 = nativeArray1.toArray();
        nativeArray1.preventExtensions();
        com.google.javascript.rhino.head.Context context17 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int21 = nativeArray19.lastIndexOf((java.lang.Object) (short) 10);
        long long22 = nativeArray19.getLength();
        nativeArray19.delete((int) (byte) 1);
        boolean boolean25 = nativeArray19.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        int int41 = nativeArray30.size();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj54 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean55 = nativeArray46.hasPrototypeMap();
        java.lang.Object[] objArray56 = nativeArray46.getIds();
        int int57 = nativeArray46.size();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj71 = nativeArray63.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray68);
        boolean boolean72 = nativeArray63.hasPrototypeMap();
        java.lang.Object[] objArray73 = nativeArray63.getIds();
        int int74 = nativeArray63.size();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray63.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object obj80 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        boolean boolean81 = nativeArray30.containsAll((java.util.Collection) nativeArray63);
        nativeArray19.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray30);
        java.lang.Integer[] intArray83 = nativeArray19.getIndexIds();
        nativeArray1.defineOwnProperties(context17, (com.google.javascript.rhino.head.ScriptableObject) nativeArray19);
        java.lang.Object obj86 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 2);
        boolean boolean88 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[hi!]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test2714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2714");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean39 = nativeArray21.isSealed();
        boolean boolean40 = nativeArray21.hasPrototypeMap();
        java.lang.Object obj42 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj55 = nativeArray47.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        long long61 = nativeArray58.getLength();
        nativeArray58.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray52, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray70, (java.lang.Object) (-1));
        java.lang.Object[] objArray73 = nativeArray67.getAllIds();
        nativeArray67.delete("");
        java.lang.Object obj76 = nativeArray52.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        boolean boolean77 = nativeArray21.contains((java.lang.Object) nativeArray52);
        com.google.javascript.rhino.head.NativeArray nativeArray80 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray80.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray83, (java.lang.Object) (-1));
        java.lang.Object[] objArray86 = nativeArray80.getAllIds();
        java.lang.String str87 = nativeArray80.getTypeOf();
        int int88 = nativeArray80.size();
        boolean boolean90 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray80, "hi!");
        java.lang.Object obj92 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray80, 100);
        com.google.javascript.rhino.head.Scriptable scriptable93 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray80);
        java.lang.Object obj94 = nativeArray52.get("", scriptable93);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[length]");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[length]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "object" + "'", str87, "object");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNull(scriptable93);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test2715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2715");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 4);
        boolean boolean2 = nativeArray1.avoidObjectDetection();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test2716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2716");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        int int57 = nativeArray37.getAttributes("hi!");
        long long58 = nativeArray37.jsGet_length();
        boolean boolean60 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "object");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj63 = nativeArray37.set((int) 'a', (java.lang.Object) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test2717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2717");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        boolean boolean22 = nativeArray15.hasPrototypeMap();
        java.util.ListIterator listIterator23 = nativeArray15.listIterator();
        boolean boolean24 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        boolean boolean26 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) 'a');
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        java.lang.Object[] objArray34 = nativeArray28.getAllIds();
        java.lang.String str35 = nativeArray28.getTypeOf();
        int int36 = nativeArray28.size();
        boolean boolean38 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, 2);
        java.lang.Object obj40 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean41 = nativeArray1.retainAll((java.util.Collection) nativeArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(listIterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[length]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "object" + "'", str35, "object");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test2718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2718");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        java.lang.Object obj19 = nativeArray11.get((java.lang.Object) (byte) 10);
        nativeArray11.preventExtensions();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        com.google.javascript.rhino.head.Callable callable39 = null;
        nativeArray28.setGetterOrSetter("hi!", 0, callable39, false);
        nativeArray22.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray28, (int) (short) 10);
        boolean boolean45 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "object");
        nativeArray11.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray22);
        java.lang.Object[] objArray47 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray(objArray47);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
    }

    @Test
    public void test2719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2719");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        boolean boolean56 = nativeArray4.avoidObjectDetection();
        java.lang.Object[] objArray57 = nativeArray4.toArray();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[null]");
    }

    @Test
    public void test2720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2720");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.Scriptable scriptable26 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        boolean boolean55 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "hi!");
        nativeArray32.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray51, 8);
        nativeArray1.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        java.lang.Object obj63 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray65.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable73 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray69, "");
        boolean boolean74 = nativeArray65.has(100, scriptable73);
        nativeArray1.setPrototype(scriptable73);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Scriptable scriptable76 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope(scriptable73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertNull(scriptable73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2721");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object[] objArray9 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        boolean boolean18 = nativeArray11.hasPrototypeMap();
        int int19 = nativeArray11.size();
        boolean boolean20 = nativeArray11.isEmpty();
        boolean boolean22 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        boolean boolean32 = nativeArray25.hasPrototypeMap();
        java.util.ListIterator listIterator33 = nativeArray25.listIterator();
        boolean boolean34 = nativeArray11.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        java.lang.Object[] objArray35 = nativeArray11.getAllIds();
        java.lang.Object[] objArray36 = nativeArray1.toArray(objArray35);
        nativeArray1.preventExtensions();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[length]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(listIterator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[null]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[null]");
    }

    @Test
    public void test2722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2722");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Context context15 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        long long20 = nativeArray17.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "", true);
        boolean boolean24 = nativeArray17.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray27.getParentScope();
        java.lang.Object[] objArray29 = nativeArray27.getIds();
        boolean boolean30 = nativeArray27.isEmpty();
        boolean boolean31 = nativeArray17.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean33 = nativeArray27.isConst("object");
        nativeArray1.defineOwnProperties(context15, (com.google.javascript.rhino.head.ScriptableObject) nativeArray27);
        com.google.javascript.rhino.head.Scriptable scriptable36 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray27, "Array");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(scriptable36);
    }

    @Test
    public void test2723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2723");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        nativeArray23.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.getAllIds();
        nativeArray32.delete("");
        java.lang.Object obj41 = nativeArray17.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray17.getPrototype();
        com.google.javascript.rhino.head.Context context45 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        nativeArray17.defineOwnProperties(context45, (com.google.javascript.rhino.head.ScriptableObject) nativeArray47);
        nativeArray1.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 10);
        java.lang.String str67 = nativeArray1.getTypeOf();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        java.lang.Object[] objArray70 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", true);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[length]");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "object" + "'", str67, "object");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[object, 1, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[object, 1, length]");
    }

    @Test
    public void test2724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2724");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) '4');
    }

    @Test
    public void test2725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2725");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        nativeArray9.delete((int) (byte) 1);
        boolean boolean15 = nativeArray9.isExtensible();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 4);
        java.lang.Object[] objArray18 = nativeArray9.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray24.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray42.getParentScope();
        java.lang.Object[] objArray44 = nativeArray42.getIds();
        boolean boolean45 = nativeArray42.isEmpty();
        nativeArray9.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) boolean45);
        boolean boolean47 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray53, (java.lang.Object) (-1));
        java.lang.Object[] objArray56 = nativeArray50.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable57 = nativeArray50.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray50.getParentScope();
        boolean boolean59 = nativeArray50.isSealed();
        boolean boolean60 = nativeArray50.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray65, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj80 = nativeArray72.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray77);
        com.google.javascript.rhino.head.Callable callable83 = null;
        nativeArray72.setGetterOrSetter("hi!", 0, callable83, false);
        java.lang.Integer[] intArray86 = nativeArray72.getIndexIds();
        nativeArray65.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        java.lang.Object obj88 = nativeArray50.get((java.lang.Object) nativeArray72);
        java.lang.Object obj89 = nativeArray1.get(13, (com.google.javascript.rhino.head.Scriptable) nativeArray72);
        com.google.javascript.rhino.head.Scriptable scriptable91 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray72, "hi!");
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[null]");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[null]");
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNull(scriptable91);
    }

    @Test
    public void test2726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2726");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        nativeArray11.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        nativeArray20.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, (int) (byte) -1, (java.lang.Object) nativeArray20);
        boolean boolean27 = nativeArray4.has(4, (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        nativeArray43.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "hi!", (java.lang.Object) (byte) 1);
        boolean boolean50 = nativeArray37.isSealed();
        boolean boolean51 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list54 = nativeArray4.subList((int) (byte) 100, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test2727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2727");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        nativeArray27.delete("Array");
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray27);
        int int36 = nativeArray1.size();
        boolean boolean37 = nativeArray1.isSealed();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test2728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2728");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        boolean boolean19 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 0);
        com.google.javascript.rhino.head.Scriptable scriptable20 = nativeArray9.getPrototype();
        nativeArray9.preventExtensions();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable20);
    }

    @Test
    public void test2729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2729");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        boolean boolean4 = nativeArray1.isEmpty();
        java.lang.Object obj6 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        com.google.javascript.rhino.head.Context context7 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        nativeArray9.delete((int) (byte) 1);
        java.lang.Integer[] intArray15 = nativeArray9.getIndexIds();
        nativeArray1.defineOwnProperties(context7, (com.google.javascript.rhino.head.ScriptableObject) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int21 = nativeArray19.lastIndexOf((java.lang.Object) (short) 10);
        long long22 = nativeArray19.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray19, "", true);
        boolean boolean26 = nativeArray19.hasPrototypeMap();
        int int27 = nativeArray19.size();
        boolean boolean28 = nativeArray19.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        java.lang.Object[] objArray36 = nativeArray30.getAllIds();
        nativeArray30.delete("");
        long long39 = nativeArray30.getLength();
        boolean boolean40 = nativeArray19.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray30);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        java.lang.Object[] objArray57 = nativeArray51.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray51.getParentScope();
        boolean boolean59 = nativeArray43.containsAll((java.util.Collection) nativeArray51);
        com.google.javascript.rhino.head.Scriptable scriptable60 = nativeArray51.getParentScope();
        boolean boolean61 = nativeArray51.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable65 = nativeArray64.getParentScope();
        java.lang.Object[] objArray66 = nativeArray64.getIds();
        boolean boolean67 = nativeArray51.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "object", (java.lang.Object) nativeArray51);
        boolean boolean70 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "");
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject72 = nativeArray1.exportAsJSClass(10, (com.google.javascript.rhino.head.Scriptable) nativeArray30, false);
        idFunctionObject72.activatePrototypeMap((int) ' ');
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[length]");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[null]");
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(scriptable60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(scriptable65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(idFunctionObject72);
    }

    @Test
    public void test2730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2730");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        java.lang.Object[] objArray16 = nativeArray1.getIds();
        com.google.javascript.rhino.head.Scriptable scriptable17 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", (java.lang.Object) 1.0d, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        java.lang.Object[] objArray29 = nativeArray23.getAllIds();
        nativeArray23.delete("");
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj47 = nativeArray39.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        boolean boolean48 = nativeArray39.hasPrototypeMap();
        java.lang.Object[] objArray49 = nativeArray39.getIds();
        int int50 = nativeArray39.size();
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj64 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean65 = nativeArray56.hasPrototypeMap();
        java.lang.Object[] objArray66 = nativeArray56.getIds();
        int int67 = nativeArray56.size();
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int71 = nativeArray69.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray56.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray69);
        java.lang.Object obj73 = nativeArray39.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        java.lang.Object[] objArray74 = nativeArray39.getIds();
        java.lang.String str75 = nativeArray39.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int79 = nativeArray77.lastIndexOf((java.lang.Object) (short) 10);
        long long80 = nativeArray77.getLength();
        nativeArray77.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray86 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int88 = nativeArray86.lastIndexOf((java.lang.Object) (short) 10);
        long long89 = nativeArray86.getLength();
        nativeArray86.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray77, (int) (byte) -1, (java.lang.Object) nativeArray86);
        java.util.Iterator iterator93 = nativeArray77.iterator();
        java.lang.Object[] objArray94 = nativeArray77.toArray();
        boolean boolean95 = nativeArray39.containsAll((java.util.Collection) nativeArray77);
        java.lang.Object obj96 = nativeArray23.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray77);
        boolean boolean97 = nativeArray1.contains((java.lang.Object) nativeArray77);
        java.util.ListIterator listIterator99 = nativeArray1.listIterator((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNull(scriptable17);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[length]");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[hi!]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[hi!]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[hi!]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Array" + "'", str75, "Array");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 1L + "'", long80 == 1L);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 1L + "'", long89 == 1L);
        org.junit.Assert.assertNotNull(iterator93);
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[null]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(listIterator99);
    }

    @Test
    public void test2731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2731");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable18 = null;
        java.lang.Object[] objArray19 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable18);
        java.lang.Object[] objArray20 = nativeArray11.toArray(objArray19);
        com.google.javascript.rhino.head.Scriptable scriptable21 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.Scriptable scriptable22 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.Scriptable scriptable24 = null;
        boolean boolean25 = nativeArray11.has((int) (byte) 10, scriptable24);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.putProperty(scriptable8, (int) ' ', (java.lang.Object) scriptable24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
        org.junit.Assert.assertNotNull(scriptable21);
        org.junit.Assert.assertNotNull(scriptable22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test2732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2732");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, (int) (short) 10);
        java.lang.Object obj19 = nativeArray4.get(0);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        java.lang.Object[] objArray28 = nativeArray22.getAllIds();
        nativeArray22.delete("");
        long long31 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "", (java.lang.Object) nativeArray22);
        long long33 = nativeArray22.getLength();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[length]");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
    }

    @Test
    public void test2733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2733");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        java.lang.Class<?> wildcardClass67 = nativeArray1.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2734");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        java.lang.String str8 = nativeArray1.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable13 = nativeArray12.getParentScope();
        java.lang.Object[] objArray14 = nativeArray12.getIds();
        boolean boolean15 = nativeArray12.isEmpty();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, 8);
        com.google.javascript.rhino.head.Context context18 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        nativeArray20.delete((int) (byte) 1);
        java.lang.Integer[] intArray26 = nativeArray20.getIndexIds();
        nativeArray12.defineOwnProperties(context18, (com.google.javascript.rhino.head.ScriptableObject) nativeArray20);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int32 = nativeArray30.lastIndexOf((java.lang.Object) (short) 10);
        long long33 = nativeArray30.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "", true);
        boolean boolean37 = nativeArray30.hasPrototypeMap();
        int int38 = nativeArray30.size();
        boolean boolean39 = nativeArray30.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        java.lang.Object[] objArray47 = nativeArray41.getAllIds();
        nativeArray41.delete("");
        long long50 = nativeArray41.getLength();
        boolean boolean51 = nativeArray30.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray41);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int56 = nativeArray54.lastIndexOf((java.lang.Object) (short) 10);
        long long57 = nativeArray54.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray54, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray65, (java.lang.Object) (-1));
        java.lang.Object[] objArray68 = nativeArray62.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable69 = nativeArray62.getParentScope();
        boolean boolean70 = nativeArray54.containsAll((java.util.Collection) nativeArray62);
        com.google.javascript.rhino.head.Scriptable scriptable71 = nativeArray62.getParentScope();
        boolean boolean72 = nativeArray62.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable76 = nativeArray75.getParentScope();
        java.lang.Object[] objArray77 = nativeArray75.getIds();
        boolean boolean78 = nativeArray62.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray75);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray41, "object", (java.lang.Object) nativeArray62);
        boolean boolean81 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray41, "");
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject83 = nativeArray12.exportAsJSClass(10, (com.google.javascript.rhino.head.Scriptable) nativeArray41, false);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.setGetterOrSetter("Array", 101, (com.google.javascript.rhino.head.Callable) idFunctionObject83, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "object" + "'", str8, "object");
        org.junit.Assert.assertNull(scriptable13);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[length]");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1L + "'", long57 == 1L);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[null]");
        org.junit.Assert.assertNull(scriptable69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(scriptable71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(scriptable76);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(idFunctionObject83);
    }

    @Test
    public void test2735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2735");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        nativeArray9.delete((int) (byte) 1);
        boolean boolean15 = nativeArray9.isExtensible();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 4);
        java.lang.Object[] objArray18 = nativeArray9.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray24.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray42.getParentScope();
        java.lang.Object[] objArray44 = nativeArray42.getIds();
        boolean boolean45 = nativeArray42.isEmpty();
        nativeArray9.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) boolean45);
        boolean boolean47 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        long long53 = nativeArray50.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "", true);
        boolean boolean57 = nativeArray50.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable61 = nativeArray60.getParentScope();
        java.lang.Object[] objArray62 = nativeArray60.getIds();
        boolean boolean63 = nativeArray60.isEmpty();
        boolean boolean64 = nativeArray50.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        java.lang.Object obj66 = nativeArray50.get((long) (byte) 0);
        boolean boolean67 = nativeArray1.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object[] objArray68 = nativeArray50.getIds();
        java.util.ListIterator listIterator70 = nativeArray50.listIterator(1);
        boolean boolean71 = nativeArray50.isSealed();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray50.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[null]");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(scriptable61);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(listIterator70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test2736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2736");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        nativeArray4.sealObject();
        java.lang.Object obj18 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, (int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable23 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray20);
        java.lang.Object obj25 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, 2);
        com.google.javascript.rhino.head.Scriptable scriptable26 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray20);
        nativeArray20.setAttributes(4, (int) (byte) 0);
        long long30 = nativeArray20.getLength();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray20);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(scriptable26);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
    }

    @Test
    public void test2737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2737");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        java.lang.Object[] objArray25 = nativeArray19.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray19.getParentScope();
        boolean boolean27 = nativeArray11.containsAll((java.util.Collection) nativeArray19);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray19.getParentScope();
        boolean boolean29 = nativeArray19.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray32.getParentScope();
        java.lang.Object[] objArray34 = nativeArray32.getIds();
        boolean boolean35 = nativeArray19.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.reflect.Method method36 = null;
        java.lang.reflect.Method method37 = null;
        nativeArray4.defineProperty("hi!", (java.lang.Object) nativeArray19, method36, method37, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray53, (java.lang.Object) (-1));
        java.lang.Object[] objArray56 = nativeArray50.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable57 = nativeArray50.getParentScope();
        boolean boolean58 = nativeArray42.containsAll((java.util.Collection) nativeArray50);
        com.google.javascript.rhino.head.Scriptable scriptable59 = nativeArray50.getParentScope();
        boolean boolean60 = nativeArray50.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray63.getParentScope();
        java.lang.Object[] objArray65 = nativeArray63.getIds();
        boolean boolean66 = nativeArray50.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        boolean boolean67 = nativeArray4.has((int) (byte) 0, (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.String str68 = nativeArray4.getTypeOf();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[null]");
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "object" + "'", str68, "object");
    }

    @Test
    public void test2738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2738");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Object[] objArray10 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean25 = nativeArray16.hasPrototypeMap();
        java.lang.Object[] objArray26 = nativeArray16.getIds();
        int int27 = nativeArray16.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray16.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray34.getParentScope();
        java.lang.Object[] objArray36 = nativeArray34.getIds();
        boolean boolean37 = nativeArray34.isEmpty();
        nativeArray1.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) boolean37);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable41 = nativeArray40.getParentScope();
        java.lang.Object[] objArray42 = nativeArray40.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj55 = nativeArray47.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        java.lang.Object obj56 = nativeArray40.getAssociatedValue((java.lang.Object) nativeArray47);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray40);
        nativeArray40.delete(2);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "Array");
        nativeArray40.sealObject();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean63 = nativeArray1.remove((java.lang.Object) nativeArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[length]");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(scriptable57);
    }

    @Test
    public void test2739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2739");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable5 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int10 = nativeArray8.lastIndexOf((java.lang.Object) (short) 10);
        long long11 = nativeArray8.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "", true);
        boolean boolean15 = nativeArray8.hasPrototypeMap();
        int int16 = nativeArray8.size();
        boolean boolean17 = nativeArray8.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable18 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray8.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method26 = null;
        java.lang.reflect.Method method27 = null;
        nativeArray8.defineProperty("hi!", (java.lang.Object) nativeArray25, method26, method27, 0);
        nativeArray1.defineConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        java.lang.Object obj32 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        java.lang.Class<?> wildcardClass33 = nativeArray1.getClass();
        org.junit.Assert.assertNull(scriptable5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(scriptable18);
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test2740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2740");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj54 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean55 = nativeArray46.hasPrototypeMap();
        java.lang.Object[] objArray56 = nativeArray46.getIds();
        int int57 = nativeArray46.size();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj71 = nativeArray63.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray68);
        boolean boolean72 = nativeArray63.hasPrototypeMap();
        java.lang.Object[] objArray73 = nativeArray63.getIds();
        int int74 = nativeArray63.size();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray63.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object obj80 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.Object[] objArray81 = nativeArray46.getIds();
        boolean boolean82 = nativeArray46.avoidObjectDetection();
        boolean boolean84 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, "Array");
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray46);
        java.lang.String str86 = nativeArray46.getClassName();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[hi!]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Array" + "'", str86, "Array");
    }

    @Test
    public void test2741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2741");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray43.getParentScope();
        boolean boolean51 = nativeArray35.containsAll((java.util.Collection) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj64 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean65 = nativeArray56.hasPrototypeMap();
        java.lang.Object[] objArray66 = nativeArray56.getIds();
        java.lang.Object[] objArray67 = nativeArray43.toArray(objArray66);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "Array", (java.lang.Object) nativeArray43);
        boolean boolean69 = nativeArray22.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean70 = nativeArray9.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj74 = nativeArray22.remove((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[length]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[null]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test2742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2742");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.Scriptable scriptable35 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray24, "");
        boolean boolean36 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray37 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
    }

    @Test
    public void test2743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2743");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean25 = nativeArray16.hasPrototypeMap();
        java.lang.Object[] objArray26 = nativeArray16.getIds();
        int int27 = nativeArray16.size();
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj41 = nativeArray33.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        boolean boolean42 = nativeArray33.hasPrototypeMap();
        java.lang.Object[] objArray43 = nativeArray33.getIds();
        int int44 = nativeArray33.size();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int48 = nativeArray46.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray33.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray46);
        java.lang.Object obj50 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int56 = nativeArray54.lastIndexOf((java.lang.Object) (short) 10);
        long long57 = nativeArray54.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray54, "", true);
        boolean boolean61 = nativeArray54.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray66, (java.lang.Object) (-1));
        java.lang.Object[] objArray69 = nativeArray63.getAllIds();
        nativeArray63.delete("");
        boolean boolean72 = nativeArray54.contains((java.lang.Object) "");
        boolean boolean73 = nativeArray16.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray54);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable77 = nativeArray76.getParentScope();
        java.lang.Object[] objArray78 = nativeArray76.getIds();
        boolean boolean79 = nativeArray76.isEmpty();
        nativeArray76.activatePrototypeMap(13);
        java.util.Iterator iterator82 = nativeArray76.iterator();
        nativeArray16.setAttributes((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray76, 0);
        com.google.javascript.rhino.head.Scriptable scriptable85 = nativeArray76.getPrototype();
        java.lang.Integer[] intArray86 = nativeArray76.getIndexIds();
        nativeArray1.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray76);
        com.google.javascript.rhino.head.Scriptable scriptable88 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1L + "'", long57 == 1L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[length]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(scriptable77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(iterator82);
        org.junit.Assert.assertNull(scriptable85);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertNotNull(scriptable88);
    }

    @Test
    public void test2744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2744");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray20 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray(objArray20);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "", true);
        boolean boolean31 = nativeArray24.hasPrototypeMap();
        int int32 = nativeArray24.size();
        boolean boolean33 = nativeArray24.isEmpty();
        boolean boolean35 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        java.lang.Object[] objArray52 = nativeArray46.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable53 = nativeArray46.getParentScope();
        boolean boolean54 = nativeArray38.containsAll((java.util.Collection) nativeArray46);
        boolean boolean56 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "object");
        nativeArray24.put(100, (com.google.javascript.rhino.head.Scriptable) nativeArray38, (java.lang.Object) ' ');
        nativeArray21.defineProperty("", (java.lang.Object) nativeArray38, 8);
        boolean boolean62 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = nativeArray38.remove(10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, length]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[null]");
        org.junit.Assert.assertNull(scriptable53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test2745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2745");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        nativeArray1.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.Callable callable42 = null;
        nativeArray31.setGetterOrSetter("hi!", 0, callable42, false);
        java.lang.Integer[] intArray45 = nativeArray31.getIndexIds();
        nativeArray24.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray31);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        long long51 = nativeArray48.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        java.lang.Object[] objArray62 = nativeArray56.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable63 = nativeArray56.getParentScope();
        boolean boolean64 = nativeArray48.containsAll((java.util.Collection) nativeArray56);
        nativeArray56.delete("Array");
        java.lang.Object obj67 = nativeArray24.getAssociatedValue((java.lang.Object) nativeArray56);
        boolean boolean68 = nativeArray17.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        boolean boolean69 = nativeArray17.hasPrototypeMap();
        java.lang.Object obj70 = nativeArray1.get((java.lang.Object) boolean69);
        boolean boolean72 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[null]");
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test2746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2746");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Context context15 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        long long20 = nativeArray17.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "", true);
        boolean boolean24 = nativeArray17.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray27.getParentScope();
        java.lang.Object[] objArray29 = nativeArray27.getIds();
        boolean boolean30 = nativeArray27.isEmpty();
        boolean boolean31 = nativeArray17.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean33 = nativeArray27.isConst("object");
        nativeArray1.defineOwnProperties(context15, (com.google.javascript.rhino.head.ScriptableObject) nativeArray27);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "hi!");
        nativeArray27.sealObject();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "object", true);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj70 = nativeArray62.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        boolean boolean71 = nativeArray62.hasPrototypeMap();
        java.lang.Object[] objArray72 = nativeArray62.getIds();
        int int73 = nativeArray62.size();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int77 = nativeArray75.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray62.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray75);
        java.lang.Object obj79 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        java.lang.Object[] objArray80 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        java.lang.Object obj81 = nativeArray27.getAssociatedValue((java.lang.Object) nativeArray62);
        boolean boolean83 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray62, (int) 'a');
        nativeArray62.delete("Array");
        java.lang.Object[] objArray86 = nativeArray62.getAllIds();
        java.lang.Object[] objArray87 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        com.google.javascript.rhino.head.Scriptable scriptable88 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[hi!]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[hi!]");
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!, length]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[hi!]");
        org.junit.Assert.assertNull(scriptable88);
    }

    @Test
    public void test2747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2747");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.Scriptable scriptable34 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray24.getPrototype();
        java.util.Iterator iterator36 = nativeArray24.iterator();
        nativeArray24.delete("Array");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(scriptable34);
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertNotNull(iterator36);
    }

    @Test
    public void test2748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2748");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        java.lang.Object[] objArray41 = nativeArray4.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int54 = nativeArray52.lastIndexOf((java.lang.Object) (short) 10);
        long long55 = nativeArray52.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray52, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        java.lang.Object[] objArray66 = nativeArray60.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable67 = nativeArray60.getParentScope();
        boolean boolean68 = nativeArray52.containsAll((java.util.Collection) nativeArray60);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj81 = nativeArray73.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        boolean boolean82 = nativeArray73.hasPrototypeMap();
        java.lang.Object[] objArray83 = nativeArray73.getIds();
        java.lang.Object[] objArray84 = nativeArray60.toArray(objArray83);
        boolean boolean86 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray60, "Array");
        java.lang.Object obj87 = nativeArray47.get(2, (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        boolean boolean88 = nativeArray47.isExtensible();
        boolean boolean89 = nativeArray47.isSealed();
        // The following exception was thrown during execution in test generation
        try {
            int int90 = nativeArray4.getAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray47);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property  not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNull(scriptable67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[null]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test2749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2749");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        com.google.javascript.rhino.head.Callable callable26 = null;
        nativeArray15.setGetterOrSetter("hi!", 0, callable26, false);
        java.lang.Integer[] intArray29 = nativeArray15.getIndexIds();
        nativeArray8.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        long long35 = nativeArray32.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        java.lang.Object[] objArray46 = nativeArray40.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray40.getParentScope();
        boolean boolean48 = nativeArray32.containsAll((java.util.Collection) nativeArray40);
        nativeArray40.delete("Array");
        java.lang.Object obj51 = nativeArray8.getAssociatedValue((java.lang.Object) nativeArray40);
        boolean boolean52 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        boolean boolean53 = nativeArray8.isExtensible();
        boolean boolean55 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, (int) (short) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        long long60 = nativeArray57.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray57, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable64 = null;
        java.lang.Object[] objArray65 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable64);
        java.lang.Object[] objArray66 = nativeArray57.toArray(objArray65);
        com.google.javascript.rhino.head.Scriptable scriptable67 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray57);
        int int68 = nativeArray8.indexOf((java.lang.Object) nativeArray57);
        com.google.javascript.rhino.head.Scriptable scriptable69 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray57);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[null]");
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNotNull(scriptable67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(scriptable69);
    }

    @Test
    public void test2750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2750");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj25 = nativeArray17.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int30 = nativeArray28.lastIndexOf((java.lang.Object) (short) 10);
        long long31 = nativeArray28.getLength();
        nativeArray28.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        java.lang.Object[] objArray43 = nativeArray37.getAllIds();
        nativeArray37.delete("");
        java.lang.Object obj46 = nativeArray22.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        java.lang.Integer[] intArray47 = nativeArray37.getIndexIds();
        long long48 = nativeArray37.getLength();
        nativeArray1.defineConst("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        boolean boolean58 = nativeArray51.hasPrototypeMap();
        int int59 = nativeArray51.size();
        boolean boolean60 = nativeArray51.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable61 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray51);
        int int62 = nativeArray1.lastIndexOf((java.lang.Object) scriptable61);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[length]");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(scriptable61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test2751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2751");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        long long13 = nativeArray1.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator18 = nativeArray15.iterator();
        boolean boolean19 = nativeArray15.hasPrototypeMap();
        boolean boolean21 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "Array");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = nativeArray1.retainAll((java.util.Collection) nativeArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(iterator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test2752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2752");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        java.lang.Object[] objArray44 = nativeArray38.getAllIds();
        nativeArray38.delete("");
        java.lang.Object obj47 = nativeArray23.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        java.lang.Integer[] intArray48 = nativeArray38.getIndexIds();
        nativeArray1.defineProperty("", (java.lang.Object) nativeArray38, 10);
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray(objArray51);
        boolean boolean54 = nativeArray52.isConst("hi!");
        nativeArray52.sealObject();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[length]");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test2753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2753");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray57.getParentScope();
        java.lang.Object[] objArray59 = nativeArray57.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray64, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj72 = nativeArray64.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray69);
        java.lang.Object obj73 = nativeArray57.getAssociatedValue((java.lang.Object) nativeArray64);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable76 = nativeArray75.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable77 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray75);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int81 = nativeArray79.lastIndexOf((java.lang.Object) (short) 10);
        long long82 = nativeArray79.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray79, "", true);
        boolean boolean86 = nativeArray79.hasPrototypeMap();
        int int87 = nativeArray79.size();
        boolean boolean88 = nativeArray79.isEmpty();
        nativeArray75.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray79);
        java.lang.Object obj90 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray64, (java.lang.Object) nativeArray75);
        int int91 = nativeArray4.lastIndexOf(obj90);
        boolean boolean93 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "object");
        com.google.javascript.rhino.head.Scriptable scriptable94 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        boolean boolean95 = nativeArray4.isSealed();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[length]");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(scriptable76);
        org.junit.Assert.assertNull(scriptable77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 1L + "'", long82 == 1L);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(scriptable94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test2754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2754");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray6.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj17 = nativeArray9.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray14);
        boolean boolean18 = nativeArray9.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray21.getParentScope();
        java.lang.Object[] objArray23 = nativeArray21.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        java.lang.Object obj37 = nativeArray21.getAssociatedValue((java.lang.Object) nativeArray28);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable40 = nativeArray39.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable41 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray39);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        boolean boolean50 = nativeArray43.hasPrototypeMap();
        int int51 = nativeArray43.size();
        boolean boolean52 = nativeArray43.isEmpty();
        nativeArray39.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        java.lang.Object obj54 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) nativeArray39);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable62 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray56);
        int int63 = nativeArray39.lastIndexOf((java.lang.Object) scriptable62);
        boolean boolean64 = nativeArray9.has((int) ' ', (com.google.javascript.rhino.head.Scriptable) nativeArray39);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray39);
        com.google.javascript.rhino.head.Scriptable scriptable66 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray39);
        boolean boolean68 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, (int) (byte) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray74, "", (java.lang.Object) 100);
        java.lang.Object obj78 = nativeArray71.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray74);
        java.lang.Object[] objArray79 = nativeArray74.toArray();
        nativeArray39.setAttributes(2, (com.google.javascript.rhino.head.Scriptable) nativeArray74, 4);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[length]");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(scriptable40);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[null]");
    }

    @Test
    public void test2755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2755");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int5 = nativeArray3.lastIndexOf((java.lang.Object) (short) 10);
        long long6 = nativeArray3.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray3, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        java.lang.Object[] objArray17 = nativeArray11.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray11.getParentScope();
        boolean boolean19 = nativeArray3.containsAll((java.util.Collection) nativeArray11);
        com.google.javascript.rhino.head.Scriptable scriptable20 = nativeArray11.getParentScope();
        boolean boolean21 = nativeArray1.containsAll((java.util.Collection) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj34 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        boolean boolean35 = nativeArray26.hasPrototypeMap();
        java.lang.Object[] objArray36 = nativeArray26.getIds();
        int int37 = nativeArray26.size();
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean52 = nativeArray43.hasPrototypeMap();
        java.lang.Object[] objArray53 = nativeArray43.getIds();
        int int54 = nativeArray43.size();
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray43.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray56);
        java.lang.Object obj60 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        java.lang.Object[] objArray61 = nativeArray26.getIds();
        java.lang.Integer[] intArray62 = nativeArray26.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.activatePrototypeMap((int) (short) 100);
        boolean boolean69 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray65, "hi!");
        long long70 = nativeArray65.jsGet_length();
        boolean boolean71 = nativeArray26.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray65);
        com.google.javascript.rhino.head.Scriptable scriptable72 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray65);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.activatePrototypeMap((int) (short) 100);
        boolean boolean78 = nativeArray65.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray75);
        boolean boolean79 = nativeArray11.contains((java.lang.Object) nativeArray65);
        java.lang.Object obj81 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray65, "object");
        com.google.javascript.rhino.head.Scriptable scriptable82 = nativeArray65.getParentScope();
        nativeArray65.sealObject();
        long long84 = nativeArray65.jsGet_length();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null]");
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[hi!]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(scriptable72);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNull(scriptable82);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 1L + "'", long84 == 1L);
    }

    @Test
    public void test2756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2756");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        java.lang.Object[] objArray15 = nativeArray1.toArray();
        nativeArray1.preventExtensions();
        nativeArray1.delete((int) (short) -1);
        nativeArray1.activatePrototypeMap((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
    }

    @Test
    public void test2757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2757");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Integer[] intArray34 = nativeArray24.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "hi!");
        boolean boolean42 = nativeArray37.isExtensible();
        java.lang.String str43 = nativeArray37.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj57 = nativeArray49.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray54);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int62 = nativeArray60.lastIndexOf((java.lang.Object) (short) 10);
        long long63 = nativeArray60.getLength();
        nativeArray60.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray54, "hi!", (java.lang.Object) (byte) 1);
        nativeArray37.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray54, 4);
        nativeArray24.defineProperty("hi!", (java.lang.Object) nativeArray54, 0);
        boolean boolean72 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable73 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "object" + "'", str43, "object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1L + "'", long63 == 1L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(scriptable73);
    }
}

