import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        boolean boolean4 = nativeArray1.isEmpty();
        java.lang.Object obj6 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        nativeArray1.sealObject();
        boolean boolean9 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 1);
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray20 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        nativeArray23.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 0, (java.lang.Object) nativeArray31);
        java.lang.Integer[] intArray40 = nativeArray31.getIndexIds();
        java.util.Iterator iterator41 = nativeArray31.iterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, length]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertNotNull(iterator41);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        boolean boolean15 = nativeArray4.isEmpty();
        java.lang.Object[] objArray16 = nativeArray4.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        java.lang.Object[] objArray25 = nativeArray19.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray19.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable27 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray19);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!", (java.lang.Object) scriptable27);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable37 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray31);
        int int38 = nativeArray31.size();
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj55 = nativeArray47.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        com.google.javascript.rhino.head.Callable callable58 = null;
        nativeArray47.setGetterOrSetter("hi!", 0, callable58, false);
        nativeArray41.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray47, (int) (short) 10);
        java.util.ListIterator listIterator63 = nativeArray47.listIterator();
        java.lang.Object obj64 = nativeArray31.get(0, (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.defineProperty(scriptable27, "object", (java.lang.Object) nativeArray31, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[null]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNull(scriptable27);
        org.junit.Assert.assertNull(scriptable37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(listIterator63);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        nativeArray4.setAttributes("hi!", 2);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        nativeArray26.delete((int) (byte) 1);
        java.lang.Integer[] intArray32 = nativeArray26.getIndexIds();
        java.lang.Object obj34 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "hi!", obj34);
        java.lang.Object obj37 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable46 = null;
        java.lang.Object[] objArray47 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable46);
        java.lang.Object[] objArray48 = nativeArray39.toArray(objArray47);
        com.google.javascript.rhino.head.Scriptable scriptable49 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray39);
        boolean boolean50 = nativeArray26.contains((java.lang.Object) nativeArray39);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        nativeArray52.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj81 = nativeArray73.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        boolean boolean82 = nativeArray73.hasPrototypeMap();
        java.lang.Object[] objArray83 = nativeArray73.getIds();
        int int84 = nativeArray73.size();
        boolean boolean85 = nativeArray52.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray73);
        boolean boolean86 = nativeArray73.avoidObjectDetection();
        java.util.Iterator iterator87 = nativeArray73.iterator();
        boolean boolean88 = nativeArray26.contains((java.lang.Object) iterator87);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray4.add(0, (java.lang.Object) nativeArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[null]");
        org.junit.Assert.assertNotNull(scriptable49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[hi!]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(iterator87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable32 = null;
        java.lang.Object[] objArray33 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable32);
        java.lang.Object[] objArray34 = nativeArray25.toArray(objArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        long long40 = nativeArray37.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "", true);
        boolean boolean44 = nativeArray37.hasPrototypeMap();
        int int45 = nativeArray37.size();
        boolean boolean46 = nativeArray37.isEmpty();
        boolean boolean48 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "Array");
        java.lang.Object obj49 = nativeArray25.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        java.lang.Object obj50 = nativeArray1.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable53 = nativeArray52.getParentScope();
        java.lang.Object[] objArray54 = nativeArray52.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj67 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.Object obj68 = nativeArray52.getAssociatedValue((java.lang.Object) nativeArray59);
        java.lang.Object obj69 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) nativeArray52);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray75, "", (java.lang.Object) 100);
        java.lang.Object obj79 = nativeArray72.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray75);
        boolean boolean81 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray75, "");
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, (int) (byte) -1, (java.lang.Object) "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNull(scriptable53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[length]");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        com.google.javascript.rhino.head.Scriptable scriptable0 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty(scriptable0, "Array");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        nativeArray1.setPrototype(scriptable15);
        int int17 = nativeArray1.size();
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int21 = nativeArray19.lastIndexOf((java.lang.Object) (short) 10);
        long long22 = nativeArray19.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray19, "", true);
        boolean boolean26 = nativeArray19.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable27 = nativeArray19.getParentScope();
        boolean boolean28 = nativeArray1.containsAll((java.util.Collection) nativeArray19);
        nativeArray1.delete("Array");
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(scriptable27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int30 = nativeArray28.lastIndexOf((java.lang.Object) (short) 10);
        long long31 = nativeArray28.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        java.lang.Object[] objArray42 = nativeArray36.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray36.getParentScope();
        boolean boolean44 = nativeArray28.containsAll((java.util.Collection) nativeArray36);
        nativeArray36.delete("Array");
        java.lang.Object obj47 = nativeArray4.getAssociatedValue((java.lang.Object) nativeArray36);
        int int48 = nativeArray36.size();
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[null]");
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 'a');
        com.google.javascript.rhino.head.Context context2 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int6 = nativeArray4.lastIndexOf((java.lang.Object) (short) 10);
        long long7 = nativeArray4.getLength();
        nativeArray4.delete((int) (byte) 1);
        boolean boolean11 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        java.lang.Object[] objArray27 = nativeArray21.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray21.getParentScope();
        boolean boolean29 = nativeArray13.containsAll((java.util.Collection) nativeArray21);
        boolean boolean30 = nativeArray4.containsAll((java.util.Collection) nativeArray13);
        nativeArray1.defineOwnProperties(context2, (com.google.javascript.rhino.head.ScriptableObject) nativeArray13);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        long long51 = nativeArray48.getLength();
        nativeArray48.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        java.lang.Object[] objArray63 = nativeArray57.getAllIds();
        nativeArray57.delete("");
        java.lang.Object obj66 = nativeArray42.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray57);
        com.google.javascript.rhino.head.Scriptable scriptable67 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray57);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj80 = nativeArray72.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray77);
        boolean boolean81 = nativeArray72.hasPrototypeMap();
        java.lang.Object[] objArray82 = nativeArray72.getIds();
        int int83 = nativeArray72.size();
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int87 = nativeArray85.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray72.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray85);
        java.lang.Object[] objArray89 = nativeArray85.getAllIds();
        int int90 = nativeArray57.indexOf((java.lang.Object) objArray89);
        boolean boolean92 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray57, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.IdFunctionObject idFunctionObject94 = nativeArray13.exportAsJSClass((int) (byte) 0, (com.google.javascript.rhino.head.Scriptable) nativeArray57, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[null]");
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[length]");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(scriptable67);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[hi!]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[length]");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        boolean boolean36 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "");
        nativeArray11.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray29, 13);
        boolean boolean39 = nativeArray29.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        boolean boolean49 = nativeArray42.hasPrototypeMap();
        int int50 = nativeArray42.size();
        boolean boolean51 = nativeArray42.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable52 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray42);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable56 = nativeArray42.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method60 = null;
        java.lang.reflect.Method method61 = null;
        nativeArray42.defineProperty("hi!", (java.lang.Object) nativeArray59, method60, method61, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.activatePrototypeMap((int) (short) 100);
        boolean boolean70 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray66, "hi!");
        boolean boolean71 = nativeArray66.isExtensible();
        nativeArray59.putConst("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray66, (java.lang.Object) 100);
        boolean boolean74 = nativeArray29.has(8, (com.google.javascript.rhino.head.Scriptable) nativeArray66);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray29.setAttributes((int) (byte) 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 35");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(scriptable52);
        org.junit.Assert.assertNull(scriptable56);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        com.google.javascript.rhino.head.Scriptable scriptable0 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty(scriptable0, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        nativeArray1.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) 100L);
        java.lang.Object obj18 = nativeArray9.get((long) (byte) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "", true);
        boolean boolean34 = nativeArray27.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable38 = nativeArray37.getParentScope();
        java.lang.Object[] objArray39 = nativeArray37.getIds();
        boolean boolean40 = nativeArray37.isEmpty();
        boolean boolean41 = nativeArray27.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean42 = nativeArray20.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray27);
        nativeArray9.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray27);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj59 = nativeArray51.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        com.google.javascript.rhino.head.Callable callable62 = null;
        nativeArray51.setGetterOrSetter("hi!", 0, callable62, false);
        nativeArray45.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray51, (int) (short) 10);
        boolean boolean67 = nativeArray51.hasPrototypeMap();
        long long68 = nativeArray51.getLength();
        com.google.javascript.rhino.head.Scriptable scriptable70 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray51, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean71 = nativeArray9.add((java.lang.Object) nativeArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(scriptable38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 1L + "'", long68 == 1L);
        org.junit.Assert.assertNull(scriptable70);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.hasPrototypeMap();
        java.util.Iterator iterator11 = nativeArray1.iterator();
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator17 = nativeArray14.iterator();
        boolean boolean18 = nativeArray14.hasPrototypeMap();
        boolean boolean20 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "");
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        java.lang.Object[] objArray63 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray28);
        boolean boolean65 = nativeArray28.isConst("hi!");
        nativeArray23.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray28);
        java.lang.Object obj67 = nativeArray14.get((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) (-1));
        java.lang.Object[] objArray76 = nativeArray70.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray(objArray76);
        java.lang.Object obj78 = nativeArray14.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray77);
        boolean boolean80 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.add((int) (byte) -1, (java.lang.Object) boolean80);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(iterator11);
        org.junit.Assert.assertNotNull(iterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[null]");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable3 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int7 = nativeArray5.lastIndexOf((java.lang.Object) (short) 10);
        long long8 = nativeArray5.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray5, "", true);
        boolean boolean12 = nativeArray5.hasPrototypeMap();
        int int13 = nativeArray5.size();
        boolean boolean14 = nativeArray5.isEmpty();
        nativeArray1.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray5);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj46 = nativeArray38.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        boolean boolean47 = nativeArray38.hasPrototypeMap();
        java.lang.Object[] objArray48 = nativeArray38.getIds();
        int int49 = nativeArray38.size();
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray38.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray51);
        java.lang.Object obj55 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        boolean boolean56 = nativeArray5.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 'a');
        com.google.javascript.rhino.head.Context context59 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int63 = nativeArray61.lastIndexOf((java.lang.Object) (short) 10);
        long long64 = nativeArray61.getLength();
        nativeArray61.delete((int) (byte) 1);
        boolean boolean68 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, "");
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int72 = nativeArray70.lastIndexOf((java.lang.Object) (short) 10);
        long long73 = nativeArray70.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray70, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray81, (java.lang.Object) (-1));
        java.lang.Object[] objArray84 = nativeArray78.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable85 = nativeArray78.getParentScope();
        boolean boolean86 = nativeArray70.containsAll((java.util.Collection) nativeArray78);
        boolean boolean87 = nativeArray61.containsAll((java.util.Collection) nativeArray70);
        nativeArray58.defineOwnProperties(context59, (com.google.javascript.rhino.head.ScriptableObject) nativeArray70);
        java.lang.Object obj90 = nativeArray58.get((long) (short) 0);
        java.lang.Object obj92 = nativeArray58.get(0L);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray5.initPrototypeMethod((java.lang.Object) 0L, (int) 'a', "hi!", 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNull(scriptable3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1L + "'", long73 == 1L);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertNull(scriptable85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray40 = nativeArray21.toArray();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        nativeArray26.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38, (java.lang.Object) (-1));
        java.lang.Object[] objArray41 = nativeArray35.getAllIds();
        nativeArray35.delete("");
        java.lang.Object obj44 = nativeArray20.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray20.getPrototype();
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int51 = nativeArray49.lastIndexOf((java.lang.Object) (short) 10);
        long long52 = nativeArray49.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        java.lang.Object[] objArray63 = nativeArray57.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray57.getParentScope();
        boolean boolean65 = nativeArray49.containsAll((java.util.Collection) nativeArray57);
        nativeArray57.delete("Array");
        boolean boolean68 = nativeArray20.containsAll((java.util.Collection) nativeArray57);
        boolean boolean69 = nativeArray1.containsAll((java.util.Collection) nativeArray20);
        boolean boolean71 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, 0);
        int int72 = nativeArray20.size();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[length]");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[null]");
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        boolean boolean65 = nativeArray1.avoidObjectDetection();
        nativeArray1.activatePrototypeMap((int) (short) 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        nativeArray9.delete((int) (byte) 1);
        boolean boolean15 = nativeArray9.isExtensible();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 4);
        java.lang.Object[] objArray18 = nativeArray9.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray24.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray42.getParentScope();
        java.lang.Object[] objArray44 = nativeArray42.getIds();
        boolean boolean45 = nativeArray42.isEmpty();
        nativeArray9.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) boolean45);
        boolean boolean47 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray53, (java.lang.Object) (-1));
        java.lang.Object[] objArray56 = nativeArray50.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable57 = nativeArray50.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray50.getParentScope();
        boolean boolean59 = nativeArray50.isSealed();
        boolean boolean60 = nativeArray50.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray65, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj80 = nativeArray72.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray77);
        com.google.javascript.rhino.head.Callable callable83 = null;
        nativeArray72.setGetterOrSetter("hi!", 0, callable83, false);
        java.lang.Integer[] intArray86 = nativeArray72.getIndexIds();
        nativeArray65.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        java.lang.Object obj88 = nativeArray50.get((java.lang.Object) nativeArray72);
        java.lang.Object obj89 = nativeArray1.get(13, (com.google.javascript.rhino.head.Scriptable) nativeArray72);
        // The following exception was thrown during execution in test generation
        try {
            int int91 = nativeArray72.getAttributes("");
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property  not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[null]");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[null]");
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray40);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.toArray();
        com.google.javascript.rhino.head.Context context50 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int54 = nativeArray52.lastIndexOf((java.lang.Object) (short) 10);
        long long55 = nativeArray52.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray52, "", true);
        boolean boolean59 = nativeArray52.hasPrototypeMap();
        int int60 = nativeArray52.size();
        boolean boolean61 = nativeArray52.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray66, (java.lang.Object) (-1));
        java.lang.Object[] objArray69 = nativeArray63.getAllIds();
        nativeArray63.delete("");
        long long72 = nativeArray63.getLength();
        boolean boolean73 = nativeArray52.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray63);
        nativeArray63.sealObject();
        nativeArray43.defineOwnProperties(context50, (com.google.javascript.rhino.head.ScriptableObject) nativeArray63);
        java.util.ListIterator listIterator76 = nativeArray63.listIterator();
        boolean boolean77 = nativeArray41.containsAll((java.util.Collection) nativeArray63);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray79.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray82, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray87.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj90 = nativeArray82.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray87);
        com.google.javascript.rhino.head.Callable callable93 = null;
        nativeArray82.setGetterOrSetter("hi!", 0, callable93, false);
        long long96 = nativeArray82.getLength();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = nativeArray63.retainAll((java.util.Collection) nativeArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[length]");
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(listIterator76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 1L + "'", long96 == 1L);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        nativeArray9.delete((int) (byte) 1);
        boolean boolean15 = nativeArray9.isExtensible();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 4);
        java.lang.Object[] objArray18 = nativeArray9.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray24.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray42.getParentScope();
        java.lang.Object[] objArray44 = nativeArray42.getIds();
        boolean boolean45 = nativeArray42.isEmpty();
        nativeArray9.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) boolean45);
        boolean boolean47 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        long long53 = nativeArray50.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "", true);
        boolean boolean57 = nativeArray50.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable61 = nativeArray60.getParentScope();
        java.lang.Object[] objArray62 = nativeArray60.getIds();
        boolean boolean63 = nativeArray60.isEmpty();
        boolean boolean64 = nativeArray50.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        java.lang.Object obj66 = nativeArray50.get((long) (byte) 0);
        boolean boolean67 = nativeArray1.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object[] objArray68 = nativeArray50.getIds();
        java.util.ListIterator listIterator70 = nativeArray50.listIterator(1);
        nativeArray50.sealObject();
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[null]");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(scriptable61);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(listIterator70);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        java.lang.Object[] objArray10 = nativeArray1.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        java.lang.Object[] objArray19 = nativeArray13.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable20 = nativeArray13.getParentScope();
        com.google.javascript.rhino.head.Context context21 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        java.lang.Object[] objArray29 = nativeArray23.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable30 = nativeArray23.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable31 = nativeArray23.getParentScope();
        java.util.ListIterator listIterator32 = nativeArray23.listIterator();
        nativeArray13.defineOwnProperties(context21, (com.google.javascript.rhino.head.ScriptableObject) nativeArray23);
        long long34 = nativeArray23.jsGet_length();
        boolean boolean35 = nativeArray23.isEmpty();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) nativeArray23, 8);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertNull(scriptable30);
        org.junit.Assert.assertNull(scriptable31);
        org.junit.Assert.assertNotNull(listIterator32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.sealObject();
        boolean boolean18 = nativeArray1.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", (java.lang.Object) 100);
        java.lang.Object obj27 = nativeArray20.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray23);
        java.lang.Object[] objArray28 = nativeArray23.toArray();
        java.lang.Object[] objArray29 = nativeArray1.toArray(objArray28);
        java.lang.Integer[] intArray30 = nativeArray1.getIndexIds();
        boolean boolean31 = nativeArray1.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "", true);
        boolean boolean41 = nativeArray34.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable45 = nativeArray44.getParentScope();
        java.lang.Object[] objArray46 = nativeArray44.getIds();
        boolean boolean47 = nativeArray44.isEmpty();
        boolean boolean48 = nativeArray34.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        boolean boolean50 = nativeArray44.isConst("object");
        java.lang.Object obj52 = nativeArray44.get((java.lang.Object) (byte) 10);
        nativeArray44.preventExtensions();
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray58.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray61, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj69 = nativeArray61.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray66);
        com.google.javascript.rhino.head.Callable callable72 = null;
        nativeArray61.setGetterOrSetter("hi!", 0, callable72, false);
        nativeArray55.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray61, (int) (short) 10);
        boolean boolean78 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "object");
        nativeArray44.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray55);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray44, 13);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Cannot modify a property of a sealed object: .");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[null]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(scriptable45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        java.lang.Object[] objArray23 = nativeArray17.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray17.getParentScope();
        boolean boolean25 = nativeArray9.containsAll((java.util.Collection) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        java.lang.Object[] objArray41 = nativeArray17.toArray(objArray40);
        boolean boolean43 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "Array");
        java.lang.Object obj44 = nativeArray4.get(2, (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.Scriptable scriptable45 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        nativeArray17.setAttributes("object", 1);
        com.google.javascript.rhino.head.Scriptable scriptable50 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int51 = nativeArray17.getAttributes(0, scriptable50);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 0 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNull(scriptable45);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        java.lang.Object obj16 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.Callable callable35 = null;
        nativeArray24.setGetterOrSetter("hi!", 0, callable35, false);
        nativeArray18.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray24, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray49.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj52 = nativeArray44.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        nativeArray55.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray67, (java.lang.Object) (-1));
        java.lang.Object[] objArray70 = nativeArray64.getAllIds();
        nativeArray64.delete("");
        java.lang.Object obj73 = nativeArray49.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.Integer[] intArray74 = nativeArray64.getIndexIds();
        java.lang.Object obj75 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) intArray74);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray18);
        long long77 = nativeArray18.jsGet_length();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[length]");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 1L + "'", long77 == 1L);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        java.lang.Object obj15 = null;
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.initPrototypeMethod(obj15, 13, "", (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.isSealed();
        java.lang.String str11 = nativeArray1.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj25 = nativeArray17.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int30 = nativeArray28.lastIndexOf((java.lang.Object) (short) 10);
        long long31 = nativeArray28.getLength();
        nativeArray28.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        java.lang.Object[] objArray43 = nativeArray37.getAllIds();
        nativeArray37.delete("");
        java.lang.Object obj46 = nativeArray22.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable49 = nativeArray22.getPrototype();
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        java.lang.Object[] objArray65 = nativeArray59.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray59.getParentScope();
        boolean boolean67 = nativeArray51.containsAll((java.util.Collection) nativeArray59);
        nativeArray59.delete("Array");
        boolean boolean70 = nativeArray22.containsAll((java.util.Collection) nativeArray59);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.IdFunctionObject idFunctionObject72 = nativeArray1.exportAsJSClass((int) (short) 0, (com.google.javascript.rhino.head.Scriptable) nativeArray59, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "object" + "'", str11, "object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[length]");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNull(scriptable49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[null]");
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        java.lang.Object[] objArray52 = nativeArray46.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable53 = nativeArray46.getParentScope();
        boolean boolean54 = nativeArray38.containsAll((java.util.Collection) nativeArray46);
        nativeArray46.delete("Array");
        boolean boolean57 = nativeArray9.containsAll((java.util.Collection) nativeArray46);
        java.lang.Object obj59 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[null]");
        org.junit.Assert.assertNull(scriptable53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(obj59);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        nativeArray1.setAttributes("hi!", 10);
        java.lang.reflect.Method method20 = null;
        java.lang.reflect.Method method21 = null;
        nativeArray1.defineProperty("object", (java.lang.Object) 1L, method20, method21, 13);
        java.lang.Object[] objArray24 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[, object]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[, object]");
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        nativeArray4.sealObject();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        long long40 = nativeArray37.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48, (java.lang.Object) (-1));
        java.lang.Object[] objArray51 = nativeArray45.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable52 = nativeArray45.getParentScope();
        boolean boolean53 = nativeArray37.containsAll((java.util.Collection) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj66 = nativeArray58.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        boolean boolean67 = nativeArray58.hasPrototypeMap();
        java.lang.Object[] objArray68 = nativeArray58.getIds();
        java.lang.Object[] objArray69 = nativeArray45.toArray(objArray68);
        boolean boolean71 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, "Array");
        java.lang.Object obj72 = nativeArray32.get(2, (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.Scriptable scriptable73 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        int int74 = nativeArray4.indexOf((java.lang.Object) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray76.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray79, (java.lang.Object) (-1));
        java.lang.Object[] objArray82 = nativeArray76.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable83 = nativeArray76.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable84 = nativeArray76.getParentScope();
        boolean boolean85 = nativeArray76.isSealed();
        boolean boolean86 = nativeArray45.contains((java.lang.Object) nativeArray76);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[null]");
        org.junit.Assert.assertNull(scriptable52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[null]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[null]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNull(scriptable73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[null]");
        org.junit.Assert.assertNull(scriptable83);
        org.junit.Assert.assertNull(scriptable84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        nativeArray1.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) 100L);
        java.lang.Object obj18 = nativeArray9.get((long) (byte) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "", true);
        boolean boolean34 = nativeArray27.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable38 = nativeArray37.getParentScope();
        java.lang.Object[] objArray39 = nativeArray37.getIds();
        boolean boolean40 = nativeArray37.isEmpty();
        boolean boolean41 = nativeArray27.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean42 = nativeArray20.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray27);
        nativeArray9.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray27);
        java.lang.Object obj45 = nativeArray9.get((long) 2);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(scriptable38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj45);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 'a');
        java.lang.Object obj3 = null;
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", obj3);
        boolean boolean5 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int9 = nativeArray7.lastIndexOf((java.lang.Object) (short) 10);
        long long10 = nativeArray7.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray7, "", true);
        boolean boolean14 = nativeArray7.hasPrototypeMap();
        java.lang.reflect.Method method17 = null;
        java.lang.reflect.Method method18 = null;
        nativeArray7.defineProperty("hi!", (java.lang.Object) (-1L), method17, method18, (int) (byte) 10);
        boolean boolean22 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray7, "");
        nativeArray7.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray26 = nativeArray7.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        nativeArray29.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray7, 0, (java.lang.Object) nativeArray37);
        boolean boolean46 = nativeArray1.contains((java.lang.Object) nativeArray37);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!, length]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable21 = null;
        java.lang.Object[] objArray22 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable21);
        java.lang.Object[] objArray23 = nativeArray14.toArray(objArray22);
        com.google.javascript.rhino.head.Scriptable scriptable24 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray14);
        boolean boolean25 = nativeArray1.contains((java.lang.Object) nativeArray14);
        java.lang.Integer[] intArray26 = nativeArray14.getIndexIds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNotNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(intArray26);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        java.util.ListIterator listIterator56 = nativeArray37.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj60 = nativeArray37.getGetterOrSetter("", (int) (short) 100, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(listIterator56);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        com.google.javascript.rhino.head.Callable callable26 = null;
        nativeArray15.setGetterOrSetter("hi!", 0, callable26, false);
        java.lang.Integer[] intArray29 = nativeArray15.getIndexIds();
        nativeArray8.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        long long35 = nativeArray32.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        java.lang.Object[] objArray46 = nativeArray40.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray40.getParentScope();
        boolean boolean48 = nativeArray32.containsAll((java.util.Collection) nativeArray40);
        nativeArray40.delete("Array");
        java.lang.Object obj51 = nativeArray8.getAssociatedValue((java.lang.Object) nativeArray40);
        boolean boolean52 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        java.lang.Object[] objArray53 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        java.lang.Object[] objArray54 = nativeArray8.toArray();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[null]");
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Scriptable scriptable23 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "", true);
        boolean boolean33 = nativeArray26.hasPrototypeMap();
        int int34 = nativeArray26.size();
        boolean boolean35 = nativeArray26.isEmpty();
        boolean boolean37 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        long long43 = nativeArray40.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "", true);
        boolean boolean47 = nativeArray40.hasPrototypeMap();
        java.util.ListIterator listIterator48 = nativeArray40.listIterator();
        boolean boolean49 = nativeArray26.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40);
        boolean boolean50 = nativeArray26.hasPrototypeMap();
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        nativeArray1.defineConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        nativeArray26.sealObject();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(listIterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "hi!");
        long long48 = nativeArray43.jsGet_length();
        boolean boolean49 = nativeArray4.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.Scriptable scriptable50 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.activatePrototypeMap((int) (short) 100);
        boolean boolean56 = nativeArray43.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.Scriptable scriptable58 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Scriptable scriptable60 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype(scriptable58, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertNull(scriptable58);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        com.google.javascript.rhino.head.Scriptable scriptable56 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        java.util.Iterator iterator58 = nativeArray37.iterator();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(scriptable56);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertNotNull(iterator58);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int18 = nativeArray16.lastIndexOf((java.lang.Object) (short) 10);
        long long19 = nativeArray16.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, "", true);
        boolean boolean23 = nativeArray16.hasPrototypeMap();
        java.lang.reflect.Method method26 = null;
        java.lang.reflect.Method method27 = null;
        nativeArray16.defineProperty("hi!", (java.lang.Object) (-1L), method26, method27, (int) (byte) 10);
        boolean boolean31 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, "");
        com.google.javascript.rhino.head.Scriptable scriptable32 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray16);
        nativeArray16.setAttributes("", 4);
        nativeArray16.delete(10);
        java.lang.Object obj38 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) nativeArray16);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        java.lang.Object[] objArray47 = nativeArray41.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable48 = nativeArray41.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable49 = nativeArray41.getParentScope();
        boolean boolean50 = nativeArray41.isSealed();
        java.lang.Object obj52 = nativeArray41.get(0L);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = nativeArray16.addAll((int) (byte) 10, (java.util.Collection) nativeArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(scriptable32);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[null]");
        org.junit.Assert.assertNull(scriptable48);
        org.junit.Assert.assertNull(scriptable49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj52);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.Scriptable scriptable26 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        boolean boolean55 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "hi!");
        nativeArray32.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray51, 8);
        nativeArray1.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        com.google.javascript.rhino.head.Scriptable scriptable60 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator66 = nativeArray63.iterator();
        nativeArray32.defineProperty("object", (java.lang.Object) nativeArray63, (int) (short) 0);
        com.google.javascript.rhino.head.Scriptable scriptable69 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray63);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(scriptable60);
        org.junit.Assert.assertNotNull(iterator66);
        org.junit.Assert.assertNull(scriptable69);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator4 = nativeArray1.iterator();
        boolean boolean5 = nativeArray1.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int9 = nativeArray7.lastIndexOf((java.lang.Object) (short) 10);
        long long10 = nativeArray7.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray7, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        java.lang.Object[] objArray21 = nativeArray15.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray15.getParentScope();
        boolean boolean23 = nativeArray7.containsAll((java.util.Collection) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable33 = null;
        java.lang.Object[] objArray34 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable33);
        java.lang.Object[] objArray35 = nativeArray26.toArray(objArray34);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray7, "hi!", (java.lang.Object) objArray34);
        nativeArray7.activatePrototypeMap((int) (byte) 10);
        com.google.javascript.rhino.head.Scriptable scriptable40 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray7, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj54 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean55 = nativeArray46.hasPrototypeMap();
        java.lang.Object[] objArray56 = nativeArray46.getIds();
        int int57 = nativeArray46.size();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj71 = nativeArray63.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray68);
        boolean boolean72 = nativeArray63.hasPrototypeMap();
        java.lang.Object[] objArray73 = nativeArray63.getIds();
        int int74 = nativeArray63.size();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray63.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object obj80 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        boolean boolean81 = nativeArray63.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray86 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray86, "", (java.lang.Object) 100);
        java.lang.Object obj90 = nativeArray83.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray86);
        nativeArray7.put(1, (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) ' ');
        java.lang.Object[] objArray92 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray7);
        nativeArray1.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray7);
        org.junit.Assert.assertNotNull(iterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[null]");
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[null]");
        org.junit.Assert.assertNull(scriptable40);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[hi!]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[hi!]");
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        boolean boolean66 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        com.google.javascript.rhino.head.Scriptable scriptable12 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        nativeArray1.sealObject();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNull(scriptable12);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.isSealed();
        boolean boolean11 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        java.lang.Object[] objArray20 = nativeArray14.getAllIds();
        java.lang.String str21 = nativeArray14.getTypeOf();
        int int22 = nativeArray14.size();
        java.lang.reflect.Method method23 = null;
        java.lang.reflect.Method method24 = null;
        nativeArray1.defineProperty("", (java.lang.Object) nativeArray14, method23, method24, (int) (byte) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable32 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        java.lang.Object obj34 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, 2);
        com.google.javascript.rhino.head.Scriptable scriptable35 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean37 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj68 = nativeArray60.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray65);
        boolean boolean69 = nativeArray60.hasPrototypeMap();
        java.lang.Object[] objArray70 = nativeArray60.getIds();
        java.lang.Object[] objArray71 = nativeArray47.toArray(objArray70);
        int int72 = nativeArray29.lastIndexOf((java.lang.Object) objArray70);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "object", (java.lang.Object) "", (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 100");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[length]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "object" + "'", str21, "object");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(scriptable32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(scriptable35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[null]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[null]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getIds();
        boolean boolean25 = nativeArray9.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        java.util.Iterator iterator26 = nativeArray22.iterator();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "", true);
        boolean boolean36 = nativeArray29.hasPrototypeMap();
        boolean boolean37 = nativeArray29.isExtensible();
        boolean boolean38 = nativeArray22.has((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray22.getPrototype();
        boolean boolean40 = nativeArray22.isEmpty();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(iterator26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj10 = nativeArray4.getGetterOrSetter("object", (int) (short) 0, true);
        nativeArray4.setAttributes((int) (short) -1, 4);
        boolean boolean14 = nativeArray4.avoidObjectDetection();
        boolean boolean15 = nativeArray4.isEmpty();
        java.util.ListIterator listIterator16 = nativeArray4.listIterator();
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(listIterator16);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        boolean boolean41 = nativeArray4.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        long long47 = nativeArray44.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable51 = null;
        java.lang.Object[] objArray52 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable51);
        java.lang.Object[] objArray53 = nativeArray44.toArray(objArray52);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        long long59 = nativeArray56.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "", true);
        boolean boolean63 = nativeArray56.hasPrototypeMap();
        int int64 = nativeArray56.size();
        boolean boolean65 = nativeArray56.isEmpty();
        boolean boolean67 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "Array");
        java.lang.Object obj68 = nativeArray44.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        java.lang.Object obj69 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        com.google.javascript.rhino.head.Scriptable scriptable70 = nativeArray4.getPrototype();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.redefineProperty(scriptable70, "", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNull(scriptable70);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Scriptable scriptable65 = nativeArray1.getParentScope();
        boolean boolean66 = nativeArray1.avoidObjectDetection();
        java.util.Iterator iterator67 = nativeArray1.iterator();
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator73 = nativeArray70.iterator();
        boolean boolean74 = nativeArray70.hasPrototypeMap();
        boolean boolean76 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray70, "Array");
        boolean boolean78 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray70, "hi!");
        nativeArray70.sealObject();
        boolean boolean80 = nativeArray70.avoidObjectDetection();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = nativeArray1.addAll(100, (java.util.Collection) nativeArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(scriptable65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(iterator67);
        org.junit.Assert.assertNotNull(iterator73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Context context15 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        long long20 = nativeArray17.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "", true);
        boolean boolean24 = nativeArray17.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray27.getParentScope();
        java.lang.Object[] objArray29 = nativeArray27.getIds();
        boolean boolean30 = nativeArray27.isEmpty();
        boolean boolean31 = nativeArray17.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean33 = nativeArray27.isConst("object");
        nativeArray1.defineOwnProperties(context15, (com.google.javascript.rhino.head.ScriptableObject) nativeArray27);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "hi!");
        nativeArray27.sealObject();
        boolean boolean39 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj70 = nativeArray62.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        boolean boolean71 = nativeArray62.hasPrototypeMap();
        java.lang.Object[] objArray72 = nativeArray62.getIds();
        int int73 = nativeArray62.size();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int77 = nativeArray75.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray62.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray75);
        java.lang.Object obj79 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        java.lang.Object[] objArray80 = nativeArray45.getIds();
        boolean boolean81 = nativeArray45.avoidObjectDetection();
        boolean boolean83 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, "Array");
        boolean boolean84 = nativeArray45.avoidObjectDetection();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "Array", (java.lang.Object) boolean84);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Cannot modify a property of a sealed object: Array.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[hi!]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.String str40 = nativeArray4.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        nativeArray42.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        nativeArray51.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, (int) (byte) -1, (java.lang.Object) nativeArray51);
        java.util.Iterator iterator58 = nativeArray42.iterator();
        java.lang.Object[] objArray59 = nativeArray42.toArray();
        boolean boolean60 = nativeArray4.containsAll((java.util.Collection) nativeArray42);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "", false);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray4.setAttributes((int) (short) 1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 100");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Array" + "'", str40, "Array");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(iterator58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[null]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        java.lang.String str8 = nativeArray1.getTypeOf();
        nativeArray1.delete("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable18 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        nativeArray20.delete((int) (byte) 1);
        boolean boolean26 = nativeArray20.isExtensible();
        java.lang.Object obj28 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, 4);
        java.lang.Object[] objArray29 = nativeArray20.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj43 = nativeArray35.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray40);
        boolean boolean44 = nativeArray35.hasPrototypeMap();
        java.lang.Object[] objArray45 = nativeArray35.getIds();
        int int46 = nativeArray35.size();
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray35.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray48);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray53.getParentScope();
        java.lang.Object[] objArray55 = nativeArray53.getIds();
        boolean boolean56 = nativeArray53.isEmpty();
        nativeArray20.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) boolean56);
        boolean boolean58 = nativeArray12.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray35);
        java.lang.Object obj60 = nativeArray1.associateValue((java.lang.Object) boolean58, (java.lang.Object) ' ');
        long long61 = nativeArray1.getLength();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.setAttributes((int) (byte) 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 97");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "object" + "'", str8, "object");
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + ' ' + "'", obj60, ' ');
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray4.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray23.getParentScope();
        java.lang.Object[] objArray25 = nativeArray23.getAllIds();
        java.lang.Object[] objArray26 = nativeArray4.toArray(objArray25);
        java.lang.String str27 = nativeArray4.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable31 = nativeArray30.getParentScope();
        java.lang.Object[] objArray32 = nativeArray30.getIds();
        boolean boolean33 = nativeArray30.isEmpty();
        java.lang.Object obj35 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, 8);
        com.google.javascript.rhino.head.Scriptable scriptable36 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray30);
        int int37 = nativeArray4.getAttributes("hi!", scriptable36);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable43 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray40);
        java.lang.Object obj45 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, 2);
        com.google.javascript.rhino.head.Scriptable scriptable46 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray40);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj59 = nativeArray51.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        boolean boolean60 = nativeArray51.hasPrototypeMap();
        java.lang.Object[] objArray61 = nativeArray51.getIds();
        int int62 = nativeArray51.size();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray51.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.Object[] objArray68 = nativeArray64.getAllIds();
        com.google.javascript.rhino.head.Scriptable scriptable70 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray64, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj74 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray72, "Array");
        boolean boolean76 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray72, "hi!");
        nativeArray64.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        java.lang.Object obj78 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) nativeArray64);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = nativeArray4.addAll((int) (short) -1, (java.util.Collection) nativeArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[null]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Array" + "'", str27, "Array");
        org.junit.Assert.assertNull(scriptable31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(scriptable46);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[hi!]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[length]");
        org.junit.Assert.assertNull(scriptable70);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(obj78);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        java.lang.Object[] objArray24 = nativeArray18.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable25 = nativeArray18.getParentScope();
        boolean boolean26 = nativeArray10.containsAll((java.util.Collection) nativeArray18);
        boolean boolean27 = nativeArray1.containsAll((java.util.Collection) nativeArray10);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj41 = nativeArray33.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        boolean boolean42 = nativeArray33.hasPrototypeMap();
        java.lang.Object[] objArray43 = nativeArray33.getIds();
        int int44 = nativeArray33.size();
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj58 = nativeArray50.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        boolean boolean59 = nativeArray50.hasPrototypeMap();
        java.lang.Object[] objArray60 = nativeArray50.getIds();
        int int61 = nativeArray50.size();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int65 = nativeArray63.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray50.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.Object obj67 = nativeArray33.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        int int69 = nativeArray33.indexOf((java.lang.Object) 100.0f);
        java.lang.Object obj70 = nativeArray10.get((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        java.lang.Object obj72 = null;
        // The following exception was thrown during execution in test generation
        try {
            nativeArray33.defineProperty("object", obj72, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(obj70);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.Scriptable scriptable13 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(scriptable13);
        org.junit.Assert.assertNull(scriptable15);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean50 = nativeArray41.hasPrototypeMap();
        java.lang.Object[] objArray51 = nativeArray41.getIds();
        int int52 = nativeArray41.size();
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int56 = nativeArray54.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray41.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray54);
        java.lang.Object obj58 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        java.lang.Object[] objArray59 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        boolean boolean61 = nativeArray24.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        long long67 = nativeArray64.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable71 = null;
        java.lang.Object[] objArray72 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable71);
        java.lang.Object[] objArray73 = nativeArray64.toArray(objArray72);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        long long79 = nativeArray76.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, "", true);
        boolean boolean83 = nativeArray76.hasPrototypeMap();
        int int84 = nativeArray76.size();
        boolean boolean85 = nativeArray76.isEmpty();
        boolean boolean87 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, "Array");
        java.lang.Object obj88 = nativeArray64.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object obj89 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        boolean boolean90 = nativeArray9.contains((java.lang.Object) "");
        boolean boolean91 = nativeArray9.hasPrototypeMap();
        boolean boolean93 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (-1));
        java.lang.String str94 = nativeArray9.getTypeOf();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[null]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1L + "'", long79 == 1L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "object" + "'", str94, "object");
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        nativeArray38.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.getAllIds();
        nativeArray47.delete("");
        java.lang.Object obj56 = nativeArray32.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        java.lang.Integer[] intArray57 = nativeArray47.getIndexIds();
        java.lang.Object obj58 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) intArray57);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray64, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj72 = nativeArray64.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray69);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int77 = nativeArray75.lastIndexOf((java.lang.Object) (short) 10);
        long long78 = nativeArray75.getLength();
        nativeArray75.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray69, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray84 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray84.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray87, (java.lang.Object) (-1));
        java.lang.Object[] objArray90 = nativeArray84.getAllIds();
        nativeArray84.delete("");
        java.lang.Object obj93 = nativeArray69.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray84);
        nativeArray1.setAttributes("object", (com.google.javascript.rhino.head.Scriptable) nativeArray84, (int) (short) 10);
        java.lang.Object obj96 = null;
        java.lang.Object obj97 = nativeArray1.getAssociatedValue(obj96);
        java.lang.Class<?> wildcardClass98 = nativeArray1.getClass();
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[length]");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 1L + "'", long78 == 1L);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[length]");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNull(obj97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        java.lang.Integer[] intArray15 = nativeArray1.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int20 = nativeArray18.lastIndexOf((java.lang.Object) (short) 10);
        long long21 = nativeArray18.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray18, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable25 = null;
        java.lang.Object[] objArray26 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable25);
        java.lang.Object[] objArray27 = nativeArray18.toArray(objArray26);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int32 = nativeArray30.lastIndexOf((java.lang.Object) (short) 10);
        long long33 = nativeArray30.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "", true);
        boolean boolean37 = nativeArray30.hasPrototypeMap();
        int int38 = nativeArray30.size();
        boolean boolean39 = nativeArray30.isEmpty();
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "Array");
        java.lang.Object obj42 = nativeArray18.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", (java.lang.Object) nativeArray18, (int) (short) 10);
        java.lang.Integer[] intArray45 = nativeArray18.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        long long51 = nativeArray48.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable55 = null;
        java.lang.Object[] objArray56 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable55);
        java.lang.Object[] objArray57 = nativeArray48.toArray(objArray56);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int62 = nativeArray60.lastIndexOf((java.lang.Object) (short) 10);
        long long63 = nativeArray60.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray60, "", true);
        boolean boolean67 = nativeArray60.hasPrototypeMap();
        int int68 = nativeArray60.size();
        boolean boolean69 = nativeArray60.isEmpty();
        boolean boolean71 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray60, "Array");
        java.lang.Object obj72 = nativeArray48.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        nativeArray48.setAttributes("Array", 1);
        int int76 = nativeArray48.size();
        boolean boolean78 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, 4);
        nativeArray48.setAttributes("", 2);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = nativeArray46.addAll((java.util.Collection) nativeArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[null]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[null]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1L + "'", long63 == 1L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable27 = null;
        java.lang.Object[] objArray28 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable27);
        java.lang.Object[] objArray29 = nativeArray20.toArray(objArray28);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) objArray28);
        java.lang.Object[] objArray31 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        nativeArray34.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray53, (java.lang.Object) (-1));
        java.lang.Object[] objArray56 = nativeArray50.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable57 = nativeArray50.getParentScope();
        boolean boolean58 = nativeArray42.containsAll((java.util.Collection) nativeArray50);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj71 = nativeArray63.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray68);
        boolean boolean72 = nativeArray63.hasPrototypeMap();
        java.lang.Object[] objArray73 = nativeArray63.getIds();
        java.lang.Object[] objArray74 = nativeArray50.toArray(objArray73);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "Array", (java.lang.Object) nativeArray50);
        boolean boolean76 = nativeArray1.has((int) (byte) 0, (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[null]");
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[null]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[null]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        boolean boolean40 = nativeArray4.avoidObjectDetection();
        boolean boolean42 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "Array");
        boolean boolean43 = nativeArray4.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48, (java.lang.Object) (-1));
        java.lang.Object obj52 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "hi!");
        int int53 = nativeArray4.lastIndexOf((java.lang.Object) nativeArray48);
        java.lang.Object obj55 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (-1) + "'", obj52, (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        boolean boolean49 = nativeArray42.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        java.lang.Object[] objArray57 = nativeArray51.getAllIds();
        nativeArray51.delete("");
        boolean boolean60 = nativeArray42.contains((java.lang.Object) "");
        boolean boolean61 = nativeArray4.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        com.google.javascript.rhino.head.Context context62 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        long long67 = nativeArray64.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "", true);
        boolean boolean71 = nativeArray64.hasPrototypeMap();
        boolean boolean72 = nativeArray64.isExtensible();
        nativeArray4.defineOwnProperties(context62, (com.google.javascript.rhino.head.ScriptableObject) nativeArray64);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray78, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray83.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj86 = nativeArray78.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray83);
        com.google.javascript.rhino.head.Callable callable89 = null;
        nativeArray78.setGetterOrSetter("hi!", 0, callable89, false);
        java.lang.Object obj92 = nativeArray4.getAssociatedValue((java.lang.Object) callable89);
        boolean boolean94 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, (int) (byte) 0);
        boolean boolean95 = nativeArray4.avoidObjectDetection();
        boolean boolean96 = nativeArray4.isExtensible();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[length]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        nativeArray10.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) -1, (java.lang.Object) nativeArray10);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = nativeArray1.getAttributes("");
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property  not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        int int40 = nativeArray4.indexOf((java.lang.Object) 100.0f);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", (java.lang.Object) 100);
        boolean boolean46 = nativeArray42.avoidObjectDetection();
        boolean boolean48 = nativeArray42.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        nativeArray42.setAttributes(0, (com.google.javascript.rhino.head.Scriptable) nativeArray54, (int) (byte) 10);
        int int59 = nativeArray4.lastIndexOf((java.lang.Object) nativeArray54);
        java.lang.Object[] objArray60 = nativeArray4.getIds();
        nativeArray4.setAttributes("hi!", 2);
        long long64 = nativeArray4.getLength();
        // The following exception was thrown during execution in test generation
        try {
            int int66 = nativeArray4.getAttributes("object");
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property object not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!]");
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        java.util.ListIterator listIterator56 = nativeArray37.listIterator();
        com.google.javascript.rhino.head.Context context57 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        java.lang.Object[] objArray65 = nativeArray59.getAllIds();
        java.lang.String str66 = nativeArray59.getTypeOf();
        int int67 = nativeArray59.size();
        nativeArray37.defineOwnProperties(context57, (com.google.javascript.rhino.head.ScriptableObject) nativeArray59);
        java.lang.Object[] objArray69 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray59);
        long long70 = nativeArray59.jsGet_length();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(listIterator56);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[length]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "object" + "'", str66, "object");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        java.lang.Object[] objArray33 = nativeArray9.toArray(objArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        boolean boolean40 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, "hi!");
        long long41 = nativeArray36.jsGet_length();
        nativeArray9.setAttributes("object", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (int) (byte) 10);
        java.lang.Object obj45 = null;
        nativeArray36.defineProperty("Array", obj45, 8);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[null]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[null]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean40 = nativeArray21.isSealed();
        java.lang.Object obj42 = nativeArray21.get((int) (short) 0);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj42);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable59 = nativeArray58.getParentScope();
        java.lang.Object[] objArray60 = nativeArray58.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray65, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj73 = nativeArray65.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray70);
        java.lang.Object obj74 = nativeArray58.getAssociatedValue((java.lang.Object) nativeArray65);
        com.google.javascript.rhino.head.Scriptable scriptable75 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "hi!", (java.lang.Object) scriptable75);
        boolean boolean77 = nativeArray37.avoidObjectDetection();
        java.util.ListIterator listIterator78 = nativeArray37.listIterator();
        com.google.javascript.rhino.head.Scriptable scriptable80 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray37, "hi!");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[length]");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(scriptable75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(listIterator78);
        org.junit.Assert.assertNull(scriptable80);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        java.lang.Object[] objArray24 = nativeArray18.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable25 = nativeArray18.getParentScope();
        boolean boolean26 = nativeArray10.containsAll((java.util.Collection) nativeArray18);
        boolean boolean27 = nativeArray1.containsAll((java.util.Collection) nativeArray10);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        java.lang.Object[] objArray43 = nativeArray37.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray37.getParentScope();
        boolean boolean45 = nativeArray29.containsAll((java.util.Collection) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray68, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj76 = nativeArray68.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray73);
        boolean boolean77 = nativeArray68.hasPrototypeMap();
        java.lang.Object[] objArray78 = nativeArray68.getIds();
        java.lang.Object[] objArray79 = nativeArray55.toArray(objArray78);
        java.lang.Object obj80 = nativeArray1.associateValue((java.lang.Object) boolean45, (java.lang.Object) nativeArray55);
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int84 = nativeArray82.lastIndexOf((java.lang.Object) (short) 10);
        long long85 = nativeArray82.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray82, "", true);
        boolean boolean89 = nativeArray82.hasPrototypeMap();
        java.util.ListIterator listIterator90 = nativeArray82.listIterator();
        com.google.javascript.rhino.head.Scriptable scriptable91 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray82);
        int int92 = nativeArray1.indexOf((java.lang.Object) nativeArray82);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[null]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[null]");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 1L + "'", long85 == 1L);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(listIterator90);
        org.junit.Assert.assertNull(scriptable91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray7);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        nativeArray11.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray19, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        boolean boolean44 = nativeArray11.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.Object obj45 = nativeArray8.get((int) '4', (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        nativeArray8.delete("");
        boolean boolean48 = nativeArray8.hasPrototypeMap();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = nativeArray8.remove(1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        nativeArray1.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean16 = nativeArray1.isExtensible();
        java.util.Iterator iterator17 = nativeArray1.iterator();
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable33 = null;
        java.lang.Object[] objArray34 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable33);
        java.lang.Object[] objArray35 = nativeArray26.toArray(objArray34);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "", true);
        boolean boolean45 = nativeArray38.hasPrototypeMap();
        int int46 = nativeArray38.size();
        boolean boolean47 = nativeArray38.isEmpty();
        boolean boolean49 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "Array");
        java.lang.Object obj50 = nativeArray26.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int55 = nativeArray53.lastIndexOf((java.lang.Object) (short) 10);
        long long56 = nativeArray53.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray53, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray64, (java.lang.Object) (-1));
        java.lang.Object[] objArray67 = nativeArray61.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable68 = nativeArray61.getParentScope();
        boolean boolean69 = nativeArray53.containsAll((java.util.Collection) nativeArray61);
        java.lang.Object obj70 = nativeArray38.get((int) (byte) -1, (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        java.util.Iterator iterator71 = nativeArray61.iterator();
        java.lang.Object obj72 = nativeArray22.getAssociatedValue((java.lang.Object) iterator71);
        boolean boolean73 = nativeArray1.containsAll((java.util.Collection) nativeArray22);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(iterator17);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[null]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[null]");
        org.junit.Assert.assertNull(scriptable68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(iterator71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Object[] objArray10 = nativeArray1.toArray();
        nativeArray1.delete((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = nativeArray1.getAttributes((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property -1 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Integer[] intArray9 = nativeArray1.getIndexIds();
        nativeArray1.preventExtensions();
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            int int14 = nativeArray1.getAttributes((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 100 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        java.lang.Object[] objArray23 = nativeArray17.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray17.getParentScope();
        boolean boolean25 = nativeArray9.containsAll((java.util.Collection) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        java.lang.Object[] objArray41 = nativeArray17.toArray(objArray40);
        boolean boolean43 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "Array");
        java.lang.Object obj44 = nativeArray4.get(2, (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean45 = nativeArray4.isExtensible();
        boolean boolean46 = nativeArray4.isSealed();
        java.lang.String str47 = nativeArray4.getClassName();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Array" + "'", str47, "Array");
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        long long21 = nativeArray17.getLength();
        long long22 = nativeArray17.jsGet_length();
        java.lang.String str23 = nativeArray17.getTypeOf();
        java.lang.String str24 = nativeArray17.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray29, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        nativeArray26.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj55 = nativeArray47.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        boolean boolean56 = nativeArray47.hasPrototypeMap();
        java.lang.Object[] objArray57 = nativeArray47.getIds();
        int int58 = nativeArray47.size();
        boolean boolean59 = nativeArray26.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray65, (java.lang.Object) (-1));
        java.lang.Object[] objArray68 = nativeArray62.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable69 = nativeArray62.getParentScope();
        com.google.javascript.rhino.head.Context context70 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray72.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray75, (java.lang.Object) (-1));
        java.lang.Object[] objArray78 = nativeArray72.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable79 = nativeArray72.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable80 = nativeArray72.getParentScope();
        java.util.ListIterator listIterator81 = nativeArray72.listIterator();
        nativeArray62.defineOwnProperties(context70, (com.google.javascript.rhino.head.ScriptableObject) nativeArray72);
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "hi!", (java.lang.Object) nativeArray72, 13);
        java.lang.Integer[] intArray85 = nativeArray72.getIndexIds();
        java.lang.Object[] objArray86 = nativeArray17.toArray((java.lang.Object[]) intArray85);
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray85);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "object" + "'", str23, "object");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "object" + "'", str24, "object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[null]");
        org.junit.Assert.assertNull(scriptable69);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[null]");
        org.junit.Assert.assertNull(scriptable79);
        org.junit.Assert.assertNull(scriptable80);
        org.junit.Assert.assertNotNull(listIterator81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[null]");
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        java.lang.Object obj19 = nativeArray11.get((java.lang.Object) (byte) 10);
        nativeArray11.preventExtensions();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        com.google.javascript.rhino.head.Callable callable39 = null;
        nativeArray28.setGetterOrSetter("hi!", 0, callable39, false);
        nativeArray22.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray28, (int) (short) 10);
        boolean boolean45 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "object");
        nativeArray11.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator53 = nativeArray50.iterator();
        boolean boolean54 = nativeArray50.hasPrototypeMap();
        boolean boolean56 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "Array");
        boolean boolean58 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "hi!");
        nativeArray50.sealObject();
        boolean boolean60 = nativeArray50.avoidObjectDetection();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray11.initPrototypeValue((int) (byte) 0, "Array", (java.lang.Object) boolean60, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(iterator53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.Context context37 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        nativeArray9.defineOwnProperties(context37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray39);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int61 = nativeArray59.lastIndexOf((java.lang.Object) (short) 10);
        long long62 = nativeArray59.getLength();
        nativeArray59.delete((int) (byte) 1);
        boolean boolean65 = nativeArray59.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable69 = nativeArray68.getParentScope();
        java.lang.Object[] objArray70 = nativeArray68.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "", (java.lang.Object) nativeArray68, 0);
        java.lang.Object[] objArray73 = nativeArray59.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator78 = nativeArray75.iterator();
        nativeArray9.putConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) iterator78);
        boolean boolean81 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int85 = nativeArray83.lastIndexOf((java.lang.Object) (short) 10);
        long long86 = nativeArray83.getLength();
        nativeArray83.delete((int) (byte) 1);
        java.lang.Integer[] intArray89 = nativeArray83.getIndexIds();
        java.lang.Object obj91 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray83, "hi!", obj91);
        boolean boolean94 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray83, 8);
        java.lang.Object[] objArray95 = nativeArray83.getAllIds();
        java.lang.String str96 = nativeArray83.getClassName();
        java.lang.Object obj97 = nativeArray9.getAssociatedValue((java.lang.Object) nativeArray83);
        boolean boolean99 = nativeArray9.isConst("hi!");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(scriptable69);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[null]");
        org.junit.Assert.assertNotNull(iterator78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 1L + "'", long86 == 1L);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[hi!, length]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Array" + "'", str96, "Array");
        org.junit.Assert.assertNull(obj97);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        long long4 = nativeArray1.jsGet_length();
        boolean boolean6 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        java.lang.Object[] objArray14 = nativeArray8.toArray();
        java.lang.Object[] objArray15 = nativeArray1.toArray(objArray14);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        long long38 = nativeArray34.getLength();
        long long39 = nativeArray34.jsGet_length();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        long long53 = nativeArray50.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray58.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray61, (java.lang.Object) (-1));
        java.lang.Object[] objArray64 = nativeArray58.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable65 = nativeArray58.getParentScope();
        boolean boolean66 = nativeArray50.containsAll((java.util.Collection) nativeArray58);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray71, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray76.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj79 = nativeArray71.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        boolean boolean80 = nativeArray71.hasPrototypeMap();
        java.lang.Object[] objArray81 = nativeArray71.getIds();
        java.lang.Object[] objArray82 = nativeArray58.toArray(objArray81);
        boolean boolean84 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray58, "Array");
        java.lang.Object obj85 = nativeArray45.get(2, (com.google.javascript.rhino.head.Scriptable) nativeArray58);
        nativeArray45.delete((int) '#');
        boolean boolean88 = nativeArray34.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = nativeArray1.set((int) '4', (java.lang.Object) nativeArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[null]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[null]");
        org.junit.Assert.assertNull(scriptable65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[null]");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[null]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int10 = nativeArray8.lastIndexOf((java.lang.Object) (short) 10);
        long long11 = nativeArray8.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable15 = null;
        java.lang.Object[] objArray16 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable15);
        java.lang.Object[] objArray17 = nativeArray8.toArray(objArray16);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "", true);
        boolean boolean27 = nativeArray20.hasPrototypeMap();
        int int28 = nativeArray20.size();
        boolean boolean29 = nativeArray20.isEmpty();
        boolean boolean31 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "Array");
        java.lang.Object obj32 = nativeArray8.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray43.getParentScope();
        boolean boolean51 = nativeArray35.containsAll((java.util.Collection) nativeArray43);
        java.lang.Object obj52 = nativeArray20.get((int) (byte) -1, (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        java.util.Iterator iterator53 = nativeArray43.iterator();
        java.lang.Object obj54 = nativeArray4.getAssociatedValue((java.lang.Object) iterator53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = nativeArray4.get(13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(iterator53);
        org.junit.Assert.assertNull(obj54);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        long long21 = nativeArray17.getLength();
        long long22 = nativeArray17.jsGet_length();
        // The following exception was thrown during execution in test generation
        try {
            int int24 = nativeArray17.getAttributes("Array");
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property Array not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        nativeArray1.delete("Array");
        java.util.Iterator iterator17 = nativeArray1.iterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(iterator17);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object[] objArray9 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        boolean boolean18 = nativeArray11.hasPrototypeMap();
        int int19 = nativeArray11.size();
        boolean boolean20 = nativeArray11.isEmpty();
        boolean boolean22 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        boolean boolean32 = nativeArray25.hasPrototypeMap();
        java.util.ListIterator listIterator33 = nativeArray25.listIterator();
        boolean boolean34 = nativeArray11.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        java.lang.Object[] objArray35 = nativeArray11.getAllIds();
        java.lang.Object[] objArray36 = nativeArray1.toArray(objArray35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = nativeArray1.getGetterOrSetter("Array", (int) (byte) 1, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[length]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(listIterator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[null]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[null]");
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        boolean boolean36 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "");
        nativeArray11.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray29, 13);
        boolean boolean39 = nativeArray29.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        boolean boolean49 = nativeArray42.hasPrototypeMap();
        int int50 = nativeArray42.size();
        boolean boolean51 = nativeArray42.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable52 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray42);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable56 = nativeArray42.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method60 = null;
        java.lang.reflect.Method method61 = null;
        nativeArray42.defineProperty("hi!", (java.lang.Object) nativeArray59, method60, method61, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.activatePrototypeMap((int) (short) 100);
        boolean boolean70 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray66, "hi!");
        boolean boolean71 = nativeArray66.isExtensible();
        nativeArray59.putConst("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray66, (java.lang.Object) 100);
        boolean boolean74 = nativeArray29.has(8, (com.google.javascript.rhino.head.Scriptable) nativeArray66);
        nativeArray29.setAttributes((int) (byte) 1, 13);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(scriptable52);
        org.junit.Assert.assertNull(scriptable56);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        java.lang.Object obj16 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.Callable callable35 = null;
        nativeArray24.setGetterOrSetter("hi!", 0, callable35, false);
        nativeArray18.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray24, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray49.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj52 = nativeArray44.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        nativeArray55.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray67, (java.lang.Object) (-1));
        java.lang.Object[] objArray70 = nativeArray64.getAllIds();
        nativeArray64.delete("");
        java.lang.Object obj73 = nativeArray49.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.Integer[] intArray74 = nativeArray64.getIndexIds();
        java.lang.Object obj75 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) intArray74);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean77 = nativeArray18.isExtensible();
        java.lang.String str78 = nativeArray18.getTypeOf();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[length]");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "object" + "'", str78, "object");
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        long long18 = nativeArray8.jsGet_length();
        java.lang.String str19 = nativeArray8.getTypeOf();
        java.util.Iterator iterator20 = nativeArray8.iterator();
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "object" + "'", str19, "object");
        org.junit.Assert.assertNotNull(iterator20);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        boolean boolean27 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "hi!");
        nativeArray4.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray23, 8);
        boolean boolean31 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "");
        com.google.javascript.rhino.head.Scriptable scriptable32 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(scriptable32);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) 100);
        boolean boolean5 = nativeArray1.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        boolean boolean20 = nativeArray11.hasPrototypeMap();
        java.lang.Object[] objArray21 = nativeArray11.getIds();
        int int22 = nativeArray11.size();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray11.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Object[] objArray28 = nativeArray24.getAllIds();
        com.google.javascript.rhino.head.Context context29 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        java.lang.Object[] objArray37 = nativeArray31.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable38 = nativeArray31.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable39 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray31);
        nativeArray24.defineOwnProperties(context29, (com.google.javascript.rhino.head.ScriptableObject) nativeArray31);
        boolean boolean41 = nativeArray1.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        com.google.javascript.rhino.head.Scriptable scriptable43 = null;
        // The following exception was thrown during execution in test generation
        try {
            nativeArray31.setAttributes((int) (byte) 1, scriptable43, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 52");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[length]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[null]");
        org.junit.Assert.assertNull(scriptable38);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        boolean boolean24 = nativeArray15.hasPrototypeMap();
        java.lang.Object[] objArray25 = nativeArray15.getIds();
        int int26 = nativeArray15.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        java.lang.Object obj49 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.Object[] objArray50 = nativeArray15.getIds();
        java.lang.Integer[] intArray51 = nativeArray15.getIndexIds();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = nativeArray1.retainAll((java.util.Collection) nativeArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!]");
        org.junit.Assert.assertNotNull(intArray51);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj10 = nativeArray4.getGetterOrSetter("object", (int) (short) 0, true);
        nativeArray4.setAttributes(1, (int) (short) 1);
        com.google.javascript.rhino.head.Scriptable scriptable14 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int18 = nativeArray16.lastIndexOf((java.lang.Object) (short) 10);
        long long19 = nativeArray16.getLength();
        nativeArray16.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        nativeArray25.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, (int) (byte) -1, (java.lang.Object) nativeArray25);
        java.util.Iterator iterator32 = nativeArray16.iterator();
        java.lang.Object[] objArray33 = nativeArray16.toArray();
        boolean boolean34 = nativeArray4.containsAll((java.util.Collection) nativeArray16);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(scriptable14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(iterator32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[null]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) 100);
        boolean boolean5 = nativeArray1.avoidObjectDetection();
        boolean boolean7 = nativeArray1.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj21 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean22 = nativeArray13.hasPrototypeMap();
        java.lang.Object[] objArray23 = nativeArray13.getIds();
        int int24 = nativeArray13.size();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray29, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj37 = nativeArray29.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray34);
        boolean boolean38 = nativeArray29.hasPrototypeMap();
        java.lang.Object[] objArray39 = nativeArray29.getIds();
        int int40 = nativeArray29.size();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj54 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean55 = nativeArray46.hasPrototypeMap();
        java.lang.Object[] objArray56 = nativeArray46.getIds();
        int int57 = nativeArray46.size();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int61 = nativeArray59.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray46.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray59);
        java.lang.Object obj63 = nativeArray29.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean64 = nativeArray13.containsAll((java.util.Collection) nativeArray46);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) nativeArray46);
        boolean boolean67 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, 1);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable72 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray69);
        java.lang.Object obj74 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray69, 2);
        com.google.javascript.rhino.head.Scriptable scriptable75 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray69);
        nativeArray69.setAttributes(4, (int) (byte) 0);
        long long79 = nativeArray69.getLength();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = nativeArray46.remove((java.lang.Object) long79);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(scriptable72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(scriptable75);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1L + "'", long79 == 1L);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.preventExtensions();
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int21 = nativeArray19.lastIndexOf((java.lang.Object) (short) 10);
        long long22 = nativeArray19.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray19, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        java.lang.Object[] objArray33 = nativeArray27.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable34 = nativeArray27.getParentScope();
        boolean boolean35 = nativeArray19.containsAll((java.util.Collection) nativeArray27);
        nativeArray27.delete("Array");
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        long long43 = nativeArray40.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        java.lang.Object[] objArray54 = nativeArray48.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable55 = nativeArray48.getParentScope();
        boolean boolean56 = nativeArray40.containsAll((java.util.Collection) nativeArray48);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray58.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray61, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj69 = nativeArray61.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray66);
        boolean boolean70 = nativeArray61.hasPrototypeMap();
        java.lang.Object[] objArray71 = nativeArray61.getIds();
        java.lang.Object[] objArray72 = nativeArray48.toArray(objArray71);
        boolean boolean74 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "Array");
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject76 = nativeArray27.exportAsJSClass((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray48, true);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.initPrototypeConstructor(idFunctionObject76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[null]");
        org.junit.Assert.assertNull(scriptable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[null]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[null]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(idFunctionObject76);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray20 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        nativeArray23.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 0, (java.lang.Object) nativeArray31);
        nativeArray1.sealObject();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, length]");
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean40 = nativeArray21.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable50 = null;
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable50);
        java.lang.Object[] objArray52 = nativeArray43.toArray(objArray51);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "", true);
        boolean boolean62 = nativeArray55.hasPrototypeMap();
        int int63 = nativeArray55.size();
        boolean boolean64 = nativeArray55.isEmpty();
        boolean boolean66 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "Array");
        java.lang.Object obj67 = nativeArray43.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        nativeArray55.setAttributes("object", (int) (byte) 0);
        nativeArray55.preventExtensions();
        boolean boolean72 = nativeArray55.hasPrototypeMap();
        // The following exception was thrown during execution in test generation
        try {
            int int73 = nativeArray21.getAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property Array not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[null]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 'a');
        boolean boolean2 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int7 = nativeArray5.lastIndexOf((java.lang.Object) (short) 10);
        long long8 = nativeArray5.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray5, "", true);
        boolean boolean12 = nativeArray5.hasPrototypeMap();
        java.lang.reflect.Method method15 = null;
        java.lang.reflect.Method method16 = null;
        nativeArray5.defineProperty("hi!", (java.lang.Object) (-1L), method15, method16, (int) (byte) 10);
        boolean boolean20 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray5, "");
        int int21 = nativeArray5.size();
        com.google.javascript.rhino.head.Scriptable scriptable23 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray5, "");
        java.lang.reflect.Method method24 = null;
        java.lang.reflect.Method method25 = null;
        nativeArray1.defineProperty("Array", (java.lang.Object) nativeArray5, method24, method25, (int) (short) 1);
        nativeArray5.setAttributes("Array", 8);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(scriptable23);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int35 = nativeArray33.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray20.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray33);
        java.lang.Object obj37 = nativeArray1.get((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj42 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj55 = nativeArray47.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        boolean boolean56 = nativeArray47.hasPrototypeMap();
        java.lang.Object[] objArray57 = nativeArray47.getIds();
        int int58 = nativeArray47.size();
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray64, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj72 = nativeArray64.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray69);
        boolean boolean73 = nativeArray64.hasPrototypeMap();
        java.lang.Object[] objArray74 = nativeArray64.getIds();
        int int75 = nativeArray64.size();
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int79 = nativeArray77.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray64.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray77);
        java.lang.Object obj81 = nativeArray47.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.Object[] objArray82 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray47);
        boolean boolean84 = nativeArray47.isConst("hi!");
        int int85 = nativeArray40.indexOf((java.lang.Object) boolean84);
        nativeArray1.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray40, 4);
        boolean boolean89 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, 0);
        java.util.ListIterator listIterator91 = nativeArray40.listIterator((int) (short) 0);
        long long92 = nativeArray40.jsGet_length();
        nativeArray40.sealObject();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list96 = nativeArray40.subList(0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[hi!]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(listIterator91);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 1L + "'", long92 == 1L);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        nativeArray1.setPrototype(scriptable15);
        int int17 = nativeArray1.size();
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int21 = nativeArray19.lastIndexOf((java.lang.Object) (short) 10);
        long long22 = nativeArray19.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray19, "", true);
        boolean boolean26 = nativeArray19.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable27 = nativeArray19.getParentScope();
        boolean boolean28 = nativeArray1.containsAll((java.util.Collection) nativeArray19);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray31, "", (java.lang.Object) 100);
        boolean boolean35 = nativeArray31.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean50 = nativeArray41.hasPrototypeMap();
        java.lang.Object[] objArray51 = nativeArray41.getIds();
        int int52 = nativeArray41.size();
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int56 = nativeArray54.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray41.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray54);
        java.lang.Object[] objArray58 = nativeArray54.getAllIds();
        com.google.javascript.rhino.head.Context context59 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray64, (java.lang.Object) (-1));
        java.lang.Object[] objArray67 = nativeArray61.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable68 = nativeArray61.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable69 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray61);
        nativeArray54.defineOwnProperties(context59, (com.google.javascript.rhino.head.ScriptableObject) nativeArray61);
        boolean boolean71 = nativeArray31.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean72 = nativeArray31.isEmpty();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray19, "object", (java.lang.Object) boolean72);
        // The following exception was thrown during execution in test generation
        try {
            int int75 = nativeArray19.getAttributes(0);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 0 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(scriptable27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[length]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[null]");
        org.junit.Assert.assertNull(scriptable68);
        org.junit.Assert.assertNull(scriptable69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        long long4 = nativeArray1.jsGet_length();
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray6.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj17 = nativeArray9.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray14);
        boolean boolean18 = nativeArray9.hasPrototypeMap();
        java.lang.Object[] objArray19 = nativeArray9.getIds();
        int int20 = nativeArray9.size();
        boolean boolean21 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        boolean boolean32 = nativeArray25.hasPrototypeMap();
        int int33 = nativeArray25.size();
        boolean boolean34 = nativeArray25.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable35 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray25);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray25.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method43 = null;
        java.lang.reflect.Method method44 = null;
        nativeArray25.defineProperty("hi!", (java.lang.Object) nativeArray42, method43, method44, 0);
        java.lang.Class<?> wildcardClass47 = nativeArray42.getClass();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray9.initPrototypeValue(0, "", (java.lang.Object) nativeArray42, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(scriptable35);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = nativeArray1.getGetterOrSetter("object", 1, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: object");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        java.util.Iterator iterator16 = nativeArray4.iterator();
        com.google.javascript.rhino.head.Scriptable scriptable17 = nativeArray4.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray4.getPrototype();
        java.lang.Object[] objArray19 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        com.google.javascript.rhino.head.Context context20 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        java.lang.Object[] objArray36 = nativeArray30.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable37 = nativeArray30.getParentScope();
        boolean boolean38 = nativeArray22.containsAll((java.util.Collection) nativeArray30);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int43 = nativeArray41.lastIndexOf((java.lang.Object) (short) 10);
        long long44 = nativeArray41.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray41, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable48 = null;
        java.lang.Object[] objArray49 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable48);
        java.lang.Object[] objArray50 = nativeArray41.toArray(objArray49);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "hi!", (java.lang.Object) objArray49);
        java.lang.String str52 = nativeArray22.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray57, (java.lang.Object) (-1));
        java.lang.Object obj63 = nativeArray57.getGetterOrSetter("object", (int) (short) 0, true);
        nativeArray57.setAttributes(1, (int) (short) 1);
        boolean boolean67 = nativeArray57.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray4.defineOwnProperty(context20, (java.lang.Object) nativeArray22, (com.google.javascript.rhino.head.ScriptableObject) nativeArray57);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EcmaError; message: TypeError: Cannot find default value for object.");
        } catch (com.google.javascript.rhino.head.EcmaError e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(iterator16);
        org.junit.Assert.assertNull(scriptable17);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[null]");
        org.junit.Assert.assertNull(scriptable37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[null]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "object" + "'", str52, "object");
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        boolean boolean36 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "");
        nativeArray11.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray29, 13);
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray29.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable40 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        java.lang.Object[] objArray41 = nativeArray29.toArray();
        nativeArray29.setAttributes((int) (byte) 0, 8);
        boolean boolean45 = nativeArray29.hasPrototypeMap();
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNotNull(scriptable40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        java.lang.Object[] objArray5 = nativeArray1.toArray();
        nativeArray1.setAttributes("Array", (int) (short) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray(100L);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = nativeArray1.getAttributes("object", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property object not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[null]");
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.Scriptable scriptable26 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        boolean boolean55 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "hi!");
        nativeArray32.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray51, 8);
        nativeArray1.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        java.lang.Object obj63 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray65.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable73 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray69, "");
        boolean boolean74 = nativeArray65.has(100, scriptable73);
        nativeArray1.setPrototype(scriptable73);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean77 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty(scriptable73, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertNull(scriptable73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        long long61 = nativeArray58.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray58, "", true);
        boolean boolean65 = nativeArray58.hasPrototypeMap();
        int int66 = nativeArray58.size();
        boolean boolean67 = nativeArray58.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable68 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray58, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable72 = nativeArray58.getParentScope();
        java.lang.Object obj73 = nativeArray4.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58);
        nativeArray4.sealObject();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(scriptable68);
        org.junit.Assert.assertNull(scriptable72);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (-1) + "'", obj73, (-1));
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable32 = null;
        java.lang.Object[] objArray33 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable32);
        java.lang.Object[] objArray34 = nativeArray25.toArray(objArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        long long40 = nativeArray37.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "", true);
        boolean boolean44 = nativeArray37.hasPrototypeMap();
        int int45 = nativeArray37.size();
        boolean boolean46 = nativeArray37.isEmpty();
        boolean boolean48 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "Array");
        java.lang.Object obj49 = nativeArray25.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        java.lang.Object obj50 = nativeArray1.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean52 = nativeArray25.isConst("");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        com.google.javascript.rhino.head.Context context15 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj67 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        boolean boolean68 = nativeArray59.hasPrototypeMap();
        java.lang.Object[] objArray69 = nativeArray59.getIds();
        int int70 = nativeArray59.size();
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray76, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray81.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj84 = nativeArray76.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray81);
        boolean boolean85 = nativeArray76.hasPrototypeMap();
        java.lang.Object[] objArray86 = nativeArray76.getIds();
        int int87 = nativeArray76.size();
        com.google.javascript.rhino.head.NativeArray nativeArray89 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int91 = nativeArray89.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray76.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray89);
        java.lang.Object obj93 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object[] objArray94 = nativeArray59.getIds();
        boolean boolean95 = nativeArray59.avoidObjectDetection();
        nativeArray1.defineOwnProperty(context15, obj54, (com.google.javascript.rhino.head.ScriptableObject) nativeArray59);
        java.lang.Object[] objArray97 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray98 = new com.google.javascript.rhino.head.NativeArray(objArray97);
        boolean boolean99 = nativeArray98.hasPrototypeMap();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(objArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray97), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray97), "[null]");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        boolean boolean4 = nativeArray1.avoidObjectDetection();
        java.lang.Object obj8 = nativeArray1.getGetterOrSetter("", 0, true);
        long long9 = nativeArray1.jsGet_length();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "hi!");
        long long17 = nativeArray12.jsGet_length();
        nativeArray1.defineProperty("Array", (java.lang.Object) long17, (int) (byte) 1);
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        com.google.javascript.rhino.head.Context context0 = null;
        com.google.javascript.rhino.head.Scriptable scriptable1 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int6 = nativeArray4.lastIndexOf((java.lang.Object) (short) 10);
        long long7 = nativeArray4.getLength();
        nativeArray4.delete((int) (byte) 1);
        java.lang.Integer[] intArray10 = nativeArray4.getIndexIds();
        java.lang.Object obj12 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!", obj12);
        boolean boolean15 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, 8);
        java.lang.Object[] objArray16 = nativeArray4.getAllIds();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.callMethod(context0, scriptable1, "Array", objArray16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, length]");
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        boolean boolean40 = nativeArray4.avoidObjectDetection();
        boolean boolean42 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "Array");
        boolean boolean43 = nativeArray4.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48, (java.lang.Object) (-1));
        java.lang.Object obj52 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "hi!");
        int int53 = nativeArray4.lastIndexOf((java.lang.Object) nativeArray48);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "", true);
        boolean boolean57 = nativeArray4.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable58 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (-1) + "'", obj52, (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(scriptable58);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = nativeArray1.getGetterOrSetter("object", 13, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: object");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj41 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "Array");
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 8, (java.lang.Object) nativeArray39);
        // The following exception was thrown during execution in test generation
        try {
            int int44 = nativeArray9.getAttributes(13);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 13 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        nativeArray10.delete((int) (byte) 1);
        boolean boolean16 = nativeArray10.isExtensible();
        java.lang.Object obj18 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, 4);
        java.lang.Object[] objArray19 = nativeArray10.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj33 = nativeArray25.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        boolean boolean34 = nativeArray25.hasPrototypeMap();
        java.lang.Object[] objArray35 = nativeArray25.getIds();
        int int36 = nativeArray25.size();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray25.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray38);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray43.getParentScope();
        java.lang.Object[] objArray45 = nativeArray43.getIds();
        boolean boolean46 = nativeArray43.isEmpty();
        nativeArray10.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) boolean46);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray53, (java.lang.Object) (-1));
        java.lang.Object[] objArray56 = nativeArray50.getAllIds();
        java.lang.String str57 = nativeArray50.getTypeOf();
        boolean boolean58 = nativeArray25.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean59 = nativeArray50.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 8);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, "object");
        nativeArray50.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean65 = nativeArray4.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object[] objArray69 = nativeArray68.toArray();
        nativeArray68.activatePrototypeMap(4);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray68, "Array", true);
        java.lang.Class<?> wildcardClass75 = nativeArray68.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = nativeArray50.set(4, (java.lang.Object) nativeArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[length]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "object" + "'", str57, "object");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[null]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        nativeArray1.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        int int33 = nativeArray22.size();
        boolean boolean34 = nativeArray1.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean35 = nativeArray22.avoidObjectDetection();
        nativeArray22.sealObject();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean50 = nativeArray41.hasPrototypeMap();
        java.lang.Object[] objArray51 = nativeArray41.getIds();
        int int52 = nativeArray41.size();
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int56 = nativeArray54.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray41.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray54);
        long long58 = nativeArray54.getLength();
        long long59 = nativeArray54.jsGet_length();
        java.lang.String str60 = nativeArray54.getTypeOf();
        nativeArray22.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray54);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "object" + "'", str60, "object");
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        boolean boolean21 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (int) 'a');
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable25 = nativeArray24.getParentScope();
        nativeArray9.defineProperty("hi!", (java.lang.Object) nativeArray24, 0);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray9.getPrototype();
        long long29 = nativeArray9.getLength();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray43.getParentScope();
        boolean boolean51 = nativeArray35.containsAll((java.util.Collection) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj64 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean65 = nativeArray56.hasPrototypeMap();
        java.lang.Object[] objArray66 = nativeArray56.getIds();
        java.lang.Object[] objArray67 = nativeArray43.toArray(objArray66);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "Array", (java.lang.Object) nativeArray43);
        boolean boolean69 = nativeArray22.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean70 = nativeArray9.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean72 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "");
        // The following exception was thrown during execution in test generation
        try {
            nativeArray9.setAttributes(13, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[length]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[null]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        boolean boolean21 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (int) 'a');
        boolean boolean22 = nativeArray9.hasPrototypeMap();
        boolean boolean23 = nativeArray9.isExtensible();
        boolean boolean25 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        java.lang.Object[] objArray15 = nativeArray1.toArray();
        nativeArray1.preventExtensions();
        nativeArray1.delete((int) (short) -1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        nativeArray34.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.getAllIds();
        nativeArray43.delete("");
        java.lang.Object obj52 = nativeArray28.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "hi!");
        com.google.javascript.rhino.head.Context context55 = null;
        com.google.javascript.rhino.head.Scriptable scriptable56 = null;
        java.lang.Object[] objArray57 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable56);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj70 = nativeArray62.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        com.google.javascript.rhino.head.Callable callable73 = null;
        nativeArray62.setGetterOrSetter("hi!", 0, callable73, false);
        com.google.javascript.rhino.head.Scriptable scriptable76 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        nativeArray28.defineOwnProperty(context55, (java.lang.Object) scriptable56, (com.google.javascript.rhino.head.ScriptableObject) nativeArray62);
        long long78 = nativeArray28.getLength();
        boolean boolean80 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "hi!");
        java.lang.Object obj81 = nativeArray1.get((java.lang.Object) boolean80);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", true);
        boolean boolean86 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 0);
        java.lang.Object[] objArray87 = nativeArray1.getIds();
        java.lang.Object[] objArray88 = nativeArray1.getIds();
        // The following exception was thrown during execution in test generation
        try {
            int int90 = nativeArray1.getAttributes("hi!");
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property hi! not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[length]");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNull(scriptable76);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 1L + "'", long78 == 1L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int35 = nativeArray33.lastIndexOf((java.lang.Object) (short) 10);
        long long36 = nativeArray33.getLength();
        nativeArray33.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        java.lang.Object[] objArray48 = nativeArray42.getAllIds();
        nativeArray42.delete("");
        java.lang.Object obj51 = nativeArray27.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        java.lang.Integer[] intArray52 = nativeArray42.getIndexIds();
        long long53 = nativeArray42.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj67 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        boolean boolean68 = nativeArray59.hasPrototypeMap();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, (-1), (java.lang.Object) nativeArray59);
        int int70 = nativeArray59.size();
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int74 = nativeArray72.lastIndexOf((java.lang.Object) (short) 10);
        long long75 = nativeArray72.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray72, "", true);
        boolean boolean79 = nativeArray72.hasPrototypeMap();
        java.lang.reflect.Method method82 = null;
        java.lang.reflect.Method method83 = null;
        nativeArray72.defineProperty("hi!", (java.lang.Object) (-1L), method82, method83, (int) (byte) 10);
        boolean boolean87 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray72, "");
        com.google.javascript.rhino.head.Scriptable scriptable88 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        java.lang.Object[] objArray89 = nativeArray72.getIds();
        java.lang.Object[] objArray90 = nativeArray59.toArray(objArray89);
        java.util.Iterator iterator91 = nativeArray59.iterator();
        nativeArray59.delete("");
        nativeArray11.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray59);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[length]");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(scriptable88);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[null]");
        org.junit.Assert.assertNotNull(iterator91);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray4.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray23.getParentScope();
        java.lang.Object[] objArray25 = nativeArray23.getAllIds();
        java.lang.Object[] objArray26 = nativeArray4.toArray(objArray25);
        long long27 = nativeArray4.getLength();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[null]");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        nativeArray1.setPrototype(scriptable15);
        int int17 = nativeArray1.size();
        java.lang.Object obj19 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        nativeArray22.delete((int) (byte) 1);
        boolean boolean28 = nativeArray22.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable32 = nativeArray31.getParentScope();
        java.lang.Object[] objArray33 = nativeArray31.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", (java.lang.Object) nativeArray31, 0);
        java.lang.Integer[] intArray36 = nativeArray22.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable46 = null;
        java.lang.Object[] objArray47 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable46);
        java.lang.Object[] objArray48 = nativeArray39.toArray(objArray47);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        boolean boolean58 = nativeArray51.hasPrototypeMap();
        int int59 = nativeArray51.size();
        boolean boolean60 = nativeArray51.isEmpty();
        boolean boolean62 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "Array");
        java.lang.Object obj63 = nativeArray39.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "object", (java.lang.Object) nativeArray39, (int) (short) 10);
        java.lang.Integer[] intArray66 = nativeArray39.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray66);
        java.lang.Object obj68 = nativeArray1.get(4, (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list71 = nativeArray67.subList((int) (byte) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(scriptable32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[null]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj25 = nativeArray17.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean26 = nativeArray17.hasPrototypeMap();
        java.lang.Object[] objArray27 = nativeArray17.getIds();
        int int28 = nativeArray17.size();
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj41 = nativeArray33.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        boolean boolean42 = nativeArray33.hasPrototypeMap();
        java.lang.Object[] objArray43 = nativeArray33.getIds();
        int int44 = nativeArray33.size();
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj58 = nativeArray50.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        boolean boolean59 = nativeArray50.hasPrototypeMap();
        java.lang.Object[] objArray60 = nativeArray50.getIds();
        int int61 = nativeArray50.size();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int65 = nativeArray63.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray50.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.Object obj67 = nativeArray33.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean68 = nativeArray17.containsAll((java.util.Collection) nativeArray50);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable72 = nativeArray71.getParentScope();
        java.lang.Object[] objArray73 = nativeArray71.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray78, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray83.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj86 = nativeArray78.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray83);
        java.lang.Object obj87 = nativeArray71.getAssociatedValue((java.lang.Object) nativeArray78);
        com.google.javascript.rhino.head.Scriptable scriptable88 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray71);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "hi!", (java.lang.Object) scriptable88);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 0, (java.lang.Object) scriptable88);
        java.lang.Object[] objArray91 = nativeArray1.toArray();
        boolean boolean93 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(scriptable72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[length]");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNull(scriptable88);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[null]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        com.google.javascript.rhino.head.Scriptable scriptable25 = nativeArray1.getPrototype();
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj30 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "Array");
        boolean boolean32 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj46 = nativeArray38.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        boolean boolean47 = nativeArray38.hasPrototypeMap();
        java.lang.Object[] objArray48 = nativeArray38.getIds();
        int int49 = nativeArray38.size();
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj63 = nativeArray55.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        boolean boolean64 = nativeArray55.hasPrototypeMap();
        java.lang.Object[] objArray65 = nativeArray55.getIds();
        int int66 = nativeArray55.size();
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int70 = nativeArray68.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray55.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray68);
        java.lang.Object obj72 = nativeArray38.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        java.lang.Object[] objArray73 = nativeArray38.getIds();
        java.lang.String str74 = nativeArray38.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        long long79 = nativeArray76.getLength();
        nativeArray76.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int87 = nativeArray85.lastIndexOf((java.lang.Object) (short) 10);
        long long88 = nativeArray85.getLength();
        nativeArray85.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, (int) (byte) -1, (java.lang.Object) nativeArray85);
        java.util.Iterator iterator92 = nativeArray76.iterator();
        java.lang.Object[] objArray93 = nativeArray76.toArray();
        boolean boolean94 = nativeArray38.containsAll((java.util.Collection) nativeArray76);
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "Array", (java.lang.Object) boolean94, (int) (short) 10);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) "Array");
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[hi!]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[hi!]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Array" + "'", str74, "Array");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1L + "'", long79 == 1L);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 1L + "'", long88 == 1L);
        org.junit.Assert.assertNotNull(iterator92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[null]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        java.util.Iterator iterator16 = nativeArray4.iterator();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int20 = nativeArray18.lastIndexOf((java.lang.Object) (short) 10);
        long long21 = nativeArray18.getLength();
        nativeArray18.delete((int) (byte) 1);
        java.lang.Integer[] intArray24 = nativeArray18.getIndexIds();
        java.lang.Object obj26 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray18, "hi!", obj26);
        boolean boolean29 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray18, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.Callable callable52 = null;
        nativeArray41.setGetterOrSetter("hi!", 0, callable52, false);
        java.lang.Integer[] intArray55 = nativeArray41.getIndexIds();
        nativeArray34.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray41);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int61 = nativeArray59.lastIndexOf((java.lang.Object) (short) 10);
        long long62 = nativeArray59.getLength();
        nativeArray59.delete((int) (byte) 1);
        boolean boolean66 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "");
        nativeArray41.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray59, 13);
        nativeArray18.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray59);
        java.util.Iterator iterator70 = nativeArray59.iterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean71 = nativeArray4.remove((java.lang.Object) nativeArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(iterator16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(iterator70);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) 100);
        boolean boolean5 = nativeArray1.avoidObjectDetection();
        boolean boolean7 = nativeArray1.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        nativeArray1.setAttributes(0, (com.google.javascript.rhino.head.Scriptable) nativeArray13, (int) (byte) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int21 = nativeArray19.lastIndexOf((java.lang.Object) (short) 10);
        long long22 = nativeArray19.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray19, "", true);
        boolean boolean26 = nativeArray19.hasPrototypeMap();
        java.lang.reflect.Method method29 = null;
        java.lang.reflect.Method method30 = null;
        nativeArray19.defineProperty("hi!", (java.lang.Object) (-1L), method29, method30, (int) (byte) 10);
        boolean boolean34 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray19, "");
        com.google.javascript.rhino.head.Scriptable scriptable35 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray19);
        com.google.javascript.rhino.head.Scriptable scriptable36 = null;
        nativeArray19.setParentScope(scriptable36);
        boolean boolean38 = nativeArray1.containsAll((java.util.Collection) nativeArray19);
        boolean boolean39 = nativeArray1.avoidObjectDetection();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        com.google.javascript.rhino.head.Scriptable scriptable0 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = com.google.javascript.rhino.head.ScriptableObject.hasProperty(scriptable0, "object");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        com.google.javascript.rhino.head.Scriptable scriptable0 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray3.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray6, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj14 = nativeArray6.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean15 = nativeArray6.hasPrototypeMap();
        java.lang.Object[] objArray16 = nativeArray6.getIds();
        int int17 = nativeArray6.size();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        boolean boolean32 = nativeArray23.hasPrototypeMap();
        java.lang.Object[] objArray33 = nativeArray23.getIds();
        int int34 = nativeArray23.size();
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int38 = nativeArray36.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray23.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray36);
        java.lang.Object obj40 = nativeArray6.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        java.lang.Object[] objArray41 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray6);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        long long47 = nativeArray44.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "", true);
        boolean boolean51 = nativeArray44.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        java.lang.Object[] objArray59 = nativeArray53.getAllIds();
        nativeArray53.delete("");
        boolean boolean62 = nativeArray44.contains((java.lang.Object) "");
        boolean boolean63 = nativeArray6.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        com.google.javascript.rhino.head.Context context64 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int68 = nativeArray66.lastIndexOf((java.lang.Object) (short) 10);
        long long69 = nativeArray66.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray66, "", true);
        boolean boolean73 = nativeArray66.hasPrototypeMap();
        boolean boolean74 = nativeArray66.isExtensible();
        nativeArray6.defineOwnProperties(context64, (com.google.javascript.rhino.head.ScriptableObject) nativeArray66);
        boolean boolean76 = nativeArray6.isSealed();
        java.lang.Object[] objArray77 = nativeArray6.toArray();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.putConstProperty(scriptable0, "Array", (java.lang.Object) nativeArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[length]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1L + "'", long69 == 1L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[null]");
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.Context context37 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        nativeArray9.defineOwnProperties(context37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray39);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray39);
        com.google.javascript.rhino.head.Context context58 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray63, "", (java.lang.Object) 100);
        java.lang.Object obj67 = nativeArray60.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray63);
        java.lang.Object[] objArray68 = nativeArray63.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int72 = nativeArray70.lastIndexOf((java.lang.Object) (short) 10);
        long long73 = nativeArray70.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray70, "", true);
        boolean boolean77 = nativeArray70.hasPrototypeMap();
        int int78 = nativeArray70.size();
        boolean boolean79 = nativeArray70.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable80 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray70);
        nativeArray70.setAttributes(1, (int) (short) 1);
        java.lang.Object[] objArray84 = nativeArray70.toArray();
        nativeArray39.defineOwnProperty(context58, (java.lang.Object) objArray68, (com.google.javascript.rhino.head.ScriptableObject) nativeArray70);
        java.lang.Object obj87 = null;
        nativeArray39.defineProperty("object", obj87, 2);
        boolean boolean90 = nativeArray39.isSealed();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray39.setAttributes("object", (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[null]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1L + "'", long73 == 1L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(scriptable80);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int10 = nativeArray8.lastIndexOf((java.lang.Object) (short) 10);
        long long11 = nativeArray8.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable15 = null;
        java.lang.Object[] objArray16 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable15);
        java.lang.Object[] objArray17 = nativeArray8.toArray(objArray16);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "", true);
        boolean boolean27 = nativeArray20.hasPrototypeMap();
        int int28 = nativeArray20.size();
        boolean boolean29 = nativeArray20.isEmpty();
        boolean boolean31 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "Array");
        java.lang.Object obj32 = nativeArray8.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray43.getParentScope();
        boolean boolean51 = nativeArray35.containsAll((java.util.Collection) nativeArray43);
        java.lang.Object obj52 = nativeArray20.get((int) (byte) -1, (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        java.util.Iterator iterator53 = nativeArray43.iterator();
        java.lang.Object obj54 = nativeArray4.getAssociatedValue((java.lang.Object) iterator53);
        com.google.javascript.rhino.head.Context context55 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray57, "", (java.lang.Object) 100);
        boolean boolean61 = nativeArray57.avoidObjectDetection();
        boolean boolean63 = nativeArray57.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray69, (java.lang.Object) (-1));
        nativeArray57.setAttributes(0, (com.google.javascript.rhino.head.Scriptable) nativeArray69, (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray4.defineOwnProperties(context55, (com.google.javascript.rhino.head.ScriptableObject) nativeArray69);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EcmaError; message: TypeError: Expected argument of type object, but instead had type number");
        } catch (com.google.javascript.rhino.head.EcmaError e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(iterator53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        boolean boolean22 = nativeArray15.hasPrototypeMap();
        java.util.ListIterator listIterator23 = nativeArray15.listIterator();
        boolean boolean24 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        boolean boolean25 = nativeArray1.hasPrototypeMap();
        java.lang.Object[] objArray26 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int30 = nativeArray28.lastIndexOf((java.lang.Object) (short) 10);
        long long31 = nativeArray28.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        java.lang.Object[] objArray42 = nativeArray36.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray36.getParentScope();
        boolean boolean44 = nativeArray28.containsAll((java.util.Collection) nativeArray36);
        int int45 = nativeArray36.size();
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        long long51 = nativeArray48.getLength();
        nativeArray48.delete((int) (byte) 1);
        boolean boolean54 = nativeArray48.isExtensible();
        java.lang.Object obj56 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, 4);
        java.lang.Object[] objArray57 = nativeArray48.toArray();
        nativeArray48.delete((int) (short) 0);
        java.lang.Object obj61 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "", obj61);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray68, (java.lang.Object) (-1));
        java.lang.Object[] objArray71 = nativeArray65.getAllIds();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "Array", (java.lang.Object) objArray71);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, "Array", (java.lang.Object) objArray71);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.initPrototypeMethod((java.lang.Object) objArray71, 0, "", 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(listIterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[null]");
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[null]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[length]");
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray(2L);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        java.lang.Object[] objArray21 = nativeArray17.getAllIds();
        java.lang.Object obj23 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "");
        boolean boolean24 = nativeArray17.avoidObjectDetection();
        java.lang.Integer[] intArray25 = nativeArray17.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        boolean boolean40 = nativeArray31.hasPrototypeMap();
        java.lang.Object[] objArray41 = nativeArray31.getIds();
        int int42 = nativeArray31.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj56 = nativeArray48.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        boolean boolean57 = nativeArray48.hasPrototypeMap();
        java.lang.Object[] objArray58 = nativeArray48.getIds();
        int int59 = nativeArray48.size();
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int63 = nativeArray61.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray48.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray61);
        java.lang.Object obj65 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        java.lang.Object[] objArray66 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray31);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int71 = nativeArray69.lastIndexOf((java.lang.Object) (short) 10);
        long long72 = nativeArray69.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray69, "", true);
        boolean boolean76 = nativeArray69.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray81, (java.lang.Object) (-1));
        java.lang.Object[] objArray84 = nativeArray78.getAllIds();
        nativeArray78.delete("");
        boolean boolean87 = nativeArray69.contains((java.lang.Object) "");
        boolean boolean88 = nativeArray31.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray69);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = nativeArray17.getAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray69);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property  not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[length]");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[hi!]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[length]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        boolean boolean36 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "");
        nativeArray11.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray29, 13);
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray29.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable40 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable50 = null;
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable50);
        java.lang.Object[] objArray52 = nativeArray43.toArray(objArray51);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "", true);
        boolean boolean62 = nativeArray55.hasPrototypeMap();
        int int63 = nativeArray55.size();
        boolean boolean64 = nativeArray55.isEmpty();
        boolean boolean66 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "Array");
        java.lang.Object obj67 = nativeArray43.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int72 = nativeArray70.lastIndexOf((java.lang.Object) (short) 10);
        long long73 = nativeArray70.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray70, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray81, (java.lang.Object) (-1));
        java.lang.Object[] objArray84 = nativeArray78.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable85 = nativeArray78.getParentScope();
        boolean boolean86 = nativeArray70.containsAll((java.util.Collection) nativeArray78);
        java.lang.Object obj87 = nativeArray55.get((int) (byte) -1, (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        nativeArray29.defineProperty("object", (java.lang.Object) nativeArray55, (int) (short) 0);
        java.util.ListIterator listIterator90 = nativeArray55.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            int int92 = nativeArray55.getAttributes((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 1 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNotNull(scriptable40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[null]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1L + "'", long73 == 1L);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertNull(scriptable85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(listIterator90);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable14 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        long long20 = nativeArray17.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "", true);
        boolean boolean24 = nativeArray17.hasPrototypeMap();
        java.lang.reflect.Method method27 = null;
        java.lang.reflect.Method method28 = null;
        nativeArray17.defineProperty("hi!", (java.lang.Object) (-1L), method27, method28, (int) (byte) 10);
        boolean boolean32 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "");
        com.google.javascript.rhino.head.Scriptable scriptable33 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        nativeArray17.setAttributes("", 4);
        nativeArray17.delete("");
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator43 = nativeArray40.iterator();
        com.google.javascript.rhino.head.Scriptable scriptable44 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray40);
        nativeArray1.put("object", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) nativeArray40);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj59 = nativeArray51.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int64 = nativeArray62.lastIndexOf((java.lang.Object) (short) 10);
        long long65 = nativeArray62.getLength();
        nativeArray62.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray71.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray74, (java.lang.Object) (-1));
        java.lang.Object[] objArray77 = nativeArray71.getAllIds();
        nativeArray71.delete("");
        java.lang.Object obj80 = nativeArray56.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray71);
        java.lang.String str81 = nativeArray71.getTypeOf();
        nativeArray71.preventExtensions();
        java.util.ListIterator listIterator83 = nativeArray71.listIterator();
        java.lang.reflect.Method method84 = null;
        java.lang.reflect.Method method85 = null;
        // The following exception was thrown during execution in test generation
        try {
            nativeArray40.defineProperty("hi!", (java.lang.Object) listIterator83, method84, method85, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 35");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(scriptable14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(iterator43);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[length]");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "object" + "'", str81, "object");
        org.junit.Assert.assertNotNull(listIterator83);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj10 = nativeArray4.getGetterOrSetter("object", (int) (short) 0, true);
        nativeArray4.setAttributes((int) (short) -1, 4);
        boolean boolean14 = nativeArray4.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        long long20 = nativeArray17.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "", true);
        boolean boolean24 = nativeArray17.hasPrototypeMap();
        java.lang.reflect.Method method27 = null;
        java.lang.reflect.Method method28 = null;
        nativeArray17.defineProperty("hi!", (java.lang.Object) (-1L), method27, method28, (int) (byte) 10);
        boolean boolean32 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "");
        int int33 = nativeArray17.size();
        com.google.javascript.rhino.head.Scriptable scriptable35 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray17, "");
        java.lang.Object[] objArray36 = nativeArray17.getAllIds();
        java.lang.Object[] objArray37 = nativeArray17.toArray();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean38 = nativeArray4.addAll((int) (short) 1, (java.util.Collection) nativeArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, length]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[null]");
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        boolean boolean29 = nativeArray22.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray32.getParentScope();
        java.lang.Object[] objArray34 = nativeArray32.getIds();
        boolean boolean35 = nativeArray32.isEmpty();
        boolean boolean36 = nativeArray22.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean38 = nativeArray32.isConst("object");
        java.lang.Object obj40 = nativeArray32.get((java.lang.Object) (byte) 10);
        com.google.javascript.rhino.head.Scriptable scriptable41 = null;
        nativeArray32.setParentScope(scriptable41);
        nativeArray9.setAttributes((-1), (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        long long45 = nativeArray9.getLength();
        nativeArray9.activatePrototypeMap((int) 'a');
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.Callable callable15 = null;
        nativeArray4.setGetterOrSetter("hi!", 0, callable15, false);
        long long18 = nativeArray4.getLength();
        java.lang.Object[] objArray19 = nativeArray4.getIds();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!]");
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable3 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int7 = nativeArray5.lastIndexOf((java.lang.Object) (short) 10);
        long long8 = nativeArray5.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray5, "", true);
        boolean boolean12 = nativeArray5.hasPrototypeMap();
        int int13 = nativeArray5.size();
        boolean boolean14 = nativeArray5.isEmpty();
        nativeArray1.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = nativeArray1.getGetterOrSetter("", (int) '#', false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNull(scriptable3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.setAttributes("hi!", (int) (byte) 0);
        nativeArray1.delete((int) (short) -1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = null;
        boolean boolean24 = nativeArray1.has("object", scriptable23);
        nativeArray1.delete("");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.Scriptable scriptable26 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        boolean boolean55 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "hi!");
        nativeArray32.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray51, 8);
        nativeArray1.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        long long60 = nativeArray32.getLength();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean56 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, (int) (byte) 1);
        boolean boolean57 = nativeArray37.isExtensible();
        java.lang.Object obj58 = nativeArray10.get("object", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj71 = nativeArray63.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray68);
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int76 = nativeArray74.lastIndexOf((java.lang.Object) (short) 10);
        long long77 = nativeArray74.getLength();
        nativeArray74.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray68, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray86 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray83.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray86, (java.lang.Object) (-1));
        java.lang.Object[] objArray89 = nativeArray83.getAllIds();
        nativeArray83.delete("");
        java.lang.Object obj92 = nativeArray68.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray83);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray68, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable95 = nativeArray68.getPrototype();
        nativeArray37.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray68);
        java.lang.Class<?> wildcardClass97 = nativeArray68.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 1L + "'", long77 == 1L);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[length]");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNull(scriptable95);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        java.lang.Object[] objArray13 = nativeArray1.getAllIds();
        java.lang.String str14 = nativeArray1.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int18 = nativeArray16.lastIndexOf((java.lang.Object) (short) 10);
        long long19 = nativeArray16.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, "", true);
        boolean boolean23 = nativeArray16.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable27 = nativeArray26.getParentScope();
        java.lang.Object[] objArray28 = nativeArray26.getIds();
        boolean boolean29 = nativeArray26.isEmpty();
        boolean boolean30 = nativeArray16.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        java.lang.Object[] objArray31 = nativeArray16.getIds();
        java.lang.Object[] objArray32 = nativeArray16.getAllIds();
        int int33 = nativeArray1.indexOf((java.lang.Object) nativeArray16);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        boolean boolean42 = nativeArray35.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable44 = null;
        java.lang.Object obj45 = nativeArray35.get((int) '#', scriptable44);
        boolean boolean46 = nativeArray1.contains((java.lang.Object) scriptable44);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int51 = nativeArray49.lastIndexOf((java.lang.Object) (short) 10);
        long long52 = nativeArray49.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "", true);
        boolean boolean56 = nativeArray49.hasPrototypeMap();
        int int57 = nativeArray49.size();
        boolean boolean58 = nativeArray49.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable59 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray49);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable63 = nativeArray49.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method67 = null;
        java.lang.reflect.Method method68 = null;
        nativeArray49.defineProperty("hi!", (java.lang.Object) nativeArray66, method67, method68, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.activatePrototypeMap((int) (short) 100);
        boolean boolean77 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray73, "hi!");
        boolean boolean78 = nativeArray73.isExtensible();
        nativeArray66.putConst("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) 100);
        boolean boolean82 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray73, 2);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = nativeArray1.addAll((int) (short) 10, (java.util.Collection) nativeArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, length]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Array" + "'", str14, "Array");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(scriptable27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[length]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(scriptable59);
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable21 = null;
        java.lang.Object[] objArray22 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable21);
        java.lang.Object[] objArray23 = nativeArray14.toArray(objArray22);
        com.google.javascript.rhino.head.Scriptable scriptable24 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray14);
        boolean boolean25 = nativeArray1.contains((java.lang.Object) nativeArray14);
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray1.getPrototype();
        nativeArray1.sealObject();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNotNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(scriptable26);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Context context36 = null;
        com.google.javascript.rhino.head.Scriptable scriptable37 = null;
        java.lang.Object[] objArray38 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable37);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        com.google.javascript.rhino.head.Callable callable54 = null;
        nativeArray43.setGetterOrSetter("hi!", 0, callable54, false);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray9.defineOwnProperty(context36, (java.lang.Object) scriptable37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray43);
        long long59 = nativeArray9.getLength();
        boolean boolean61 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        boolean boolean62 = nativeArray9.isEmpty();
        int int63 = nativeArray9.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = nativeArray9.remove(0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable5 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        boolean boolean6 = nativeArray1.isSealed();
        com.google.javascript.rhino.head.Scriptable scriptable7 = nativeArray1.getPrototype();
        org.junit.Assert.assertNull(scriptable5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(scriptable7);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj3 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        boolean boolean5 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        long long6 = nativeArray1.getLength();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = nativeArray1.remove((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int8 = nativeArray6.lastIndexOf((java.lang.Object) (short) 10);
        long long9 = nativeArray6.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        java.lang.Object[] objArray20 = nativeArray14.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable21 = nativeArray14.getParentScope();
        boolean boolean22 = nativeArray6.containsAll((java.util.Collection) nativeArray14);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable32 = null;
        java.lang.Object[] objArray33 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable32);
        java.lang.Object[] objArray34 = nativeArray25.toArray(objArray33);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, "hi!", (java.lang.Object) objArray33);
        int int36 = nativeArray6.size();
        nativeArray6.activatePrototypeMap((int) (byte) 10);
        java.lang.Object obj40 = null;
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, "Array", obj40, 8);
        boolean boolean44 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, 10);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) 100, (java.lang.Object) nativeArray6);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj59 = nativeArray51.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "hi!", false);
        nativeArray56.delete((int) (byte) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int68 = nativeArray66.lastIndexOf((java.lang.Object) (short) 10);
        long long69 = nativeArray66.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray66, "", true);
        boolean boolean73 = nativeArray66.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable77 = nativeArray76.getParentScope();
        java.lang.Object[] objArray78 = nativeArray76.getIds();
        boolean boolean79 = nativeArray76.isEmpty();
        boolean boolean80 = nativeArray66.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        boolean boolean82 = nativeArray76.isConst("object");
        java.lang.Object obj84 = nativeArray76.get((java.lang.Object) (byte) 10);
        nativeArray76.preventExtensions();
        nativeArray76.sealObject();
        boolean boolean87 = nativeArray76.avoidObjectDetection();
        nativeArray6.putConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) boolean87);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
        org.junit.Assert.assertNull(scriptable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1L + "'", long69 == 1L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(scriptable77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = nativeArray4.getGetterOrSetter("hi!", 1, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "", (java.lang.Object) 100);
        java.lang.Object obj8 = nativeArray1.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray4);
        boolean boolean10 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray4.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray4.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(scriptable11);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        long long35 = nativeArray32.getLength();
        nativeArray32.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        java.lang.Object[] objArray47 = nativeArray41.getAllIds();
        nativeArray41.delete("");
        java.lang.Object obj50 = nativeArray26.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable53 = nativeArray26.getPrototype();
        com.google.javascript.rhino.head.Context context54 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        long long59 = nativeArray56.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray67, (java.lang.Object) (-1));
        java.lang.Object[] objArray70 = nativeArray64.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable71 = nativeArray64.getParentScope();
        boolean boolean72 = nativeArray56.containsAll((java.util.Collection) nativeArray64);
        nativeArray26.defineOwnProperties(context54, (com.google.javascript.rhino.head.ScriptableObject) nativeArray56);
        nativeArray10.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray26, (int) (short) 10);
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject77 = nativeArray1.exportAsJSClass((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray26, true);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray79.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray82, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray87.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj90 = nativeArray82.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray87);
        com.google.javascript.rhino.head.Callable callable93 = null;
        nativeArray82.setGetterOrSetter("hi!", 0, callable93, false);
        java.lang.Integer[] intArray96 = nativeArray82.getIndexIds();
        nativeArray26.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray82);
        java.lang.Class<?> wildcardClass98 = nativeArray82.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[length]");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNull(scriptable53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[null]");
        org.junit.Assert.assertNull(scriptable71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(idFunctionObject77);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean16 = nativeArray1.isSealed();
        java.lang.Object[] objArray17 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.util.Iterator iterator18 = nativeArray1.iterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(iterator18);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.Context context37 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        nativeArray9.defineOwnProperties(context37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray39);
        java.lang.Object obj58 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "");
        boolean boolean59 = nativeArray9.hasPrototypeMap();
        java.lang.Object obj61 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "Array");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable15 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method19 = null;
        java.lang.reflect.Method method20 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) nativeArray18, method19, method20, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        boolean boolean29 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "hi!");
        boolean boolean30 = nativeArray25.isExtensible();
        nativeArray18.putConst("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) 100);
        boolean boolean34 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, 2);
        com.google.javascript.rhino.head.Context context35 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        long long40 = nativeArray37.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable44 = null;
        java.lang.Object[] objArray45 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable44);
        java.lang.Object[] objArray46 = nativeArray37.toArray(objArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int51 = nativeArray49.lastIndexOf((java.lang.Object) (short) 10);
        long long52 = nativeArray49.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "", true);
        boolean boolean56 = nativeArray49.hasPrototypeMap();
        int int57 = nativeArray49.size();
        boolean boolean58 = nativeArray49.isEmpty();
        boolean boolean60 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "Array");
        java.lang.Object obj61 = nativeArray37.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        long long67 = nativeArray64.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray72.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray75, (java.lang.Object) (-1));
        java.lang.Object[] objArray78 = nativeArray72.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable79 = nativeArray72.getParentScope();
        boolean boolean80 = nativeArray64.containsAll((java.util.Collection) nativeArray72);
        java.lang.Object obj81 = nativeArray49.get((int) (byte) -1, (com.google.javascript.rhino.head.Scriptable) nativeArray72);
        nativeArray25.defineOwnProperties(context35, (com.google.javascript.rhino.head.ScriptableObject) nativeArray49);
        boolean boolean84 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "Array");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[null]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[null]");
        org.junit.Assert.assertNull(scriptable79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.Scriptable scriptable26 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        boolean boolean55 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "hi!");
        nativeArray32.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray51, 8);
        nativeArray1.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        boolean boolean61 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "object");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        nativeArray10.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) -1, (java.lang.Object) nativeArray10);
        long long17 = nativeArray1.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        java.lang.Object[] objArray25 = nativeArray19.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray19.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable27 = nativeArray19.getParentScope();
        boolean boolean28 = nativeArray19.isSealed();
        boolean boolean29 = nativeArray19.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray32.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable40 = nativeArray32.getParentScope();
        boolean boolean41 = nativeArray32.isSealed();
        java.lang.Object obj43 = nativeArray32.get(0L);
        long long44 = nativeArray32.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int48 = nativeArray46.lastIndexOf((java.lang.Object) (short) 10);
        long long49 = nativeArray46.getLength();
        nativeArray46.delete((int) (byte) 1);
        boolean boolean52 = nativeArray46.isExtensible();
        com.google.javascript.rhino.head.Scriptable scriptable53 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray46);
        nativeArray19.putConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) nativeArray46);
        java.lang.Object obj55 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) "");
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNull(scriptable27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[null]");
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNull(scriptable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 1L + "'", long49 == 1L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(scriptable53);
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        java.lang.Object obj19 = nativeArray11.get((java.lang.Object) (byte) 10);
        nativeArray11.preventExtensions();
        nativeArray11.sealObject();
        java.lang.String str22 = nativeArray11.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        long long35 = nativeArray32.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        java.lang.Object[] objArray46 = nativeArray40.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray40.getParentScope();
        boolean boolean48 = nativeArray32.containsAll((java.util.Collection) nativeArray40);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable58 = null;
        java.lang.Object[] objArray59 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable58);
        java.lang.Object[] objArray60 = nativeArray51.toArray(objArray59);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "hi!", (java.lang.Object) objArray59);
        nativeArray32.activatePrototypeMap((int) (byte) 10);
        boolean boolean64 = nativeArray24.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int68 = nativeArray66.lastIndexOf((java.lang.Object) (short) 10);
        long long69 = nativeArray66.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray66, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable73 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray66);
        nativeArray24.setParentScope(scriptable73);
        boolean boolean75 = nativeArray11.containsAll((java.util.Collection) nativeArray24);
        com.google.javascript.rhino.head.Scriptable scriptable76 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "object" + "'", str22, "object");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[null]");
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[null]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1L + "'", long69 == 1L);
        org.junit.Assert.assertNull(scriptable73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(scriptable76);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable15 = nativeArray14.getParentScope();
        java.lang.Object[] objArray16 = nativeArray14.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        java.lang.Object obj30 = nativeArray14.getAssociatedValue((java.lang.Object) nativeArray21);
        com.google.javascript.rhino.head.Scriptable scriptable31 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray14);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        java.lang.Object[] objArray48 = nativeArray42.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable49 = nativeArray42.getParentScope();
        boolean boolean50 = nativeArray34.containsAll((java.util.Collection) nativeArray42);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int55 = nativeArray53.lastIndexOf((java.lang.Object) (short) 10);
        long long56 = nativeArray53.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray53, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable60 = null;
        java.lang.Object[] objArray61 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable60);
        java.lang.Object[] objArray62 = nativeArray53.toArray(objArray61);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "hi!", (java.lang.Object) objArray61);
        int int64 = nativeArray34.size();
        nativeArray34.activatePrototypeMap((int) (byte) 10);
        java.lang.Object obj68 = null;
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "Array", obj68, 8);
        boolean boolean72 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, 10);
        boolean boolean73 = nativeArray14.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34);
        com.google.javascript.rhino.head.Scriptable scriptable74 = nativeArray34.getParentScope();
        nativeArray1.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        nativeArray34.setAttributes((int) (short) 0, (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[length]");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(scriptable31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[null]");
        org.junit.Assert.assertNull(scriptable49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[null]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(scriptable74);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        long long11 = nativeArray1.getLength();
        java.util.Collection collection12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = nativeArray1.containsAll(collection12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        java.lang.Object[] objArray42 = nativeArray36.getAllIds();
        nativeArray36.delete("");
        java.lang.Object obj45 = nativeArray21.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable48 = nativeArray21.getPrototype();
        com.google.javascript.rhino.head.Context context49 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        java.lang.Object[] objArray65 = nativeArray59.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray59.getParentScope();
        boolean boolean67 = nativeArray51.containsAll((java.util.Collection) nativeArray59);
        nativeArray21.defineOwnProperties(context49, (com.google.javascript.rhino.head.ScriptableObject) nativeArray51);
        java.lang.Object obj69 = nativeArray1.get((int) ' ', (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        java.lang.Integer[] intArray70 = nativeArray1.getIndexIds();
        nativeArray1.activatePrototypeMap((int) 'a');
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 'a');
        boolean boolean75 = nativeArray74.avoidObjectDetection();
        java.lang.Object[] objArray76 = nativeArray74.toArray();
        boolean boolean77 = nativeArray1.containsAll((java.util.Collection) nativeArray74);
        boolean boolean79 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) 'a');
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[length]");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(scriptable48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[null]");
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray(objArray39);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        boolean boolean49 = nativeArray42.hasPrototypeMap();
        java.lang.reflect.Method method52 = null;
        java.lang.reflect.Method method53 = null;
        nativeArray42.defineProperty("hi!", (java.lang.Object) (-1L), method52, method53, (int) (byte) 10);
        boolean boolean57 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "");
        nativeArray42.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray61 = nativeArray42.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray67, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray72.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray75, (java.lang.Object) (-1));
        nativeArray64.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, 0, (java.lang.Object) nativeArray72);
        java.lang.Object[] objArray81 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray42);
        java.lang.Object obj82 = nativeArray40.getAssociatedValue((java.lang.Object) objArray81);
        java.util.ListIterator listIterator83 = nativeArray40.listIterator();
        java.util.Iterator iterator84 = nativeArray40.iterator();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[hi!, length]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[0, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[0, hi!]");
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(listIterator83);
        org.junit.Assert.assertNotNull(iterator84);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Integer[] intArray9 = nativeArray1.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int14 = nativeArray12.lastIndexOf((java.lang.Object) (short) 10);
        long long15 = nativeArray12.getLength();
        nativeArray12.delete((int) (byte) 1);
        java.lang.Integer[] intArray18 = nativeArray12.getIndexIds();
        java.lang.Object obj20 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "hi!", obj20);
        java.lang.Object obj23 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable32 = null;
        java.lang.Object[] objArray33 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable32);
        java.lang.Object[] objArray34 = nativeArray25.toArray(objArray33);
        com.google.javascript.rhino.head.Scriptable scriptable35 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean36 = nativeArray12.contains((java.lang.Object) nativeArray25);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        nativeArray38.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj67 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        boolean boolean68 = nativeArray59.hasPrototypeMap();
        java.lang.Object[] objArray69 = nativeArray59.getIds();
        int int70 = nativeArray59.size();
        boolean boolean71 = nativeArray38.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray59);
        boolean boolean72 = nativeArray59.avoidObjectDetection();
        java.util.Iterator iterator73 = nativeArray59.iterator();
        boolean boolean74 = nativeArray12.contains((java.lang.Object) iterator73);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "");
        boolean boolean78 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "object");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = nativeArray1.addAll((-1), (java.util.Collection) nativeArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null]");
        org.junit.Assert.assertNotNull(scriptable35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(iterator73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, (int) (short) 10);
        java.lang.Object obj19 = nativeArray4.get(0);
        com.google.javascript.rhino.head.Scriptable scriptable20 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = com.google.javascript.rhino.head.ScriptableObject.getProperty(scriptable20, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(scriptable20);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray4.isExtensible();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!", false);
        com.google.javascript.rhino.head.Context context25 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray42.getParentScope();
        java.lang.Object[] objArray44 = nativeArray42.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj57 = nativeArray49.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray54);
        java.lang.Object obj58 = nativeArray42.getAssociatedValue((java.lang.Object) nativeArray49);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable61 = nativeArray60.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable62 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray60);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        long long67 = nativeArray64.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "", true);
        boolean boolean71 = nativeArray64.hasPrototypeMap();
        int int72 = nativeArray64.size();
        boolean boolean73 = nativeArray64.isEmpty();
        nativeArray60.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.Object obj75 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) nativeArray60);
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray80 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray80, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable83 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray77);
        int int84 = nativeArray60.lastIndexOf((java.lang.Object) scriptable83);
        boolean boolean85 = nativeArray30.has((int) ' ', (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        java.lang.String str86 = nativeArray60.getTypeOf();
        nativeArray4.defineOwnProperties(context25, (com.google.javascript.rhino.head.ScriptableObject) nativeArray60);
        java.lang.String str88 = nativeArray4.getTypeOf();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[length]");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(scriptable61);
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(scriptable83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "object" + "'", str86, "object");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "object" + "'", str88, "object");
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        boolean boolean4 = nativeArray1.isEmpty();
        java.lang.Object obj6 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        com.google.javascript.rhino.head.Context context7 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        nativeArray9.delete((int) (byte) 1);
        java.lang.Integer[] intArray15 = nativeArray9.getIndexIds();
        nativeArray1.defineOwnProperties(context7, (com.google.javascript.rhino.head.ScriptableObject) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        java.lang.Object obj26 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj57 = nativeArray49.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray54);
        boolean boolean58 = nativeArray49.hasPrototypeMap();
        java.lang.Object[] objArray59 = nativeArray49.getIds();
        int int60 = nativeArray49.size();
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int64 = nativeArray62.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray49.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        java.lang.Object obj66 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        boolean boolean67 = nativeArray49.isSealed();
        boolean boolean68 = nativeArray49.hasPrototypeMap();
        boolean boolean69 = nativeArray22.has(100, (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        boolean boolean71 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "hi!");
        java.lang.reflect.Method method72 = null;
        java.lang.reflect.Method method73 = null;
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.defineProperty("Array", (java.lang.Object) boolean71, method72, method73, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 100");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1) + "'", obj26, (-1));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        java.lang.Object[] objArray25 = nativeArray19.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray19.getParentScope();
        boolean boolean27 = nativeArray11.containsAll((java.util.Collection) nativeArray19);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray19.getParentScope();
        boolean boolean29 = nativeArray19.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray32.getParentScope();
        java.lang.Object[] objArray34 = nativeArray32.getIds();
        boolean boolean35 = nativeArray19.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.reflect.Method method36 = null;
        java.lang.reflect.Method method37 = null;
        nativeArray4.defineProperty("hi!", (java.lang.Object) nativeArray19, method36, method37, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int51 = nativeArray49.lastIndexOf((java.lang.Object) (short) 10);
        long long52 = nativeArray49.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        java.lang.Object[] objArray63 = nativeArray57.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray57.getParentScope();
        boolean boolean65 = nativeArray49.containsAll((java.util.Collection) nativeArray57);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int70 = nativeArray68.lastIndexOf((java.lang.Object) (short) 10);
        long long71 = nativeArray68.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray68, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable75 = null;
        java.lang.Object[] objArray76 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable75);
        java.lang.Object[] objArray77 = nativeArray68.toArray(objArray76);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "hi!", (java.lang.Object) objArray76);
        nativeArray49.activatePrototypeMap((int) (byte) 10);
        boolean boolean81 = nativeArray41.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        com.google.javascript.rhino.head.NativeArray nativeArray84 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int86 = nativeArray84.lastIndexOf((java.lang.Object) (short) 10);
        long long87 = nativeArray84.getLength();
        java.lang.Object[] objArray88 = nativeArray84.toArray();
        java.lang.Object obj89 = nativeArray41.get((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray84);
        boolean boolean91 = nativeArray41.isConst("Array");
        int int92 = nativeArray4.indexOf((java.lang.Object) "Array");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[null]");
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1L + "'", long71 == 1L);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[null]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 1L + "'", long87 == 1L);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[null]");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable32 = null;
        java.lang.Object[] objArray33 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable32);
        java.lang.Object[] objArray34 = nativeArray25.toArray(objArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        long long40 = nativeArray37.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "", true);
        boolean boolean44 = nativeArray37.hasPrototypeMap();
        int int45 = nativeArray37.size();
        boolean boolean46 = nativeArray37.isEmpty();
        boolean boolean48 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "Array");
        java.lang.Object obj49 = nativeArray25.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        java.lang.Object obj50 = nativeArray1.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable53 = nativeArray52.getParentScope();
        java.lang.Object[] objArray54 = nativeArray52.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj67 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.Object obj68 = nativeArray52.getAssociatedValue((java.lang.Object) nativeArray59);
        java.lang.Object obj69 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) nativeArray52);
        nativeArray25.preventExtensions();
        java.lang.Object[] objArray71 = nativeArray25.getIds();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator listIterator73 = nativeArray25.listIterator((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNull(scriptable53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[length]");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        java.lang.Object[] objArray15 = nativeArray1.toArray();
        nativeArray1.preventExtensions();
        nativeArray1.delete((int) (short) -1);
        com.google.javascript.rhino.head.Scriptable scriptable19 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable19);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.Callable callable15 = null;
        nativeArray4.setGetterOrSetter("hi!", 0, callable15, false);
        java.lang.Integer[] intArray18 = nativeArray4.getIndexIds();
        java.lang.Object[] objArray19 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        com.google.javascript.rhino.head.Scriptable scriptable20 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!]");
        org.junit.Assert.assertNotNull(scriptable20);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        boolean boolean9 = nativeArray1.hasPrototypeMap();
        java.lang.Object[] objArray10 = nativeArray1.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        boolean boolean24 = nativeArray15.hasPrototypeMap();
        java.lang.Object[] objArray25 = nativeArray15.getIds();
        int int26 = nativeArray15.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        java.lang.Object obj49 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.Object[] objArray50 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean51 = nativeArray32.isSealed();
        java.lang.Object obj52 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray32);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "Array", true);
        boolean boolean57 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "object");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        nativeArray23.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.getAllIds();
        nativeArray32.delete("");
        java.lang.Object obj41 = nativeArray17.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray17.getPrototype();
        com.google.javascript.rhino.head.Context context45 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        nativeArray17.defineOwnProperties(context45, (com.google.javascript.rhino.head.ScriptableObject) nativeArray47);
        nativeArray1.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 10);
        boolean boolean68 = nativeArray1.isConst("");
        java.util.ListIterator listIterator69 = nativeArray1.listIterator();
        nativeArray1.preventExtensions();
        com.google.javascript.rhino.head.Scriptable scriptable71 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty(scriptable71, "hi!", false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[length]");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(listIterator69);
        org.junit.Assert.assertNotNull(scriptable71);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        java.lang.Object obj23 = null;
        int int24 = nativeArray1.lastIndexOf(obj23);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        java.lang.Object[] objArray33 = nativeArray27.getAllIds();
        nativeArray27.delete("");
        long long36 = nativeArray27.getLength();
        boolean boolean38 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, (int) (short) 10);
        nativeArray27.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable41 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray27);
        java.lang.reflect.Method method42 = null;
        java.lang.reflect.Method method43 = null;
        nativeArray1.defineProperty("object", (java.lang.Object) scriptable41, method42, method43, (int) (short) 0);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        boolean boolean65 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "object");
        com.google.javascript.rhino.head.Scriptable scriptable66 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray47);
        int int67 = nativeArray1.lastIndexOf((java.lang.Object) nativeArray47);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = nativeArray47.getGetterOrSetter("object", (int) ' ', false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: object");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[length]");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(scriptable66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        java.lang.Object obj3 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray6.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.Callable callable27 = null;
        nativeArray16.setGetterOrSetter("hi!", 0, callable27, false);
        java.lang.Integer[] intArray30 = nativeArray16.getIndexIds();
        nativeArray9.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        nativeArray34.delete((int) (byte) 1);
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "");
        nativeArray16.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray34, 13);
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray34.getParentScope();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", (java.lang.Object) scriptable44);
        java.util.ListIterator listIterator46 = nativeArray1.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = nativeArray1.remove(4);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertNotNull(listIterator46);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj21 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean22 = nativeArray13.hasPrototypeMap();
        java.lang.Object[] objArray23 = nativeArray13.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        boolean boolean32 = nativeArray25.hasPrototypeMap();
        java.lang.reflect.Method method35 = null;
        java.lang.reflect.Method method36 = null;
        nativeArray25.defineProperty("hi!", (java.lang.Object) (-1L), method35, method36, (int) (byte) 10);
        boolean boolean40 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "");
        com.google.javascript.rhino.head.Scriptable scriptable41 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray25);
        nativeArray25.setAttributes("", 4);
        nativeArray25.delete(10);
        java.lang.Object obj47 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) nativeArray25);
        boolean boolean48 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        java.lang.Object[] objArray49 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[100]");
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int5 = nativeArray3.lastIndexOf((java.lang.Object) (short) 10);
        long long6 = nativeArray3.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray3, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        java.lang.Object[] objArray17 = nativeArray11.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray11.getParentScope();
        boolean boolean19 = nativeArray3.containsAll((java.util.Collection) nativeArray11);
        com.google.javascript.rhino.head.Scriptable scriptable20 = nativeArray11.getParentScope();
        boolean boolean21 = nativeArray1.containsAll((java.util.Collection) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "", true);
        boolean boolean31 = nativeArray24.hasPrototypeMap();
        int int32 = nativeArray24.size();
        boolean boolean33 = nativeArray24.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable34 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        nativeArray24.setAttributes(1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.setAttributes("object", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 32");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null]");
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(scriptable34);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator4 = nativeArray1.iterator();
        boolean boolean5 = nativeArray1.hasPrototypeMap();
        boolean boolean7 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        boolean boolean24 = nativeArray15.hasPrototypeMap();
        java.lang.Object[] objArray25 = nativeArray15.getIds();
        int int26 = nativeArray15.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        java.lang.Object obj49 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.Object[] objArray50 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        boolean boolean52 = nativeArray15.isConst("hi!");
        nativeArray10.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        java.lang.Object obj54 = nativeArray1.get((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        java.lang.Object[] objArray63 = nativeArray57.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray(objArray63);
        java.lang.Object obj65 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = nativeArray1.remove(13);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(iterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[null]");
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        boolean boolean21 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (int) 'a');
        boolean boolean22 = nativeArray9.hasPrototypeMap();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "Array");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        java.lang.Object[] objArray39 = nativeArray33.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable40 = nativeArray33.getParentScope();
        boolean boolean41 = nativeArray25.containsAll((java.util.Collection) nativeArray33);
        com.google.javascript.rhino.head.Scriptable scriptable42 = nativeArray33.getParentScope();
        boolean boolean43 = nativeArray33.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray46.getParentScope();
        java.lang.Object[] objArray48 = nativeArray46.getIds();
        boolean boolean49 = nativeArray33.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "object", (java.lang.Object) nativeArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int55 = nativeArray53.lastIndexOf((java.lang.Object) (short) 10);
        long long56 = nativeArray53.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray53, "", true);
        boolean boolean60 = nativeArray53.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray63.getParentScope();
        java.lang.Object[] objArray65 = nativeArray63.getIds();
        boolean boolean66 = nativeArray63.isEmpty();
        boolean boolean67 = nativeArray53.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.Object[] objArray68 = nativeArray53.getIds();
        nativeArray12.defineConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        nativeArray53.activatePrototypeMap((int) '#');
        com.google.javascript.rhino.head.Scriptable scriptable72 = nativeArray53.getParentScope();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[null]");
        org.junit.Assert.assertNull(scriptable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(scriptable42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNull(scriptable72);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.Scriptable scriptable26 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        boolean boolean55 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "hi!");
        nativeArray32.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray51, 8);
        nativeArray1.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        nativeArray1.sealObject();
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.activatePrototypeMap((int) (short) 100);
        boolean boolean69 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray65, "hi!");
        boolean boolean70 = nativeArray65.isExtensible();
        java.lang.String str71 = nativeArray65.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray74.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray77, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray82.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj85 = nativeArray77.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray82);
        com.google.javascript.rhino.head.NativeArray nativeArray88 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int90 = nativeArray88.lastIndexOf((java.lang.Object) (short) 10);
        long long91 = nativeArray88.getLength();
        nativeArray88.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray82, "hi!", (java.lang.Object) (byte) 1);
        nativeArray65.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray82, 4);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (-1), (java.lang.Object) 4);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Cannot modify a property of a sealed object: -1.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "object" + "'", str71, "object");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 1L + "'", long91 == 1L);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj3 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        boolean boolean5 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        boolean boolean20 = nativeArray11.hasPrototypeMap();
        java.lang.Object[] objArray21 = nativeArray11.getIds();
        int int22 = nativeArray11.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int43 = nativeArray41.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray28.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray41);
        java.lang.Object obj45 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        java.lang.Object[] objArray46 = nativeArray11.getIds();
        java.lang.String str47 = nativeArray11.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int51 = nativeArray49.lastIndexOf((java.lang.Object) (short) 10);
        long long52 = nativeArray49.getLength();
        nativeArray49.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        long long61 = nativeArray58.getLength();
        nativeArray58.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, (int) (byte) -1, (java.lang.Object) nativeArray58);
        java.util.Iterator iterator65 = nativeArray49.iterator();
        java.lang.Object[] objArray66 = nativeArray49.toArray();
        boolean boolean67 = nativeArray11.containsAll((java.util.Collection) nativeArray49);
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", (java.lang.Object) boolean67, (int) (short) 10);
        boolean boolean70 = nativeArray1.isExtensible();
        boolean boolean71 = nativeArray1.avoidObjectDetection();
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[hi!]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Array" + "'", str47, "Array");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
        org.junit.Assert.assertNotNull(iterator65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        java.lang.Object[] objArray33 = nativeArray9.toArray(objArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray(objArray32);
        boolean boolean36 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[null]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[null]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        com.google.javascript.rhino.head.Callable callable26 = null;
        nativeArray15.setGetterOrSetter("hi!", 0, callable26, false);
        java.lang.Integer[] intArray29 = nativeArray15.getIndexIds();
        nativeArray8.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        long long35 = nativeArray32.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        java.lang.Object[] objArray46 = nativeArray40.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray40.getParentScope();
        boolean boolean48 = nativeArray32.containsAll((java.util.Collection) nativeArray40);
        nativeArray40.delete("Array");
        java.lang.Object obj51 = nativeArray8.getAssociatedValue((java.lang.Object) nativeArray40);
        boolean boolean52 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        java.lang.String str53 = nativeArray8.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable62 = null;
        java.lang.Object[] objArray63 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable62);
        java.lang.Object[] objArray64 = nativeArray55.toArray(objArray63);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int69 = nativeArray67.lastIndexOf((java.lang.Object) (short) 10);
        long long70 = nativeArray67.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray67, "", true);
        boolean boolean74 = nativeArray67.hasPrototypeMap();
        int int75 = nativeArray67.size();
        boolean boolean76 = nativeArray67.isEmpty();
        boolean boolean78 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray67, "Array");
        java.lang.Object obj79 = nativeArray55.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        com.google.javascript.rhino.head.Scriptable scriptable80 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray55);
        boolean boolean81 = nativeArray8.containsAll((java.util.Collection) nativeArray55);
        boolean boolean83 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[null]");
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "object" + "'", str53, "object");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[null]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNull(scriptable80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.setAttributes("hi!", (int) (byte) 0);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable28 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray42, (java.lang.Object) (-1));
        nativeArray31.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray49.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray52, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj60 = nativeArray52.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray57);
        boolean boolean61 = nativeArray52.hasPrototypeMap();
        java.lang.Object[] objArray62 = nativeArray52.getIds();
        int int63 = nativeArray52.size();
        boolean boolean64 = nativeArray31.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject66 = nativeArray22.exportAsJSClass(10, (com.google.javascript.rhino.head.Scriptable) nativeArray52, false);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray52);
        boolean boolean68 = nativeArray1.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj81 = nativeArray73.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        boolean boolean82 = nativeArray73.hasPrototypeMap();
        java.lang.Object[] objArray83 = nativeArray73.getIds();
        int int84 = nativeArray73.size();
        com.google.javascript.rhino.head.NativeArray nativeArray86 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int88 = nativeArray86.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray73.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray86);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = nativeArray1.add((java.lang.Object) nativeArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[hi!]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(idFunctionObject66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[hi!]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean7 = nativeArray4.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = nativeArray4.getGetterOrSetter("object", (int) (short) 100, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: object");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) 100);
        boolean boolean5 = nativeArray1.avoidObjectDetection();
        boolean boolean7 = nativeArray1.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj21 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean22 = nativeArray13.hasPrototypeMap();
        java.lang.Object[] objArray23 = nativeArray13.getIds();
        int int24 = nativeArray13.size();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray29, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj37 = nativeArray29.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray34);
        boolean boolean38 = nativeArray29.hasPrototypeMap();
        java.lang.Object[] objArray39 = nativeArray29.getIds();
        int int40 = nativeArray29.size();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj54 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean55 = nativeArray46.hasPrototypeMap();
        java.lang.Object[] objArray56 = nativeArray46.getIds();
        int int57 = nativeArray46.size();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int61 = nativeArray59.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray46.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray59);
        java.lang.Object obj63 = nativeArray29.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean64 = nativeArray13.containsAll((java.util.Collection) nativeArray46);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) nativeArray46);
        com.google.javascript.rhino.head.Scriptable scriptable66 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray46);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty(scriptable66, "Array");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(scriptable66);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.Context context37 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        nativeArray9.defineOwnProperties(context37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray39);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray39);
        com.google.javascript.rhino.head.Context context58 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray63, "", (java.lang.Object) 100);
        java.lang.Object obj67 = nativeArray60.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray63);
        java.lang.Object[] objArray68 = nativeArray63.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int72 = nativeArray70.lastIndexOf((java.lang.Object) (short) 10);
        long long73 = nativeArray70.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray70, "", true);
        boolean boolean77 = nativeArray70.hasPrototypeMap();
        int int78 = nativeArray70.size();
        boolean boolean79 = nativeArray70.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable80 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray70);
        nativeArray70.setAttributes(1, (int) (short) 1);
        java.lang.Object[] objArray84 = nativeArray70.toArray();
        nativeArray39.defineOwnProperty(context58, (java.lang.Object) objArray68, (com.google.javascript.rhino.head.ScriptableObject) nativeArray70);
        nativeArray39.preventExtensions();
        boolean boolean88 = nativeArray39.isConst("hi!");
        nativeArray39.setAttributes("", 1);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[null]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1L + "'", long73 == 1L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(scriptable80);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator4 = nativeArray1.iterator();
        com.google.javascript.rhino.head.Scriptable scriptable5 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray7.getParentScope();
        java.lang.Object[] objArray9 = nativeArray7.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj22 = nativeArray14.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray19);
        java.lang.Object obj23 = nativeArray7.getAssociatedValue((java.lang.Object) nativeArray14);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.Callable callable42 = null;
        nativeArray31.setGetterOrSetter("hi!", 0, callable42, false);
        nativeArray25.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray31, (int) (short) 10);
        boolean boolean48 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray31, "object");
        int int49 = nativeArray14.lastIndexOf((java.lang.Object) nativeArray31);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj63 = nativeArray55.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        com.google.javascript.rhino.head.Callable callable66 = null;
        nativeArray55.setGetterOrSetter("hi!", 0, callable66, false);
        java.lang.Integer[] intArray69 = nativeArray55.getIndexIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray31, "hi!", (java.lang.Object) intArray69, 0);
        java.lang.Object obj72 = nativeArray1.get((java.lang.Object) "hi!");
        nativeArray1.delete(1);
        com.google.javascript.rhino.head.Scriptable scriptable75 = nativeArray1.getPrototype();
        org.junit.Assert.assertNotNull(iterator4);
        org.junit.Assert.assertNull(scriptable5);
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[length]");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(scriptable75);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        boolean boolean21 = nativeArray14.hasPrototypeMap();
        int int22 = nativeArray14.size();
        boolean boolean23 = nativeArray14.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable24 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray14);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray14.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method32 = null;
        java.lang.reflect.Method method33 = null;
        nativeArray14.defineProperty("hi!", (java.lang.Object) nativeArray31, method32, method33, 0);
        boolean boolean36 = nativeArray1.contains((java.lang.Object) method32);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        boolean boolean46 = nativeArray39.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray49.getParentScope();
        java.lang.Object[] objArray51 = nativeArray49.getIds();
        boolean boolean52 = nativeArray49.isEmpty();
        boolean boolean53 = nativeArray39.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        java.lang.Object obj55 = nativeArray39.get((long) (byte) 0);
        com.google.javascript.rhino.head.Scriptable scriptable56 = nativeArray39.getParentScope();
        nativeArray1.setAttributes(2, (com.google.javascript.rhino.head.Scriptable) nativeArray39, 2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(scriptable24);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(scriptable56);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        nativeArray27.delete("Array");
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray27);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        java.lang.Object[] objArray44 = nativeArray38.getAllIds();
        nativeArray38.delete("");
        long long47 = nativeArray38.getLength();
        boolean boolean48 = nativeArray38.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable49 = nativeArray38.getPrototype();
        java.lang.Object[] objArray50 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray38);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.add((int) (short) 0, (java.lang.Object) objArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[length]");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(scriptable49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        java.lang.Object[] objArray5 = nativeArray1.toArray();
        nativeArray1.setAttributes("Array", (int) (short) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj21 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean22 = nativeArray13.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        nativeArray24.delete((int) (byte) 1);
        boolean boolean30 = nativeArray24.isExtensible();
        java.lang.Object obj32 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, 4);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "hi!", (java.lang.Object) (short) 10);
        java.lang.Object obj36 = nativeArray1.associateValue((java.lang.Object) nativeArray13, (java.lang.Object) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray38.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable40 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray38);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray53, (java.lang.Object) (-1));
        java.lang.Object[] objArray56 = nativeArray50.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable57 = nativeArray50.getParentScope();
        boolean boolean58 = nativeArray42.containsAll((java.util.Collection) nativeArray50);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int63 = nativeArray61.lastIndexOf((java.lang.Object) (short) 10);
        long long64 = nativeArray61.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable68 = null;
        java.lang.Object[] objArray69 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable68);
        java.lang.Object[] objArray70 = nativeArray61.toArray(objArray69);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "hi!", (java.lang.Object) objArray69);
        nativeArray42.activatePrototypeMap((int) (byte) 10);
        com.google.javascript.rhino.head.Scriptable scriptable74 = nativeArray42.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable76 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray42, "object");
        boolean boolean77 = nativeArray38.containsAll((java.util.Collection) nativeArray42);
        java.lang.Object obj78 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) nativeArray38);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[null]");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNull(scriptable40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[null]");
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[null]");
        org.junit.Assert.assertNull(scriptable74);
        org.junit.Assert.assertNull(scriptable76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(obj78);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Integer[] intArray34 = nativeArray24.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "hi!");
        boolean boolean42 = nativeArray37.isExtensible();
        java.lang.String str43 = nativeArray37.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj57 = nativeArray49.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray54);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int62 = nativeArray60.lastIndexOf((java.lang.Object) (short) 10);
        long long63 = nativeArray60.getLength();
        nativeArray60.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray54, "hi!", (java.lang.Object) (byte) 1);
        nativeArray37.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray54, 4);
        nativeArray24.defineProperty("hi!", (java.lang.Object) nativeArray54, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray72.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray75, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray80 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray80.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj83 = nativeArray75.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray80);
        boolean boolean84 = nativeArray75.hasPrototypeMap();
        java.lang.Object[] objArray85 = nativeArray75.getIds();
        int int86 = nativeArray75.size();
        com.google.javascript.rhino.head.NativeArray nativeArray88 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int90 = nativeArray88.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray75.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray88);
        nativeArray75.setAttributes("hi!", 2);
        boolean boolean95 = nativeArray24.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray75);
        com.google.javascript.rhino.head.Scriptable scriptable97 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray75, "object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "object" + "'", str43, "object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1L + "'", long63 == 1L);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[hi!]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNull(scriptable97);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "hi!");
        long long48 = nativeArray43.jsGet_length();
        boolean boolean49 = nativeArray4.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "Array");
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "", (java.lang.Object) 100);
        java.lang.Object obj34 = nativeArray27.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray30);
        int int35 = nativeArray13.indexOf(obj34);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        nativeArray38.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj67 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        boolean boolean68 = nativeArray59.hasPrototypeMap();
        java.lang.Object[] objArray69 = nativeArray59.getIds();
        int int70 = nativeArray59.size();
        boolean boolean71 = nativeArray38.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray59);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, 100, (java.lang.Object) boolean71);
        java.lang.Object[] objArray73 = nativeArray13.getAllIds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[100, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[100, length]");
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        java.lang.Object obj16 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        java.lang.Object obj21 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray19, 8);
        nativeArray1.defineConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray19);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray19.setAttributes("object", (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 100");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int35 = nativeArray33.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray20.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray33);
        java.lang.Object obj37 = nativeArray1.get((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        java.lang.Object obj39 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray33, "hi!");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        nativeArray4.sealObject();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "Array", false);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "", true);
        boolean boolean36 = nativeArray29.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable40 = nativeArray39.getParentScope();
        java.lang.Object[] objArray41 = nativeArray39.getIds();
        boolean boolean42 = nativeArray39.isEmpty();
        boolean boolean43 = nativeArray29.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray39);
        boolean boolean44 = nativeArray22.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.Scriptable scriptable45 = nativeArray22.getPrototype();
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj59 = nativeArray51.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        boolean boolean60 = nativeArray51.hasPrototypeMap();
        java.lang.Object[] objArray61 = nativeArray51.getIds();
        int int62 = nativeArray51.size();
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray68, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj76 = nativeArray68.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray73);
        boolean boolean77 = nativeArray68.hasPrototypeMap();
        java.lang.Object[] objArray78 = nativeArray68.getIds();
        int int79 = nativeArray68.size();
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int83 = nativeArray81.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray68.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray81);
        java.lang.Object obj85 = nativeArray51.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray68);
        java.lang.Object[] objArray86 = nativeArray51.getIds();
        boolean boolean87 = nativeArray51.avoidObjectDetection();
        boolean boolean88 = nativeArray22.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.IdFunctionObject idFunctionObject90 = nativeArray4.exportAsJSClass((int) 'a', (com.google.javascript.rhino.head.Scriptable) nativeArray51, true);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Cannot modify a property of a sealed object: join.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(scriptable40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(scriptable45);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[hi!]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[hi!]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        boolean boolean27 = nativeArray18.hasPrototypeMap();
        java.lang.Object[] objArray28 = nativeArray18.getIds();
        int int29 = nativeArray18.size();
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj42 = nativeArray34.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray39);
        boolean boolean43 = nativeArray34.hasPrototypeMap();
        java.lang.Object[] objArray44 = nativeArray34.getIds();
        int int45 = nativeArray34.size();
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj59 = nativeArray51.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        boolean boolean60 = nativeArray51.hasPrototypeMap();
        java.lang.Object[] objArray61 = nativeArray51.getIds();
        int int62 = nativeArray51.size();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray51.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.Object obj68 = nativeArray34.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean69 = nativeArray18.containsAll((java.util.Collection) nativeArray51);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable73 = nativeArray72.getParentScope();
        java.lang.Object[] objArray74 = nativeArray72.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray76.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray79, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray84 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray84.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj87 = nativeArray79.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray84);
        java.lang.Object obj88 = nativeArray72.getAssociatedValue((java.lang.Object) nativeArray79);
        com.google.javascript.rhino.head.Scriptable scriptable89 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "hi!", (java.lang.Object) scriptable89);
        boolean boolean91 = nativeArray51.avoidObjectDetection();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", (java.lang.Object) boolean91);
        com.google.javascript.rhino.head.Scriptable scriptable93 = nativeArray1.getPrototype();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj97 = nativeArray1.getGetterOrSetter("object", (int) (short) 10, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: object");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[hi!]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(scriptable73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[length]");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(scriptable89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(scriptable93);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable3 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int7 = nativeArray5.lastIndexOf((java.lang.Object) (short) 10);
        long long8 = nativeArray5.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray5, "", true);
        boolean boolean12 = nativeArray5.hasPrototypeMap();
        int int13 = nativeArray5.size();
        boolean boolean14 = nativeArray5.isEmpty();
        nativeArray1.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray5);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj46 = nativeArray38.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        boolean boolean47 = nativeArray38.hasPrototypeMap();
        java.lang.Object[] objArray48 = nativeArray38.getIds();
        int int49 = nativeArray38.size();
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray38.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray51);
        java.lang.Object obj55 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        boolean boolean56 = nativeArray5.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int62 = nativeArray60.lastIndexOf((java.lang.Object) (short) 10);
        long long63 = nativeArray60.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray60, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray71, (java.lang.Object) (-1));
        java.lang.Object[] objArray74 = nativeArray68.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable75 = nativeArray68.getParentScope();
        boolean boolean76 = nativeArray60.containsAll((java.util.Collection) nativeArray68);
        com.google.javascript.rhino.head.Scriptable scriptable77 = nativeArray68.getParentScope();
        boolean boolean78 = nativeArray68.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable82 = nativeArray81.getParentScope();
        java.lang.Object[] objArray83 = nativeArray81.getIds();
        boolean boolean84 = nativeArray68.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray81);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray81, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable87 = null;
        nativeArray81.setParentScope(scriptable87);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray38.initPrototypeValue((int) ' ', "", (java.lang.Object) nativeArray81, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNull(scriptable3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1L + "'", long63 == 1L);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[null]");
        org.junit.Assert.assertNull(scriptable75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(scriptable77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(scriptable82);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        nativeArray12.sealObject();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray29, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj44 = nativeArray36.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        com.google.javascript.rhino.head.Callable callable47 = null;
        nativeArray36.setGetterOrSetter("hi!", 0, callable47, false);
        java.lang.Integer[] intArray50 = nativeArray36.getIndexIds();
        nativeArray29.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray36);
        java.lang.Object obj52 = nativeArray12.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.Scriptable scriptable54 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray36, "Array");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNull(scriptable54);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        java.lang.Object[] objArray5 = nativeArray1.toArray();
        nativeArray1.setAttributes("Array", (int) (short) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj21 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean22 = nativeArray13.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        nativeArray24.delete((int) (byte) 1);
        boolean boolean30 = nativeArray24.isExtensible();
        java.lang.Object obj32 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, 4);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "hi!", (java.lang.Object) (short) 10);
        java.lang.Object obj36 = nativeArray1.associateValue((java.lang.Object) nativeArray13, (java.lang.Object) (short) 10);
        java.util.Iterator iterator37 = nativeArray1.iterator();
        nativeArray1.activatePrototypeMap(13);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[null]");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertNotNull(iterator37);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Context context36 = null;
        com.google.javascript.rhino.head.Scriptable scriptable37 = null;
        java.lang.Object[] objArray38 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable37);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        com.google.javascript.rhino.head.Callable callable54 = null;
        nativeArray43.setGetterOrSetter("hi!", 0, callable54, false);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray9.defineOwnProperty(context36, (java.lang.Object) scriptable37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray43);
        java.lang.Object[] objArray59 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        boolean boolean60 = nativeArray43.isEmpty();
        boolean boolean61 = nativeArray43.avoidObjectDetection();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray43.setAttributes((int) '#', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 52");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable3 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int7 = nativeArray5.lastIndexOf((java.lang.Object) (short) 10);
        long long8 = nativeArray5.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray5, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        java.lang.Object[] objArray19 = nativeArray13.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable20 = nativeArray13.getParentScope();
        boolean boolean21 = nativeArray5.containsAll((java.util.Collection) nativeArray13);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable31 = null;
        java.lang.Object[] objArray32 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable31);
        java.lang.Object[] objArray33 = nativeArray24.toArray(objArray32);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray5, "hi!", (java.lang.Object) objArray32);
        nativeArray5.activatePrototypeMap((int) (byte) 10);
        com.google.javascript.rhino.head.Scriptable scriptable37 = nativeArray5.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable39 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray5, "object");
        boolean boolean40 = nativeArray1.containsAll((java.util.Collection) nativeArray5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator listIterator42 = nativeArray1.listIterator((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNull(scriptable3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[null]");
        org.junit.Assert.assertNull(scriptable37);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray4, "object");
        com.google.javascript.rhino.head.Context context12 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        nativeArray14.delete((int) (byte) 1);
        boolean boolean20 = nativeArray14.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj33 = nativeArray25.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        boolean boolean34 = nativeArray25.hasPrototypeMap();
        java.lang.Object[] objArray35 = nativeArray25.getIds();
        int int36 = nativeArray25.size();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean50 = nativeArray41.hasPrototypeMap();
        java.lang.Object[] objArray51 = nativeArray41.getIds();
        int int52 = nativeArray41.size();
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj66 = nativeArray58.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        boolean boolean67 = nativeArray58.hasPrototypeMap();
        java.lang.Object[] objArray68 = nativeArray58.getIds();
        int int69 = nativeArray58.size();
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int73 = nativeArray71.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray58.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray71);
        java.lang.Object obj75 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray58);
        boolean boolean76 = nativeArray25.containsAll((java.util.Collection) nativeArray58);
        nativeArray14.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray25);
        com.google.javascript.rhino.head.Scriptable scriptable78 = nativeArray14.getParentScope();
        java.lang.String str79 = nativeArray14.getClassName();
        nativeArray4.defineOwnProperties(context12, (com.google.javascript.rhino.head.ScriptableObject) nativeArray14);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[hi!]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(scriptable78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Array" + "'", str79, "Array");
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable13 = nativeArray12.getParentScope();
        java.lang.Object[] objArray14 = nativeArray12.getIds();
        boolean boolean15 = nativeArray12.isEmpty();
        int int16 = nativeArray12.size();
        java.lang.Object[] objArray17 = nativeArray12.getIds();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = com.google.javascript.rhino.head.ScriptableObject.callMethod((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", objArray17);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EcmaError; message: TypeError:  is not a function, it is object.");
        } catch (com.google.javascript.rhino.head.EcmaError e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(scriptable9);
        org.junit.Assert.assertNull(scriptable13);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) ' ');
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getPrototype();
        org.junit.Assert.assertNull(scriptable2);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getIds();
        boolean boolean25 = nativeArray9.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        java.util.Iterator iterator26 = nativeArray22.iterator();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "", true);
        boolean boolean36 = nativeArray29.hasPrototypeMap();
        boolean boolean37 = nativeArray29.isExtensible();
        boolean boolean38 = nativeArray22.has((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        long long39 = nativeArray22.getLength();
        java.util.ListIterator listIterator40 = nativeArray22.listIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(iterator26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertNotNull(listIterator40);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        int int17 = nativeArray1.size();
        com.google.javascript.rhino.head.Scriptable scriptable19 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        java.lang.Object[] objArray20 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.Scriptable scriptable21 = nativeArray1.getParentScope();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, length]");
        org.junit.Assert.assertNull(scriptable21);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int35 = nativeArray33.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray20.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray33);
        java.lang.Object obj37 = nativeArray1.get((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray42, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int68 = nativeArray66.lastIndexOf((java.lang.Object) (short) 10);
        long long69 = nativeArray66.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray66, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable73 = null;
        java.lang.Object[] objArray74 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable73);
        java.lang.Object[] objArray75 = nativeArray66.toArray(objArray74);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "hi!", (java.lang.Object) objArray74);
        nativeArray47.activatePrototypeMap((int) (byte) 10);
        boolean boolean79 = nativeArray39.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int84 = nativeArray82.lastIndexOf((java.lang.Object) (short) 10);
        long long85 = nativeArray82.getLength();
        java.lang.Object[] objArray86 = nativeArray82.toArray();
        java.lang.Object obj87 = nativeArray39.get((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray82);
        java.lang.Object obj88 = nativeArray33.getAssociatedValue((java.lang.Object) nativeArray82);
        com.google.javascript.rhino.head.NativeArray nativeArray91 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable92 = nativeArray91.getParentScope();
        java.lang.Object[] objArray93 = nativeArray91.getIds();
        boolean boolean94 = nativeArray91.isEmpty();
        nativeArray91.delete((int) 'a');
        java.lang.Object obj97 = nativeArray33.get((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray91);
        java.lang.Object[] objArray98 = nativeArray91.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray99 = new com.google.javascript.rhino.head.NativeArray(objArray98);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1L + "'", long69 == 1L);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[null]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 1L + "'", long85 == 1L);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[null]");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(scriptable92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(objArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray98), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray98), "[]");
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "", (java.lang.Object) 100);
        java.lang.Object obj8 = nativeArray1.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray4);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int14 = nativeArray12.lastIndexOf((java.lang.Object) (short) 10);
        long long15 = nativeArray12.getLength();
        nativeArray12.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        nativeArray43.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55, (java.lang.Object) (-1));
        java.lang.Object[] objArray58 = nativeArray52.getAllIds();
        nativeArray52.delete("");
        java.lang.Object obj61 = nativeArray37.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray37.getPrototype();
        com.google.javascript.rhino.head.Context context65 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int69 = nativeArray67.lastIndexOf((java.lang.Object) (short) 10);
        long long70 = nativeArray67.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray67, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray78, (java.lang.Object) (-1));
        java.lang.Object[] objArray81 = nativeArray75.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable82 = nativeArray75.getParentScope();
        boolean boolean83 = nativeArray67.containsAll((java.util.Collection) nativeArray75);
        nativeArray37.defineOwnProperties(context65, (com.google.javascript.rhino.head.ScriptableObject) nativeArray67);
        nativeArray21.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray37, (int) (short) 10);
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject88 = nativeArray12.exportAsJSClass((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray37, true);
        boolean boolean89 = idFunctionObject88.isExtensible();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray4.initPrototypeConstructor(idFunctionObject88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[length]");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[null]");
        org.junit.Assert.assertNull(scriptable82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(idFunctionObject88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray5, "");
        boolean boolean10 = nativeArray1.has(100, scriptable9);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int14 = nativeArray12.lastIndexOf((java.lang.Object) (short) 10);
        long long15 = nativeArray12.getLength();
        nativeArray12.delete((int) (byte) 1);
        boolean boolean18 = nativeArray12.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray21.getParentScope();
        java.lang.Object[] objArray23 = nativeArray21.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "", (java.lang.Object) nativeArray21, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        boolean boolean40 = nativeArray31.hasPrototypeMap();
        java.lang.Object[] objArray41 = nativeArray31.getIds();
        int int42 = nativeArray31.size();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray31.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        java.lang.Object obj48 = nativeArray12.get((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        com.google.javascript.rhino.head.Scriptable scriptable49 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray57, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj65 = nativeArray57.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        boolean boolean66 = nativeArray57.hasPrototypeMap();
        java.lang.Object[] objArray67 = nativeArray57.getIds();
        int int68 = nativeArray57.size();
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int72 = nativeArray70.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray57.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray70);
        java.lang.Object[] objArray74 = nativeArray70.getAllIds();
        com.google.javascript.rhino.head.Scriptable scriptable76 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray70, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj80 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray78, "Array");
        boolean boolean82 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray78, "hi!");
        nativeArray70.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray78);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, 10, (java.lang.Object) nativeArray70);
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(scriptable49);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[hi!]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[length]");
        org.junit.Assert.assertNull(scriptable76);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        int int57 = nativeArray37.getAttributes("hi!");
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "object", false);
        boolean boolean61 = nativeArray37.isSealed();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj54 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean55 = nativeArray46.hasPrototypeMap();
        java.lang.Object[] objArray56 = nativeArray46.getIds();
        int int57 = nativeArray46.size();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj71 = nativeArray63.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray68);
        boolean boolean72 = nativeArray63.hasPrototypeMap();
        java.lang.Object[] objArray73 = nativeArray63.getIds();
        int int74 = nativeArray63.size();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray63.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object obj80 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.Object[] objArray81 = nativeArray46.getIds();
        boolean boolean82 = nativeArray46.avoidObjectDetection();
        boolean boolean84 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, "Array");
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray46);
        java.lang.Integer[] intArray86 = nativeArray46.getIndexIds();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, "hi!", false);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[hi!]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(intArray86);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        java.lang.Object[] objArray24 = nativeArray18.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable25 = nativeArray18.getParentScope();
        boolean boolean26 = nativeArray10.containsAll((java.util.Collection) nativeArray18);
        boolean boolean27 = nativeArray1.containsAll((java.util.Collection) nativeArray10);
        nativeArray1.setAttributes("", 8);
        nativeArray1.delete(100);
        long long33 = nativeArray1.getLength();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.Scriptable scriptable26 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        boolean boolean55 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "hi!");
        nativeArray32.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray51, 8);
        nativeArray1.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        com.google.javascript.rhino.head.Scriptable scriptable60 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator66 = nativeArray63.iterator();
        nativeArray32.defineProperty("object", (java.lang.Object) nativeArray63, (int) (short) 0);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int75 = nativeArray73.lastIndexOf((java.lang.Object) (short) 10);
        long long76 = nativeArray73.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray73, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray84 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray81.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray84, (java.lang.Object) (-1));
        java.lang.Object[] objArray87 = nativeArray81.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable88 = nativeArray81.getParentScope();
        boolean boolean89 = nativeArray73.containsAll((java.util.Collection) nativeArray81);
        com.google.javascript.rhino.head.Scriptable scriptable90 = nativeArray81.getParentScope();
        boolean boolean91 = nativeArray71.containsAll((java.util.Collection) nativeArray81);
        nativeArray81.activatePrototypeMap((int) '4');
        java.lang.Object obj94 = nativeArray63.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray81);
        int int95 = nativeArray81.size();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(scriptable60);
        org.junit.Assert.assertNotNull(iterator66);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[null]");
        org.junit.Assert.assertNull(scriptable88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(scriptable90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj10 = nativeArray4.getGetterOrSetter("object", (int) (short) 0, true);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int14 = nativeArray12.lastIndexOf((java.lang.Object) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray19, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj34 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        com.google.javascript.rhino.head.Callable callable37 = null;
        nativeArray26.setGetterOrSetter("hi!", 0, callable37, false);
        java.lang.Integer[] intArray40 = nativeArray26.getIndexIds();
        nativeArray19.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        java.lang.Object[] objArray57 = nativeArray51.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray51.getParentScope();
        boolean boolean59 = nativeArray43.containsAll((java.util.Collection) nativeArray51);
        nativeArray51.delete("Array");
        java.lang.Object obj62 = nativeArray19.getAssociatedValue((java.lang.Object) nativeArray51);
        boolean boolean63 = nativeArray12.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray19);
        com.google.javascript.rhino.head.Scriptable scriptable64 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray19);
        java.lang.String str65 = nativeArray19.getClassName();
        nativeArray4.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray19);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!");
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: TypeError: redeclaration of var hi!.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[null]");
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Array" + "'", str65, "Array");
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj21 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean22 = nativeArray13.hasPrototypeMap();
        java.lang.Object[] objArray23 = nativeArray13.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        boolean boolean32 = nativeArray25.hasPrototypeMap();
        java.lang.reflect.Method method35 = null;
        java.lang.reflect.Method method36 = null;
        nativeArray25.defineProperty("hi!", (java.lang.Object) (-1L), method35, method36, (int) (byte) 10);
        boolean boolean40 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "");
        com.google.javascript.rhino.head.Scriptable scriptable41 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray25);
        nativeArray25.setAttributes("", 4);
        nativeArray25.delete(10);
        java.lang.Object obj47 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) nativeArray25);
        boolean boolean48 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean50 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable51 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object[] objArray52 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable51);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(scriptable51);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", false);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable70 = nativeArray69.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable77 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray73, "");
        boolean boolean78 = nativeArray69.has(100, scriptable77);
        java.lang.String str79 = nativeArray69.getClassName();
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray69);
        java.lang.Object obj82 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray69, "object");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(scriptable70);
        org.junit.Assert.assertNull(scriptable77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Array" + "'", str79, "Array");
        org.junit.Assert.assertNotNull(obj82);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int10 = nativeArray8.lastIndexOf((java.lang.Object) (short) 10);
        long long11 = nativeArray8.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "", true);
        boolean boolean15 = nativeArray8.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable19 = nativeArray18.getParentScope();
        java.lang.Object[] objArray20 = nativeArray18.getIds();
        boolean boolean21 = nativeArray18.isEmpty();
        boolean boolean22 = nativeArray8.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean23 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "", true);
        boolean boolean33 = nativeArray26.hasPrototypeMap();
        int int34 = nativeArray26.size();
        boolean boolean35 = nativeArray26.isEmpty();
        boolean boolean37 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        long long43 = nativeArray40.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "", true);
        boolean boolean47 = nativeArray40.hasPrototypeMap();
        java.util.ListIterator listIterator48 = nativeArray40.listIterator();
        boolean boolean49 = nativeArray26.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40);
        boolean boolean50 = nativeArray26.hasPrototypeMap();
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        java.lang.reflect.Method method52 = null;
        java.lang.reflect.Method method53 = null;
        nativeArray8.defineProperty("hi!", (java.lang.Object) nativeArray26, method52, method53, (int) (short) 1);
        com.google.javascript.rhino.head.Scriptable scriptable56 = nativeArray26.getPrototype();
        java.lang.String str57 = nativeArray26.getTypeOf();
        java.lang.Object obj58 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean59 = nativeArray26.add(obj58);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(listIterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNull(scriptable56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "object" + "'", str57, "object");
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable20 = nativeArray19.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable21 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray19);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", true);
        boolean boolean30 = nativeArray23.hasPrototypeMap();
        int int31 = nativeArray23.size();
        boolean boolean32 = nativeArray23.isEmpty();
        nativeArray19.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        java.lang.Object obj34 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) nativeArray19);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        long long39 = nativeArray36.jsGet_length();
        java.lang.String str40 = nativeArray36.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray42.getParentScope();
        java.lang.Object[] objArray44 = nativeArray42.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj57 = nativeArray49.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray54);
        java.lang.Object obj58 = nativeArray42.getAssociatedValue((java.lang.Object) nativeArray49);
        com.google.javascript.rhino.head.Scriptable scriptable59 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray42);
        nativeArray42.delete("hi!");
        com.google.javascript.rhino.head.Scriptable scriptable63 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray42, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = nativeArray19.associateValue((java.lang.Object) nativeArray36, (java.lang.Object) scriptable63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertNull(scriptable21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "object" + "'", str40, "object");
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[length]");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertNull(scriptable63);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        java.lang.String str8 = nativeArray1.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj21 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean22 = nativeArray13.hasPrototypeMap();
        java.lang.Object[] objArray23 = nativeArray13.getIds();
        int int24 = nativeArray13.size();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray13.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        java.lang.Object[] objArray30 = nativeArray26.getAllIds();
        com.google.javascript.rhino.head.Scriptable scriptable32 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray26, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj36 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "Array");
        boolean boolean38 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "hi!");
        nativeArray26.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        com.google.javascript.rhino.head.Scriptable scriptable40 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj42 = nativeArray34.get(0L);
        java.lang.Object obj43 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, obj42);
        java.lang.Object[] objArray44 = nativeArray1.getAllIds();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "object" + "'", str8, "object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNull(scriptable32);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(scriptable40);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[length]");
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        java.lang.Object obj3 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray6.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.Callable callable27 = null;
        nativeArray16.setGetterOrSetter("hi!", 0, callable27, false);
        java.lang.Integer[] intArray30 = nativeArray16.getIndexIds();
        nativeArray9.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        nativeArray34.delete((int) (byte) 1);
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "");
        nativeArray16.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray34, 13);
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray34.getParentScope();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", (java.lang.Object) scriptable44);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        long long51 = nativeArray48.getLength();
        nativeArray48.delete((int) (byte) 1);
        boolean boolean54 = nativeArray48.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray57.getParentScope();
        java.lang.Object[] objArray59 = nativeArray57.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "", (java.lang.Object) nativeArray57, 0);
        java.lang.Object[] objArray62 = nativeArray48.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable63 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean64 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray70, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable73 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray67);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "hi!", (java.lang.Object) scriptable73);
        com.google.javascript.rhino.head.Scriptable scriptable75 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray48);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[null]");
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(scriptable73);
        org.junit.Assert.assertNotNull(scriptable75);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Context context36 = null;
        com.google.javascript.rhino.head.Scriptable scriptable37 = null;
        java.lang.Object[] objArray38 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable37);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        com.google.javascript.rhino.head.Callable callable54 = null;
        nativeArray43.setGetterOrSetter("hi!", 0, callable54, false);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray9.defineOwnProperty(context36, (java.lang.Object) scriptable37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray43);
        boolean boolean60 = nativeArray9.isConst("object");
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "Array", false);
        int int64 = nativeArray9.size();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.Scriptable scriptable34 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray24.getPrototype();
        java.util.Iterator iterator36 = nativeArray24.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = nativeArray24.get(13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(scriptable34);
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertNotNull(iterator36);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.String str34 = nativeArray24.getTypeOf();
        nativeArray24.preventExtensions();
        java.util.ListIterator listIterator36 = nativeArray24.listIterator();
        java.lang.Class<?> wildcardClass37 = listIterator36.getClass();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "object" + "'", str34, "object");
        org.junit.Assert.assertNotNull(listIterator36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator4 = nativeArray1.iterator();
        boolean boolean5 = nativeArray1.hasPrototypeMap();
        boolean boolean7 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        boolean boolean24 = nativeArray15.hasPrototypeMap();
        java.lang.Object[] objArray25 = nativeArray15.getIds();
        int int26 = nativeArray15.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        java.lang.Object obj49 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.Object[] objArray50 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        boolean boolean52 = nativeArray15.isConst("hi!");
        nativeArray10.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        java.lang.Object obj54 = nativeArray1.get((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        java.lang.Object[] objArray63 = nativeArray57.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray(objArray63);
        java.lang.Object obj65 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.String str66 = nativeArray64.getTypeOf();
        java.lang.Object[] objArray67 = nativeArray64.getIds();
        boolean boolean69 = nativeArray64.contains((java.lang.Object) 10L);
        org.junit.Assert.assertNotNull(iterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[null]");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "object" + "'", str66, "object");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        java.lang.Object[] objArray44 = nativeArray38.getAllIds();
        nativeArray38.delete("");
        java.lang.Object obj47 = nativeArray23.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        java.lang.Integer[] intArray48 = nativeArray38.getIndexIds();
        nativeArray1.defineProperty("", (java.lang.Object) nativeArray38, 10);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int55 = nativeArray53.lastIndexOf((java.lang.Object) (short) 10);
        long long56 = nativeArray53.getLength();
        nativeArray53.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int63 = nativeArray61.lastIndexOf((java.lang.Object) (short) 10);
        long long64 = nativeArray61.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        java.lang.Object[] objArray75 = nativeArray69.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable76 = nativeArray69.getParentScope();
        boolean boolean77 = nativeArray61.containsAll((java.util.Collection) nativeArray69);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray79.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray82, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray87.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj90 = nativeArray82.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray87);
        boolean boolean91 = nativeArray82.hasPrototypeMap();
        java.lang.Object[] objArray92 = nativeArray82.getIds();
        java.lang.Object[] objArray93 = nativeArray69.toArray(objArray92);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray53, "Array", (java.lang.Object) nativeArray69);
        java.util.ListIterator listIterator95 = nativeArray53.listIterator();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "", (java.lang.Object) nativeArray53);
        java.lang.Object obj98 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, 1);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[length]");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[null]");
        org.junit.Assert.assertNull(scriptable76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[null]");
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[null]");
        org.junit.Assert.assertNotNull(listIterator95);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        com.google.javascript.rhino.head.Callable callable26 = null;
        nativeArray15.setGetterOrSetter("hi!", 0, callable26, false);
        java.lang.Integer[] intArray29 = nativeArray15.getIndexIds();
        nativeArray8.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        long long35 = nativeArray32.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        java.lang.Object[] objArray46 = nativeArray40.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray40.getParentScope();
        boolean boolean48 = nativeArray32.containsAll((java.util.Collection) nativeArray40);
        nativeArray40.delete("Array");
        java.lang.Object obj51 = nativeArray8.getAssociatedValue((java.lang.Object) nativeArray40);
        boolean boolean52 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        java.lang.String str53 = nativeArray8.getTypeOf();
        boolean boolean54 = nativeArray8.isExtensible();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[null]");
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "object" + "'", str53, "object");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator4 = nativeArray1.iterator();
        boolean boolean5 = nativeArray1.hasPrototypeMap();
        boolean boolean7 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        boolean boolean9 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        com.google.javascript.rhino.head.Context context10 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        java.lang.Object[] objArray63 = nativeArray28.getIds();
        java.lang.String str64 = nativeArray28.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int68 = nativeArray66.lastIndexOf((java.lang.Object) (short) 10);
        long long69 = nativeArray66.getLength();
        nativeArray66.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int77 = nativeArray75.lastIndexOf((java.lang.Object) (short) 10);
        long long78 = nativeArray75.getLength();
        nativeArray75.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray66, (int) (byte) -1, (java.lang.Object) nativeArray75);
        java.util.Iterator iterator82 = nativeArray66.iterator();
        java.lang.Object[] objArray83 = nativeArray66.toArray();
        boolean boolean84 = nativeArray28.containsAll((java.util.Collection) nativeArray66);
        java.lang.Object obj85 = nativeArray12.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray66);
        boolean boolean87 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "Array");
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.defineOwnProperties(context10, (com.google.javascript.rhino.head.ScriptableObject) nativeArray12);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EcmaError; message: TypeError: Expected argument of type object, but instead had type object");
        } catch (com.google.javascript.rhino.head.EcmaError e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(iterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[hi!]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Array" + "'", str64, "Array");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1L + "'", long69 == 1L);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 1L + "'", long78 == 1L);
        org.junit.Assert.assertNotNull(iterator82);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[null]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        boolean boolean29 = nativeArray22.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray32.getParentScope();
        java.lang.Object[] objArray34 = nativeArray32.getIds();
        boolean boolean35 = nativeArray32.isEmpty();
        boolean boolean36 = nativeArray22.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean38 = nativeArray32.isConst("object");
        java.lang.Object obj40 = nativeArray32.get((java.lang.Object) (byte) 10);
        com.google.javascript.rhino.head.Scriptable scriptable41 = null;
        nativeArray32.setParentScope(scriptable41);
        nativeArray9.setAttributes((-1), (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray46.getParentScope();
        java.lang.Object[] objArray48 = nativeArray46.getIds();
        boolean boolean49 = nativeArray46.avoidObjectDetection();
        java.lang.Object obj53 = nativeArray46.getGetterOrSetter("", 0, true);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        long long59 = nativeArray56.getLength();
        nativeArray56.delete((int) (byte) 1);
        boolean boolean62 = nativeArray56.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray65.getParentScope();
        java.lang.Object[] objArray67 = nativeArray65.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "", (java.lang.Object) nativeArray65, 0);
        nativeArray56.setAttributes("hi!", 10);
        boolean boolean73 = nativeArray56.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        long long79 = nativeArray76.getLength();
        nativeArray76.delete((int) (byte) 1);
        boolean boolean82 = nativeArray76.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable86 = nativeArray85.getParentScope();
        java.lang.Object[] objArray87 = nativeArray85.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, "", (java.lang.Object) nativeArray85, 0);
        java.lang.Object[] objArray90 = nativeArray76.toArray();
        nativeArray76.preventExtensions();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "object", (java.lang.Object) nativeArray76);
        boolean boolean93 = nativeArray76.isExtensible();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray46.initPrototypeMethod((java.lang.Object) nativeArray76, (int) ' ', "object", 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1L + "'", long79 == 1L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(scriptable86);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[null]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.Callable callable35 = null;
        nativeArray24.setGetterOrSetter("hi!", 0, callable35, false);
        java.lang.Integer[] intArray38 = nativeArray24.getIndexIds();
        nativeArray17.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        nativeArray42.delete((int) (byte) 1);
        boolean boolean49 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "");
        nativeArray24.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray42, 13);
        nativeArray1.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray42);
        java.lang.Object[] objArray53 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        nativeArray55.delete((int) (byte) 1);
        boolean boolean62 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "");
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        long long67 = nativeArray64.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray72.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray75, (java.lang.Object) (-1));
        java.lang.Object[] objArray78 = nativeArray72.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable79 = nativeArray72.getParentScope();
        boolean boolean80 = nativeArray64.containsAll((java.util.Collection) nativeArray72);
        boolean boolean81 = nativeArray55.containsAll((java.util.Collection) nativeArray64);
        nativeArray55.setAttributes("", 8);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.initPrototypeMethod((java.lang.Object) "", 0, "Array", 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[null]");
        org.junit.Assert.assertNull(scriptable79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        java.lang.Object[] objArray36 = nativeArray30.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable37 = nativeArray30.getParentScope();
        boolean boolean38 = nativeArray22.containsAll((java.util.Collection) nativeArray30);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean52 = nativeArray43.hasPrototypeMap();
        java.lang.Object[] objArray53 = nativeArray43.getIds();
        java.lang.Object[] objArray54 = nativeArray30.toArray(objArray53);
        boolean boolean56 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "Array");
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject58 = nativeArray9.exportAsJSClass((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray30, true);
        boolean boolean59 = nativeArray9.isSealed();
        java.lang.Object obj60 = null;
        java.lang.Object obj61 = nativeArray9.getAssociatedValue(obj60);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj63 = nativeArray9.remove(0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[null]");
        org.junit.Assert.assertNull(scriptable37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(idFunctionObject58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        nativeArray23.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.getAllIds();
        nativeArray32.delete("");
        java.lang.Object obj41 = nativeArray17.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray17.getPrototype();
        com.google.javascript.rhino.head.Context context45 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        nativeArray17.defineOwnProperties(context45, (com.google.javascript.rhino.head.ScriptableObject) nativeArray47);
        nativeArray1.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 10);
        boolean boolean68 = nativeArray1.isConst("");
        java.util.ListIterator listIterator69 = nativeArray1.listIterator();
        nativeArray1.preventExtensions();
        com.google.javascript.rhino.head.Scriptable scriptable71 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.Scriptable scriptable72 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype(scriptable71);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[length]");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(listIterator69);
        org.junit.Assert.assertNotNull(scriptable71);
        org.junit.Assert.assertNull(scriptable72);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        boolean boolean29 = nativeArray22.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray32.getParentScope();
        java.lang.Object[] objArray34 = nativeArray32.getIds();
        boolean boolean35 = nativeArray32.isEmpty();
        boolean boolean36 = nativeArray22.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean38 = nativeArray32.isConst("object");
        java.lang.Object obj40 = nativeArray32.get((java.lang.Object) (byte) 10);
        com.google.javascript.rhino.head.Scriptable scriptable41 = null;
        nativeArray32.setParentScope(scriptable41);
        nativeArray9.setAttributes((-1), (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray46.getParentScope();
        java.lang.Object[] objArray48 = nativeArray46.getIds();
        boolean boolean49 = nativeArray46.avoidObjectDetection();
        java.lang.Object obj53 = nativeArray46.getGetterOrSetter("", 0, true);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.Scriptable scriptable56 = null;
        java.lang.Object obj57 = nativeArray46.get(0, scriptable56);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        com.google.javascript.rhino.head.Context context0 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray2 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray2.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray5, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj13 = nativeArray5.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray10);
        boolean boolean14 = nativeArray5.hasPrototypeMap();
        java.lang.Object[] objArray15 = nativeArray5.getIds();
        int int16 = nativeArray5.size();
        java.lang.Object obj18 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray5, (int) (short) 10);
        java.lang.Object obj20 = nativeArray5.get(0);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        java.lang.Object[] objArray29 = nativeArray23.getAllIds();
        nativeArray23.delete("");
        long long32 = nativeArray23.getLength();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray5, "", (java.lang.Object) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int38 = nativeArray36.lastIndexOf((java.lang.Object) (short) 10);
        long long39 = nativeArray36.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, "", true);
        boolean boolean43 = nativeArray36.hasPrototypeMap();
        int int44 = nativeArray36.size();
        boolean boolean45 = nativeArray36.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable46 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, "", true);
        com.google.javascript.rhino.head.Context context50 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int54 = nativeArray52.lastIndexOf((java.lang.Object) (short) 10);
        long long55 = nativeArray52.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray52, "", true);
        boolean boolean59 = nativeArray52.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable63 = nativeArray62.getParentScope();
        java.lang.Object[] objArray64 = nativeArray62.getIds();
        boolean boolean65 = nativeArray62.isEmpty();
        boolean boolean66 = nativeArray52.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        boolean boolean68 = nativeArray62.isConst("object");
        nativeArray36.defineOwnProperties(context50, (com.google.javascript.rhino.head.ScriptableObject) nativeArray62);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray62, "hi!");
        nativeArray62.sealObject();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray62, "object", true);
        java.lang.Object[] objArray76 = nativeArray62.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray(objArray76);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = com.google.javascript.rhino.head.ScriptableObject.callMethod(context0, (com.google.javascript.rhino.head.Scriptable) nativeArray5, "Array", objArray76);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EcmaError; message: TypeError: Array is not a function, it is object.");
        } catch (com.google.javascript.rhino.head.EcmaError e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[length]");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(scriptable46);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[null]");
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        java.lang.Object[] objArray44 = nativeArray38.getAllIds();
        nativeArray38.delete("");
        java.lang.Object obj47 = nativeArray23.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        java.lang.Integer[] intArray48 = nativeArray38.getIndexIds();
        nativeArray1.defineProperty("", (java.lang.Object) nativeArray38, 10);
        java.lang.Object obj52 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, (int) (byte) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj66 = nativeArray58.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int71 = nativeArray69.lastIndexOf((java.lang.Object) (short) 10);
        long long72 = nativeArray69.getLength();
        nativeArray69.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray63, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray81, (java.lang.Object) (-1));
        java.lang.Object[] objArray84 = nativeArray78.getAllIds();
        nativeArray78.delete("");
        java.lang.Object obj87 = nativeArray63.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        java.lang.Integer[] intArray88 = nativeArray78.getIndexIds();
        long long89 = nativeArray78.getLength();
        nativeArray38.setAttributes(4, (com.google.javascript.rhino.head.Scriptable) nativeArray78, (int) (byte) 1);
        nativeArray38.sealObject();
        java.lang.Object obj94 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "");
        boolean boolean95 = nativeArray38.isEmpty();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[length]");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[length]");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 1L + "'", long89 == 1L);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        java.lang.Object obj57 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int62 = nativeArray60.lastIndexOf((java.lang.Object) (short) 10);
        long long63 = nativeArray60.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray60, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray71, (java.lang.Object) (-1));
        java.lang.Object[] objArray74 = nativeArray68.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable75 = nativeArray68.getParentScope();
        boolean boolean76 = nativeArray60.containsAll((java.util.Collection) nativeArray68);
        nativeArray68.delete("Array");
        java.lang.Object[] objArray79 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray68);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!", (java.lang.Object) objArray79);
        java.util.ListIterator listIterator81 = nativeArray4.listIterator();
        com.google.javascript.rhino.head.Scriptable scriptable83 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray4, "Array");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1L + "'", long63 == 1L);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[null]");
        org.junit.Assert.assertNull(scriptable75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertNotNull(listIterator81);
        org.junit.Assert.assertNull(scriptable83);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        java.lang.Object[] objArray39 = nativeArray33.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable40 = nativeArray33.getParentScope();
        boolean boolean41 = nativeArray25.containsAll((java.util.Collection) nativeArray33);
        com.google.javascript.rhino.head.Scriptable scriptable42 = nativeArray33.getParentScope();
        boolean boolean43 = nativeArray33.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray46.getParentScope();
        java.lang.Object[] objArray48 = nativeArray46.getIds();
        boolean boolean49 = nativeArray33.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "object", (java.lang.Object) nativeArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int55 = nativeArray53.lastIndexOf((java.lang.Object) (short) 10);
        long long56 = nativeArray53.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray53, "", true);
        boolean boolean60 = nativeArray53.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray63.getParentScope();
        java.lang.Object[] objArray65 = nativeArray63.getIds();
        boolean boolean66 = nativeArray63.isEmpty();
        boolean boolean67 = nativeArray53.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.Object[] objArray68 = nativeArray53.getIds();
        nativeArray12.defineConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        long long70 = nativeArray53.getLength();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[null]");
        org.junit.Assert.assertNull(scriptable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(scriptable42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        nativeArray1.delete((int) (byte) 0);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int21 = nativeArray19.lastIndexOf((java.lang.Object) (short) 10);
        long long22 = nativeArray19.getLength();
        nativeArray19.delete((int) (byte) 1);
        boolean boolean25 = nativeArray19.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable29 = nativeArray28.getParentScope();
        java.lang.Object[] objArray30 = nativeArray28.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray19, "", (java.lang.Object) nativeArray28, 0);
        nativeArray19.setAttributes("hi!", 10);
        boolean boolean36 = nativeArray19.hasPrototypeMap();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) nativeArray19);
        java.lang.Object[] objArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = com.google.javascript.rhino.head.ScriptableObject.callMethod((com.google.javascript.rhino.head.Scriptable) nativeArray19, "object", objArray39);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EcmaError; message: TypeError: object is not a function, it is object.");
        } catch (com.google.javascript.rhino.head.EcmaError e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(scriptable29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray7);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        nativeArray11.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray19, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        boolean boolean44 = nativeArray11.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.Object obj45 = nativeArray8.get((int) '4', (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        nativeArray8.delete("");
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int51 = nativeArray49.lastIndexOf((java.lang.Object) (short) 10);
        long long52 = nativeArray49.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "", true);
        boolean boolean56 = nativeArray49.hasPrototypeMap();
        int int57 = nativeArray49.size();
        boolean boolean58 = nativeArray49.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable59 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray49);
        nativeArray49.setAttributes(1, (int) (short) 1);
        java.lang.Object[] objArray63 = nativeArray49.toArray();
        nativeArray8.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray49);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray70, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj78 = nativeArray70.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray75);
        boolean boolean79 = nativeArray70.hasPrototypeMap();
        java.lang.Object[] objArray80 = nativeArray70.getIds();
        int int81 = nativeArray70.size();
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int85 = nativeArray83.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray70.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray83);
        boolean boolean87 = nativeArray70.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray89 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable90 = nativeArray89.getParentScope();
        java.lang.Object[] objArray91 = nativeArray89.getAllIds();
        java.lang.Object[] objArray92 = nativeArray70.toArray(objArray91);
        java.lang.String str93 = nativeArray70.getClassName();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "object", (java.lang.Object) nativeArray70);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(scriptable59);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[null]");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[hi!]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(scriptable90);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[null]");
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[null]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Array" + "'", str93, "Array");
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        nativeArray1.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.Callable callable42 = null;
        nativeArray31.setGetterOrSetter("hi!", 0, callable42, false);
        java.lang.Integer[] intArray45 = nativeArray31.getIndexIds();
        nativeArray24.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray31);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        long long51 = nativeArray48.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        java.lang.Object[] objArray62 = nativeArray56.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable63 = nativeArray56.getParentScope();
        boolean boolean64 = nativeArray48.containsAll((java.util.Collection) nativeArray56);
        nativeArray56.delete("Array");
        java.lang.Object obj67 = nativeArray24.getAssociatedValue((java.lang.Object) nativeArray56);
        boolean boolean68 = nativeArray17.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        boolean boolean69 = nativeArray17.hasPrototypeMap();
        java.lang.Object obj70 = nativeArray1.get((java.lang.Object) boolean69);
        java.lang.String str71 = nativeArray1.getClassName();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[null]");
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Array" + "'", str71, "Array");
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object[] objArray9 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        boolean boolean18 = nativeArray11.hasPrototypeMap();
        int int19 = nativeArray11.size();
        boolean boolean20 = nativeArray11.isEmpty();
        boolean boolean22 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        boolean boolean32 = nativeArray25.hasPrototypeMap();
        java.util.ListIterator listIterator33 = nativeArray25.listIterator();
        boolean boolean34 = nativeArray11.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        java.lang.Object[] objArray35 = nativeArray11.getAllIds();
        java.lang.Object[] objArray36 = nativeArray1.toArray(objArray35);
        boolean boolean37 = nativeArray1.hasPrototypeMap();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[length]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(listIterator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[null]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[null]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.sealObject();
        boolean boolean18 = nativeArray1.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", (java.lang.Object) 100);
        java.lang.Object obj27 = nativeArray20.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray23);
        java.lang.Object[] objArray28 = nativeArray23.toArray();
        java.lang.Object[] objArray29 = nativeArray1.toArray(objArray28);
        java.lang.Integer[] intArray30 = nativeArray1.getIndexIds();
        boolean boolean31 = nativeArray1.avoidObjectDetection();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.delete("hi!");
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Cannot modify a property of a sealed object: hi!.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[null]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        java.lang.Object[] objArray39 = nativeArray33.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable40 = nativeArray33.getParentScope();
        boolean boolean41 = nativeArray25.containsAll((java.util.Collection) nativeArray33);
        com.google.javascript.rhino.head.Scriptable scriptable42 = nativeArray33.getParentScope();
        boolean boolean43 = nativeArray33.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray46.getParentScope();
        java.lang.Object[] objArray48 = nativeArray46.getIds();
        boolean boolean49 = nativeArray33.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "object", (java.lang.Object) nativeArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int55 = nativeArray53.lastIndexOf((java.lang.Object) (short) 10);
        long long56 = nativeArray53.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray53, "", true);
        boolean boolean60 = nativeArray53.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray63.getParentScope();
        java.lang.Object[] objArray65 = nativeArray63.getIds();
        boolean boolean66 = nativeArray63.isEmpty();
        boolean boolean67 = nativeArray53.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.Object[] objArray68 = nativeArray53.getIds();
        nativeArray12.defineConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        nativeArray53.activatePrototypeMap((int) '#');
        java.lang.Object obj73 = nativeArray53.get(0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[null]");
        org.junit.Assert.assertNull(scriptable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(scriptable42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Context context36 = null;
        com.google.javascript.rhino.head.Scriptable scriptable37 = null;
        java.lang.Object[] objArray38 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable37);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        com.google.javascript.rhino.head.Callable callable54 = null;
        nativeArray43.setGetterOrSetter("hi!", 0, callable54, false);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray9.defineOwnProperty(context36, (java.lang.Object) scriptable37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray43);
        long long59 = nativeArray9.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object[] objArray63 = nativeArray62.toArray();
        java.lang.Object obj64 = nativeArray9.get((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray70, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj78 = nativeArray70.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray75);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int83 = nativeArray81.lastIndexOf((java.lang.Object) (short) 10);
        long long84 = nativeArray81.getLength();
        nativeArray81.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray75, "hi!", (java.lang.Object) (byte) 1);
        boolean boolean88 = nativeArray75.isSealed();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray62.add(13, (java.lang.Object) boolean88);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[null]");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 1L + "'", long84 == 1L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.Context context37 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        nativeArray9.defineOwnProperties(context37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray39);
        java.lang.Object obj58 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "");
        nativeArray9.preventExtensions();
        boolean boolean60 = nativeArray9.hasPrototypeMap();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        boolean boolean8 = nativeArray1.isExtensible();
        java.lang.Object[] objArray9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable32 = null;
        java.lang.Object[] objArray33 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable32);
        java.lang.Object[] objArray34 = nativeArray25.toArray(objArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        long long40 = nativeArray37.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "", true);
        boolean boolean44 = nativeArray37.hasPrototypeMap();
        int int45 = nativeArray37.size();
        boolean boolean46 = nativeArray37.isEmpty();
        boolean boolean48 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "Array");
        java.lang.Object obj49 = nativeArray25.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        java.lang.Object obj50 = nativeArray1.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable53 = nativeArray52.getParentScope();
        java.lang.Object[] objArray54 = nativeArray52.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj67 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.Object obj68 = nativeArray52.getAssociatedValue((java.lang.Object) nativeArray59);
        java.lang.Object obj69 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) nativeArray52);
        nativeArray25.preventExtensions();
        java.lang.Object[] objArray71 = nativeArray25.getIds();
        java.lang.String str72 = nativeArray25.getClassName();
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNull(scriptable53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[length]");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Array" + "'", str72, "Array");
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        java.lang.Object[] objArray42 = nativeArray36.getAllIds();
        nativeArray36.delete("");
        java.lang.Object obj45 = nativeArray21.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable48 = nativeArray21.getPrototype();
        com.google.javascript.rhino.head.Context context49 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        java.lang.Object[] objArray65 = nativeArray59.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray59.getParentScope();
        boolean boolean67 = nativeArray51.containsAll((java.util.Collection) nativeArray59);
        nativeArray21.defineOwnProperties(context49, (com.google.javascript.rhino.head.ScriptableObject) nativeArray51);
        java.lang.Object obj69 = nativeArray1.get((int) ' ', (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        java.lang.String str70 = nativeArray51.getClassName();
        nativeArray51.delete((int) (byte) 1);
        nativeArray51.setAttributes(0, 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[length]");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(scriptable48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[null]");
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Array" + "'", str70, "Array");
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        java.lang.Object[] objArray24 = nativeArray18.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable25 = nativeArray18.getParentScope();
        boolean boolean26 = nativeArray10.containsAll((java.util.Collection) nativeArray18);
        boolean boolean27 = nativeArray1.containsAll((java.util.Collection) nativeArray10);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj41 = nativeArray33.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        boolean boolean42 = nativeArray33.hasPrototypeMap();
        java.lang.Object[] objArray43 = nativeArray33.getIds();
        int int44 = nativeArray33.size();
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj58 = nativeArray50.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        boolean boolean59 = nativeArray50.hasPrototypeMap();
        java.lang.Object[] objArray60 = nativeArray50.getIds();
        int int61 = nativeArray50.size();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int65 = nativeArray63.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray50.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.Object obj67 = nativeArray33.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        int int69 = nativeArray33.indexOf((java.lang.Object) 100.0f);
        java.lang.Object obj70 = nativeArray10.get((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        nativeArray10.preventExtensions();
        java.lang.Object obj72 = null;
        java.lang.Object obj73 = nativeArray10.get(obj72);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        java.lang.Object[] objArray25 = nativeArray19.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray19.getParentScope();
        boolean boolean27 = nativeArray11.containsAll((java.util.Collection) nativeArray19);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray19.getParentScope();
        boolean boolean29 = nativeArray19.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray32.getParentScope();
        java.lang.Object[] objArray34 = nativeArray32.getIds();
        boolean boolean35 = nativeArray19.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.reflect.Method method36 = null;
        java.lang.reflect.Method method37 = null;
        nativeArray4.defineProperty("hi!", (java.lang.Object) nativeArray19, method36, method37, 8);
        nativeArray4.preventExtensions();
        java.lang.Object[] objArray41 = nativeArray4.getIds();
        nativeArray4.activatePrototypeMap((int) ' ');
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean40 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, (int) (byte) 1);
        long long41 = nativeArray21.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.getAllIds();
        nativeArray43.delete("");
        long long52 = nativeArray43.getLength();
        boolean boolean54 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj68 = nativeArray60.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray65);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int73 = nativeArray71.lastIndexOf((java.lang.Object) (short) 10);
        long long74 = nativeArray71.getLength();
        nativeArray71.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray65, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray80 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray80.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray83, (java.lang.Object) (-1));
        java.lang.Object[] objArray86 = nativeArray80.getAllIds();
        nativeArray80.delete("");
        java.lang.Object obj89 = nativeArray65.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray80);
        java.lang.Integer[] intArray90 = nativeArray80.getIndexIds();
        nativeArray43.defineProperty("", (java.lang.Object) nativeArray80, 10);
        int int93 = nativeArray43.size();
        com.google.javascript.rhino.head.Scriptable scriptable94 = nativeArray43.getPrototype();
        boolean boolean95 = nativeArray21.contains((java.lang.Object) scriptable94);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[length]");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1L + "'", long74 == 1L);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[length]");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertNull(scriptable94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        boolean boolean27 = nativeArray18.hasPrototypeMap();
        java.lang.Object[] objArray28 = nativeArray18.getIds();
        int int29 = nativeArray18.size();
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj42 = nativeArray34.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray39);
        boolean boolean43 = nativeArray34.hasPrototypeMap();
        java.lang.Object[] objArray44 = nativeArray34.getIds();
        int int45 = nativeArray34.size();
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj59 = nativeArray51.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        boolean boolean60 = nativeArray51.hasPrototypeMap();
        java.lang.Object[] objArray61 = nativeArray51.getIds();
        int int62 = nativeArray51.size();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray51.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.Object obj68 = nativeArray34.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean69 = nativeArray18.containsAll((java.util.Collection) nativeArray51);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable73 = nativeArray72.getParentScope();
        java.lang.Object[] objArray74 = nativeArray72.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray76.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray79, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray84 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray84.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj87 = nativeArray79.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray84);
        java.lang.Object obj88 = nativeArray72.getAssociatedValue((java.lang.Object) nativeArray79);
        com.google.javascript.rhino.head.Scriptable scriptable89 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "hi!", (java.lang.Object) scriptable89);
        boolean boolean91 = nativeArray51.avoidObjectDetection();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", (java.lang.Object) boolean91);
        boolean boolean93 = nativeArray1.avoidObjectDetection();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[hi!]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(scriptable73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[length]");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(scriptable89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        nativeArray12.sealObject();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray29, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj44 = nativeArray36.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        com.google.javascript.rhino.head.Callable callable47 = null;
        nativeArray36.setGetterOrSetter("hi!", 0, callable47, false);
        java.lang.Integer[] intArray50 = nativeArray36.getIndexIds();
        nativeArray29.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray36);
        java.lang.Object obj52 = nativeArray12.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        nativeArray36.sealObject();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int14 = nativeArray12.lastIndexOf((java.lang.Object) (short) 10);
        long long15 = nativeArray12.getLength();
        nativeArray12.delete((int) (byte) 1);
        boolean boolean18 = nativeArray12.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray21.getParentScope();
        java.lang.Object[] objArray23 = nativeArray21.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "", (java.lang.Object) nativeArray21, 0);
        nativeArray12.setAttributes("hi!", 10);
        boolean boolean29 = nativeArray12.hasPrototypeMap();
        long long30 = nativeArray12.jsGet_length();
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int35 = nativeArray33.lastIndexOf((java.lang.Object) (short) 10);
        long long36 = nativeArray33.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray33, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        java.lang.Object[] objArray47 = nativeArray41.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable48 = nativeArray41.getParentScope();
        boolean boolean49 = nativeArray33.containsAll((java.util.Collection) nativeArray41);
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray41.getParentScope();
        boolean boolean51 = nativeArray41.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable55 = nativeArray54.getParentScope();
        java.lang.Object[] objArray56 = nativeArray54.getIds();
        boolean boolean57 = nativeArray41.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray54);
        java.util.Iterator iterator58 = nativeArray54.iterator();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "Array", (java.lang.Object) nativeArray54);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = nativeArray1.getAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray54);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 1 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[null]");
        org.junit.Assert.assertNull(scriptable48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(iterator58);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Context context15 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        long long20 = nativeArray17.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "", true);
        boolean boolean24 = nativeArray17.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray27.getParentScope();
        java.lang.Object[] objArray29 = nativeArray27.getIds();
        boolean boolean30 = nativeArray27.isEmpty();
        boolean boolean31 = nativeArray17.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean33 = nativeArray27.isConst("object");
        nativeArray1.defineOwnProperties(context15, (com.google.javascript.rhino.head.ScriptableObject) nativeArray27);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "hi!");
        nativeArray27.sealObject();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "object", true);
        long long41 = nativeArray27.jsGet_length();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray27.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        boolean boolean5 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        java.lang.String str6 = nativeArray1.getClassName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray7 = nativeArray1.getAllIds();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 24");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Array" + "'", str6, "Array");
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable4 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object obj6 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 2);
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean9 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable18 = null;
        java.lang.Object[] objArray19 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable18);
        java.lang.Object[] objArray20 = nativeArray11.toArray(objArray19);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", true);
        boolean boolean30 = nativeArray23.hasPrototypeMap();
        int int31 = nativeArray23.size();
        boolean boolean32 = nativeArray23.isEmpty();
        boolean boolean34 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "Array");
        java.lang.Object obj35 = nativeArray11.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "", (java.lang.Object) 100);
        java.lang.Object obj44 = nativeArray37.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray40);
        int int45 = nativeArray23.indexOf(obj44);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        nativeArray48.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray69, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray74.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj77 = nativeArray69.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray74);
        boolean boolean78 = nativeArray69.hasPrototypeMap();
        java.lang.Object[] objArray79 = nativeArray69.getIds();
        int int80 = nativeArray69.size();
        boolean boolean81 = nativeArray48.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray69);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, 100, (java.lang.Object) boolean81);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        org.junit.Assert.assertNull(scriptable4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(scriptable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[hi!]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = nativeArray1.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        com.google.javascript.rhino.head.Scriptable scriptable0 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Scriptable scriptable2 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype(scriptable0, "object");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        nativeArray13.setAttributes("object", (int) (byte) 0);
        nativeArray13.preventExtensions();
        com.google.javascript.rhino.head.Scriptable scriptable31 = null;
        boolean boolean32 = nativeArray13.has("", scriptable31);
        java.lang.String str33 = nativeArray13.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int38 = nativeArray36.lastIndexOf((java.lang.Object) (short) 10);
        long long39 = nativeArray36.getLength();
        nativeArray36.delete((int) (byte) 1);
        boolean boolean42 = nativeArray36.isExtensible();
        java.lang.Object obj44 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, 4);
        java.lang.Object[] objArray45 = nativeArray36.toArray();
        nativeArray36.delete((int) (short) 0);
        java.lang.Object obj48 = nativeArray13.get(0, (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        nativeArray36.setAttributes("hi!", 13);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "object" + "'", str33, "object");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[null]");
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        java.lang.Object[] objArray23 = nativeArray17.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray17.getParentScope();
        boolean boolean25 = nativeArray9.containsAll((java.util.Collection) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        java.lang.Object[] objArray41 = nativeArray17.toArray(objArray40);
        boolean boolean43 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "Array");
        java.lang.Object obj44 = nativeArray4.get(2, (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.Scriptable scriptable45 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        java.lang.Object obj46 = null;
        java.lang.Object obj47 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray17, obj46);
        nativeArray17.sealObject();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNull(scriptable45);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        nativeArray10.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        boolean boolean40 = nativeArray31.hasPrototypeMap();
        java.lang.Object[] objArray41 = nativeArray31.getIds();
        int int42 = nativeArray31.size();
        boolean boolean43 = nativeArray10.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject45 = nativeArray1.exportAsJSClass(10, (com.google.javascript.rhino.head.Scriptable) nativeArray31, false);
        java.lang.String str46 = nativeArray31.getTypeOf();
        com.google.javascript.rhino.head.Scriptable scriptable47 = null;
        nativeArray31.setPrototype(scriptable47);
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(idFunctionObject45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "object" + "'", str46, "object");
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Integer[] intArray26 = nativeArray13.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray26);
        com.google.javascript.rhino.head.Scriptable scriptable28 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray27);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertNull(scriptable28);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        boolean boolean41 = nativeArray4.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        long long47 = nativeArray44.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable51 = null;
        java.lang.Object[] objArray52 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable51);
        java.lang.Object[] objArray53 = nativeArray44.toArray(objArray52);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        long long59 = nativeArray56.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "", true);
        boolean boolean63 = nativeArray56.hasPrototypeMap();
        int int64 = nativeArray56.size();
        boolean boolean65 = nativeArray56.isEmpty();
        boolean boolean67 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "Array");
        java.lang.Object obj68 = nativeArray44.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        java.lang.Object obj69 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        boolean boolean71 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "");
        java.lang.String str72 = nativeArray56.getClassName();
        java.lang.Object[] objArray73 = nativeArray56.toArray();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Array" + "'", str72, "Array");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[null]");
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        java.lang.Object[] objArray23 = nativeArray17.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray17.getParentScope();
        boolean boolean25 = nativeArray9.containsAll((java.util.Collection) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        java.lang.Object[] objArray41 = nativeArray17.toArray(objArray40);
        boolean boolean43 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "Array");
        java.lang.Object obj44 = nativeArray4.get(2, (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.Scriptable scriptable45 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.delete((-1));
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "object", (java.lang.Object) (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNull(scriptable45);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        boolean boolean9 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable18 = null;
        java.lang.Object[] objArray19 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable18);
        java.lang.Object[] objArray20 = nativeArray11.toArray(objArray19);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray(objArray20);
        java.lang.Object obj22 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray21);
        java.lang.Object obj24 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "", true);
        boolean boolean34 = nativeArray27.hasPrototypeMap();
        java.lang.reflect.Method method37 = null;
        java.lang.reflect.Method method38 = null;
        nativeArray27.defineProperty("hi!", (java.lang.Object) (-1L), method37, method38, (int) (byte) 10);
        java.lang.Object obj42 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, (int) (byte) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable45 = nativeArray44.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable46 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        nativeArray27.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = nativeArray1.getAttributes("object", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property object not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNull(scriptable45);
        org.junit.Assert.assertNull(scriptable46);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        nativeArray10.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) -1, (java.lang.Object) nativeArray10);
        long long17 = nativeArray1.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        java.lang.Object[] objArray25 = nativeArray19.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray19.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable27 = nativeArray19.getParentScope();
        boolean boolean28 = nativeArray19.isSealed();
        boolean boolean29 = nativeArray19.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray32.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable40 = nativeArray32.getParentScope();
        boolean boolean41 = nativeArray32.isSealed();
        java.lang.Object obj43 = nativeArray32.get(0L);
        long long44 = nativeArray32.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int48 = nativeArray46.lastIndexOf((java.lang.Object) (short) 10);
        long long49 = nativeArray46.getLength();
        nativeArray46.delete((int) (byte) 1);
        boolean boolean52 = nativeArray46.isExtensible();
        com.google.javascript.rhino.head.Scriptable scriptable53 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray46);
        nativeArray19.putConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) nativeArray46);
        java.lang.Object obj55 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) "");
        boolean boolean57 = nativeArray1.isConst("object");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNull(scriptable27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[null]");
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNull(scriptable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 1L + "'", long49 == 1L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(scriptable53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        java.lang.Object[] objArray5 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray7.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray10, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj18 = nativeArray10.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        boolean boolean19 = nativeArray10.hasPrototypeMap();
        java.lang.Object[] objArray20 = nativeArray10.getIds();
        int int21 = nativeArray10.size();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean36 = nativeArray27.hasPrototypeMap();
        java.lang.Object[] objArray37 = nativeArray27.getIds();
        int int38 = nativeArray27.size();
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray27.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray40);
        java.lang.Object obj44 = nativeArray10.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        java.lang.Object[] objArray45 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray27);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray68, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj76 = nativeArray68.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray73);
        boolean boolean77 = nativeArray68.hasPrototypeMap();
        java.lang.Object[] objArray78 = nativeArray68.getIds();
        java.lang.Object[] objArray79 = nativeArray55.toArray(objArray78);
        java.lang.Object obj80 = nativeArray1.associateValue((java.lang.Object) objArray45, (java.lang.Object) objArray79);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray(objArray45);
        boolean boolean83 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray81, "");
        com.google.javascript.rhino.head.Scriptable scriptable85 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray81, "hi!");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[null]");
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[null]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[null]");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(scriptable85);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Context context15 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        long long20 = nativeArray17.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "", true);
        boolean boolean24 = nativeArray17.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray27.getParentScope();
        java.lang.Object[] objArray29 = nativeArray27.getIds();
        boolean boolean30 = nativeArray27.isEmpty();
        boolean boolean31 = nativeArray17.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean33 = nativeArray27.isConst("object");
        nativeArray1.defineOwnProperties(context15, (com.google.javascript.rhino.head.ScriptableObject) nativeArray27);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "hi!");
        nativeArray27.sealObject();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "object", true);
        boolean boolean41 = nativeArray27.hasPrototypeMap();
        nativeArray27.preventExtensions();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        nativeArray1.delete("Array");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        nativeArray11.delete((int) (byte) 1);
        boolean boolean17 = nativeArray11.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable21 = nativeArray20.getParentScope();
        java.lang.Object[] objArray22 = nativeArray20.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", (java.lang.Object) nativeArray20, 0);
        nativeArray11.setAttributes("hi!", 10);
        boolean boolean28 = nativeArray11.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int33 = nativeArray31.lastIndexOf((java.lang.Object) (short) 10);
        long long34 = nativeArray31.getLength();
        nativeArray31.delete((int) (byte) 1);
        boolean boolean37 = nativeArray31.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable41 = nativeArray40.getParentScope();
        java.lang.Object[] objArray42 = nativeArray40.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray31, "", (java.lang.Object) nativeArray40, 0);
        java.lang.Object[] objArray45 = nativeArray31.toArray();
        nativeArray31.preventExtensions();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "object", (java.lang.Object) nativeArray31);
        nativeArray31.setAttributes("object", (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = nativeArray1.getAttributes(0, (com.google.javascript.rhino.head.Scriptable) nativeArray31);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 0 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[null]");
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.Context context37 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        nativeArray9.defineOwnProperties(context37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray39);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray58.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray61, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj69 = nativeArray61.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray66);
        com.google.javascript.rhino.head.Callable callable72 = null;
        nativeArray61.setGetterOrSetter("hi!", 0, callable72, false);
        boolean boolean75 = nativeArray39.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray61);
        com.google.javascript.rhino.head.Scriptable scriptable77 = null;
        nativeArray61.setAttributes((int) '4', scriptable77, (int) (byte) 10);
        boolean boolean80 = nativeArray61.hasPrototypeMap();
        java.lang.Object[] objArray81 = nativeArray61.getAllIds();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[hi!, 52, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[hi!, 52, length]");
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        java.lang.Object[] objArray24 = nativeArray18.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable25 = nativeArray18.getParentScope();
        boolean boolean26 = nativeArray10.containsAll((java.util.Collection) nativeArray18);
        boolean boolean27 = nativeArray1.containsAll((java.util.Collection) nativeArray10);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        java.lang.Object[] objArray43 = nativeArray37.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray37.getParentScope();
        boolean boolean45 = nativeArray29.containsAll((java.util.Collection) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray68, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj76 = nativeArray68.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray73);
        boolean boolean77 = nativeArray68.hasPrototypeMap();
        java.lang.Object[] objArray78 = nativeArray68.getIds();
        java.lang.Object[] objArray79 = nativeArray55.toArray(objArray78);
        java.lang.Object obj80 = nativeArray1.associateValue((java.lang.Object) boolean45, (java.lang.Object) nativeArray55);
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray83.activatePrototypeMap((int) (short) 100);
        boolean boolean87 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray83, "hi!");
        long long88 = nativeArray83.jsGet_length();
        java.lang.Object obj90 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray83, (-1));
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) (-1));
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", false);
        java.lang.Object obj96 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) 0);
        com.google.javascript.rhino.head.Scriptable scriptable97 = nativeArray1.getParentScope();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[null]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[null]");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 1L + "'", long88 == 1L);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNull(scriptable97);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        java.lang.Object obj37 = nativeArray9.get((long) 0);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray42, (java.lang.Object) (-1));
        boolean boolean46 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "");
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int51 = nativeArray49.lastIndexOf((java.lang.Object) (short) 10);
        long long52 = nativeArray49.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        java.lang.Object[] objArray63 = nativeArray57.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray57.getParentScope();
        boolean boolean65 = nativeArray49.containsAll((java.util.Collection) nativeArray57);
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray57.getParentScope();
        boolean boolean67 = nativeArray57.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable71 = nativeArray70.getParentScope();
        java.lang.Object[] objArray72 = nativeArray70.getIds();
        boolean boolean73 = nativeArray57.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray70);
        java.lang.reflect.Method method74 = null;
        java.lang.reflect.Method method75 = null;
        nativeArray42.defineProperty("hi!", (java.lang.Object) nativeArray57, method74, method75, 8);
        nativeArray42.preventExtensions();
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int83 = nativeArray81.lastIndexOf((java.lang.Object) (short) 10);
        long long84 = nativeArray81.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray81, "", true);
        boolean boolean88 = nativeArray81.hasPrototypeMap();
        int int89 = nativeArray81.size();
        boolean boolean90 = nativeArray42.has((int) (byte) 0, (com.google.javascript.rhino.head.Scriptable) nativeArray81);
        java.lang.Object obj91 = nativeArray9.get((java.lang.Object) (byte) 0);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[null]");
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(scriptable71);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 1L + "'", long84 == 1L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) 100);
        boolean boolean5 = nativeArray1.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        boolean boolean20 = nativeArray11.hasPrototypeMap();
        java.lang.Object[] objArray21 = nativeArray11.getIds();
        int int22 = nativeArray11.size();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray11.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Object[] objArray28 = nativeArray24.getAllIds();
        com.google.javascript.rhino.head.Context context29 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        java.lang.Object[] objArray37 = nativeArray31.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable38 = nativeArray31.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable39 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray31);
        nativeArray24.defineOwnProperties(context29, (com.google.javascript.rhino.head.ScriptableObject) nativeArray31);
        boolean boolean41 = nativeArray1.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        nativeArray31.delete("object");
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj64 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        com.google.javascript.rhino.head.Callable callable67 = null;
        nativeArray56.setGetterOrSetter("hi!", 0, callable67, false);
        java.lang.Integer[] intArray70 = nativeArray56.getIndexIds();
        nativeArray49.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray56);
        nativeArray49.sealObject();
        java.util.ListIterator listIterator73 = nativeArray49.listIterator();
        nativeArray31.setAttributes((int) (short) -1, (com.google.javascript.rhino.head.Scriptable) nativeArray49, 2);
        boolean boolean77 = nativeArray31.isConst("object");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[length]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[null]");
        org.junit.Assert.assertNull(scriptable38);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertNotNull(listIterator73);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        boolean boolean49 = nativeArray42.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable53 = nativeArray52.getParentScope();
        java.lang.Object[] objArray54 = nativeArray52.getIds();
        boolean boolean55 = nativeArray52.isEmpty();
        boolean boolean56 = nativeArray42.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        java.lang.Object[] objArray57 = nativeArray42.getIds();
        java.lang.Object[] objArray58 = nativeArray42.getAllIds();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean59 = nativeArray4.retainAll((java.util.Collection) nativeArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(scriptable53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[length]");
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable4 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int6 = nativeArray1.getAttributes((int) '4');
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 52 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable4);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj67 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        boolean boolean68 = nativeArray59.hasPrototypeMap();
        java.lang.Object[] objArray69 = nativeArray59.getIds();
        int int70 = nativeArray59.size();
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray76, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray81.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj84 = nativeArray76.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray81);
        boolean boolean85 = nativeArray76.hasPrototypeMap();
        java.lang.Object[] objArray86 = nativeArray76.getIds();
        int int87 = nativeArray76.size();
        com.google.javascript.rhino.head.NativeArray nativeArray89 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int91 = nativeArray89.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray76.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray89);
        java.lang.Object obj93 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object[] objArray94 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray59);
        nativeArray1.put(2, (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) objArray94);
        boolean boolean97 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "hi!");
        long long98 = nativeArray37.jsGet_length();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + 3L + "'", long98 == 3L);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray43.getParentScope();
        boolean boolean51 = nativeArray35.containsAll((java.util.Collection) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj64 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean65 = nativeArray56.hasPrototypeMap();
        java.lang.Object[] objArray66 = nativeArray56.getIds();
        java.lang.Object[] objArray67 = nativeArray43.toArray(objArray66);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "Array", (java.lang.Object) nativeArray43);
        boolean boolean69 = nativeArray22.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean70 = nativeArray9.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean71 = nativeArray9.isExtensible();
        int int72 = nativeArray9.size();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator78 = nativeArray75.iterator();
        boolean boolean79 = nativeArray75.avoidObjectDetection();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.IdFunctionObject idFunctionObject81 = nativeArray9.exportAsJSClass(0, (com.google.javascript.rhino.head.Scriptable) nativeArray75, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[length]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[null]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(iterator78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) 100);
        boolean boolean5 = nativeArray1.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        boolean boolean20 = nativeArray11.hasPrototypeMap();
        java.lang.Object[] objArray21 = nativeArray11.getIds();
        int int22 = nativeArray11.size();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray11.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Object[] objArray28 = nativeArray24.getAllIds();
        com.google.javascript.rhino.head.Context context29 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        java.lang.Object[] objArray37 = nativeArray31.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable38 = nativeArray31.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable39 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray31);
        nativeArray24.defineOwnProperties(context29, (com.google.javascript.rhino.head.ScriptableObject) nativeArray31);
        boolean boolean41 = nativeArray1.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        java.lang.Object obj43 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 1.0d);
        boolean boolean45 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[length]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[null]");
        org.junit.Assert.assertNull(scriptable38);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        nativeArray1.activatePrototypeMap(100);
        com.google.javascript.rhino.head.Scriptable scriptable12 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable12);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable15 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method19 = null;
        java.lang.reflect.Method method20 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) nativeArray18, method19, method20, 0);
        com.google.javascript.rhino.head.Scriptable scriptable23 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = nativeArray18.getGetterOrSetter("hi!", (int) (byte) 1, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertNull(scriptable23);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        boolean boolean9 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable21 = null;
        java.lang.Object[] objArray22 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable21);
        java.lang.Object[] objArray23 = nativeArray14.toArray(objArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "", true);
        boolean boolean33 = nativeArray26.hasPrototypeMap();
        int int34 = nativeArray26.size();
        boolean boolean35 = nativeArray26.isEmpty();
        boolean boolean37 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "Array");
        java.lang.Object obj38 = nativeArray14.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        nativeArray26.setAttributes("object", (int) (byte) 0);
        nativeArray26.preventExtensions();
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray26.getParentScope();
        java.lang.Object obj44 = nativeArray1.get("object", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean46 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray(97L);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        java.lang.Object[] objArray27 = nativeArray24.getAllIds();
        java.lang.Object[] objArray28 = nativeArray24.toArray();
        boolean boolean29 = nativeArray1.contains((java.lang.Object) objArray28);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 'a');
        com.google.javascript.rhino.head.Context context33 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        nativeArray35.delete((int) (byte) 1);
        boolean boolean42 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "");
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        long long47 = nativeArray44.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55, (java.lang.Object) (-1));
        java.lang.Object[] objArray58 = nativeArray52.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable59 = nativeArray52.getParentScope();
        boolean boolean60 = nativeArray44.containsAll((java.util.Collection) nativeArray52);
        boolean boolean61 = nativeArray35.containsAll((java.util.Collection) nativeArray44);
        nativeArray32.defineOwnProperties(context33, (com.google.javascript.rhino.head.ScriptableObject) nativeArray44);
        java.lang.Object obj64 = nativeArray32.get((long) (short) 0);
        boolean boolean65 = nativeArray32.isSealed();
        java.lang.String str66 = nativeArray32.getClassName();
        // The following exception was thrown during execution in test generation
        try {
            int int67 = nativeArray1.getAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property Array not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[length]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[null]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[null]");
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Array" + "'", str66, "Array");
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        java.lang.Object[] objArray9 = nativeArray4.toArray();
        nativeArray4.preventExtensions();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int14 = nativeArray12.lastIndexOf((java.lang.Object) (short) 10);
        long long15 = nativeArray12.getLength();
        nativeArray12.delete((int) (byte) 1);
        boolean boolean18 = nativeArray12.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray21.getParentScope();
        java.lang.Object[] objArray23 = nativeArray21.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "", (java.lang.Object) nativeArray21, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        boolean boolean40 = nativeArray31.hasPrototypeMap();
        java.lang.Object[] objArray41 = nativeArray31.getIds();
        int int42 = nativeArray31.size();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray31.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        java.lang.Object obj48 = nativeArray12.get((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        com.google.javascript.rhino.head.Scriptable scriptable49 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        com.google.javascript.rhino.head.Scriptable scriptable50 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope(scriptable49);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = nativeArray4.remove((java.lang.Object) scriptable50);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[null]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(scriptable49);
        org.junit.Assert.assertNotNull(scriptable50);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        java.lang.Object[] objArray15 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        java.lang.Object[] objArray40 = nativeArray34.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable41 = nativeArray34.getParentScope();
        boolean boolean42 = nativeArray26.containsAll((java.util.Collection) nativeArray34);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        long long48 = nativeArray45.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable52 = null;
        java.lang.Object[] objArray53 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable52);
        java.lang.Object[] objArray54 = nativeArray45.toArray(objArray53);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "hi!", (java.lang.Object) objArray53);
        nativeArray26.activatePrototypeMap((int) (byte) 10);
        boolean boolean58 = nativeArray18.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject60 = nativeArray1.exportAsJSClass(8, (com.google.javascript.rhino.head.Scriptable) nativeArray18, false);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray66, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray71.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj74 = nativeArray66.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray71);
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int79 = nativeArray77.lastIndexOf((java.lang.Object) (short) 10);
        long long80 = nativeArray77.getLength();
        nativeArray77.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray71, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray86 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray89 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray86.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray89, (java.lang.Object) (-1));
        java.lang.Object[] objArray92 = nativeArray86.getAllIds();
        nativeArray86.delete("");
        java.lang.Object obj95 = nativeArray71.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray86);
        java.lang.reflect.Method method96 = null;
        java.lang.reflect.Method method97 = null;
        // The following exception was thrown during execution in test generation
        try {
            idFunctionObject60.defineProperty("", (java.lang.Object) 10, method96, method97, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 100");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(idFunctionObject60);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 1L + "'", long80 == 1L);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[length]");
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        boolean boolean36 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "");
        nativeArray11.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray29, 13);
        java.lang.Object obj40 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, 0);
        boolean boolean42 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, 0);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        nativeArray9.delete((int) (byte) 1);
        boolean boolean15 = nativeArray9.isExtensible();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 4);
        java.lang.Object[] objArray18 = nativeArray9.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray24.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray42.getParentScope();
        java.lang.Object[] objArray44 = nativeArray42.getIds();
        boolean boolean45 = nativeArray42.isEmpty();
        nativeArray9.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) boolean45);
        boolean boolean47 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        long long53 = nativeArray50.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "", true);
        boolean boolean57 = nativeArray50.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable61 = nativeArray60.getParentScope();
        java.lang.Object[] objArray62 = nativeArray60.getIds();
        boolean boolean63 = nativeArray60.isEmpty();
        boolean boolean64 = nativeArray50.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        java.lang.Object obj66 = nativeArray50.get((long) (byte) 0);
        boolean boolean67 = nativeArray1.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object[] objArray68 = nativeArray50.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray(objArray68);
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[null]");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(scriptable61);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.Callable callable15 = null;
        nativeArray4.setGetterOrSetter("hi!", 0, callable15, false);
        java.lang.Integer[] intArray18 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray18);
        com.google.javascript.rhino.head.Scriptable scriptable20 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray19);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray29, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj37 = nativeArray29.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray22.getAssociatedValue((java.lang.Object) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable41 = nativeArray40.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable42 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray40);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        long long47 = nativeArray44.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "", true);
        boolean boolean51 = nativeArray44.hasPrototypeMap();
        int int52 = nativeArray44.size();
        boolean boolean53 = nativeArray44.isEmpty();
        nativeArray40.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        java.lang.Object obj55 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray29, (java.lang.Object) nativeArray40);
        nativeArray29.delete((int) (short) 100);
        java.lang.Object obj58 = nativeArray19.getAssociatedValue((java.lang.Object) nativeArray29);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[length]");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertNull(scriptable42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        java.lang.Object[] objArray27 = nativeArray11.toArray();
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[null]");
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        java.lang.Object[] objArray42 = nativeArray36.getAllIds();
        nativeArray36.delete("");
        java.lang.Object obj45 = nativeArray21.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable48 = nativeArray21.getPrototype();
        com.google.javascript.rhino.head.Context context49 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        java.lang.Object[] objArray65 = nativeArray59.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray59.getParentScope();
        boolean boolean67 = nativeArray51.containsAll((java.util.Collection) nativeArray59);
        nativeArray21.defineOwnProperties(context49, (com.google.javascript.rhino.head.ScriptableObject) nativeArray51);
        java.lang.Object obj69 = nativeArray1.get((int) ' ', (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean71 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.activatePrototypeMap((int) (short) 100);
        long long76 = nativeArray73.jsGet_length();
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray81, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray86 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray86.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj89 = nativeArray81.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray86);
        boolean boolean90 = nativeArray81.hasPrototypeMap();
        java.lang.Object[] objArray91 = nativeArray81.getIds();
        int int92 = nativeArray81.size();
        boolean boolean93 = nativeArray73.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray81);
        int int94 = nativeArray1.lastIndexOf((java.lang.Object) nativeArray81);
        long long95 = nativeArray1.getLength();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[length]");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(scriptable48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[null]");
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[hi!]");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 1L + "'", long95 == 1L);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 'a');
        boolean boolean3 = nativeArray1.isConst("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        java.lang.Object obj56 = null;
        java.lang.Object obj57 = nativeArray37.get(obj56);
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray37.getParentScope();
        java.lang.Object[] objArray59 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable58);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(scriptable58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        java.util.ListIterator listIterator11 = nativeArray1.listIterator();
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        nativeArray14.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) 100L);
        java.lang.Object obj31 = nativeArray22.get((long) (byte) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        long long43 = nativeArray40.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "", true);
        boolean boolean47 = nativeArray40.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable51 = nativeArray50.getParentScope();
        java.lang.Object[] objArray52 = nativeArray50.getIds();
        boolean boolean53 = nativeArray50.isEmpty();
        boolean boolean54 = nativeArray40.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean55 = nativeArray33.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray40);
        nativeArray22.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray40);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) nativeArray40);
        nativeArray40.delete("object");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(listIterator11);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100L + "'", obj31, 100L);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(scriptable51);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int35 = nativeArray33.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray20.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray33);
        java.lang.Object obj37 = nativeArray1.get((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray42, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int68 = nativeArray66.lastIndexOf((java.lang.Object) (short) 10);
        long long69 = nativeArray66.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray66, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable73 = null;
        java.lang.Object[] objArray74 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable73);
        java.lang.Object[] objArray75 = nativeArray66.toArray(objArray74);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "hi!", (java.lang.Object) objArray74);
        nativeArray47.activatePrototypeMap((int) (byte) 10);
        boolean boolean79 = nativeArray39.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int84 = nativeArray82.lastIndexOf((java.lang.Object) (short) 10);
        long long85 = nativeArray82.getLength();
        java.lang.Object[] objArray86 = nativeArray82.toArray();
        java.lang.Object obj87 = nativeArray39.get((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray82);
        java.lang.Object obj88 = nativeArray33.getAssociatedValue((java.lang.Object) nativeArray82);
        java.lang.Object obj89 = null;
        java.lang.Object obj90 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray33, obj89);
        nativeArray33.sealObject();
        java.lang.String str92 = nativeArray33.getClassName();
        boolean boolean93 = nativeArray33.isSealed();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1L + "'", long69 == 1L);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[null]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 1L + "'", long85 == 1L);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[null]");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Array" + "'", str92, "Array");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        nativeArray38.delete((int) (byte) 1);
        boolean boolean45 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "");
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "Array", (java.lang.Object) nativeArray38);
        nativeArray38.delete("Array");
        nativeArray38.setAttributes("object", 8);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        boolean boolean65 = nativeArray12.isEmpty();
        nativeArray12.delete("hi!");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.isSealed();
        java.lang.Object obj12 = nativeArray1.get(0L);
        long long13 = nativeArray1.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int18 = nativeArray16.lastIndexOf((java.lang.Object) (short) 10);
        long long19 = nativeArray16.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable31 = nativeArray24.getParentScope();
        boolean boolean32 = nativeArray16.containsAll((java.util.Collection) nativeArray24);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray24.getParentScope();
        boolean boolean34 = nativeArray24.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable38 = nativeArray37.getParentScope();
        java.lang.Object[] objArray39 = nativeArray37.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        nativeArray42.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        long long53 = nativeArray50.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray58.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray61, (java.lang.Object) (-1));
        java.lang.Object[] objArray64 = nativeArray58.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable65 = nativeArray58.getParentScope();
        boolean boolean66 = nativeArray50.containsAll((java.util.Collection) nativeArray58);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray71, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray76.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj79 = nativeArray71.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        boolean boolean80 = nativeArray71.hasPrototypeMap();
        java.lang.Object[] objArray81 = nativeArray71.getIds();
        java.lang.Object[] objArray82 = nativeArray58.toArray(objArray81);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "Array", (java.lang.Object) nativeArray58);
        boolean boolean84 = nativeArray37.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean85 = nativeArray24.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean86 = nativeArray24.isExtensible();
        java.lang.Object obj87 = nativeArray1.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        long long88 = nativeArray1.getLength();
        nativeArray1.preventExtensions();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", false);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[null]");
        org.junit.Assert.assertNull(scriptable31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(scriptable38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[length]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[null]");
        org.junit.Assert.assertNull(scriptable65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[null]");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[null]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 1L + "'", long88 == 1L);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray5, "");
        boolean boolean10 = nativeArray1.has(100, scriptable9);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int14 = nativeArray12.lastIndexOf((java.lang.Object) (short) 10);
        long long15 = nativeArray12.getLength();
        nativeArray12.delete((int) (byte) 1);
        boolean boolean18 = nativeArray12.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray21.getParentScope();
        java.lang.Object[] objArray23 = nativeArray21.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "", (java.lang.Object) nativeArray21, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        boolean boolean40 = nativeArray31.hasPrototypeMap();
        java.lang.Object[] objArray41 = nativeArray31.getIds();
        int int42 = nativeArray31.size();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray31.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        java.lang.Object obj48 = nativeArray12.get((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        com.google.javascript.rhino.head.Scriptable scriptable49 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int52 = nativeArray44.getAttributes(2);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 2 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(scriptable49);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        nativeArray1.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean16 = nativeArray1.avoidObjectDetection();
        boolean boolean18 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 100);
        com.google.javascript.rhino.head.Scriptable scriptable19 = nativeArray1.getPrototype();
        // The following exception was thrown during execution in test generation
        try {
            int int21 = nativeArray1.getAttributes((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property -1 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(scriptable19);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object[] objArray9 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        boolean boolean18 = nativeArray11.hasPrototypeMap();
        int int19 = nativeArray11.size();
        boolean boolean20 = nativeArray11.isEmpty();
        boolean boolean22 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        boolean boolean32 = nativeArray25.hasPrototypeMap();
        java.util.ListIterator listIterator33 = nativeArray25.listIterator();
        boolean boolean34 = nativeArray11.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        java.lang.Object[] objArray35 = nativeArray11.getAllIds();
        java.lang.Object[] objArray36 = nativeArray1.toArray(objArray35);
        boolean boolean37 = nativeArray1.isEmpty();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[length]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(listIterator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[null]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[null]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        int int40 = nativeArray4.indexOf((java.lang.Object) 100.0f);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        boolean boolean50 = nativeArray43.hasPrototypeMap();
        java.lang.reflect.Method method53 = null;
        java.lang.reflect.Method method54 = null;
        nativeArray43.defineProperty("hi!", (java.lang.Object) (-1L), method53, method54, (int) (byte) 10);
        boolean boolean58 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "");
        int int59 = nativeArray43.size();
        com.google.javascript.rhino.head.Scriptable scriptable61 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43, "");
        java.lang.Object[] objArray62 = nativeArray43.getAllIds();
        java.lang.Object[] objArray63 = nativeArray43.toArray();
        boolean boolean64 = nativeArray4.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = nativeArray4.getAttributes(100);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 100 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNull(scriptable61);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[hi!, length]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[null]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.util.ListIterator listIterator9 = nativeArray1.listIterator();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable19 = nativeArray12.getParentScope();
        com.google.javascript.rhino.head.Context context20 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        java.lang.Object[] objArray28 = nativeArray22.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable29 = nativeArray22.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable30 = nativeArray22.getParentScope();
        java.util.ListIterator listIterator31 = nativeArray22.listIterator();
        nativeArray12.defineOwnProperties(context20, (com.google.javascript.rhino.head.ScriptableObject) nativeArray22);
        java.lang.Object obj33 = nativeArray1.get(100, (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.Scriptable scriptable34 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(listIterator9);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[null]");
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[null]");
        org.junit.Assert.assertNull(scriptable29);
        org.junit.Assert.assertNull(scriptable30);
        org.junit.Assert.assertNotNull(listIterator31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable34);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        com.google.javascript.rhino.head.Scriptable scriptable0 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty(scriptable0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        boolean boolean18 = nativeArray11.avoidObjectDetection();
        com.google.javascript.rhino.head.Scriptable scriptable20 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray11, "");
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator25 = nativeArray22.iterator();
        boolean boolean26 = nativeArray22.hasPrototypeMap();
        boolean boolean28 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "Array");
        boolean boolean30 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "hi!");
        nativeArray22.sealObject();
        boolean boolean32 = nativeArray22.avoidObjectDetection();
        int int33 = nativeArray11.lastIndexOf((java.lang.Object) boolean32);
        com.google.javascript.rhino.head.Scriptable scriptable34 = nativeArray11.getPrototype();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertNotNull(iterator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(scriptable34);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        java.lang.Object obj3 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray6.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.Callable callable27 = null;
        nativeArray16.setGetterOrSetter("hi!", 0, callable27, false);
        java.lang.Integer[] intArray30 = nativeArray16.getIndexIds();
        nativeArray9.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        nativeArray34.delete((int) (byte) 1);
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "");
        nativeArray16.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray34, 13);
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray34.getParentScope();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", (java.lang.Object) scriptable44);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        long long51 = nativeArray48.getLength();
        nativeArray48.delete((int) (byte) 1);
        boolean boolean54 = nativeArray48.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray57.getParentScope();
        java.lang.Object[] objArray59 = nativeArray57.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "", (java.lang.Object) nativeArray57, 0);
        java.lang.Object[] objArray62 = nativeArray48.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable63 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean64 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        nativeArray48.sealObject();
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[null]");
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        java.lang.Object[] objArray36 = nativeArray30.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable37 = nativeArray30.getParentScope();
        boolean boolean38 = nativeArray22.containsAll((java.util.Collection) nativeArray30);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean52 = nativeArray43.hasPrototypeMap();
        java.lang.Object[] objArray53 = nativeArray43.getIds();
        java.lang.Object[] objArray54 = nativeArray30.toArray(objArray53);
        boolean boolean56 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "Array");
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject58 = nativeArray9.exportAsJSClass((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray30, true);
        boolean boolean59 = nativeArray9.isSealed();
        java.lang.Object obj60 = null;
        java.lang.Object obj61 = nativeArray9.getAssociatedValue(obj60);
        boolean boolean62 = nativeArray9.avoidObjectDetection();
        com.google.javascript.rhino.head.Scriptable scriptable63 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[null]");
        org.junit.Assert.assertNull(scriptable37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(idFunctionObject58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(scriptable63);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean23 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, (int) (short) 10);
        nativeArray12.delete(2);
        boolean boolean26 = nativeArray1.has(13, (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Scriptable scriptable27 = nativeArray12.getParentScope();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(scriptable9);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(scriptable27);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        java.lang.Object[] objArray42 = nativeArray36.getAllIds();
        nativeArray36.delete("");
        java.lang.Object obj45 = nativeArray21.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable48 = nativeArray21.getPrototype();
        com.google.javascript.rhino.head.Context context49 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        java.lang.Object[] objArray65 = nativeArray59.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray59.getParentScope();
        boolean boolean67 = nativeArray51.containsAll((java.util.Collection) nativeArray59);
        nativeArray21.defineOwnProperties(context49, (com.google.javascript.rhino.head.ScriptableObject) nativeArray51);
        java.lang.Object obj69 = nativeArray1.get((int) ' ', (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        com.google.javascript.rhino.head.Scriptable scriptable70 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray51);
        nativeArray51.preventExtensions();
        java.lang.Object obj72 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean73 = nativeArray51.remove(obj72);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[length]");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(scriptable48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[null]");
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNull(scriptable70);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        boolean boolean41 = nativeArray4.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        long long47 = nativeArray44.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable51 = null;
        java.lang.Object[] objArray52 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable51);
        java.lang.Object[] objArray53 = nativeArray44.toArray(objArray52);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        long long59 = nativeArray56.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "", true);
        boolean boolean63 = nativeArray56.hasPrototypeMap();
        int int64 = nativeArray56.size();
        boolean boolean65 = nativeArray56.isEmpty();
        boolean boolean67 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "Array");
        java.lang.Object obj68 = nativeArray44.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        java.lang.Object obj69 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        com.google.javascript.rhino.head.Scriptable scriptable70 = nativeArray4.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int74 = nativeArray72.lastIndexOf((java.lang.Object) (short) 10);
        long long75 = nativeArray72.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray72, "", true);
        boolean boolean79 = nativeArray72.hasPrototypeMap();
        int int80 = nativeArray72.size();
        boolean boolean81 = nativeArray72.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable82 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray72, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable86 = nativeArray72.getParentScope();
        java.lang.Object obj88 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) 0.0f);
        java.lang.Object obj89 = nativeArray4.get((java.lang.Object) 0.0f);
        java.lang.Object obj91 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, (int) (short) 1);
        java.lang.Object obj93 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNull(scriptable70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(scriptable82);
        org.junit.Assert.assertNull(scriptable86);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Integer[] intArray34 = nativeArray24.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray34);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(intArray34);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int5 = nativeArray3.lastIndexOf((java.lang.Object) (short) 10);
        long long6 = nativeArray3.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray3, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        java.lang.Object[] objArray17 = nativeArray11.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray11.getParentScope();
        boolean boolean19 = nativeArray3.containsAll((java.util.Collection) nativeArray11);
        com.google.javascript.rhino.head.Scriptable scriptable20 = nativeArray11.getParentScope();
        boolean boolean21 = nativeArray1.containsAll((java.util.Collection) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        nativeArray23.delete((int) (byte) 1);
        boolean boolean30 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "");
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        long long35 = nativeArray32.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        java.lang.Object[] objArray46 = nativeArray40.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray40.getParentScope();
        boolean boolean48 = nativeArray32.containsAll((java.util.Collection) nativeArray40);
        boolean boolean49 = nativeArray23.containsAll((java.util.Collection) nativeArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj63 = nativeArray55.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        boolean boolean64 = nativeArray55.hasPrototypeMap();
        java.lang.Object[] objArray65 = nativeArray55.getIds();
        int int66 = nativeArray55.size();
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj80 = nativeArray72.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray77);
        boolean boolean81 = nativeArray72.hasPrototypeMap();
        java.lang.Object[] objArray82 = nativeArray72.getIds();
        int int83 = nativeArray72.size();
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int87 = nativeArray85.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray72.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray85);
        java.lang.Object obj89 = nativeArray55.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray72);
        int int91 = nativeArray55.indexOf((java.lang.Object) 100.0f);
        java.lang.Object obj92 = nativeArray32.get((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray55);
        long long94 = nativeArray55.getLength();
        java.lang.Object obj96 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, 4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null]");
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[null]");
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[hi!]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[hi!]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1L + "'", long94 == 1L);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "hi!");
        long long48 = nativeArray43.jsGet_length();
        boolean boolean49 = nativeArray4.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray4.setAttributes("hi!", 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable55 = nativeArray54.getParentScope();
        java.lang.Object[] objArray56 = nativeArray54.getIds();
        boolean boolean57 = nativeArray54.avoidObjectDetection();
        java.lang.Object obj61 = nativeArray54.getGetterOrSetter("", 0, true);
        boolean boolean62 = nativeArray54.avoidObjectDetection();
        boolean boolean63 = nativeArray4.contains((java.lang.Object) nativeArray54);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "", true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        nativeArray9.setAttributes("hi!", (int) (byte) 1);
        java.lang.String str23 = nativeArray9.getTypeOf();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "object" + "'", str23, "object");
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object[] objArray12 = nativeArray1.getIds();
        java.lang.String str13 = nativeArray1.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable22 = null;
        java.lang.Object[] objArray23 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable22);
        java.lang.Object[] objArray24 = nativeArray15.toArray(objArray23);
        java.lang.Object[] objArray25 = nativeArray1.toArray(objArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray(objArray25);
        java.lang.Object[] objArray27 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        java.lang.Object[] objArray28 = nativeArray26.toArray();
        nativeArray26.sealObject();
        java.lang.Object[] objArray30 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Array" + "'", str13, "Array");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[0]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[null]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[0]");
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        com.google.javascript.rhino.head.Context context0 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray2 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray2.activatePrototypeMap((int) (short) 100);
        long long5 = nativeArray2.jsGet_length();
        boolean boolean7 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray2, "");
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        java.lang.Object[] objArray16 = nativeArray2.toArray(objArray15);
        int int17 = nativeArray2.size();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable27 = null;
        java.lang.Object[] objArray28 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable27);
        java.lang.Object[] objArray29 = nativeArray20.toArray(objArray28);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray(objArray29);
        java.lang.Integer[] intArray31 = nativeArray30.getIndexIds();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = com.google.javascript.rhino.head.ScriptableObject.callMethod(context0, (com.google.javascript.rhino.head.Scriptable) nativeArray2, "hi!", (java.lang.Object[]) intArray31);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EcmaError; message: TypeError: hi! is not a function, it is object.");
        } catch (com.google.javascript.rhino.head.EcmaError e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[null]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertNotNull(intArray31);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        java.lang.Object[] objArray27 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        boolean boolean22 = nativeArray15.hasPrototypeMap();
        java.lang.reflect.Method method25 = null;
        java.lang.reflect.Method method26 = null;
        nativeArray15.defineProperty("hi!", (java.lang.Object) (-1L), method25, method26, (int) (byte) 10);
        boolean boolean30 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "");
        nativeArray15.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray34 = nativeArray15.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        long long47 = nativeArray44.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55, (java.lang.Object) (-1));
        java.lang.Object[] objArray58 = nativeArray52.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable59 = nativeArray52.getParentScope();
        boolean boolean60 = nativeArray44.containsAll((java.util.Collection) nativeArray52);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int65 = nativeArray63.lastIndexOf((java.lang.Object) (short) 10);
        long long66 = nativeArray63.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray63, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable70 = null;
        java.lang.Object[] objArray71 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable70);
        java.lang.Object[] objArray72 = nativeArray63.toArray(objArray71);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "hi!", (java.lang.Object) objArray71);
        nativeArray44.activatePrototypeMap((int) (byte) 10);
        boolean boolean76 = nativeArray36.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int81 = nativeArray79.lastIndexOf((java.lang.Object) (short) 10);
        long long82 = nativeArray79.getLength();
        java.lang.Object[] objArray83 = nativeArray79.toArray();
        java.lang.Object obj84 = nativeArray36.get((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray79);
        nativeArray1.put("object", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) nativeArray79);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray79, "object");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!, length]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[null]");
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 1L + "'", long66 == 1L);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[null]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 1L + "'", long82 == 1L);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[null]");
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        java.lang.Object obj19 = nativeArray11.get((java.lang.Object) (byte) 10);
        nativeArray11.preventExtensions();
        nativeArray11.sealObject();
        boolean boolean23 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        int int17 = nativeArray1.size();
        com.google.javascript.rhino.head.Scriptable scriptable19 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.activatePrototypeMap((int) ' ');
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", true);
        boolean boolean30 = nativeArray23.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable31 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        java.lang.Object[] objArray40 = nativeArray34.getAllIds();
        nativeArray34.delete("");
        long long43 = nativeArray34.getLength();
        boolean boolean45 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, (int) (short) 10);
        nativeArray34.delete(2);
        boolean boolean48 = nativeArray23.has(13, (com.google.javascript.rhino.head.Scriptable) nativeArray34);
        int int49 = nativeArray1.lastIndexOf((java.lang.Object) nativeArray34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = nativeArray34.remove(13);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(scriptable31);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[length]");
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "hi!");
        long long48 = nativeArray43.jsGet_length();
        boolean boolean49 = nativeArray4.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.Scriptable scriptable50 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.activatePrototypeMap((int) (short) 100);
        boolean boolean56 = nativeArray43.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        java.lang.Object obj60 = nativeArray53.getGetterOrSetter("Array", (int) (short) 0, false);
        boolean boolean62 = nativeArray53.contains((java.lang.Object) (short) 1);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        boolean boolean18 = nativeArray1.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.Callable callable38 = null;
        nativeArray27.setGetterOrSetter("hi!", 0, callable38, false);
        nativeArray21.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray27, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        long long48 = nativeArray45.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable52 = null;
        java.lang.Object[] objArray53 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable52);
        java.lang.Object[] objArray54 = nativeArray45.toArray(objArray53);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        long long60 = nativeArray57.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray57, "", true);
        boolean boolean64 = nativeArray57.hasPrototypeMap();
        int int65 = nativeArray57.size();
        boolean boolean66 = nativeArray57.isEmpty();
        boolean boolean68 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray57, "Array");
        java.lang.Object obj69 = nativeArray45.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray57);
        java.lang.Object obj70 = nativeArray21.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        nativeArray45.preventExtensions();
        java.lang.Object obj72 = nativeArray1.get((-1), (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        java.lang.String str73 = nativeArray1.getClassName();
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Array" + "'", str73, "Array");
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) (byte) 100);
        boolean boolean3 = nativeArray1.isConst("Array");
        java.lang.Object[] objArray4 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.Callable callable15 = null;
        nativeArray4.setGetterOrSetter("hi!", 0, callable15, false);
        java.lang.Integer[] intArray18 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.Context context19 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.Callable callable42 = null;
        nativeArray31.setGetterOrSetter("hi!", 0, callable42, false);
        java.lang.Integer[] intArray45 = nativeArray31.getIndexIds();
        nativeArray24.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray31);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int51 = nativeArray49.lastIndexOf((java.lang.Object) (short) 10);
        long long52 = nativeArray49.getLength();
        nativeArray49.delete((int) (byte) 1);
        boolean boolean56 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "");
        nativeArray31.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray49, 13);
        com.google.javascript.rhino.head.Scriptable scriptable59 = nativeArray49.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable60 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray49);
        java.lang.Object[] objArray61 = nativeArray49.toArray();
        nativeArray4.defineOwnProperties(context19, (com.google.javascript.rhino.head.ScriptableObject) nativeArray49);
        boolean boolean63 = nativeArray4.hasPrototypeMap();
        java.lang.Class<?> wildcardClass64 = nativeArray4.getClass();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertNotNull(scriptable60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "", (java.lang.Object) 100);
        java.lang.Object obj34 = nativeArray27.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray30);
        int int35 = nativeArray13.indexOf(obj34);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.Callable callable52 = null;
        nativeArray41.setGetterOrSetter("hi!", 0, callable52, false);
        com.google.javascript.rhino.head.Scriptable scriptable55 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray41);
        nativeArray13.defineProperty("hi!", (java.lang.Object) scriptable55, 8);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "");
        com.google.javascript.rhino.head.Scriptable scriptable60 = nativeArray13.getPrototype();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertNull(scriptable60);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        java.lang.Object obj27 = nativeArray11.getAssociatedValue((java.lang.Object) nativeArray18);
        nativeArray18.preventExtensions();
        nativeArray1.defineConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        com.google.javascript.rhino.head.Context context30 = null;
        com.google.javascript.rhino.head.ScriptableObject scriptableObject31 = null;
        // The following exception was thrown during execution in test generation
        try {
            nativeArray18.defineOwnProperties(context30, scriptableObject31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[length]");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNull(obj27);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.Scriptable scriptable17 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object[] objArray18 = nativeArray1.getIds();
        java.lang.Object[] objArray19 = nativeArray1.toArray();
        java.lang.Object[] objArray20 = nativeArray1.toArray();
        // The following exception was thrown during execution in test generation
        try {
            int int22 = nativeArray1.getAttributes((-1));
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property -1 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(scriptable17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int10 = nativeArray8.lastIndexOf((java.lang.Object) (short) 10);
        long long11 = nativeArray8.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "", true);
        boolean boolean15 = nativeArray8.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable19 = nativeArray18.getParentScope();
        java.lang.Object[] objArray20 = nativeArray18.getIds();
        boolean boolean21 = nativeArray18.isEmpty();
        boolean boolean22 = nativeArray8.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean23 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        java.lang.Object[] objArray24 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray(objArray24);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int21 = nativeArray19.lastIndexOf((java.lang.Object) (short) 10);
        long long22 = nativeArray19.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        nativeArray38.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.getAllIds();
        nativeArray47.delete("");
        java.lang.Object obj56 = nativeArray32.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable59 = nativeArray32.getPrototype();
        com.google.javascript.rhino.head.Context context60 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int64 = nativeArray62.lastIndexOf((java.lang.Object) (short) 10);
        long long65 = nativeArray62.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray62, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) (-1));
        java.lang.Object[] objArray76 = nativeArray70.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable77 = nativeArray70.getParentScope();
        boolean boolean78 = nativeArray62.containsAll((java.util.Collection) nativeArray70);
        nativeArray32.defineOwnProperties(context60, (com.google.javascript.rhino.head.ScriptableObject) nativeArray62);
        java.lang.Object obj80 = nativeArray1.associateValue((java.lang.Object) nativeArray19, (java.lang.Object) nativeArray32);
        com.google.javascript.rhino.head.Scriptable scriptable81 = null;
        java.lang.Object[] objArray82 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable81);
        int int83 = nativeArray32.lastIndexOf((java.lang.Object) scriptable81);
        nativeArray32.delete(2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[length]");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[null]");
        org.junit.Assert.assertNull(scriptable77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        com.google.javascript.rhino.head.Scriptable scriptable18 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        nativeArray1.delete(2);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        nativeArray1.sealObject();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray25.getParentScope();
        java.lang.Object[] objArray27 = nativeArray25.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        java.lang.Object obj41 = nativeArray25.getAssociatedValue((java.lang.Object) nativeArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray43.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable45 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        boolean boolean54 = nativeArray47.hasPrototypeMap();
        int int55 = nativeArray47.size();
        boolean boolean56 = nativeArray47.isEmpty();
        nativeArray43.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray47);
        java.lang.Object obj58 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) nativeArray43);
        boolean boolean59 = nativeArray43.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "", (java.lang.Object) 100);
        java.lang.Object obj68 = nativeArray61.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray64);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "Array");
        boolean boolean71 = nativeArray43.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray64);
        int int72 = nativeArray1.indexOf((java.lang.Object) nativeArray64);
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[length]");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertNull(scriptable45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        nativeArray1.setAttributes("hi!", 10);
        boolean boolean18 = nativeArray1.isEmpty();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        java.lang.Object[] objArray24 = nativeArray18.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable25 = nativeArray18.getParentScope();
        boolean boolean26 = nativeArray10.containsAll((java.util.Collection) nativeArray18);
        boolean boolean27 = nativeArray1.containsAll((java.util.Collection) nativeArray10);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Context context15 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        long long20 = nativeArray17.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "", true);
        boolean boolean24 = nativeArray17.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray27.getParentScope();
        java.lang.Object[] objArray29 = nativeArray27.getIds();
        boolean boolean30 = nativeArray27.isEmpty();
        boolean boolean31 = nativeArray17.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean33 = nativeArray27.isConst("object");
        nativeArray1.defineOwnProperties(context15, (com.google.javascript.rhino.head.ScriptableObject) nativeArray27);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "hi!");
        nativeArray27.sealObject();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "object", true);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj70 = nativeArray62.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        boolean boolean71 = nativeArray62.hasPrototypeMap();
        java.lang.Object[] objArray72 = nativeArray62.getIds();
        int int73 = nativeArray62.size();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int77 = nativeArray75.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray62.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray75);
        java.lang.Object obj79 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        java.lang.Object[] objArray80 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        java.lang.Object obj81 = nativeArray27.getAssociatedValue((java.lang.Object) nativeArray62);
        boolean boolean83 = nativeArray62.isConst("hi!");
        boolean boolean84 = nativeArray62.avoidObjectDetection();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[hi!]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[hi!]");
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Object[] objArray10 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean25 = nativeArray16.hasPrototypeMap();
        java.lang.Object[] objArray26 = nativeArray16.getIds();
        int int27 = nativeArray16.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray16.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray34.getParentScope();
        java.lang.Object[] objArray36 = nativeArray34.getIds();
        boolean boolean37 = nativeArray34.isEmpty();
        nativeArray1.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) boolean37);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.util.ListIterator listIterator41 = nativeArray1.listIterator((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj55 = nativeArray47.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        boolean boolean56 = nativeArray47.hasPrototypeMap();
        java.lang.Object[] objArray57 = nativeArray47.getIds();
        int int58 = nativeArray47.size();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int62 = nativeArray60.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray47.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray60);
        java.lang.Object[] objArray64 = nativeArray60.getAllIds();
        java.lang.Object obj66 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray60, "");
        boolean boolean67 = nativeArray60.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        boolean boolean76 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray72, "");
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int81 = nativeArray79.lastIndexOf((java.lang.Object) (short) 10);
        long long82 = nativeArray79.getLength();
        nativeArray79.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray88 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int90 = nativeArray88.lastIndexOf((java.lang.Object) (short) 10);
        long long91 = nativeArray88.getLength();
        nativeArray88.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray79, (int) (byte) -1, (java.lang.Object) nativeArray88);
        boolean boolean95 = nativeArray72.has(4, (com.google.javascript.rhino.head.Scriptable) nativeArray79);
        nativeArray1.put("object", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) 4);
        com.google.javascript.rhino.head.Scriptable scriptable97 = nativeArray60.getParentScope();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(listIterator41);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[length]");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 1L + "'", long82 == 1L);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 1L + "'", long91 == 1L);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNull(scriptable97);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) (byte) 1);
        nativeArray1.preventExtensions();
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        java.lang.Object[] objArray9 = nativeArray4.toArray();
        nativeArray4.preventExtensions();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "Array");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = nativeArray4.remove(1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[null]");
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray20 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        nativeArray23.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 0, (java.lang.Object) nativeArray31);
        java.lang.Object[] objArray40 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.setAttributes("hi!", (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 35");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, length]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[0, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[0, hi!]");
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.sealObject();
        boolean boolean18 = nativeArray1.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", (java.lang.Object) 100);
        java.lang.Object obj27 = nativeArray20.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray23);
        java.lang.Object[] objArray28 = nativeArray23.toArray();
        java.lang.Object[] objArray29 = nativeArray1.toArray(objArray28);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        java.lang.Object[] objArray37 = nativeArray31.getAllIds();
        nativeArray31.delete("");
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray31, "object");
        boolean boolean42 = nativeArray31.isSealed();
        nativeArray1.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray31);
        long long44 = nativeArray1.jsGet_length();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[null]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[length]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.Scriptable scriptable35 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray24, "");
        boolean boolean36 = nativeArray24.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "", true);
        boolean boolean45 = nativeArray38.hasPrototypeMap();
        int int46 = nativeArray38.size();
        boolean boolean47 = nativeArray38.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable48 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray38);
        nativeArray38.setAttributes(1, (int) (short) 1);
        java.lang.Object[] objArray52 = nativeArray38.toArray();
        java.lang.Object[] objArray53 = nativeArray24.toArray(objArray52);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(scriptable48);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[null]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.Scriptable scriptable34 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.Scriptable scriptable35 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype(scriptable34);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(scriptable34);
        org.junit.Assert.assertNull(scriptable35);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean23 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, (int) (short) 10);
        nativeArray12.delete(2);
        boolean boolean26 = nativeArray1.has(13, (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Scriptable scriptable27 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj41 = nativeArray33.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        long long47 = nativeArray44.getLength();
        nativeArray44.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        java.lang.Object[] objArray59 = nativeArray53.getAllIds();
        nativeArray53.delete("");
        java.lang.Object obj62 = nativeArray38.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "hi!");
        com.google.javascript.rhino.head.Context context65 = null;
        com.google.javascript.rhino.head.Scriptable scriptable66 = null;
        java.lang.Object[] objArray67 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable66);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj80 = nativeArray72.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray77);
        com.google.javascript.rhino.head.Callable callable83 = null;
        nativeArray72.setGetterOrSetter("hi!", 0, callable83, false);
        com.google.javascript.rhino.head.Scriptable scriptable86 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        nativeArray38.defineOwnProperty(context65, (java.lang.Object) scriptable66, (com.google.javascript.rhino.head.ScriptableObject) nativeArray72);
        boolean boolean88 = nativeArray38.avoidObjectDetection();
        java.lang.String str89 = nativeArray38.getClassName();
        boolean boolean90 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        com.google.javascript.rhino.head.Scriptable scriptable91 = nativeArray38.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray38.activatePrototypeMap((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(scriptable9);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(scriptable27);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[length]");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNull(scriptable86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Array" + "'", str89, "Array");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(scriptable91);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        boolean boolean9 = nativeArray1.hasPrototypeMap();
        java.lang.Object[] objArray10 = nativeArray1.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        boolean boolean24 = nativeArray15.hasPrototypeMap();
        java.lang.Object[] objArray25 = nativeArray15.getIds();
        int int26 = nativeArray15.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        java.lang.Object obj49 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.Object[] objArray50 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean51 = nativeArray32.isSealed();
        java.lang.Object obj52 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray32);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "Array", true);
        java.lang.Object[] objArray56 = nativeArray32.getIds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        nativeArray8.preventExtensions();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "Array", false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = nativeArray8.remove(0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "hi!");
        long long48 = nativeArray43.jsGet_length();
        boolean boolean49 = nativeArray4.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray4.setAttributes("hi!", 1);
        com.google.javascript.rhino.head.Context context53 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        nativeArray55.delete((int) (byte) 1);
        boolean boolean62 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "");
        java.lang.String str63 = nativeArray55.getClassName();
        nativeArray4.defineOwnProperties(context53, (com.google.javascript.rhino.head.ScriptableObject) nativeArray55);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray4.activatePrototypeMap(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Array" + "'", str63, "Array");
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable30 = nativeArray29.getParentScope();
        java.lang.Object[] objArray31 = nativeArray29.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj44 = nativeArray36.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        java.lang.Object obj45 = nativeArray29.getAssociatedValue((java.lang.Object) nativeArray36);
        com.google.javascript.rhino.head.Scriptable scriptable46 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        nativeArray29.delete(2);
        int int49 = nativeArray29.size();
        java.lang.String str50 = nativeArray29.getClassName();
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        java.util.Iterator iterator52 = nativeArray29.iterator();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.initPrototypeValue((-1), "Array", (java.lang.Object) iterator52, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(scriptable30);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[length]");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(scriptable46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Array" + "'", str50, "Array");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(iterator52);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        nativeArray1.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        int int33 = nativeArray22.size();
        boolean boolean34 = nativeArray1.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj47 = nativeArray39.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        long long53 = nativeArray50.getLength();
        nativeArray50.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        java.lang.Object[] objArray65 = nativeArray59.getAllIds();
        nativeArray59.delete("");
        java.lang.Object obj68 = nativeArray44.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray59);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "hi!");
        com.google.javascript.rhino.head.Context context71 = null;
        com.google.javascript.rhino.head.Scriptable scriptable72 = null;
        java.lang.Object[] objArray73 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable72);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray78, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray83.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj86 = nativeArray78.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray83);
        com.google.javascript.rhino.head.Callable callable89 = null;
        nativeArray78.setGetterOrSetter("hi!", 0, callable89, false);
        com.google.javascript.rhino.head.Scriptable scriptable92 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray78);
        nativeArray44.defineOwnProperty(context71, (java.lang.Object) scriptable72, (com.google.javascript.rhino.head.ScriptableObject) nativeArray78);
        long long94 = nativeArray44.getLength();
        int int95 = nativeArray44.size();
        java.lang.Object obj96 = nativeArray1.get((java.lang.Object) nativeArray44);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[length]");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNull(scriptable92);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1L + "'", long94 == 1L);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
        org.junit.Assert.assertNull(obj96);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray69, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int75 = nativeArray73.lastIndexOf((java.lang.Object) (short) 10);
        long long76 = nativeArray73.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray73, "", true);
        boolean boolean80 = nativeArray73.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable84 = nativeArray83.getParentScope();
        java.lang.Object[] objArray85 = nativeArray83.getIds();
        boolean boolean86 = nativeArray83.isEmpty();
        boolean boolean87 = nativeArray73.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray83);
        boolean boolean88 = nativeArray66.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray73);
        java.lang.Object[] objArray89 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray66);
        java.lang.Object obj90 = nativeArray1.get((java.lang.Object) nativeArray66);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(scriptable84);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.String str34 = nativeArray24.getTypeOf();
        nativeArray24.preventExtensions();
        java.util.ListIterator listIterator36 = nativeArray24.listIterator();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        nativeArray38.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj58 = nativeArray50.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        boolean boolean59 = nativeArray50.hasPrototypeMap();
        java.lang.Object[] objArray60 = nativeArray50.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int64 = nativeArray62.lastIndexOf((java.lang.Object) (short) 10);
        long long65 = nativeArray62.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray62, "", true);
        boolean boolean69 = nativeArray62.hasPrototypeMap();
        java.lang.reflect.Method method72 = null;
        java.lang.reflect.Method method73 = null;
        nativeArray62.defineProperty("hi!", (java.lang.Object) (-1L), method72, method73, (int) (byte) 10);
        boolean boolean77 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray62, "");
        com.google.javascript.rhino.head.Scriptable scriptable78 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        nativeArray62.setAttributes("", 4);
        nativeArray62.delete(10);
        java.lang.Object obj84 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) nativeArray62);
        boolean boolean85 = nativeArray38.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        boolean boolean86 = nativeArray24.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = nativeArray24.getAttributes((int) '4');
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 52 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "object" + "'", str34, "object");
        org.junit.Assert.assertNotNull(listIterator36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(scriptable78);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        boolean boolean21 = nativeArray14.hasPrototypeMap();
        int int22 = nativeArray14.size();
        boolean boolean23 = nativeArray14.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable24 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray14);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray14.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method32 = null;
        java.lang.reflect.Method method33 = null;
        nativeArray14.defineProperty("hi!", (java.lang.Object) nativeArray31, method32, method33, 0);
        boolean boolean36 = nativeArray1.contains((java.lang.Object) method32);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray42, (java.lang.Object) (-1));
        java.lang.Object obj48 = nativeArray42.getGetterOrSetter("object", (int) (short) 0, true);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "");
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "object");
        java.lang.reflect.Method method53 = null;
        java.lang.reflect.Method method54 = null;
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.defineProperty("hi!", (java.lang.Object) nativeArray42, method53, method54, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 52");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(scriptable24);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(obj48);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "hi!");
        long long48 = nativeArray43.jsGet_length();
        boolean boolean49 = nativeArray4.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.Scriptable scriptable50 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.activatePrototypeMap((int) (short) 100);
        boolean boolean56 = nativeArray43.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj70 = nativeArray62.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        boolean boolean71 = nativeArray62.hasPrototypeMap();
        java.lang.Object[] objArray72 = nativeArray62.getIds();
        boolean boolean73 = nativeArray62.isEmpty();
        boolean boolean74 = nativeArray62.isExtensible();
        java.lang.Integer[] intArray75 = nativeArray62.getIndexIds();
        // The following exception was thrown during execution in test generation
        try {
            int int76 = nativeArray43.getAttributes((int) (short) 0, (com.google.javascript.rhino.head.Scriptable) nativeArray62);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 0 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray75);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray20 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        nativeArray23.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 0, (java.lang.Object) nativeArray31);
        java.lang.Object[] objArray40 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.Scriptable scriptable41 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object[] objArray42 = nativeArray1.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) (-1));
        java.lang.Object obj53 = nativeArray47.getGetterOrSetter("object", (int) (short) 0, true);
        nativeArray47.setAttributes(1, (int) (short) 1);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray47);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.initPrototypeMethod((java.lang.Object) scriptable57, (int) (byte) 100, "object", 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, length]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[0, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[0, hi!]");
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[0, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[0, hi!]");
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(scriptable57);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        boolean boolean50 = nativeArray43.hasPrototypeMap();
        java.lang.reflect.Method method53 = null;
        java.lang.reflect.Method method54 = null;
        nativeArray43.defineProperty("hi!", (java.lang.Object) (-1L), method53, method54, (int) (byte) 10);
        java.lang.Object obj58 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, (int) (byte) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        java.lang.Object obj63 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, 8);
        nativeArray43.defineConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        com.google.javascript.rhino.head.Scriptable scriptable66 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray61, "hi!");
        java.lang.Object obj68 = nativeArray61.get(4);
        int int69 = nativeArray4.lastIndexOf((java.lang.Object) 4);
        com.google.javascript.rhino.head.Scriptable scriptable70 = nativeArray4.getPrototype();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(scriptable70);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        boolean boolean23 = nativeArray7.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray29, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj37 = nativeArray29.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray34);
        boolean boolean38 = nativeArray29.hasPrototypeMap();
        java.lang.Object[] objArray39 = nativeArray29.getIds();
        int int40 = nativeArray29.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj70 = nativeArray62.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        boolean boolean71 = nativeArray62.hasPrototypeMap();
        java.lang.Object[] objArray72 = nativeArray62.getIds();
        int int73 = nativeArray62.size();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int77 = nativeArray75.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray62.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray75);
        java.lang.Object obj79 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        boolean boolean80 = nativeArray29.containsAll((java.util.Collection) nativeArray62);
        java.util.ListIterator listIterator81 = nativeArray62.listIterator();
        com.google.javascript.rhino.head.Context context82 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray84 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray84.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray87, (java.lang.Object) (-1));
        java.lang.Object[] objArray90 = nativeArray84.getAllIds();
        java.lang.String str91 = nativeArray84.getTypeOf();
        int int92 = nativeArray84.size();
        nativeArray62.defineOwnProperties(context82, (com.google.javascript.rhino.head.ScriptableObject) nativeArray84);
        boolean boolean95 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray62, (-1));
        nativeArray62.delete("hi!");
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray7, "hi!", (java.lang.Object) nativeArray62);
        nativeArray62.sealObject();
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[hi!]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(listIterator81);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[length]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "object" + "'", str91, "object");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        int int8 = nativeArray1.size();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj25 = nativeArray17.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.Callable callable28 = null;
        nativeArray17.setGetterOrSetter("hi!", 0, callable28, false);
        nativeArray11.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 10);
        java.util.ListIterator listIterator33 = nativeArray17.listIterator();
        java.lang.Object obj34 = nativeArray1.get(0, (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj48 = nativeArray40.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean49 = nativeArray40.hasPrototypeMap();
        java.lang.Object[] objArray50 = nativeArray40.getIds();
        int int51 = nativeArray40.size();
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray57, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj65 = nativeArray57.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        boolean boolean66 = nativeArray57.hasPrototypeMap();
        java.lang.Object[] objArray67 = nativeArray57.getIds();
        int int68 = nativeArray57.size();
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int72 = nativeArray70.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray57.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray70);
        java.lang.Object obj74 = nativeArray40.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray57);
        java.lang.Object[] objArray75 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray57);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, 0, (java.lang.Object) objArray75);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int80 = nativeArray78.lastIndexOf((java.lang.Object) (short) 10);
        long long81 = nativeArray78.getLength();
        nativeArray78.delete((int) (byte) 1);
        boolean boolean84 = nativeArray78.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable88 = nativeArray87.getParentScope();
        java.lang.Object[] objArray89 = nativeArray87.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray78, "", (java.lang.Object) nativeArray87, 0);
        java.lang.Object[] objArray92 = nativeArray78.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable93 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray78);
        nativeArray78.sealObject();
        nativeArray17.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray78);
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(listIterator33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[hi!]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[hi!]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 1L + "'", long81 == 1L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(scriptable88);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[null]");
        org.junit.Assert.assertNull(scriptable93);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Object[] objArray10 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean25 = nativeArray16.hasPrototypeMap();
        java.lang.Object[] objArray26 = nativeArray16.getIds();
        int int27 = nativeArray16.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray16.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray34.getParentScope();
        java.lang.Object[] objArray36 = nativeArray34.getIds();
        boolean boolean37 = nativeArray34.isEmpty();
        nativeArray1.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) boolean37);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable49 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        nativeArray52.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj81 = nativeArray73.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        boolean boolean82 = nativeArray73.hasPrototypeMap();
        java.lang.Object[] objArray83 = nativeArray73.getIds();
        int int84 = nativeArray73.size();
        boolean boolean85 = nativeArray52.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray73);
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject87 = nativeArray43.exportAsJSClass(10, (com.google.javascript.rhino.head.Scriptable) nativeArray73, false);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.setGetterOrSetter("", (int) ' ', (com.google.javascript.rhino.head.Callable) idFunctionObject87, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNull(scriptable49);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[hi!]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(idFunctionObject87);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        nativeArray1.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        int int33 = nativeArray22.size();
        boolean boolean34 = nativeArray1.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "hi!", (java.lang.Object) 1.0f, 1);
        java.lang.Object obj40 = null;
        nativeArray22.defineProperty("Array", obj40, (int) (short) 10);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", (java.lang.Object) 100);
        java.lang.Object obj18 = nativeArray11.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray14);
        java.lang.Object[] objArray19 = nativeArray14.toArray();
        nativeArray4.setAttributes((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray14, (int) (short) 0);
        boolean boolean22 = nativeArray14.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        nativeArray25.delete((int) (byte) 1);
        java.lang.Integer[] intArray31 = nativeArray25.getIndexIds();
        java.lang.Object obj33 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "hi!", obj33);
        java.lang.Object obj36 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable45 = null;
        java.lang.Object[] objArray46 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable45);
        java.lang.Object[] objArray47 = nativeArray38.toArray(objArray46);
        com.google.javascript.rhino.head.Scriptable scriptable48 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray38);
        boolean boolean49 = nativeArray25.contains((java.lang.Object) nativeArray38);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        nativeArray51.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj80 = nativeArray72.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray77);
        boolean boolean81 = nativeArray72.hasPrototypeMap();
        java.lang.Object[] objArray82 = nativeArray72.getIds();
        int int83 = nativeArray72.size();
        boolean boolean84 = nativeArray51.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray72);
        boolean boolean85 = nativeArray72.avoidObjectDetection();
        java.util.Iterator iterator86 = nativeArray72.iterator();
        boolean boolean87 = nativeArray25.contains((java.lang.Object) iterator86);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "");
        nativeArray25.delete((int) ' ');
        java.lang.Object obj92 = null;
        nativeArray14.putConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray25, obj92);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray25.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[null]");
        org.junit.Assert.assertNotNull(scriptable48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[hi!]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(iterator86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray5, "");
        boolean boolean10 = nativeArray1.has(100, scriptable9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean25 = nativeArray16.hasPrototypeMap();
        java.lang.Object[] objArray26 = nativeArray16.getIds();
        int int27 = nativeArray16.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj57 = nativeArray49.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray54);
        boolean boolean58 = nativeArray49.hasPrototypeMap();
        java.lang.Object[] objArray59 = nativeArray49.getIds();
        int int60 = nativeArray49.size();
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int64 = nativeArray62.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray49.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        java.lang.Object obj66 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        boolean boolean67 = nativeArray16.containsAll((java.util.Collection) nativeArray49);
        java.lang.Object obj68 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        nativeArray1.delete((int) (short) -1);
        boolean boolean71 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 13);
        // The following exception was thrown during execution in test generation
        try {
            int int75 = nativeArray1.getAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray74);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property Array not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        int int17 = nativeArray1.size();
        com.google.javascript.rhino.head.Scriptable scriptable19 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.activatePrototypeMap((int) ' ');
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", true);
        boolean boolean30 = nativeArray23.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable31 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        java.lang.Object[] objArray40 = nativeArray34.getAllIds();
        nativeArray34.delete("");
        long long43 = nativeArray34.getLength();
        boolean boolean45 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, (int) (short) 10);
        nativeArray34.delete(2);
        boolean boolean48 = nativeArray23.has(13, (com.google.javascript.rhino.head.Scriptable) nativeArray34);
        int int49 = nativeArray1.lastIndexOf((java.lang.Object) nativeArray34);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray34.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(scriptable31);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[length]");
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean50 = nativeArray41.hasPrototypeMap();
        java.lang.Object[] objArray51 = nativeArray41.getIds();
        int int52 = nativeArray41.size();
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int56 = nativeArray54.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray41.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray54);
        java.lang.Object obj58 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        java.lang.Object[] objArray59 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        boolean boolean61 = nativeArray24.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        long long67 = nativeArray64.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable71 = null;
        java.lang.Object[] objArray72 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable71);
        java.lang.Object[] objArray73 = nativeArray64.toArray(objArray72);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        long long79 = nativeArray76.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, "", true);
        boolean boolean83 = nativeArray76.hasPrototypeMap();
        int int84 = nativeArray76.size();
        boolean boolean85 = nativeArray76.isEmpty();
        boolean boolean87 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, "Array");
        java.lang.Object obj88 = nativeArray64.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object obj89 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        boolean boolean90 = nativeArray9.contains((java.lang.Object) "");
        boolean boolean91 = nativeArray9.hasPrototypeMap();
        java.util.Iterator iterator92 = nativeArray9.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = nativeArray9.remove((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[null]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1L + "'", long79 == 1L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(iterator92);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator4 = nativeArray1.iterator();
        boolean boolean5 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        boolean boolean20 = nativeArray11.hasPrototypeMap();
        java.lang.Object[] objArray21 = nativeArray11.getIds();
        int int22 = nativeArray11.size();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean36 = nativeArray27.hasPrototypeMap();
        java.lang.Object[] objArray37 = nativeArray27.getIds();
        int int38 = nativeArray27.size();
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray49.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj52 = nativeArray44.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        boolean boolean53 = nativeArray44.hasPrototypeMap();
        java.lang.Object[] objArray54 = nativeArray44.getIds();
        int int55 = nativeArray44.size();
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray44.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray57);
        java.lang.Object obj61 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        boolean boolean62 = nativeArray11.containsAll((java.util.Collection) nativeArray44);
        int int64 = nativeArray44.getAttributes("hi!");
        boolean boolean66 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "hi!");
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) "hi!");
        nativeArray1.delete("");
        org.junit.Assert.assertNotNull(iterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        java.lang.Object[] objArray21 = nativeArray17.getAllIds();
        java.lang.Object obj23 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "");
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        java.lang.Object[] objArray40 = nativeArray34.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable41 = nativeArray34.getParentScope();
        boolean boolean42 = nativeArray26.containsAll((java.util.Collection) nativeArray34);
        nativeArray34.delete("Array");
        nativeArray17.setAttributes((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray34, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list49 = nativeArray17.subList((int) (short) 100, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[length]");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        java.lang.Object[] objArray15 = nativeArray1.toArray();
        nativeArray1.preventExtensions();
        com.google.javascript.rhino.head.Context context17 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int21 = nativeArray19.lastIndexOf((java.lang.Object) (short) 10);
        long long22 = nativeArray19.getLength();
        nativeArray19.delete((int) (byte) 1);
        boolean boolean25 = nativeArray19.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        int int41 = nativeArray30.size();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj54 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean55 = nativeArray46.hasPrototypeMap();
        java.lang.Object[] objArray56 = nativeArray46.getIds();
        int int57 = nativeArray46.size();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj71 = nativeArray63.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray68);
        boolean boolean72 = nativeArray63.hasPrototypeMap();
        java.lang.Object[] objArray73 = nativeArray63.getIds();
        int int74 = nativeArray63.size();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray63.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object obj80 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        boolean boolean81 = nativeArray30.containsAll((java.util.Collection) nativeArray63);
        nativeArray19.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray30);
        java.lang.Integer[] intArray83 = nativeArray19.getIndexIds();
        nativeArray1.defineOwnProperties(context17, (com.google.javascript.rhino.head.ScriptableObject) nativeArray19);
        java.lang.Object[] objArray85 = nativeArray1.getAllIds();
        boolean boolean86 = nativeArray1.isExtensible();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[hi!]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[, length]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable59 = nativeArray58.getParentScope();
        java.lang.Object[] objArray60 = nativeArray58.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray65, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj73 = nativeArray65.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray70);
        java.lang.Object obj74 = nativeArray58.getAssociatedValue((java.lang.Object) nativeArray65);
        com.google.javascript.rhino.head.Scriptable scriptable75 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "hi!", (java.lang.Object) scriptable75);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = nativeArray37.getAttributes("");
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property  not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[length]");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(scriptable75);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.Callable callable35 = null;
        nativeArray24.setGetterOrSetter("hi!", 0, callable35, false);
        java.lang.Integer[] intArray38 = nativeArray24.getIndexIds();
        nativeArray17.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        nativeArray42.delete((int) (byte) 1);
        boolean boolean49 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "");
        nativeArray24.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray42, 13);
        nativeArray1.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray42);
        java.lang.Object[] objArray53 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!]");
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        java.lang.Object[] objArray4 = nativeArray1.getAllIds();
        boolean boolean5 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray7.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray10, (java.lang.Object) (-1));
        java.lang.Object[] objArray13 = nativeArray7.getAllIds();
        nativeArray7.delete("");
        long long16 = nativeArray7.getLength();
        boolean boolean18 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        nativeArray7.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable21 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray7);
        boolean boolean22 = nativeArray7.isExtensible();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray7, "");
        boolean boolean25 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray7);
        java.lang.Object[] objArray26 = nativeArray1.getAllIds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[length]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[length]");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(scriptable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[length]");
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) (byte) 100);
        boolean boolean3 = nativeArray1.isConst("Array");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = nativeArray1.remove(0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        java.lang.Object[] objArray42 = nativeArray36.getAllIds();
        nativeArray36.delete("");
        java.lang.Object obj45 = nativeArray21.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable48 = nativeArray21.getPrototype();
        com.google.javascript.rhino.head.Context context49 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        java.lang.Object[] objArray65 = nativeArray59.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray59.getParentScope();
        boolean boolean67 = nativeArray51.containsAll((java.util.Collection) nativeArray59);
        nativeArray21.defineOwnProperties(context49, (com.google.javascript.rhino.head.ScriptableObject) nativeArray51);
        java.lang.Object obj69 = nativeArray1.get((int) ' ', (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        com.google.javascript.rhino.head.Scriptable scriptable70 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray51);
        nativeArray51.preventExtensions();
        boolean boolean72 = nativeArray51.isSealed();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[length]");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(scriptable48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[null]");
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNull(scriptable70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        boolean boolean36 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "");
        nativeArray11.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray29, 13);
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray29.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable40 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        java.lang.Object[] objArray41 = nativeArray29.toArray();
        nativeArray29.setAttributes((int) (byte) 0, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray57, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj65 = nativeArray57.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        com.google.javascript.rhino.head.Callable callable68 = null;
        nativeArray57.setGetterOrSetter("hi!", 0, callable68, false);
        java.lang.Integer[] intArray71 = nativeArray57.getIndexIds();
        nativeArray50.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray57);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int77 = nativeArray75.lastIndexOf((java.lang.Object) (short) 10);
        long long78 = nativeArray75.getLength();
        nativeArray75.delete((int) (byte) 1);
        boolean boolean82 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray75, "");
        nativeArray57.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray75, 13);
        com.google.javascript.rhino.head.Scriptable scriptable85 = nativeArray75.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable86 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray75);
        java.lang.Object[] objArray87 = nativeArray75.toArray();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, (int) '4', (java.lang.Object) objArray87);
        java.util.Iterator iterator89 = nativeArray29.iterator();
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNotNull(scriptable40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 1L + "'", long78 == 1L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(scriptable85);
        org.junit.Assert.assertNotNull(scriptable86);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[null]");
        org.junit.Assert.assertNotNull(iterator89);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        java.lang.Object[] objArray13 = nativeArray1.getAllIds();
        java.lang.String str14 = nativeArray1.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray17.getParentScope();
        java.lang.Object[] objArray19 = nativeArray17.getIds();
        boolean boolean20 = nativeArray17.avoidObjectDetection();
        java.lang.Object obj24 = nativeArray17.getGetterOrSetter("", 0, true);
        boolean boolean25 = nativeArray17.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator30 = nativeArray27.iterator();
        boolean boolean31 = nativeArray27.isSealed();
        nativeArray1.putConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) boolean31);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable41 = null;
        java.lang.Object[] objArray42 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable41);
        java.lang.Object[] objArray43 = nativeArray34.toArray(objArray42);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int48 = nativeArray46.lastIndexOf((java.lang.Object) (short) 10);
        long long49 = nativeArray46.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, "", true);
        boolean boolean53 = nativeArray46.hasPrototypeMap();
        int int54 = nativeArray46.size();
        boolean boolean55 = nativeArray46.isEmpty();
        boolean boolean57 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, "Array");
        java.lang.Object obj58 = nativeArray34.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        nativeArray34.setAttributes("Array", 1);
        int int62 = nativeArray34.size();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        long long67 = nativeArray64.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "", true);
        boolean boolean71 = nativeArray64.hasPrototypeMap();
        int int72 = nativeArray64.size();
        boolean boolean73 = nativeArray64.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable74 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray64);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable78 = nativeArray64.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method82 = null;
        java.lang.reflect.Method method83 = null;
        nativeArray64.defineProperty("hi!", (java.lang.Object) nativeArray81, method82, method83, 0);
        boolean boolean86 = nativeArray81.isSealed();
        boolean boolean87 = nativeArray34.contains((java.lang.Object) nativeArray81);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean88 = nativeArray17.addAll((java.util.Collection) nativeArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, length]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Array" + "'", str14, "Array");
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(iterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 1L + "'", long49 == 1L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(scriptable74);
        org.junit.Assert.assertNull(scriptable78);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        long long13 = nativeArray1.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        boolean boolean21 = nativeArray15.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj34 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        boolean boolean35 = nativeArray26.hasPrototypeMap();
        java.lang.Object[] objArray36 = nativeArray26.getIds();
        int int37 = nativeArray26.size();
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray42, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj50 = nativeArray42.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        boolean boolean51 = nativeArray42.hasPrototypeMap();
        java.lang.Object[] objArray52 = nativeArray42.getIds();
        int int53 = nativeArray42.size();
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj67 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        boolean boolean68 = nativeArray59.hasPrototypeMap();
        java.lang.Object[] objArray69 = nativeArray59.getIds();
        int int70 = nativeArray59.size();
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int74 = nativeArray72.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray59.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        java.lang.Object obj76 = nativeArray42.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray59);
        boolean boolean77 = nativeArray26.containsAll((java.util.Collection) nativeArray59);
        nativeArray15.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        java.util.Iterator iterator79 = nativeArray15.iterator();
        int int80 = nativeArray1.indexOf((java.lang.Object) iterator79);
        java.lang.String str81 = nativeArray1.getTypeOf();
        nativeArray1.activatePrototypeMap((int) (short) 10);
        java.lang.Object[] objArray84 = nativeArray1.getIds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[hi!]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(iterator79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "object" + "'", str81, "object");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        boolean boolean49 = nativeArray42.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        java.lang.Object[] objArray57 = nativeArray51.getAllIds();
        nativeArray51.delete("");
        boolean boolean60 = nativeArray42.contains((java.lang.Object) "");
        boolean boolean61 = nativeArray4.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        com.google.javascript.rhino.head.Context context62 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        long long67 = nativeArray64.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "", true);
        boolean boolean71 = nativeArray64.hasPrototypeMap();
        boolean boolean72 = nativeArray64.isExtensible();
        nativeArray4.defineOwnProperties(context62, (com.google.javascript.rhino.head.ScriptableObject) nativeArray64);
        boolean boolean74 = nativeArray4.isSealed();
        java.lang.Object[] objArray75 = nativeArray4.toArray();
        java.lang.String str76 = nativeArray4.getTypeOf();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[length]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[null]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "object" + "'", str76, "object");
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        boolean boolean15 = nativeArray4.isEmpty();
        boolean boolean16 = nativeArray4.isExtensible();
        java.lang.Integer[] intArray17 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        java.lang.Object[] objArray34 = nativeArray28.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray28.getParentScope();
        boolean boolean36 = nativeArray20.containsAll((java.util.Collection) nativeArray28);
        nativeArray28.delete("Array");
        boolean boolean40 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, (int) 'a');
        nativeArray4.defineProperty("hi!", (java.lang.Object) 'a', 10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list45 = nativeArray4.subList((int) (short) 100, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null]");
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        int int17 = nativeArray1.size();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list20 = nativeArray1.subList(1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray43.getParentScope();
        boolean boolean51 = nativeArray35.containsAll((java.util.Collection) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj64 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean65 = nativeArray56.hasPrototypeMap();
        java.lang.Object[] objArray66 = nativeArray56.getIds();
        java.lang.Object[] objArray67 = nativeArray43.toArray(objArray66);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "Array", (java.lang.Object) nativeArray43);
        boolean boolean69 = nativeArray22.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean70 = nativeArray9.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int74 = nativeArray72.lastIndexOf((java.lang.Object) (short) 10);
        boolean boolean75 = nativeArray9.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int79 = nativeArray77.lastIndexOf((java.lang.Object) (short) 10);
        long long80 = nativeArray77.getLength();
        nativeArray77.delete((int) (byte) 1);
        boolean boolean83 = nativeArray77.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray86 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable87 = nativeArray86.getParentScope();
        java.lang.Object[] objArray88 = nativeArray86.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray77, "", (java.lang.Object) nativeArray86, 0);
        nativeArray77.setAttributes("hi!", 10);
        boolean boolean94 = nativeArray77.hasPrototypeMap();
        long long95 = nativeArray77.jsGet_length();
        int int96 = nativeArray72.lastIndexOf((java.lang.Object) nativeArray77);
        java.lang.Object[] objArray97 = nativeArray72.getIds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[length]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[null]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 1L + "'", long80 == 1L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(scriptable87);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 1L + "'", long95 == 1L);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertNotNull(objArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray97), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray97), "[]");
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, (int) (short) 10);
        java.lang.Object obj19 = nativeArray4.get(0);
        com.google.javascript.rhino.head.Scriptable scriptable20 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray4.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(scriptable20);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        nativeArray38.delete((int) (byte) 1);
        boolean boolean45 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "");
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "Array", (java.lang.Object) nativeArray38);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj59 = nativeArray51.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        boolean boolean60 = nativeArray51.hasPrototypeMap();
        nativeArray38.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean62 = nativeArray51.isExtensible();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Context context36 = null;
        com.google.javascript.rhino.head.Scriptable scriptable37 = null;
        java.lang.Object[] objArray38 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable37);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        com.google.javascript.rhino.head.Callable callable54 = null;
        nativeArray43.setGetterOrSetter("hi!", 0, callable54, false);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray9.defineOwnProperty(context36, (java.lang.Object) scriptable37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray43);
        java.lang.Object[] objArray59 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        long long60 = nativeArray43.getLength();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!]");
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        nativeArray8.preventExtensions();
        boolean boolean20 = nativeArray8.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj33 = nativeArray25.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        boolean boolean34 = nativeArray25.hasPrototypeMap();
        java.lang.Object[] objArray35 = nativeArray25.getIds();
        int int36 = nativeArray25.size();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean50 = nativeArray41.hasPrototypeMap();
        java.lang.Object[] objArray51 = nativeArray41.getIds();
        int int52 = nativeArray41.size();
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj66 = nativeArray58.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        boolean boolean67 = nativeArray58.hasPrototypeMap();
        java.lang.Object[] objArray68 = nativeArray58.getIds();
        int int69 = nativeArray58.size();
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int73 = nativeArray71.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray58.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray71);
        java.lang.Object obj75 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray58);
        boolean boolean76 = nativeArray25.containsAll((java.util.Collection) nativeArray58);
        java.lang.Object obj77 = null;
        java.lang.Object obj78 = nativeArray58.get(obj77);
        nativeArray58.sealObject();
        nativeArray8.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Class<?> wildcardClass81 = nativeArray58.getClass();
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[hi!]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        java.lang.Object[] objArray15 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        java.lang.Object[] objArray40 = nativeArray34.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable41 = nativeArray34.getParentScope();
        boolean boolean42 = nativeArray26.containsAll((java.util.Collection) nativeArray34);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        long long48 = nativeArray45.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable52 = null;
        java.lang.Object[] objArray53 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable52);
        java.lang.Object[] objArray54 = nativeArray45.toArray(objArray53);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "hi!", (java.lang.Object) objArray53);
        nativeArray26.activatePrototypeMap((int) (byte) 10);
        boolean boolean58 = nativeArray18.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject60 = nativeArray1.exportAsJSClass(8, (com.google.javascript.rhino.head.Scriptable) nativeArray18, false);
        idFunctionObject60.sealObject();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(idFunctionObject60);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        long long35 = nativeArray32.getLength();
        nativeArray32.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        java.lang.Object[] objArray47 = nativeArray41.getAllIds();
        nativeArray41.delete("");
        java.lang.Object obj50 = nativeArray26.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable53 = nativeArray26.getPrototype();
        com.google.javascript.rhino.head.Context context54 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        long long59 = nativeArray56.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray67, (java.lang.Object) (-1));
        java.lang.Object[] objArray70 = nativeArray64.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable71 = nativeArray64.getParentScope();
        boolean boolean72 = nativeArray56.containsAll((java.util.Collection) nativeArray64);
        nativeArray26.defineOwnProperties(context54, (com.google.javascript.rhino.head.ScriptableObject) nativeArray56);
        nativeArray10.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray26, (int) (short) 10);
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject77 = nativeArray1.exportAsJSClass((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray26, true);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray79.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray82, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray87.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj90 = nativeArray82.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray87);
        com.google.javascript.rhino.head.Callable callable93 = null;
        nativeArray82.setGetterOrSetter("hi!", 0, callable93, false);
        java.lang.Integer[] intArray96 = nativeArray82.getIndexIds();
        nativeArray26.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray82);
        nativeArray82.sealObject();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[length]");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNull(scriptable53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[null]");
        org.junit.Assert.assertNull(scriptable71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(idFunctionObject77);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(intArray96);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Scriptable scriptable23 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Class<?> wildcardClass24 = nativeArray1.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        java.lang.Object[] objArray24 = nativeArray18.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable25 = nativeArray18.getParentScope();
        boolean boolean26 = nativeArray10.containsAll((java.util.Collection) nativeArray18);
        boolean boolean27 = nativeArray1.containsAll((java.util.Collection) nativeArray10);
        nativeArray1.delete("object");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        nativeArray9.delete((int) (short) -1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray38.getParentScope();
        java.lang.Object[] objArray40 = nativeArray38.getIds();
        boolean boolean41 = nativeArray38.isEmpty();
        java.lang.Object obj43 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, 8);
        com.google.javascript.rhino.head.Scriptable scriptable44 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray38);
        nativeArray9.defineConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        com.google.javascript.rhino.head.Context context46 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        long long51 = nativeArray48.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        java.lang.Object[] objArray62 = nativeArray56.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable63 = nativeArray56.getParentScope();
        boolean boolean64 = nativeArray48.containsAll((java.util.Collection) nativeArray56);
        nativeArray56.delete("Array");
        boolean boolean68 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, (int) 'a');
        boolean boolean69 = nativeArray56.hasPrototypeMap();
        boolean boolean70 = nativeArray56.isExtensible();
        nativeArray9.defineOwnProperties(context46, (com.google.javascript.rhino.head.ScriptableObject) nativeArray56);
        long long72 = nativeArray9.getLength();
        boolean boolean74 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (int) (byte) -1);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) (byte) 100);
        boolean boolean78 = nativeArray76.isConst("Array");
        java.lang.Object obj79 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) nativeArray76);
        nativeArray76.setAttributes((int) (byte) 1, 0);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[null]");
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(obj79);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        com.google.javascript.rhino.head.Callable callable34 = null;
        nativeArray23.setGetterOrSetter("hi!", 0, callable34, false);
        nativeArray17.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray23, (int) (short) 10);
        java.lang.Object obj39 = null;
        int int40 = nativeArray17.lastIndexOf(obj39);
        boolean boolean41 = nativeArray4.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        nativeArray4.preventExtensions();
        java.lang.Object[] objArray43 = nativeArray4.toArray();
        boolean boolean44 = nativeArray4.isSealed();
        java.lang.Object obj46 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable4 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object obj6 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 2);
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean9 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", true);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        nativeArray14.delete((int) (byte) 1);
        java.lang.Integer[] intArray20 = nativeArray14.getIndexIds();
        java.lang.Object obj22 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "hi!", obj22);
        boolean boolean25 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray43.getParentScope();
        boolean boolean51 = nativeArray35.containsAll((java.util.Collection) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj64 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean65 = nativeArray56.hasPrototypeMap();
        java.lang.Object[] objArray66 = nativeArray56.getIds();
        java.lang.Object[] objArray67 = nativeArray43.toArray(objArray66);
        boolean boolean69 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "Array");
        java.lang.Object obj70 = nativeArray30.get(2, (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        java.lang.Object obj71 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) nativeArray30);
        boolean boolean73 = nativeArray30.isConst("hi!");
        java.util.ListIterator listIterator75 = nativeArray30.listIterator((int) (short) 1);
        java.lang.Object[] objArray76 = nativeArray30.getAllIds();
        java.lang.Object[] objArray77 = nativeArray1.toArray(objArray76);
        org.junit.Assert.assertNull(scriptable4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(scriptable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[null]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(listIterator75);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[null, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[null, length]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[null, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[null, length]");
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty(scriptable18, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        boolean boolean22 = nativeArray15.hasPrototypeMap();
        java.util.ListIterator listIterator23 = nativeArray15.listIterator();
        boolean boolean24 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        boolean boolean25 = nativeArray1.hasPrototypeMap();
        java.lang.Object[] objArray26 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        nativeArray42.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        java.lang.Object[] objArray57 = nativeArray51.getAllIds();
        nativeArray51.delete("");
        java.lang.Object obj60 = nativeArray36.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        nativeArray36.delete((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean63 = nativeArray1.add((java.lang.Object) nativeArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(listIterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[length]");
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int21 = nativeArray19.lastIndexOf((java.lang.Object) (short) 10);
        long long22 = nativeArray19.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        nativeArray38.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.getAllIds();
        nativeArray47.delete("");
        java.lang.Object obj56 = nativeArray32.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable59 = nativeArray32.getPrototype();
        com.google.javascript.rhino.head.Context context60 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int64 = nativeArray62.lastIndexOf((java.lang.Object) (short) 10);
        long long65 = nativeArray62.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray62, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) (-1));
        java.lang.Object[] objArray76 = nativeArray70.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable77 = nativeArray70.getParentScope();
        boolean boolean78 = nativeArray62.containsAll((java.util.Collection) nativeArray70);
        nativeArray32.defineOwnProperties(context60, (com.google.javascript.rhino.head.ScriptableObject) nativeArray62);
        java.lang.Object obj80 = nativeArray1.associateValue((java.lang.Object) nativeArray19, (java.lang.Object) nativeArray32);
        com.google.javascript.rhino.head.Scriptable scriptable81 = null;
        java.lang.Object[] objArray82 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable81);
        int int83 = nativeArray32.lastIndexOf((java.lang.Object) scriptable81);
        java.lang.Object obj85 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "object");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "hi!", false);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: TypeError: redeclaration of const hi!.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[length]");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[null]");
        org.junit.Assert.assertNull(scriptable77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        com.google.javascript.rhino.head.Callable callable34 = null;
        nativeArray23.setGetterOrSetter("hi!", 0, callable34, false);
        nativeArray17.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray23, (int) (short) 10);
        java.lang.Object obj39 = null;
        int int40 = nativeArray17.lastIndexOf(obj39);
        boolean boolean41 = nativeArray4.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        nativeArray4.preventExtensions();
        java.lang.Object[] objArray43 = nativeArray4.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray46.getParentScope();
        java.lang.Object[] objArray48 = nativeArray46.getIds();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, 0, (java.lang.Object) objArray48);
        java.lang.String str50 = nativeArray4.getClassName();
        long long51 = nativeArray4.getLength();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Array" + "'", str50, "Array");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.Callable callable35 = null;
        nativeArray24.setGetterOrSetter("hi!", 0, callable35, false);
        java.lang.Integer[] intArray38 = nativeArray24.getIndexIds();
        nativeArray17.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        nativeArray42.delete((int) (byte) 1);
        boolean boolean49 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "");
        nativeArray24.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray42, 13);
        nativeArray1.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray42);
        java.util.Iterator iterator53 = nativeArray42.iterator();
        nativeArray42.preventExtensions();
        nativeArray42.delete("hi!");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(iterator53);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj8 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        nativeArray10.delete((int) (byte) 1);
        boolean boolean17 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "");
        java.lang.Object[] objArray18 = nativeArray10.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj22 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable23 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray20);
        java.lang.String str24 = nativeArray20.getClassName();
        nativeArray20.setAttributes("", (int) (byte) 1);
        java.lang.Object[] objArray28 = nativeArray20.getAllIds();
        java.lang.Object[] objArray29 = nativeArray10.toArray(objArray28);
        java.lang.Object[] objArray30 = nativeArray4.toArray(objArray28);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (-1) + "'", obj8, (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Array" + "'", str24, "Array");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[null, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[null, length]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null, length]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[null, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[null, length]");
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean28 = nativeArray11.isConst("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator listIterator30 = nativeArray11.listIterator((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Object[] objArray10 = nativeArray1.toArray();
        java.lang.Object obj12 = nativeArray1.get(0);
        nativeArray1.delete((int) (short) -1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNull(obj12);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        nativeArray1.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        int int33 = nativeArray22.size();
        boolean boolean34 = nativeArray1.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        java.lang.Object[] objArray43 = nativeArray37.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray37.getParentScope();
        com.google.javascript.rhino.head.Context context45 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable55 = nativeArray47.getParentScope();
        java.util.ListIterator listIterator56 = nativeArray47.listIterator();
        nativeArray37.defineOwnProperties(context45, (com.google.javascript.rhino.head.ScriptableObject) nativeArray47);
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "hi!", (java.lang.Object) nativeArray47, 13);
        java.lang.Object[] objArray60 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray47);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertNotNull(listIterator56);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.Scriptable scriptable26 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        boolean boolean55 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "hi!");
        nativeArray32.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray51, 8);
        nativeArray1.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        com.google.javascript.rhino.head.Scriptable scriptable60 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator66 = nativeArray63.iterator();
        nativeArray32.defineProperty("object", (java.lang.Object) nativeArray63, (int) (short) 0);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int75 = nativeArray73.lastIndexOf((java.lang.Object) (short) 10);
        long long76 = nativeArray73.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray73, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray84 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray81.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray84, (java.lang.Object) (-1));
        java.lang.Object[] objArray87 = nativeArray81.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable88 = nativeArray81.getParentScope();
        boolean boolean89 = nativeArray73.containsAll((java.util.Collection) nativeArray81);
        com.google.javascript.rhino.head.Scriptable scriptable90 = nativeArray81.getParentScope();
        boolean boolean91 = nativeArray71.containsAll((java.util.Collection) nativeArray81);
        nativeArray81.activatePrototypeMap((int) '4');
        java.lang.Object obj94 = nativeArray63.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray81);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = nativeArray63.getAttributes(13);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 13 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(scriptable60);
        org.junit.Assert.assertNotNull(iterator66);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[null]");
        org.junit.Assert.assertNull(scriptable88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(scriptable90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) 100);
        boolean boolean5 = nativeArray1.avoidObjectDetection();
        int int6 = nativeArray1.size();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        java.lang.Class<?> wildcardClass9 = nativeArray1.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        nativeArray9.delete((int) (short) -1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray(100L);
        java.lang.Object obj38 = nativeArray9.get((java.lang.Object) nativeArray37);
        com.google.javascript.rhino.head.Scriptable scriptable39 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.Context context40 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object[] objArray62 = nativeArray58.getAllIds();
        java.lang.Object obj64 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray58, "");
        boolean boolean65 = nativeArray58.avoidObjectDetection();
        nativeArray9.defineOwnProperties(context40, (com.google.javascript.rhino.head.ScriptableObject) nativeArray58);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[length]");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int21 = nativeArray19.lastIndexOf((java.lang.Object) (short) 10);
        long long22 = nativeArray19.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        nativeArray38.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.getAllIds();
        nativeArray47.delete("");
        java.lang.Object obj56 = nativeArray32.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable59 = nativeArray32.getPrototype();
        com.google.javascript.rhino.head.Context context60 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int64 = nativeArray62.lastIndexOf((java.lang.Object) (short) 10);
        long long65 = nativeArray62.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray62, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) (-1));
        java.lang.Object[] objArray76 = nativeArray70.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable77 = nativeArray70.getParentScope();
        boolean boolean78 = nativeArray62.containsAll((java.util.Collection) nativeArray70);
        nativeArray32.defineOwnProperties(context60, (com.google.javascript.rhino.head.ScriptableObject) nativeArray62);
        java.lang.Object obj80 = nativeArray1.associateValue((java.lang.Object) nativeArray19, (java.lang.Object) nativeArray32);
        com.google.javascript.rhino.head.Scriptable scriptable81 = null;
        java.lang.Object[] objArray82 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable81);
        int int83 = nativeArray32.lastIndexOf((java.lang.Object) scriptable81);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = nativeArray32.remove((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[length]");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[null]");
        org.junit.Assert.assertNull(scriptable77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray5, "");
        boolean boolean10 = nativeArray1.has(100, scriptable9);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int14 = nativeArray12.lastIndexOf((java.lang.Object) (short) 10);
        long long15 = nativeArray12.getLength();
        nativeArray12.delete((int) (byte) 1);
        boolean boolean18 = nativeArray12.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray21.getParentScope();
        java.lang.Object[] objArray23 = nativeArray21.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "", (java.lang.Object) nativeArray21, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        boolean boolean40 = nativeArray31.hasPrototypeMap();
        java.lang.Object[] objArray41 = nativeArray31.getIds();
        int int42 = nativeArray31.size();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray31.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        java.lang.Object obj48 = nativeArray12.get((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        com.google.javascript.rhino.head.Scriptable scriptable49 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        java.lang.Object[] objArray51 = nativeArray1.getAllIds();
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(scriptable49);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[length]");
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) 100);
        boolean boolean5 = nativeArray1.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        boolean boolean20 = nativeArray11.hasPrototypeMap();
        java.lang.Object[] objArray21 = nativeArray11.getIds();
        int int22 = nativeArray11.size();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray11.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Object[] objArray28 = nativeArray24.getAllIds();
        com.google.javascript.rhino.head.Context context29 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        java.lang.Object[] objArray37 = nativeArray31.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable38 = nativeArray31.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable39 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray31);
        nativeArray24.defineOwnProperties(context29, (com.google.javascript.rhino.head.ScriptableObject) nativeArray31);
        boolean boolean41 = nativeArray1.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        com.google.javascript.rhino.head.Scriptable scriptable42 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray31);
        java.lang.String str43 = nativeArray31.getClassName();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[length]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[null]");
        org.junit.Assert.assertNull(scriptable38);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(scriptable42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Array" + "'", str43, "Array");
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.Context context37 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        nativeArray9.defineOwnProperties(context37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray39);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int61 = nativeArray59.lastIndexOf((java.lang.Object) (short) 10);
        long long62 = nativeArray59.getLength();
        nativeArray59.delete((int) (byte) 1);
        boolean boolean65 = nativeArray59.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable69 = nativeArray68.getParentScope();
        java.lang.Object[] objArray70 = nativeArray68.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "", (java.lang.Object) nativeArray68, 0);
        java.lang.Object[] objArray73 = nativeArray59.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator78 = nativeArray75.iterator();
        nativeArray9.putConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) iterator78);
        boolean boolean81 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (int) (short) 10);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "");
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray88 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray85.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray88, (java.lang.Object) (-1));
        java.lang.Object obj91 = nativeArray9.get((java.lang.Object) (-1));
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(scriptable69);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[null]");
        org.junit.Assert.assertNotNull(iterator78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        nativeArray1.delete("Array");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj22 = nativeArray14.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray19);
        boolean boolean23 = nativeArray14.hasPrototypeMap();
        java.lang.Object[] objArray24 = nativeArray14.getIds();
        int int25 = nativeArray14.size();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        int int41 = nativeArray30.size();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj55 = nativeArray47.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        boolean boolean56 = nativeArray47.hasPrototypeMap();
        java.lang.Object[] objArray57 = nativeArray47.getIds();
        int int58 = nativeArray47.size();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int62 = nativeArray60.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray47.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray60);
        java.lang.Object obj64 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        boolean boolean65 = nativeArray14.containsAll((java.util.Collection) nativeArray47);
        java.lang.Object obj67 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int72 = nativeArray70.lastIndexOf((java.lang.Object) (short) 10);
        long long73 = nativeArray70.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray70, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray81, (java.lang.Object) (-1));
        java.lang.Object[] objArray84 = nativeArray78.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable85 = nativeArray78.getParentScope();
        boolean boolean86 = nativeArray70.containsAll((java.util.Collection) nativeArray78);
        nativeArray78.delete("Array");
        java.lang.Object[] objArray89 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray78);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "hi!", (java.lang.Object) objArray89);
        boolean boolean91 = nativeArray14.isExtensible();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.add(2, (java.lang.Object) boolean91);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1L + "'", long73 == 1L);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertNull(scriptable85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean23 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, (int) (short) 10);
        nativeArray12.delete(2);
        boolean boolean26 = nativeArray1.has(13, (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Scriptable scriptable27 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(scriptable9);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(scriptable27);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        boolean boolean4 = nativeArray1.isEmpty();
        nativeArray1.activatePrototypeMap(13);
        java.util.Iterator iterator7 = nativeArray1.iterator();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj21 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean22 = nativeArray13.hasPrototypeMap();
        java.lang.Object[] objArray23 = nativeArray13.getIds();
        int int24 = nativeArray13.size();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        int int41 = nativeArray30.size();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray30.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        java.lang.Object obj47 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        java.lang.Object[] objArray48 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray13);
        boolean boolean50 = nativeArray13.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int55 = nativeArray53.lastIndexOf((java.lang.Object) (short) 10);
        long long56 = nativeArray53.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray53, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable60 = null;
        java.lang.Object[] objArray61 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable60);
        java.lang.Object[] objArray62 = nativeArray53.toArray(objArray61);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int67 = nativeArray65.lastIndexOf((java.lang.Object) (short) 10);
        long long68 = nativeArray65.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray65, "", true);
        boolean boolean72 = nativeArray65.hasPrototypeMap();
        int int73 = nativeArray65.size();
        boolean boolean74 = nativeArray65.isEmpty();
        boolean boolean76 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray65, "Array");
        java.lang.Object obj77 = nativeArray53.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray65);
        java.lang.Object obj78 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray65);
        boolean boolean79 = nativeArray65.isExtensible();
        nativeArray1.setAttributes((-1), (com.google.javascript.rhino.head.Scriptable) nativeArray65, (int) (short) 0);
        java.lang.String str82 = nativeArray1.getTypeOf();
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(iterator7);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[null]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 1L + "'", long68 == 1L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "object" + "'", str82, "object");
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray(objArray7);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable13 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray10);
        nativeArray8.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray10);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray19, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj34 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        com.google.javascript.rhino.head.Callable callable37 = null;
        nativeArray26.setGetterOrSetter("hi!", 0, callable37, false);
        java.lang.Integer[] intArray40 = nativeArray26.getIndexIds();
        nativeArray19.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        long long47 = nativeArray44.getLength();
        nativeArray44.delete((int) (byte) 1);
        boolean boolean51 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "");
        nativeArray26.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray44, 13);
        java.util.ListIterator listIterator54 = nativeArray26.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean55 = nativeArray8.remove((java.lang.Object) listIterator54);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(scriptable13);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(listIterator54);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        java.lang.Object obj19 = nativeArray11.get((java.lang.Object) (byte) 10);
        nativeArray11.preventExtensions();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        com.google.javascript.rhino.head.Callable callable39 = null;
        nativeArray28.setGetterOrSetter("hi!", 0, callable39, false);
        nativeArray22.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray28, (int) (short) 10);
        boolean boolean45 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "object");
        nativeArray11.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray22);
        java.lang.Object[] objArray47 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.Scriptable scriptable49 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray22, "");
        nativeArray22.delete("object");
        com.google.javascript.rhino.head.Scriptable scriptable52 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray22);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNull(scriptable49);
        org.junit.Assert.assertNotNull(scriptable52);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.Callable callable15 = null;
        nativeArray4.setGetterOrSetter("hi!", 0, callable15, false);
        long long18 = nativeArray4.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "", false);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", true);
        boolean boolean30 = nativeArray23.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable34 = nativeArray33.getParentScope();
        java.lang.Object[] objArray35 = nativeArray33.getIds();
        boolean boolean36 = nativeArray33.isEmpty();
        boolean boolean37 = nativeArray23.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean39 = nativeArray33.isConst("object");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean40 = nativeArray4.remove((java.lang.Object) boolean39);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(scriptable34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int30 = nativeArray28.lastIndexOf((java.lang.Object) (short) 10);
        long long31 = nativeArray28.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        java.lang.Object[] objArray42 = nativeArray36.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray36.getParentScope();
        boolean boolean44 = nativeArray28.containsAll((java.util.Collection) nativeArray36);
        nativeArray36.delete("Array");
        java.lang.Object obj47 = nativeArray4.getAssociatedValue((java.lang.Object) nativeArray36);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "object", false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[null]");
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj10 = nativeArray4.getGetterOrSetter("object", (int) (short) 0, true);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        com.google.javascript.rhino.head.Callable callable39 = null;
        nativeArray28.setGetterOrSetter("hi!", 0, callable39, false);
        java.lang.Integer[] intArray42 = nativeArray28.getIndexIds();
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray28);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        long long48 = nativeArray45.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        java.lang.Object[] objArray59 = nativeArray53.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable60 = nativeArray53.getParentScope();
        boolean boolean61 = nativeArray45.containsAll((java.util.Collection) nativeArray53);
        nativeArray53.delete("Array");
        java.lang.Object obj64 = nativeArray21.getAssociatedValue((java.lang.Object) nativeArray53);
        boolean boolean65 = nativeArray14.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray66 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray21);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean67 = nativeArray4.retainAll((java.util.Collection) nativeArray21);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[null]");
        org.junit.Assert.assertNull(scriptable60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[hi!]");
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray6.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj17 = nativeArray9.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray14);
        boolean boolean18 = nativeArray9.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray21.getParentScope();
        java.lang.Object[] objArray23 = nativeArray21.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        java.lang.Object obj37 = nativeArray21.getAssociatedValue((java.lang.Object) nativeArray28);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable40 = nativeArray39.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable41 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray39);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        boolean boolean50 = nativeArray43.hasPrototypeMap();
        int int51 = nativeArray43.size();
        boolean boolean52 = nativeArray43.isEmpty();
        nativeArray39.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        java.lang.Object obj54 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) nativeArray39);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable62 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray56);
        int int63 = nativeArray39.lastIndexOf((java.lang.Object) scriptable62);
        boolean boolean64 = nativeArray9.has((int) ' ', (com.google.javascript.rhino.head.Scriptable) nativeArray39);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray39);
        com.google.javascript.rhino.head.Scriptable scriptable66 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray39);
        nativeArray39.sealObject();
        boolean boolean69 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "Array");
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[length]");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(scriptable40);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        boolean boolean5 = nativeArray1.hasPrototypeMap();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj33 = nativeArray25.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int38 = nativeArray36.lastIndexOf((java.lang.Object) (short) 10);
        long long39 = nativeArray36.getLength();
        nativeArray36.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48, (java.lang.Object) (-1));
        java.lang.Object[] objArray51 = nativeArray45.getAllIds();
        nativeArray45.delete("");
        java.lang.Object obj54 = nativeArray30.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable57 = nativeArray30.getPrototype();
        com.google.javascript.rhino.head.Context context58 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int62 = nativeArray60.lastIndexOf((java.lang.Object) (short) 10);
        long long63 = nativeArray60.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray60, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray71, (java.lang.Object) (-1));
        java.lang.Object[] objArray74 = nativeArray68.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable75 = nativeArray68.getParentScope();
        boolean boolean76 = nativeArray60.containsAll((java.util.Collection) nativeArray68);
        nativeArray30.defineOwnProperties(context58, (com.google.javascript.rhino.head.ScriptableObject) nativeArray60);
        nativeArray14.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray30, (int) (short) 10);
        java.lang.Object obj80 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray30);
        nativeArray30.delete((int) (short) 0);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "object", true);
        com.google.javascript.rhino.head.NativeArray nativeArray88 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray91 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray88.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray91, (java.lang.Object) (-1));
        java.lang.Object[] objArray94 = nativeArray88.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable95 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray88);
        nativeArray88.setAttributes((int) (short) 0, 2);
        java.lang.Object obj99 = nativeArray30.get((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray88);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[length]");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1L + "'", long63 == 1L);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[null]");
        org.junit.Assert.assertNull(scriptable75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[null]");
        org.junit.Assert.assertNull(scriptable95);
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        java.lang.Object[] objArray21 = nativeArray17.getAllIds();
        java.lang.Object obj23 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "");
        nativeArray17.delete("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int43 = nativeArray41.lastIndexOf((java.lang.Object) (short) 10);
        long long44 = nativeArray41.getLength();
        nativeArray41.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray53, (java.lang.Object) (-1));
        java.lang.Object[] objArray56 = nativeArray50.getAllIds();
        nativeArray50.delete("");
        java.lang.Object obj59 = nativeArray35.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray35.getPrototype();
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj67 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray65, "Array");
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, 8, (java.lang.Object) nativeArray65);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean69 = nativeArray17.addAll((java.util.Collection) nativeArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[length]");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[length]");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertNotNull(obj67);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        nativeArray1.setAttributes(1, (int) (short) 1);
        java.lang.Object[] objArray15 = nativeArray1.toArray();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        long long18 = nativeArray1.jsGet_length();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) ' ');
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj34 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int38 = nativeArray36.lastIndexOf((java.lang.Object) (short) 10);
        long long39 = nativeArray36.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable43 = null;
        java.lang.Object[] objArray44 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable43);
        java.lang.Object[] objArray45 = nativeArray36.toArray(objArray44);
        com.google.javascript.rhino.head.Scriptable scriptable46 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray36);
        nativeArray20.put((int) 'a', (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) scriptable46);
        boolean boolean48 = nativeArray1.containsAll((java.util.Collection) nativeArray20);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray53, (java.lang.Object) (-1));
        java.lang.Object obj57 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray53, "hi!");
        int int58 = nativeArray1.lastIndexOf((java.lang.Object) "hi!");
        int int59 = nativeArray1.size();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[null]");
        org.junit.Assert.assertNotNull(scriptable46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (-1) + "'", obj57, (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        nativeArray4.sealObject();
        java.lang.Object obj18 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, (int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int23 = nativeArray21.lastIndexOf((java.lang.Object) (short) 10);
        long long24 = nativeArray21.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        java.lang.Object[] objArray35 = nativeArray29.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray29.getParentScope();
        boolean boolean37 = nativeArray21.containsAll((java.util.Collection) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        long long43 = nativeArray40.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable47 = null;
        java.lang.Object[] objArray48 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable47);
        java.lang.Object[] objArray49 = nativeArray40.toArray(objArray48);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!", (java.lang.Object) objArray48);
        java.lang.String str51 = nativeArray21.getTypeOf();
        java.lang.Object[] objArray52 = nativeArray21.getAllIds();
        nativeArray4.defineConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray4.getParentScope();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[null]");
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "object" + "'", str51, "object");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[hi!, length]");
        org.junit.Assert.assertNull(scriptable54);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Object[] objArray10 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean25 = nativeArray16.hasPrototypeMap();
        java.lang.Object[] objArray26 = nativeArray16.getIds();
        int int27 = nativeArray16.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray16.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray34.getParentScope();
        java.lang.Object[] objArray36 = nativeArray34.getIds();
        boolean boolean37 = nativeArray34.isEmpty();
        nativeArray1.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) boolean37);
        long long39 = nativeArray1.getLength();
        java.lang.Object[] objArray40 = nativeArray1.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = nativeArray1.get((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        java.lang.String str21 = nativeArray4.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj34 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        boolean boolean35 = nativeArray26.hasPrototypeMap();
        java.lang.Object[] objArray36 = nativeArray26.getIds();
        int int37 = nativeArray26.size();
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray42, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj50 = nativeArray42.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        boolean boolean51 = nativeArray42.hasPrototypeMap();
        java.lang.Object[] objArray52 = nativeArray42.getIds();
        int int53 = nativeArray42.size();
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj67 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        boolean boolean68 = nativeArray59.hasPrototypeMap();
        java.lang.Object[] objArray69 = nativeArray59.getIds();
        int int70 = nativeArray59.size();
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int74 = nativeArray72.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray59.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        java.lang.Object obj76 = nativeArray42.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray59);
        boolean boolean77 = nativeArray26.containsAll((java.util.Collection) nativeArray59);
        com.google.javascript.rhino.head.Scriptable scriptable78 = nativeArray26.getParentScope();
        java.lang.Object[] objArray79 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        java.lang.Object[] objArray80 = nativeArray4.toArray(objArray79);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray(objArray80);
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int85 = nativeArray83.lastIndexOf((java.lang.Object) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = nativeArray81.addAll((java.util.Collection) nativeArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Array" + "'", str21, "Array");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[hi!]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(scriptable78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[null]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[null]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.Scriptable scriptable26 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        boolean boolean55 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "hi!");
        nativeArray32.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray51, 8);
        nativeArray1.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.activatePrototypeMap((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.Scriptable scriptable26 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        boolean boolean55 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "hi!");
        nativeArray32.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray51, 8);
        nativeArray1.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        com.google.javascript.rhino.head.Scriptable scriptable60 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.util.ListIterator listIterator61 = nativeArray32.listIterator();
        boolean boolean62 = nativeArray32.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        long long67 = nativeArray64.getLength();
        nativeArray64.delete((int) (byte) 1);
        boolean boolean70 = nativeArray64.isExtensible();
        com.google.javascript.rhino.head.Scriptable scriptable71 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray64);
        nativeArray32.setParentScope(scriptable71);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(scriptable60);
        org.junit.Assert.assertNotNull(listIterator61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(scriptable71);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable4 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object obj6 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 2);
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean9 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", true);
        boolean boolean14 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray17.getParentScope();
        java.lang.Object[] objArray19 = nativeArray17.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        java.lang.Object obj33 = nativeArray17.getAssociatedValue((java.lang.Object) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray35.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable37 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray35);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        boolean boolean46 = nativeArray39.hasPrototypeMap();
        int int47 = nativeArray39.size();
        boolean boolean48 = nativeArray39.isEmpty();
        nativeArray35.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray39);
        java.lang.Object obj50 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) nativeArray35);
        boolean boolean51 = nativeArray35.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "", (java.lang.Object) 100);
        java.lang.Object obj60 = nativeArray53.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray56);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "Array");
        boolean boolean63 = nativeArray35.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray56);
        boolean boolean64 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        java.lang.String str65 = nativeArray1.getTypeOf();
        org.junit.Assert.assertNull(scriptable4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(scriptable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[length]");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertNull(scriptable37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "object" + "'", str65, "object");
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray43.getParentScope();
        boolean boolean51 = nativeArray35.containsAll((java.util.Collection) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj64 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean65 = nativeArray56.hasPrototypeMap();
        java.lang.Object[] objArray66 = nativeArray56.getIds();
        java.lang.Object[] objArray67 = nativeArray43.toArray(objArray66);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "Array", (java.lang.Object) nativeArray43);
        boolean boolean69 = nativeArray22.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean70 = nativeArray9.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean72 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[length]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[null]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        boolean boolean36 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "");
        nativeArray11.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray29, 13);
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray29.getParentScope();
        java.lang.Object[] objArray40 = nativeArray29.getIds();
        java.lang.Object[] objArray41 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        nativeArray23.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.getAllIds();
        nativeArray32.delete("");
        java.lang.Object obj41 = nativeArray17.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray17.getPrototype();
        com.google.javascript.rhino.head.Context context45 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        nativeArray17.defineOwnProperties(context45, (com.google.javascript.rhino.head.ScriptableObject) nativeArray47);
        nativeArray1.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 10);
        java.lang.String str67 = nativeArray1.getTypeOf();
        java.lang.Object obj69 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) -1);
        boolean boolean70 = nativeArray1.hasPrototypeMap();
        java.lang.Object[] objArray71 = nativeArray1.toArray();
        int int73 = nativeArray1.getAttributes((int) (short) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.activatePrototypeMap((int) (short) 100);
        long long78 = nativeArray75.jsGet_length();
        boolean boolean80 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray75, "");
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray82.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray85, (java.lang.Object) (-1));
        java.lang.Object[] objArray88 = nativeArray82.toArray();
        java.lang.Object[] objArray89 = nativeArray75.toArray(objArray88);
        int int90 = nativeArray75.size();
        java.lang.Object obj91 = nativeArray1.getAssociatedValue((java.lang.Object) int90);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[length]");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "object" + "'", str67, "object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[null]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 1L + "'", long78 == 1L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[null]");
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[null]");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray20 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray(objArray20);
        com.google.javascript.rhino.head.Scriptable scriptable22 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray21);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, length]");
        org.junit.Assert.assertNull(scriptable22);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", (java.lang.Object) 100);
        java.lang.Object obj27 = nativeArray20.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray23);
        java.lang.Object[] objArray28 = nativeArray23.toArray();
        boolean boolean30 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "");
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        boolean boolean40 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, "");
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        java.lang.Object[] objArray57 = nativeArray51.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray51.getParentScope();
        boolean boolean59 = nativeArray43.containsAll((java.util.Collection) nativeArray51);
        com.google.javascript.rhino.head.Scriptable scriptable60 = nativeArray51.getParentScope();
        boolean boolean61 = nativeArray51.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable65 = nativeArray64.getParentScope();
        java.lang.Object[] objArray66 = nativeArray64.getIds();
        boolean boolean67 = nativeArray51.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.reflect.Method method68 = null;
        java.lang.reflect.Method method69 = null;
        nativeArray36.defineProperty("hi!", (java.lang.Object) nativeArray51, method68, method69, 8);
        nativeArray23.defineConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject74 = nativeArray11.exportAsJSClass((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray51, false);
        java.lang.Object obj76 = nativeArray11.get((long) (byte) 0);
        boolean boolean77 = nativeArray11.avoidObjectDetection();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[null]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[null]");
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(scriptable60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(scriptable65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(idFunctionObject74);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean50 = nativeArray41.hasPrototypeMap();
        java.lang.Object[] objArray51 = nativeArray41.getIds();
        int int52 = nativeArray41.size();
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int56 = nativeArray54.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray41.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray54);
        java.lang.Object obj58 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        java.lang.Object[] objArray59 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        boolean boolean61 = nativeArray24.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        long long67 = nativeArray64.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable71 = null;
        java.lang.Object[] objArray72 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable71);
        java.lang.Object[] objArray73 = nativeArray64.toArray(objArray72);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        long long79 = nativeArray76.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, "", true);
        boolean boolean83 = nativeArray76.hasPrototypeMap();
        int int84 = nativeArray76.size();
        boolean boolean85 = nativeArray76.isEmpty();
        boolean boolean87 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, "Array");
        java.lang.Object obj88 = nativeArray64.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object obj89 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        boolean boolean90 = nativeArray9.contains((java.lang.Object) "");
        boolean boolean91 = nativeArray9.hasPrototypeMap();
        boolean boolean93 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (-1));
        nativeArray9.delete((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj99 = nativeArray9.getGetterOrSetter("", 4, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[null]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1L + "'", long79 == 1L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj8 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        boolean boolean18 = nativeArray11.hasPrototypeMap();
        int int19 = nativeArray11.size();
        boolean boolean20 = nativeArray11.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj34 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        long long40 = nativeArray37.getLength();
        nativeArray37.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray31, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        java.lang.Object[] objArray52 = nativeArray46.getAllIds();
        nativeArray46.delete("");
        java.lang.Object obj55 = nativeArray31.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray31, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray31.getPrototype();
        com.google.javascript.rhino.head.Context context59 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int63 = nativeArray61.lastIndexOf((java.lang.Object) (short) 10);
        long long64 = nativeArray61.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        java.lang.Object[] objArray75 = nativeArray69.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable76 = nativeArray69.getParentScope();
        boolean boolean77 = nativeArray61.containsAll((java.util.Collection) nativeArray69);
        nativeArray31.defineOwnProperties(context59, (com.google.javascript.rhino.head.ScriptableObject) nativeArray61);
        java.lang.Object obj79 = nativeArray11.get((int) ' ', (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        java.lang.Integer[] intArray80 = nativeArray11.getIndexIds();
        java.lang.Object obj81 = nativeArray4.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean82 = nativeArray4.isEmpty();
        java.lang.Object[] objArray83 = nativeArray4.getIds();
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (-1) + "'", obj8, (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[length]");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[null]");
        org.junit.Assert.assertNull(scriptable76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[hi!]");
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        nativeArray1.delete((int) (byte) 0);
        java.lang.Class<?> wildcardClass17 = nativeArray1.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        com.google.javascript.rhino.head.Scriptable scriptable0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj2 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue(scriptable0, (java.lang.Object) 13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean40 = nativeArray21.isSealed();
        com.google.javascript.rhino.head.Scriptable scriptable41 = nativeArray21.getPrototype();
        nativeArray21.setAttributes("object", (int) (short) 10);
        java.lang.Integer[] intArray45 = nativeArray21.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable54 = null;
        java.lang.Object[] objArray55 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable54);
        java.lang.Object[] objArray56 = nativeArray47.toArray(objArray55);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int61 = nativeArray59.lastIndexOf((java.lang.Object) (short) 10);
        long long62 = nativeArray59.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "", true);
        boolean boolean66 = nativeArray59.hasPrototypeMap();
        int int67 = nativeArray59.size();
        boolean boolean68 = nativeArray59.isEmpty();
        boolean boolean70 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "Array");
        java.lang.Object obj71 = nativeArray47.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray59);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int75 = nativeArray73.lastIndexOf((java.lang.Object) (short) 10);
        long long76 = nativeArray73.getLength();
        nativeArray73.delete((int) (byte) 1);
        nativeArray73.delete("Array");
        nativeArray47.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray73);
        int int82 = nativeArray47.size();
        boolean boolean83 = nativeArray47.isExtensible();
        boolean boolean84 = nativeArray21.containsAll((java.util.Collection) nativeArray47);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[null]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        boolean boolean22 = nativeArray9.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean36 = nativeArray27.hasPrototypeMap();
        java.lang.Object[] objArray37 = nativeArray27.getIds();
        int int38 = nativeArray27.size();
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray49.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj52 = nativeArray44.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        boolean boolean53 = nativeArray44.hasPrototypeMap();
        java.lang.Object[] objArray54 = nativeArray44.getIds();
        int int55 = nativeArray44.size();
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray44.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray57);
        java.lang.Object obj61 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        boolean boolean62 = nativeArray44.isSealed();
        boolean boolean63 = nativeArray44.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray69, (java.lang.Object) (-1));
        java.lang.Object[] objArray72 = nativeArray66.getAllIds();
        boolean boolean73 = nativeArray44.has((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray66);
        nativeArray44.preventExtensions();
        int int75 = nativeArray9.indexOf((java.lang.Object) nativeArray44);
        java.lang.Object obj77 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[length]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        java.lang.Object[] objArray39 = nativeArray33.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable40 = nativeArray33.getParentScope();
        boolean boolean41 = nativeArray25.containsAll((java.util.Collection) nativeArray33);
        com.google.javascript.rhino.head.Scriptable scriptable42 = nativeArray33.getParentScope();
        boolean boolean43 = nativeArray33.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray46.getParentScope();
        java.lang.Object[] objArray48 = nativeArray46.getIds();
        boolean boolean49 = nativeArray33.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "object", (java.lang.Object) nativeArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int55 = nativeArray53.lastIndexOf((java.lang.Object) (short) 10);
        long long56 = nativeArray53.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray53, "", true);
        boolean boolean60 = nativeArray53.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray63.getParentScope();
        java.lang.Object[] objArray65 = nativeArray63.getIds();
        boolean boolean66 = nativeArray63.isEmpty();
        boolean boolean67 = nativeArray53.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.Object[] objArray68 = nativeArray53.getIds();
        nativeArray12.defineConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        com.google.javascript.rhino.head.Scriptable scriptable71 = null;
        nativeArray12.defineConst("object", scriptable71);
        boolean boolean73 = nativeArray12.isExtensible();
        java.lang.Integer[] intArray74 = nativeArray12.getIndexIds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[null]");
        org.junit.Assert.assertNull(scriptable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(scriptable42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(intArray74);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getIds();
        boolean boolean25 = nativeArray9.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        java.util.Iterator iterator26 = nativeArray22.iterator();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "", true);
        boolean boolean36 = nativeArray29.hasPrototypeMap();
        boolean boolean37 = nativeArray29.isExtensible();
        boolean boolean38 = nativeArray22.has((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 2);
        java.lang.Object obj42 = nativeArray22.get("object", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        boolean boolean44 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray41, (int) (short) -1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(iterator26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        boolean boolean29 = nativeArray22.hasPrototypeMap();
        int int30 = nativeArray22.size();
        boolean boolean31 = nativeArray22.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable32 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray22.getParentScope();
        java.lang.Object obj38 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) 0.0f);
        boolean boolean39 = nativeArray4.contains((java.lang.Object) 0.0f);
        boolean boolean40 = nativeArray4.isSealed();
        boolean boolean42 = nativeArray4.isConst("");
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        long long47 = nativeArray44.getLength();
        nativeArray44.delete((int) (byte) 1);
        java.lang.Integer[] intArray50 = nativeArray44.getIndexIds();
        java.lang.Object obj52 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "hi!", obj52);
        java.lang.Object obj55 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        long long60 = nativeArray57.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray57, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable64 = null;
        java.lang.Object[] objArray65 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable64);
        java.lang.Object[] objArray66 = nativeArray57.toArray(objArray65);
        com.google.javascript.rhino.head.Scriptable scriptable67 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray57);
        boolean boolean68 = nativeArray44.contains((java.lang.Object) nativeArray57);
        com.google.javascript.rhino.head.Scriptable scriptable69 = nativeArray44.getPrototype();
        int int70 = nativeArray4.lastIndexOf((java.lang.Object) scriptable69);
        boolean boolean71 = nativeArray4.isSealed();
        java.lang.Object[] objArray72 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(scriptable32);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNotNull(scriptable67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(scriptable69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[hi!]");
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray3.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray6, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj14 = nativeArray6.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean15 = nativeArray6.hasPrototypeMap();
        java.lang.Object[] objArray16 = nativeArray6.getIds();
        int int17 = nativeArray6.size();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        boolean boolean32 = nativeArray23.hasPrototypeMap();
        java.lang.Object[] objArray33 = nativeArray23.getIds();
        int int34 = nativeArray23.size();
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int38 = nativeArray36.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray23.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray36);
        java.lang.Object obj40 = nativeArray6.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        java.lang.Object[] objArray41 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray6);
        boolean boolean43 = nativeArray6.isConst("hi!");
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray6);
        boolean boolean45 = nativeArray1.isSealed();
        java.lang.Object[] objArray46 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        nativeArray1.preventExtensions();
        com.google.javascript.rhino.head.Scriptable scriptable48 = nativeArray1.getPrototype();
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNull(scriptable48);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.isSealed();
        boolean boolean11 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        java.lang.Object[] objArray20 = nativeArray14.getAllIds();
        java.lang.String str21 = nativeArray14.getTypeOf();
        int int22 = nativeArray14.size();
        java.lang.reflect.Method method23 = null;
        java.lang.reflect.Method method24 = null;
        nativeArray1.defineProperty("", (java.lang.Object) nativeArray14, method23, method24, (int) (byte) 10);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[length]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "object" + "'", str21, "object");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        java.util.ListIterator listIterator56 = nativeArray37.listIterator();
        com.google.javascript.rhino.head.Context context57 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        java.lang.Object[] objArray65 = nativeArray59.getAllIds();
        java.lang.String str66 = nativeArray59.getTypeOf();
        int int67 = nativeArray59.size();
        nativeArray37.defineOwnProperties(context57, (com.google.javascript.rhino.head.ScriptableObject) nativeArray59);
        boolean boolean70 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, (-1));
        nativeArray37.setAttributes(100, (int) (byte) 0);
        nativeArray37.delete("object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(listIterator56);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[length]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "object" + "'", str66, "object");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Context context36 = null;
        com.google.javascript.rhino.head.Scriptable scriptable37 = null;
        java.lang.Object[] objArray38 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable37);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        com.google.javascript.rhino.head.Callable callable54 = null;
        nativeArray43.setGetterOrSetter("hi!", 0, callable54, false);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray9.defineOwnProperty(context36, (java.lang.Object) scriptable37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray43);
        boolean boolean59 = nativeArray43.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int65 = nativeArray63.lastIndexOf((java.lang.Object) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray43.initPrototypeValue((int) (byte) 1, "", (java.lang.Object) nativeArray63, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        long long67 = nativeArray1.getLength();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        java.lang.Object[] objArray52 = nativeArray46.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable53 = nativeArray46.getParentScope();
        boolean boolean54 = nativeArray38.containsAll((java.util.Collection) nativeArray46);
        nativeArray46.delete("Array");
        boolean boolean57 = nativeArray9.containsAll((java.util.Collection) nativeArray46);
        com.google.javascript.rhino.head.Scriptable scriptable58 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[null]");
        org.junit.Assert.assertNull(scriptable53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(scriptable58);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable14 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        long long20 = nativeArray17.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        java.lang.Object[] objArray31 = nativeArray25.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable32 = nativeArray25.getParentScope();
        boolean boolean33 = nativeArray17.containsAll((java.util.Collection) nativeArray25);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj46 = nativeArray38.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        boolean boolean47 = nativeArray38.hasPrototypeMap();
        java.lang.Object[] objArray48 = nativeArray38.getIds();
        java.lang.Object[] objArray49 = nativeArray25.toArray(objArray48);
        boolean boolean50 = nativeArray25.hasPrototypeMap();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray25, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 100");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(scriptable14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[null]");
        org.junit.Assert.assertNull(scriptable32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[null]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.Scriptable scriptable26 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.Object[] objArray29 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray28);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray(objArray29);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = nativeArray1.remove((java.lang.Object) nativeArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        nativeArray9.delete((int) (byte) 1);
        boolean boolean15 = nativeArray9.isExtensible();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 4);
        java.lang.Object[] objArray18 = nativeArray9.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray24.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray42.getParentScope();
        java.lang.Object[] objArray44 = nativeArray42.getIds();
        boolean boolean45 = nativeArray42.isEmpty();
        nativeArray9.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) boolean45);
        boolean boolean47 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        nativeArray1.sealObject();
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[null]");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        com.google.javascript.rhino.head.Callable callable34 = null;
        nativeArray23.setGetterOrSetter("hi!", 0, callable34, false);
        nativeArray17.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray23, (int) (short) 10);
        java.lang.Object obj39 = null;
        int int40 = nativeArray17.lastIndexOf(obj39);
        boolean boolean41 = nativeArray4.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        java.lang.String str42 = nativeArray17.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        long long47 = nativeArray44.getLength();
        nativeArray44.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int55 = nativeArray53.lastIndexOf((java.lang.Object) (short) 10);
        long long56 = nativeArray53.getLength();
        nativeArray53.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, (int) (byte) -1, (java.lang.Object) nativeArray53);
        com.google.javascript.rhino.head.Scriptable scriptable60 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray53);
        java.lang.Object obj61 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) nativeArray53);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "object" + "'", str42, "object");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertNull(scriptable60);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        java.lang.Object[] objArray29 = nativeArray23.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable30 = nativeArray23.getParentScope();
        boolean boolean31 = nativeArray15.containsAll((java.util.Collection) nativeArray23);
        boolean boolean33 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "object");
        nativeArray1.put(100, (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) ' ');
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = nativeArray1.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertNull(scriptable30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        int int18 = nativeArray9.size();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int23 = nativeArray21.lastIndexOf((java.lang.Object) (short) 10);
        long long24 = nativeArray21.getLength();
        nativeArray21.delete((int) (byte) 1);
        boolean boolean27 = nativeArray21.isExtensible();
        java.lang.Object obj29 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, 4);
        java.lang.Object[] objArray30 = nativeArray21.toArray();
        nativeArray21.delete((int) (short) 0);
        java.lang.Object obj34 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "", obj34);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        java.lang.Object[] objArray44 = nativeArray38.getAllIds();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "Array", (java.lang.Object) objArray44);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "Array", (java.lang.Object) objArray44);
        boolean boolean48 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[null]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[length]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int8 = nativeArray6.lastIndexOf((java.lang.Object) (short) 10);
        long long9 = nativeArray6.getLength();
        nativeArray6.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        java.lang.Object[] objArray28 = nativeArray22.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable29 = nativeArray22.getParentScope();
        boolean boolean30 = nativeArray14.containsAll((java.util.Collection) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj43 = nativeArray35.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray40);
        boolean boolean44 = nativeArray35.hasPrototypeMap();
        java.lang.Object[] objArray45 = nativeArray35.getIds();
        java.lang.Object[] objArray46 = nativeArray22.toArray(objArray45);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, "Array", (java.lang.Object) nativeArray22);
        boolean boolean48 = nativeArray1.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray6);
        boolean boolean49 = nativeArray6.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55, (java.lang.Object) (-1));
        java.lang.Object[] objArray58 = nativeArray52.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable59 = nativeArray52.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable60 = nativeArray52.getParentScope();
        java.util.ListIterator listIterator61 = nativeArray52.listIterator();
        com.google.javascript.rhino.head.Scriptable scriptable63 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray52, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable67 = nativeArray66.getParentScope();
        java.lang.Object[] objArray68 = nativeArray66.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj81 = nativeArray73.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        java.lang.Object obj82 = nativeArray66.getAssociatedValue((java.lang.Object) nativeArray73);
        com.google.javascript.rhino.head.Scriptable scriptable83 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray66);
        nativeArray66.delete(2);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray66, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable88 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray66);
        nativeArray52.defineConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray66);
        nativeArray6.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray52, (int) (byte) 1);
        nativeArray6.sealObject();
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[null]");
        org.junit.Assert.assertNull(scriptable29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[null]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[null]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[null]");
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertNull(scriptable60);
        org.junit.Assert.assertNotNull(listIterator61);
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertNull(scriptable67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[length]");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(scriptable83);
        org.junit.Assert.assertNotNull(scriptable88);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        java.lang.Object[] objArray9 = nativeArray4.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj22 = nativeArray14.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray19);
        boolean boolean23 = nativeArray14.hasPrototypeMap();
        java.lang.Object[] objArray24 = nativeArray14.getIds();
        boolean boolean25 = nativeArray14.isEmpty();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray14);
        nativeArray14.preventExtensions();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[null]");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Context context9 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        java.lang.Object[] objArray17 = nativeArray11.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray11.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable19 = nativeArray11.getParentScope();
        java.util.ListIterator listIterator20 = nativeArray11.listIterator();
        nativeArray1.defineOwnProperties(context9, (com.google.javascript.rhino.head.ScriptableObject) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray32.getParentScope();
        boolean boolean40 = nativeArray24.containsAll((java.util.Collection) nativeArray32);
        com.google.javascript.rhino.head.Scriptable scriptable41 = nativeArray32.getParentScope();
        boolean boolean42 = nativeArray32.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable46 = nativeArray45.getParentScope();
        java.lang.Object[] objArray47 = nativeArray45.getIds();
        boolean boolean48 = nativeArray32.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        nativeArray1.setAttributes("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, 2);
        java.lang.Object obj52 = nativeArray32.get((int) (byte) 0);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null]");
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertNotNull(listIterator20);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[null]");
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(scriptable46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj52);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        com.google.javascript.rhino.head.Scriptable scriptable18 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        nativeArray1.delete(2);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        nativeArray1.sealObject();
        java.lang.String str24 = nativeArray1.getClassName();
        boolean boolean25 = nativeArray1.avoidObjectDetection();
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Array" + "'", str24, "Array");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        nativeArray1.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean16 = nativeArray1.isExtensible();
        nativeArray1.delete((int) (short) 0);
        java.lang.Object[] objArray19 = nativeArray1.toArray();
        nativeArray1.delete("");
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        java.lang.Object[] objArray29 = nativeArray23.getAllIds();
        nativeArray23.delete("");
        long long32 = nativeArray23.getLength();
        boolean boolean34 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj48 = nativeArray40.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        nativeArray51.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        java.lang.Object[] objArray66 = nativeArray60.getAllIds();
        nativeArray60.delete("");
        java.lang.Object obj69 = nativeArray45.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        java.lang.Integer[] intArray70 = nativeArray60.getIndexIds();
        nativeArray23.defineProperty("", (java.lang.Object) nativeArray60, 10);
        java.lang.Object[] objArray73 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray(objArray73);
        java.lang.Object[] objArray75 = nativeArray1.toArray(objArray73);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray(objArray75);
        java.util.ListIterator listIterator77 = nativeArray76.listIterator();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[length]");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[length]");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[null]");
        org.junit.Assert.assertNotNull(listIterator77);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        nativeArray9.delete((int) (byte) 1);
        boolean boolean15 = nativeArray9.isExtensible();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 4);
        java.lang.Object[] objArray18 = nativeArray9.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray24.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray42.getParentScope();
        java.lang.Object[] objArray44 = nativeArray42.getIds();
        boolean boolean45 = nativeArray42.isEmpty();
        nativeArray9.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) boolean45);
        boolean boolean47 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        long long53 = nativeArray50.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "", true);
        boolean boolean57 = nativeArray50.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable61 = nativeArray60.getParentScope();
        java.lang.Object[] objArray62 = nativeArray60.getIds();
        boolean boolean63 = nativeArray60.isEmpty();
        boolean boolean64 = nativeArray50.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        java.lang.Object obj66 = nativeArray50.get((long) (byte) 0);
        boolean boolean67 = nativeArray1.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        int int68 = nativeArray50.size();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray50.setAttributes((int) (byte) 100, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 97");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[null]");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(scriptable61);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        nativeArray13.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        nativeArray22.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, (int) (byte) -1, (java.lang.Object) nativeArray22);
        boolean boolean29 = nativeArray13.isSealed();
        nativeArray13.setAttributes((int) (byte) 10, 0);
        java.lang.Object obj34 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, 8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = nativeArray1.set(8, (java.lang.Object) 8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(obj34);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        java.lang.Object[] objArray42 = nativeArray36.getAllIds();
        nativeArray36.delete("");
        java.lang.Object obj45 = nativeArray21.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable48 = nativeArray21.getPrototype();
        com.google.javascript.rhino.head.Context context49 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        java.lang.Object[] objArray65 = nativeArray59.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray59.getParentScope();
        boolean boolean67 = nativeArray51.containsAll((java.util.Collection) nativeArray59);
        nativeArray21.defineOwnProperties(context49, (com.google.javascript.rhino.head.ScriptableObject) nativeArray51);
        java.lang.Object obj69 = nativeArray1.get((int) ' ', (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int74 = nativeArray72.lastIndexOf((java.lang.Object) (short) 10);
        long long75 = nativeArray72.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray72, "", true);
        boolean boolean79 = nativeArray72.hasPrototypeMap();
        int int80 = nativeArray72.size();
        boolean boolean81 = nativeArray72.isEmpty();
        boolean boolean83 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray72, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray86 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int88 = nativeArray86.lastIndexOf((java.lang.Object) (short) 10);
        long long89 = nativeArray86.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray86, "", true);
        boolean boolean93 = nativeArray86.hasPrototypeMap();
        java.util.ListIterator listIterator94 = nativeArray86.listIterator();
        boolean boolean95 = nativeArray72.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray86);
        boolean boolean96 = nativeArray72.hasPrototypeMap();
        boolean boolean97 = nativeArray51.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72);
        boolean boolean99 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray72, "Array");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[length]");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(scriptable48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[null]");
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 1L + "'", long89 == 1L);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(listIterator94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        nativeArray12.sealObject();
        boolean boolean25 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        boolean boolean33 = nativeArray27.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable37 = nativeArray36.getParentScope();
        java.lang.Object[] objArray38 = nativeArray36.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "", (java.lang.Object) nativeArray36, 0);
        java.lang.Object[] objArray41 = nativeArray27.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable42 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray27);
        nativeArray27.sealObject();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) '#');
        java.lang.Object obj46 = nativeArray12.associateValue((java.lang.Object) nativeArray27, (java.lang.Object) '#');
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(scriptable37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
        org.junit.Assert.assertNull(scriptable42);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + '#' + "'", obj46, '#');
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int6 = nativeArray4.lastIndexOf((java.lang.Object) (short) 10);
        long long7 = nativeArray4.getLength();
        nativeArray4.delete((int) (byte) 1);
        boolean boolean10 = nativeArray4.isExtensible();
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, 4);
        java.lang.Object[] objArray13 = nativeArray4.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray19, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj27 = nativeArray19.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        boolean boolean28 = nativeArray19.hasPrototypeMap();
        java.lang.Object[] objArray29 = nativeArray19.getIds();
        int int30 = nativeArray19.size();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray19.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable38 = nativeArray37.getParentScope();
        java.lang.Object[] objArray39 = nativeArray37.getIds();
        boolean boolean40 = nativeArray37.isEmpty();
        nativeArray4.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray19, (java.lang.Object) boolean40);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) (-1));
        java.lang.Object[] objArray50 = nativeArray44.getAllIds();
        java.lang.String str51 = nativeArray44.getTypeOf();
        boolean boolean52 = nativeArray19.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        boolean boolean53 = nativeArray44.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        long long59 = nativeArray56.getLength();
        nativeArray56.delete((int) (byte) 1);
        boolean boolean62 = nativeArray56.isExtensible();
        java.lang.Object obj64 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, 4);
        java.lang.Object[] objArray65 = nativeArray56.toArray();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "hi!", (java.lang.Object) nativeArray56);
        nativeArray1.defineConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[null]");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[hi!]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(scriptable38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[length]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "object" + "'", str51, "object");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[null]");
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        java.util.Iterator iterator65 = nativeArray1.iterator();
        nativeArray1.activatePrototypeMap(2);
        nativeArray1.delete(0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(iterator65);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        nativeArray1.setPrototype(scriptable15);
        long long17 = nativeArray1.jsGet_length();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = nativeArray1.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 'a');
        com.google.javascript.rhino.head.Context context2 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int6 = nativeArray4.lastIndexOf((java.lang.Object) (short) 10);
        long long7 = nativeArray4.getLength();
        nativeArray4.delete((int) (byte) 1);
        boolean boolean11 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        java.lang.Object[] objArray27 = nativeArray21.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray21.getParentScope();
        boolean boolean29 = nativeArray13.containsAll((java.util.Collection) nativeArray21);
        boolean boolean30 = nativeArray4.containsAll((java.util.Collection) nativeArray13);
        nativeArray1.defineOwnProperties(context2, (com.google.javascript.rhino.head.ScriptableObject) nativeArray13);
        java.lang.Object obj33 = nativeArray1.get((long) (short) 0);
        boolean boolean34 = nativeArray1.isSealed();
        java.lang.String str35 = nativeArray1.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int54 = nativeArray52.lastIndexOf((java.lang.Object) (short) 10);
        long long55 = nativeArray52.getLength();
        nativeArray52.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray64, (java.lang.Object) (-1));
        java.lang.Object[] objArray67 = nativeArray61.getAllIds();
        nativeArray61.delete("");
        java.lang.Object obj70 = nativeArray46.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable73 = nativeArray46.getPrototype();
        com.google.javascript.rhino.head.Context context74 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        long long79 = nativeArray76.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray84 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray84.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray87, (java.lang.Object) (-1));
        java.lang.Object[] objArray90 = nativeArray84.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable91 = nativeArray84.getParentScope();
        boolean boolean92 = nativeArray76.containsAll((java.util.Collection) nativeArray84);
        nativeArray46.defineOwnProperties(context74, (com.google.javascript.rhino.head.ScriptableObject) nativeArray76);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = nativeArray1.set(8, (java.lang.Object) nativeArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[null]");
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Array" + "'", str35, "Array");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[length]");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNull(scriptable73);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1L + "'", long79 == 1L);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[null]");
        org.junit.Assert.assertNull(scriptable91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray43.getParentScope();
        boolean boolean51 = nativeArray35.containsAll((java.util.Collection) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj64 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean65 = nativeArray56.hasPrototypeMap();
        java.lang.Object[] objArray66 = nativeArray56.getIds();
        java.lang.Object[] objArray67 = nativeArray43.toArray(objArray66);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "Array", (java.lang.Object) nativeArray43);
        boolean boolean69 = nativeArray22.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean70 = nativeArray9.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int74 = nativeArray72.lastIndexOf((java.lang.Object) (short) 10);
        long long75 = nativeArray72.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray72, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable79 = null;
        java.lang.Object[] objArray80 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable79);
        java.lang.Object[] objArray81 = nativeArray72.toArray(objArray80);
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray(objArray81);
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray(objArray81);
        java.lang.Object[] objArray84 = nativeArray9.toArray(objArray81);
        java.lang.Class<?> wildcardClass85 = nativeArray9.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[length]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[null]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[null]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        long long13 = nativeArray1.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        boolean boolean21 = nativeArray15.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj34 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        boolean boolean35 = nativeArray26.hasPrototypeMap();
        java.lang.Object[] objArray36 = nativeArray26.getIds();
        int int37 = nativeArray26.size();
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray42, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj50 = nativeArray42.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        boolean boolean51 = nativeArray42.hasPrototypeMap();
        java.lang.Object[] objArray52 = nativeArray42.getIds();
        int int53 = nativeArray42.size();
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj67 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        boolean boolean68 = nativeArray59.hasPrototypeMap();
        java.lang.Object[] objArray69 = nativeArray59.getIds();
        int int70 = nativeArray59.size();
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int74 = nativeArray72.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray59.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        java.lang.Object obj76 = nativeArray42.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray59);
        boolean boolean77 = nativeArray26.containsAll((java.util.Collection) nativeArray59);
        nativeArray15.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        java.util.Iterator iterator79 = nativeArray15.iterator();
        int int80 = nativeArray1.indexOf((java.lang.Object) iterator79);
        java.lang.Object[] objArray81 = nativeArray1.getIds();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[hi!]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(iterator79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable4 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object obj6 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 2);
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean9 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", true);
        boolean boolean14 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray17.getParentScope();
        java.lang.Object[] objArray19 = nativeArray17.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        java.lang.Object obj33 = nativeArray17.getAssociatedValue((java.lang.Object) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray35.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable37 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray35);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        boolean boolean46 = nativeArray39.hasPrototypeMap();
        int int47 = nativeArray39.size();
        boolean boolean48 = nativeArray39.isEmpty();
        nativeArray35.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray39);
        java.lang.Object obj50 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) nativeArray35);
        boolean boolean51 = nativeArray35.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "", (java.lang.Object) 100);
        java.lang.Object obj60 = nativeArray53.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray56);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "Array");
        boolean boolean63 = nativeArray35.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray56);
        boolean boolean64 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        java.lang.String str65 = nativeArray56.getTypeOf();
        org.junit.Assert.assertNull(scriptable4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(scriptable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[length]");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertNull(scriptable37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "object" + "'", str65, "object");
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        boolean boolean22 = nativeArray15.hasPrototypeMap();
        java.util.ListIterator listIterator23 = nativeArray15.listIterator();
        boolean boolean24 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        java.lang.Object[] objArray25 = nativeArray1.getAllIds();
        nativeArray1.activatePrototypeMap((int) (byte) 100);
        boolean boolean29 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(listIterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[length]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        nativeArray9.setAttributes((int) (short) -1, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable43 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray40);
        java.lang.Object obj45 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, 2);
        com.google.javascript.rhino.head.Scriptable scriptable46 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray40);
        boolean boolean48 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        long long53 = nativeArray50.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray58.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray61, (java.lang.Object) (-1));
        java.lang.Object[] objArray64 = nativeArray58.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable65 = nativeArray58.getParentScope();
        boolean boolean66 = nativeArray50.containsAll((java.util.Collection) nativeArray58);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray71, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray76.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj79 = nativeArray71.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        boolean boolean80 = nativeArray71.hasPrototypeMap();
        java.lang.Object[] objArray81 = nativeArray71.getIds();
        java.lang.Object[] objArray82 = nativeArray58.toArray(objArray81);
        int int83 = nativeArray40.lastIndexOf((java.lang.Object) objArray81);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "");
        boolean boolean86 = nativeArray9.contains((java.lang.Object) nativeArray40);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator listIterator88 = nativeArray40.listIterator((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(scriptable46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[null]");
        org.junit.Assert.assertNull(scriptable65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[null]");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[null]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        java.lang.Object[] objArray23 = nativeArray17.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray17.getParentScope();
        boolean boolean25 = nativeArray9.containsAll((java.util.Collection) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        java.lang.Object[] objArray41 = nativeArray17.toArray(objArray40);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", (java.lang.Object) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) (-1));
        java.lang.Object[] objArray50 = nativeArray44.getAllIds();
        nativeArray44.delete("");
        long long53 = nativeArray44.getLength();
        boolean boolean55 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, (int) (short) 10);
        nativeArray44.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable58 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        boolean boolean59 = nativeArray44.avoidObjectDetection();
        boolean boolean61 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, 100);
        boolean boolean62 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[length]");
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        nativeArray23.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.getAllIds();
        nativeArray32.delete("");
        java.lang.Object obj41 = nativeArray17.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray17.getPrototype();
        com.google.javascript.rhino.head.Context context45 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        nativeArray17.defineOwnProperties(context45, (com.google.javascript.rhino.head.ScriptableObject) nativeArray47);
        nativeArray1.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 10);
        java.lang.String str67 = nativeArray1.getTypeOf();
        java.lang.Object obj69 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) -1);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray74, "", (java.lang.Object) 100);
        java.lang.Object obj78 = nativeArray71.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray74);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = nativeArray1.addAll((java.util.Collection) nativeArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[length]");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "object" + "'", str67, "object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj78);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean9 = nativeArray1.isSealed();
        long long10 = nativeArray1.jsGet_length();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean25 = nativeArray16.hasPrototypeMap();
        java.lang.Object[] objArray26 = nativeArray16.getIds();
        int int27 = nativeArray16.size();
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj41 = nativeArray33.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        boolean boolean42 = nativeArray33.hasPrototypeMap();
        java.lang.Object[] objArray43 = nativeArray33.getIds();
        int int44 = nativeArray33.size();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int48 = nativeArray46.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray33.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray46);
        java.lang.Object obj50 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int56 = nativeArray54.lastIndexOf((java.lang.Object) (short) 10);
        long long57 = nativeArray54.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray54, "", true);
        boolean boolean61 = nativeArray54.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray66, (java.lang.Object) (-1));
        java.lang.Object[] objArray69 = nativeArray63.getAllIds();
        nativeArray63.delete("");
        boolean boolean72 = nativeArray54.contains((java.lang.Object) "");
        boolean boolean73 = nativeArray16.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray54);
        com.google.javascript.rhino.head.Context context74 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        long long79 = nativeArray76.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, "", true);
        boolean boolean83 = nativeArray76.hasPrototypeMap();
        boolean boolean84 = nativeArray76.isExtensible();
        nativeArray16.defineOwnProperties(context74, (com.google.javascript.rhino.head.ScriptableObject) nativeArray76);
        boolean boolean86 = nativeArray16.isSealed();
        java.lang.Object[] objArray87 = nativeArray16.toArray();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", (java.lang.Object) nativeArray16);
        com.google.javascript.rhino.head.Scriptable scriptable89 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1L + "'", long57 == 1L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[length]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1L + "'", long79 == 1L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[null]");
        org.junit.Assert.assertNotNull(scriptable89);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable21 = null;
        java.lang.Object[] objArray22 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable21);
        java.lang.Object[] objArray23 = nativeArray14.toArray(objArray22);
        com.google.javascript.rhino.head.Scriptable scriptable24 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray14);
        boolean boolean25 = nativeArray1.contains((java.lang.Object) nativeArray14);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38, (java.lang.Object) (-1));
        nativeArray27.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj56 = nativeArray48.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        boolean boolean57 = nativeArray48.hasPrototypeMap();
        java.lang.Object[] objArray58 = nativeArray48.getIds();
        int int59 = nativeArray48.size();
        boolean boolean60 = nativeArray27.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean61 = nativeArray48.avoidObjectDetection();
        java.util.Iterator iterator62 = nativeArray48.iterator();
        boolean boolean63 = nativeArray1.contains((java.lang.Object) iterator62);
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray1.getPrototype();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator listIterator66 = nativeArray1.listIterator((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNotNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(iterator62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(scriptable64);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        nativeArray9.delete("Array");
        boolean boolean38 = nativeArray9.isExtensible();
        java.lang.String str39 = nativeArray9.getClassName();
        com.google.javascript.rhino.head.Scriptable scriptable40 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = nativeArray9.get(100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Array" + "'", str39, "Array");
        org.junit.Assert.assertNull(scriptable40);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        java.lang.Object[] objArray13 = nativeArray1.getAllIds();
        java.lang.String str14 = nativeArray1.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray17.getParentScope();
        java.lang.Object[] objArray19 = nativeArray17.getIds();
        boolean boolean20 = nativeArray17.avoidObjectDetection();
        java.lang.Object obj24 = nativeArray17.getGetterOrSetter("", 0, true);
        boolean boolean25 = nativeArray17.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator30 = nativeArray27.iterator();
        boolean boolean31 = nativeArray27.isSealed();
        nativeArray1.putConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) boolean31);
        boolean boolean33 = nativeArray1.isSealed();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, length]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Array" + "'", str14, "Array");
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(iterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj3 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable4 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.String str5 = nativeArray1.getClassName();
        nativeArray1.setAttributes("", (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list11 = nativeArray1.subList((int) (short) -1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(scriptable4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Array" + "'", str5, "Array");
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        nativeArray13.setAttributes("object", (int) (byte) 0);
        nativeArray13.preventExtensions();
        boolean boolean30 = nativeArray13.hasPrototypeMap();
        java.lang.Integer[] intArray31 = nativeArray13.getIndexIds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(intArray31);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "hi!");
        long long48 = nativeArray43.jsGet_length();
        boolean boolean49 = nativeArray4.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = nativeArray43.remove((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        boolean boolean18 = nativeArray11.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj23 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "Array");
        boolean boolean24 = nativeArray21.isSealed();
        java.lang.Object obj25 = nativeArray11.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        int int26 = nativeArray11.size();
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int30 = nativeArray28.lastIndexOf((java.lang.Object) (short) 10);
        long long31 = nativeArray28.getLength();
        nativeArray28.delete((int) (byte) 1);
        boolean boolean34 = nativeArray28.isExtensible();
        java.lang.Object obj36 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, 4);
        java.lang.Object[] objArray37 = nativeArray28.toArray();
        java.lang.Object obj39 = nativeArray28.get(0);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable42 = nativeArray41.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable49 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray45, "");
        boolean boolean50 = nativeArray41.has(100, scriptable49);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int54 = nativeArray52.lastIndexOf((java.lang.Object) (short) 10);
        long long55 = nativeArray52.getLength();
        nativeArray52.delete((int) (byte) 1);
        boolean boolean58 = nativeArray52.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray61.getParentScope();
        java.lang.Object[] objArray63 = nativeArray61.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray52, "", (java.lang.Object) nativeArray61, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray71, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray76.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj79 = nativeArray71.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        boolean boolean80 = nativeArray71.hasPrototypeMap();
        java.lang.Object[] objArray81 = nativeArray71.getIds();
        int int82 = nativeArray71.size();
        com.google.javascript.rhino.head.NativeArray nativeArray84 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int86 = nativeArray84.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray71.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray84);
        java.lang.Object obj88 = nativeArray52.get((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray84);
        com.google.javascript.rhino.head.Scriptable scriptable89 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray84);
        nativeArray41.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray84);
        long long91 = nativeArray84.getLength();
        boolean boolean92 = nativeArray28.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray84);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = nativeArray11.remove((java.lang.Object) boolean92);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[null]");
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(scriptable42);
        org.junit.Assert.assertNull(scriptable49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[hi!]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(scriptable89);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 1L + "'", long91 == 1L);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Object[] objArray10 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean25 = nativeArray16.hasPrototypeMap();
        java.lang.Object[] objArray26 = nativeArray16.getIds();
        int int27 = nativeArray16.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray16.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray34.getParentScope();
        java.lang.Object[] objArray36 = nativeArray34.getIds();
        boolean boolean37 = nativeArray34.isEmpty();
        nativeArray1.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) boolean37);
        long long39 = nativeArray1.getLength();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = nativeArray1.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "", true);
        boolean boolean31 = nativeArray24.hasPrototypeMap();
        java.lang.reflect.Method method34 = null;
        java.lang.reflect.Method method35 = null;
        nativeArray24.defineProperty("hi!", (java.lang.Object) (-1L), method34, method35, (int) (byte) 10);
        boolean boolean39 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "");
        nativeArray24.setAttributes("hi!", (int) (byte) 0);
        nativeArray24.delete((int) (short) -1);
        boolean boolean45 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        java.lang.Object[] objArray33 = nativeArray9.toArray(objArray32);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", false);
        boolean boolean38 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (int) (byte) 10);
        int int39 = nativeArray9.size();
        boolean boolean40 = nativeArray9.avoidObjectDetection();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = nativeArray9.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[null]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[null]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Integer[] intArray34 = nativeArray24.getIndexIds();
        long long35 = nativeArray24.jsGet_length();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        boolean boolean4 = nativeArray1.isEmpty();
        java.lang.Object obj6 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean9 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int18 = nativeArray16.lastIndexOf((java.lang.Object) (short) 10);
        long long19 = nativeArray16.getLength();
        nativeArray16.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray32.getParentScope();
        boolean boolean40 = nativeArray24.containsAll((java.util.Collection) nativeArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        java.lang.Object[] objArray56 = nativeArray32.toArray(objArray55);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, "Array", (java.lang.Object) nativeArray32);
        boolean boolean58 = nativeArray11.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        boolean boolean59 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray16);
        long long60 = nativeArray16.jsGet_length();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = nativeArray16.get((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[length]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[null]");
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[null]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[null]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        nativeArray10.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) -1, (java.lang.Object) nativeArray10);
        long long17 = nativeArray1.getLength();
        boolean boolean19 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) -1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.Scriptable scriptable17 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object[] objArray18 = nativeArray1.getIds();
        java.lang.Object[] objArray19 = nativeArray1.toArray();
        java.lang.Object[] objArray20 = nativeArray1.toArray();
        java.lang.Object[] objArray21 = nativeArray1.getIds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(scriptable17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean40 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, (int) (byte) 1);
        boolean boolean42 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, 2);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        long long48 = nativeArray45.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, "", true);
        boolean boolean52 = nativeArray45.hasPrototypeMap();
        java.lang.reflect.Method method55 = null;
        java.lang.reflect.Method method56 = null;
        nativeArray45.defineProperty("hi!", (java.lang.Object) (-1L), method55, method56, (int) (byte) 10);
        boolean boolean60 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, "");
        nativeArray45.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray64 = nativeArray45.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray70, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray78, (java.lang.Object) (-1));
        nativeArray67.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray75, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, 0, (java.lang.Object) nativeArray75);
        java.lang.Integer[] intArray84 = nativeArray75.getIndexIds();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = com.google.javascript.rhino.head.ScriptableObject.callMethod((com.google.javascript.rhino.head.Scriptable) nativeArray21, "object", (java.lang.Object[]) intArray84);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EcmaError; message: TypeError: object is not a function, it is object.");
        } catch (com.google.javascript.rhino.head.EcmaError e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[hi!, length]");
        org.junit.Assert.assertNotNull(intArray84);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        nativeArray10.delete((int) (byte) 1);
        boolean boolean16 = nativeArray10.isExtensible();
        java.lang.Object obj18 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, 4);
        java.lang.Object[] objArray19 = nativeArray10.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj33 = nativeArray25.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        boolean boolean34 = nativeArray25.hasPrototypeMap();
        java.lang.Object[] objArray35 = nativeArray25.getIds();
        int int36 = nativeArray25.size();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray25.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray38);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray43.getParentScope();
        java.lang.Object[] objArray45 = nativeArray43.getIds();
        boolean boolean46 = nativeArray43.isEmpty();
        nativeArray10.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) boolean46);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray53, (java.lang.Object) (-1));
        java.lang.Object[] objArray56 = nativeArray50.getAllIds();
        java.lang.String str57 = nativeArray50.getTypeOf();
        boolean boolean58 = nativeArray25.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean59 = nativeArray50.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 8);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, "object");
        nativeArray50.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean65 = nativeArray4.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray4.getPrototype();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[length]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "object" + "'", str57, "object");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(scriptable66);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj3 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable4 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.String str5 = nativeArray1.getClassName();
        nativeArray1.setAttributes("", (int) (byte) 1);
        long long9 = nativeArray1.jsGet_length();
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(scriptable4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Array" + "'", str5, "Array");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, (int) (short) 10);
        java.lang.Object obj19 = nativeArray4.get(0);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        java.lang.Object[] objArray28 = nativeArray22.getAllIds();
        nativeArray22.delete("");
        long long31 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "", (java.lang.Object) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, "", (java.lang.Object) 100);
        boolean boolean40 = nativeArray36.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj54 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean55 = nativeArray46.hasPrototypeMap();
        java.lang.Object[] objArray56 = nativeArray46.getIds();
        int int57 = nativeArray46.size();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int61 = nativeArray59.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray46.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray59);
        java.lang.Object[] objArray63 = nativeArray59.getAllIds();
        com.google.javascript.rhino.head.Context context64 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray69, (java.lang.Object) (-1));
        java.lang.Object[] objArray72 = nativeArray66.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable73 = nativeArray66.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable74 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray66);
        nativeArray59.defineOwnProperties(context64, (com.google.javascript.rhino.head.ScriptableObject) nativeArray66);
        boolean boolean76 = nativeArray36.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray66);
        boolean boolean78 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray66, "");
        // The following exception was thrown during execution in test generation
        try {
            nativeArray4.initPrototypeValue((int) (byte) 100, "hi!", (java.lang.Object) boolean78, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[length]");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[length]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[null]");
        org.junit.Assert.assertNull(scriptable73);
        org.junit.Assert.assertNull(scriptable74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        nativeArray1.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        int int33 = nativeArray22.size();
        boolean boolean34 = nativeArray1.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean36 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "Array");
        boolean boolean38 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean39 = nativeArray21.isSealed();
        boolean boolean40 = nativeArray21.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj70 = nativeArray62.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        boolean boolean71 = nativeArray62.hasPrototypeMap();
        java.lang.Object[] objArray72 = nativeArray62.getIds();
        int int73 = nativeArray62.size();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int77 = nativeArray75.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray62.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray75);
        java.lang.Object obj79 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        java.lang.Object[] objArray80 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean82 = nativeArray45.isConst("hi!");
        boolean boolean84 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, 13);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean85 = nativeArray21.removeAll((java.util.Collection) nativeArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[hi!]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj25 = nativeArray17.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int30 = nativeArray28.lastIndexOf((java.lang.Object) (short) 10);
        long long31 = nativeArray28.getLength();
        nativeArray28.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        java.lang.Object[] objArray43 = nativeArray37.getAllIds();
        nativeArray37.delete("");
        java.lang.Object obj46 = nativeArray22.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        nativeArray22.delete((int) (short) -1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable52 = nativeArray51.getParentScope();
        java.lang.Object[] objArray53 = nativeArray51.getIds();
        boolean boolean54 = nativeArray51.isEmpty();
        java.lang.Object obj56 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, 8);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray51);
        nativeArray22.defineConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        com.google.javascript.rhino.head.Context context59 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int63 = nativeArray61.lastIndexOf((java.lang.Object) (short) 10);
        long long64 = nativeArray61.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        java.lang.Object[] objArray75 = nativeArray69.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable76 = nativeArray69.getParentScope();
        boolean boolean77 = nativeArray61.containsAll((java.util.Collection) nativeArray69);
        nativeArray69.delete("Array");
        boolean boolean81 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray69, (int) 'a');
        boolean boolean82 = nativeArray69.hasPrototypeMap();
        boolean boolean83 = nativeArray69.isExtensible();
        nativeArray22.defineOwnProperties(context59, (com.google.javascript.rhino.head.ScriptableObject) nativeArray69);
        com.google.javascript.rhino.head.Scriptable scriptable85 = nativeArray69.getParentScope();
        boolean boolean86 = nativeArray1.contains((java.lang.Object) nativeArray69);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[length]");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNull(scriptable52);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[null]");
        org.junit.Assert.assertNull(scriptable76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(scriptable85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray3.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray6, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj14 = nativeArray6.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean15 = nativeArray6.hasPrototypeMap();
        java.lang.Object[] objArray16 = nativeArray6.getIds();
        int int17 = nativeArray6.size();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        boolean boolean32 = nativeArray23.hasPrototypeMap();
        java.lang.Object[] objArray33 = nativeArray23.getIds();
        int int34 = nativeArray23.size();
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int38 = nativeArray36.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray23.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray36);
        java.lang.Object obj40 = nativeArray6.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        java.lang.Object[] objArray41 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray6);
        boolean boolean43 = nativeArray6.isConst("hi!");
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray6);
        boolean boolean45 = nativeArray1.isSealed();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.sealObject();
        boolean boolean18 = nativeArray1.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", (java.lang.Object) 100);
        java.lang.Object obj27 = nativeArray20.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray23);
        java.lang.Object[] objArray28 = nativeArray23.toArray();
        java.lang.Object[] objArray29 = nativeArray1.toArray(objArray28);
        java.lang.Integer[] intArray30 = nativeArray1.getIndexIds();
        java.lang.String str31 = nativeArray1.getTypeOf();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[null]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "object" + "'", str31, "object");
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        boolean boolean36 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "");
        nativeArray11.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray29, 13);
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray29.getParentScope();
        java.lang.Object[] objArray40 = nativeArray29.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.Object[] objArray44 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = nativeArray29.set(2, (java.lang.Object) nativeArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.Callable callable15 = null;
        nativeArray4.setGetterOrSetter("hi!", 0, callable15, false);
        java.lang.Integer[] intArray18 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.Context context19 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.Callable callable42 = null;
        nativeArray31.setGetterOrSetter("hi!", 0, callable42, false);
        java.lang.Integer[] intArray45 = nativeArray31.getIndexIds();
        nativeArray24.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray31);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int51 = nativeArray49.lastIndexOf((java.lang.Object) (short) 10);
        long long52 = nativeArray49.getLength();
        nativeArray49.delete((int) (byte) 1);
        boolean boolean56 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "");
        nativeArray31.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray49, 13);
        com.google.javascript.rhino.head.Scriptable scriptable59 = nativeArray49.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable60 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray49);
        java.lang.Object[] objArray61 = nativeArray49.toArray();
        nativeArray4.defineOwnProperties(context19, (com.google.javascript.rhino.head.ScriptableObject) nativeArray49);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertNotNull(scriptable60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj10 = nativeArray4.getGetterOrSetter("object", (int) (short) 0, true);
        nativeArray4.setAttributes(1, (int) (short) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int18 = nativeArray16.lastIndexOf((java.lang.Object) (short) 10);
        long long19 = nativeArray16.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable23 = null;
        java.lang.Object[] objArray24 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable23);
        java.lang.Object[] objArray25 = nativeArray16.toArray(objArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int30 = nativeArray28.lastIndexOf((java.lang.Object) (short) 10);
        long long31 = nativeArray28.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "", true);
        boolean boolean35 = nativeArray28.hasPrototypeMap();
        int int36 = nativeArray28.size();
        boolean boolean37 = nativeArray28.isEmpty();
        boolean boolean39 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "Array");
        java.lang.Object obj40 = nativeArray16.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        nativeArray28.setAttributes("object", (int) (byte) 0);
        nativeArray28.preventExtensions();
        com.google.javascript.rhino.head.Scriptable scriptable46 = null;
        boolean boolean47 = nativeArray28.has("", scriptable46);
        java.lang.String str48 = nativeArray28.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        nativeArray51.delete((int) (byte) 1);
        boolean boolean57 = nativeArray51.isExtensible();
        java.lang.Object obj59 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, 4);
        java.lang.Object[] objArray60 = nativeArray51.toArray();
        nativeArray51.delete((int) (short) 0);
        java.lang.Object obj63 = nativeArray28.get(0, (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int68 = nativeArray66.lastIndexOf((java.lang.Object) (short) 10);
        long long69 = nativeArray66.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray66, "", true);
        boolean boolean73 = nativeArray66.hasPrototypeMap();
        int int74 = nativeArray66.size();
        boolean boolean75 = nativeArray66.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray80 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray80, (java.lang.Object) (-1));
        java.lang.Object[] objArray83 = nativeArray77.getAllIds();
        nativeArray77.delete("");
        long long86 = nativeArray77.getLength();
        boolean boolean87 = nativeArray66.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray77);
        java.lang.Object[] objArray88 = nativeArray77.getAllIds();
        nativeArray28.setAttributes((int) (byte) -1, (com.google.javascript.rhino.head.Scriptable) nativeArray77, 1);
        nativeArray4.defineConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "object" + "'", str48, "object");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[null]");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1L + "'", long69 == 1L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[length]");
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 1L + "'", long86 == 1L);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[length]");
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        com.google.javascript.rhino.head.Scriptable scriptable18 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        nativeArray1.delete(2);
        int int21 = nativeArray1.size();
        com.google.javascript.rhino.head.Context context22 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "", true);
        boolean boolean31 = nativeArray24.hasPrototypeMap();
        int int32 = nativeArray24.size();
        boolean boolean33 = nativeArray24.isEmpty();
        boolean boolean35 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "", true);
        boolean boolean45 = nativeArray38.hasPrototypeMap();
        java.util.ListIterator listIterator46 = nativeArray38.listIterator();
        boolean boolean47 = nativeArray24.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        int int49 = nativeArray24.indexOf((java.lang.Object) ' ');
        long long50 = nativeArray24.getLength();
        boolean boolean51 = nativeArray24.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.activatePrototypeMap((int) (short) 100);
        long long56 = nativeArray53.jsGet_length();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray58.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray61, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj69 = nativeArray61.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray66);
        boolean boolean70 = nativeArray61.hasPrototypeMap();
        java.lang.Object[] objArray71 = nativeArray61.getIds();
        int int72 = nativeArray61.size();
        boolean boolean73 = nativeArray53.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray61);
        java.util.Iterator iterator74 = nativeArray61.iterator();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.defineOwnProperty(context22, (java.lang.Object) nativeArray24, (com.google.javascript.rhino.head.ScriptableObject) nativeArray61);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EcmaError; message: TypeError: Cannot find default value for object.");
        } catch (com.google.javascript.rhino.head.EcmaError e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(listIterator46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(iterator74);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        nativeArray9.delete((int) (byte) 1);
        boolean boolean15 = nativeArray9.isExtensible();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 4);
        java.lang.Object[] objArray18 = nativeArray9.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray24.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray42.getParentScope();
        java.lang.Object[] objArray44 = nativeArray42.getIds();
        boolean boolean45 = nativeArray42.isEmpty();
        nativeArray9.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) boolean45);
        boolean boolean47 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        long long53 = nativeArray50.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "", true);
        boolean boolean57 = nativeArray50.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable61 = nativeArray60.getParentScope();
        java.lang.Object[] objArray62 = nativeArray60.getIds();
        boolean boolean63 = nativeArray60.isEmpty();
        boolean boolean64 = nativeArray50.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        java.lang.Object obj66 = nativeArray50.get((long) (byte) 0);
        boolean boolean67 = nativeArray1.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        com.google.javascript.rhino.head.Scriptable scriptable68 = nativeArray50.getParentScope();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "", true);
        java.lang.String str72 = nativeArray50.getTypeOf();
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[null]");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(scriptable61);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(scriptable68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "object" + "'", str72, "object");
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator4 = nativeArray1.iterator();
        boolean boolean5 = nativeArray1.hasPrototypeMap();
        boolean boolean7 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        boolean boolean24 = nativeArray15.hasPrototypeMap();
        java.lang.Object[] objArray25 = nativeArray15.getIds();
        int int26 = nativeArray15.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        java.lang.Object obj49 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.Object[] objArray50 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        boolean boolean52 = nativeArray15.isConst("hi!");
        nativeArray10.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        java.lang.Object obj54 = nativeArray1.get((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        java.lang.Object[] objArray63 = nativeArray57.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray(objArray63);
        java.lang.Object obj65 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        long long66 = nativeArray1.jsGet_length();
        org.junit.Assert.assertNotNull(iterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[null]");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 1L + "'", long66 == 1L);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray(objArray7);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable13 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray10);
        nativeArray8.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray10);
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(scriptable13);
        org.junit.Assert.assertNull(scriptable15);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj8 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable17 = null;
        java.lang.Object[] objArray18 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable17);
        java.lang.Object[] objArray19 = nativeArray10.toArray(objArray18);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        boolean boolean29 = nativeArray22.hasPrototypeMap();
        int int30 = nativeArray22.size();
        boolean boolean31 = nativeArray22.isEmpty();
        boolean boolean33 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "Array");
        java.lang.Object obj34 = nativeArray10.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        nativeArray10.setAttributes("Array", 1);
        int int38 = nativeArray10.size();
        boolean boolean40 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, 4);
        boolean boolean41 = nativeArray4.containsAll((java.util.Collection) nativeArray10);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        boolean boolean50 = nativeArray43.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray53.getParentScope();
        java.lang.Object[] objArray55 = nativeArray53.getIds();
        boolean boolean56 = nativeArray53.isEmpty();
        boolean boolean57 = nativeArray43.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        boolean boolean59 = nativeArray53.isConst("object");
        java.lang.Object obj61 = nativeArray53.get((java.lang.Object) (byte) 10);
        nativeArray53.preventExtensions();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray70, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj78 = nativeArray70.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray75);
        com.google.javascript.rhino.head.Callable callable81 = null;
        nativeArray70.setGetterOrSetter("hi!", 0, callable81, false);
        nativeArray64.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray70, (int) (short) 10);
        boolean boolean87 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "object");
        nativeArray53.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray64);
        com.google.javascript.rhino.head.Scriptable scriptable89 = nativeArray64.getParentScope();
        java.lang.String str90 = nativeArray64.getTypeOf();
        nativeArray4.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray64);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (-1) + "'", obj8, (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(scriptable89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "object" + "'", str90, "object");
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        java.lang.String str9 = nativeArray1.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.Callable callable29 = null;
        nativeArray18.setGetterOrSetter("hi!", 0, callable29, false);
        nativeArray12.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray18, (int) (short) 10);
        boolean boolean35 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "object");
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) "object");
        boolean boolean38 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 13);
        java.util.ListIterator listIterator39 = nativeArray1.listIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "object" + "'", str9, "object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(listIterator39);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray4.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray23.getParentScope();
        java.lang.Object[] objArray25 = nativeArray23.getAllIds();
        java.lang.Object[] objArray26 = nativeArray4.toArray(objArray25);
        java.lang.String str27 = nativeArray4.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable31 = nativeArray30.getParentScope();
        java.lang.Object[] objArray32 = nativeArray30.getIds();
        boolean boolean33 = nativeArray30.isEmpty();
        java.lang.Object obj35 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, 8);
        com.google.javascript.rhino.head.Scriptable scriptable36 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray30);
        int int37 = nativeArray4.getAttributes("hi!", scriptable36);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        java.lang.Object[] objArray46 = nativeArray40.getAllIds();
        java.lang.String str47 = nativeArray40.getTypeOf();
        int int48 = nativeArray40.size();
        boolean boolean50 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "hi!");
        java.lang.Object obj52 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, 100);
        com.google.javascript.rhino.head.Scriptable scriptable53 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray40);
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray40.getPrototype();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean55 = nativeArray4.addAll(13, (java.util.Collection) nativeArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[null]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Array" + "'", str27, "Array");
        org.junit.Assert.assertNull(scriptable31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[length]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "object" + "'", str47, "object");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNull(scriptable53);
        org.junit.Assert.assertNull(scriptable54);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        boolean boolean22 = nativeArray15.hasPrototypeMap();
        java.util.ListIterator listIterator23 = nativeArray15.listIterator();
        boolean boolean24 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(listIterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) (byte) 0);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        long long61 = nativeArray58.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray58, "", true);
        boolean boolean65 = nativeArray58.hasPrototypeMap();
        int int66 = nativeArray58.size();
        boolean boolean67 = nativeArray58.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable68 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray58, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable72 = nativeArray58.getParentScope();
        java.lang.Object obj73 = nativeArray4.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58);
        nativeArray4.activatePrototypeMap(8);
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 'a');
        boolean boolean78 = nativeArray77.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = nativeArray4.addAll((java.util.Collection) nativeArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(scriptable68);
        org.junit.Assert.assertNull(scriptable72);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (-1) + "'", obj73, (-1));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        java.lang.Object[] objArray23 = nativeArray12.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray29, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj37 = nativeArray29.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray34);
        boolean boolean38 = nativeArray29.hasPrototypeMap();
        java.lang.Object[] objArray39 = nativeArray29.getIds();
        int int40 = nativeArray29.size();
        java.util.Iterator iterator41 = nativeArray29.iterator();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj54 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean55 = nativeArray46.hasPrototypeMap();
        java.lang.Object[] objArray56 = nativeArray46.getIds();
        int int57 = nativeArray46.size();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj71 = nativeArray63.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray68);
        boolean boolean72 = nativeArray63.hasPrototypeMap();
        java.lang.Object[] objArray73 = nativeArray63.getIds();
        int int74 = nativeArray63.size();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray63.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object obj80 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        boolean boolean81 = nativeArray63.isSealed();
        boolean boolean82 = nativeArray63.hasPrototypeMap();
        java.lang.Object obj84 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray63, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray86 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable87 = nativeArray86.getParentScope();
        java.lang.Object[] objArray88 = nativeArray86.getIds();
        boolean boolean89 = nativeArray86.isEmpty();
        int int90 = nativeArray86.size();
        java.lang.Object[] objArray91 = nativeArray86.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray93 = new com.google.javascript.rhino.head.NativeArray((long) 8);
        java.lang.Object obj94 = nativeArray63.associateValue((java.lang.Object) nativeArray86, (java.lang.Object) 8);
        nativeArray29.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray86);
        boolean boolean96 = nativeArray12.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[length]");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(iterator41);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[hi!]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNull(scriptable87);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[]");
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + 8 + "'", obj94, 8);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }
}

