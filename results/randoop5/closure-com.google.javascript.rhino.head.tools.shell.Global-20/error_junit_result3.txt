JUnit version 4.12
..................................................................................................................................................................................................................................................................................................................................
....................................................................
..........................................................
......................................................................................................................................................................................................................................................................................................................................................................................................................................

.....................................1 JavaImporter
..........................................................................................................................................................
......................................................................................................................................js>    > 
.........
.............................
......................................................................................................
..........

................................................................
Command                Description 
=======                =========== 
help()                 Display usage and help messages. 
defineClass(className) Define an extension using the Java class 
                       named with the string argument. 
                       Uses ScriptableObject.defineClass(). 
load(["foo.js", ...])  Load JavaScript source files named by 
                       string arguments. 
loadClass(className)   Load a class named by a string argument. 
                       The class must be a script compiled to a 
                       class file. 
print([expr ...])      Evaluate and print expressions. 
quit()                 Quit the shell. 
version([number])      Get or set the JavaScript version number. 
gc()                   Runs the garbage collector.
spawn(arg)             Evaluate function or script name on a new thread 
sync(function [, obj]) Creates a synchronized version of the function, 
                       where the synchronization object is the obj 
                       argument or "this" if obj is undefined
readFile(fileName [, encoding])
                       Returns the content of the file as a string. 
                       Encoding of the string can be optionally specified. 
readUrl(url [, encoding]) 
                       Similar to readFile, reads the contents of the url.
runCommand(name ...)   Runs a specified shell command. Additional arguments are 
                       passed to the command 
seal(args ...)         Seals the supplied objects 
toint32(arg)           Converts the argument into a 32-bit integer 
serialize(obj, fileName) 
                      Serializes an object and saves it to a file 
deserialize(fileName)  Reconstructs a serialized object 
environment            Returns the current environment object 
history                Displays the shell command history
................
.................................................................................................
................................................................
Command                Description 
=======                =========== 
help()                 Display usage and help messages. 
defineClass(className) Define an extension using the Java class 
                       named with the string argument. 
                       Uses ScriptableObject.defineClass(). 
load(["foo.js", ...])  Load JavaScript source files named by 
                       string arguments. 
loadClass(className)   Load a class named by a string argument. 
                       The class must be a script compiled to a 
                       class file. 
print([expr ...])      Evaluate and print expressions. 
quit()                 Quit the shell. 
version([number])      Get or set the JavaScript version number. 
gc()                   Runs the garbage collector.
spawn(arg)             Evaluate function or script name on a new thread 
sync(function [, obj]) Creates a synchronized version of the function, 
                       where the synchronization object is the obj 
                       argument or "this" if obj is undefined
readFile(fileName [, encoding])
                       Returns the content of the file as a string. 
                       Encoding of the string can be optionally specified. 
readUrl(url [, encoding]) 
                       Similar to readFile, reads the contents of the url.
runCommand(name ...)   Runs a specified shell command. Additional arguments are 
                       passed to the command 
seal(args ...)         Seals the supplied objects 
toint32(arg)           Converts the argument into a 32-bit integer 
serialize(obj, fileName) 
                      Serializes an object and saves it to a file 
deserialize(fileName)  Reconstructs a serialized object 
environment            Returns the current environment object 
history                Displays the shell command history
................................................................................................................................................................
.............................
............................................................................................................................................................................................................................................................................................................
......................................................................................................................................................................................................................................................................................................
Time: 29.885

OK (4149 tests)

